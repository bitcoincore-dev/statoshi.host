{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"GPG Cheatsheet GPG stands for GNU Privacy Guard and it is vital tool for everyone who wants to protect the email and files. Like it's inspiration PGP, GPG uses public-key cryptography where each user owns two keys: for decryption (public key) and for encryption (private key). This cheatsheet is for quick reference and gives a brief description of that could be done with this security tool. Keys management GPG has several switches that allows to generate a public-private keypar, revoke and delete keys. The viewing public and private keys are also supported. Generate key pair To generate a public-private key pair in the GPG keyring use the \u2013gen-key switch. The below command will prompt for some details such the key-type, key-size, user ID to identify the key and the time period over which the generated key will be valid: gpg --gen-key Revoke keys In case if the secret key has been stolen, an existing key could be revoked with \u2013gen-revoke switch. To be able to do this, is is needed for a secret key: gpg --gen-revoke Delete keys The below commands are used to delete public and private keys from GPG keyring: gpg --delete-key KeyID gpg --delete-secret-key KeyID gpg --delete-secret-and-public-key KeyID View keys To view all types of keys, issue the command: gpg --list-key gpg --list-public-keys gpg --list-secret-keys Keys manipulations GPG allows several key manipulation functions such importing and exporting the keys. Sending and receiving keys from server are also supported. Export a private key to a file gpg --export-secret-key -a > file.out Export a public key in a file gpg --export --armor KeyID > file.out Import a private key from a file gpg --import --allow-secret-key-import file.in Import a public key from a file gpg --import file.in Send a public key to a server gpg --keyserver dbma.keyserver.ca --send-key KeyID Get a Key from a server gpg --keyserver dbma.keyserver.ca --recv-keys KeyID Cryptographic options GPG allows file encryption and decryption. Another option is support for file signing that makes this program an alternative to PGP. Encrypt, decrypt and sign gpg -r KeyID -e -a -o file.out file.in Decrypt file gpg -r KeyID -d -o file.out file.in Create signature of a file gpg -b -a KeyID -o file.out file.in Also, you might check the GUI frontends for GnuPG for easy GPG management","title":"Home"},{"location":"#gpg-cheatsheet","text":"GPG stands for GNU Privacy Guard and it is vital tool for everyone who wants to protect the email and files. Like it's inspiration PGP, GPG uses public-key cryptography where each user owns two keys: for decryption (public key) and for encryption (private key). This cheatsheet is for quick reference and gives a brief description of that could be done with this security tool.","title":"GPG Cheatsheet"},{"location":"#keys-management","text":"GPG has several switches that allows to generate a public-private keypar, revoke and delete keys. The viewing public and private keys are also supported.","title":"Keys management"},{"location":"#generate-key-pair","text":"To generate a public-private key pair in the GPG keyring use the \u2013gen-key switch. The below command will prompt for some details such the key-type, key-size, user ID to identify the key and the time period over which the generated key will be valid:","title":"Generate key pair"},{"location":"#gpg-gen-key","text":"","title":"gpg --gen-key"},{"location":"#revoke-keys","text":"In case if the secret key has been stolen, an existing key could be revoked with \u2013gen-revoke switch. To be able to do this, is is needed for a secret key:","title":"Revoke keys"},{"location":"#gpg-gen-revoke","text":"","title":"gpg --gen-revoke"},{"location":"#delete-keys","text":"The below commands are used to delete public and private keys from GPG keyring:","title":"Delete keys"},{"location":"#gpg-delete-key-keyid","text":"","title":"gpg --delete-key KeyID"},{"location":"#gpg-delete-secret-key-keyid","text":"","title":"gpg --delete-secret-key KeyID"},{"location":"#gpg-delete-secret-and-public-key-keyid","text":"","title":"gpg --delete-secret-and-public-key KeyID"},{"location":"#view-keys","text":"To view all types of keys, issue the command:","title":"View keys"},{"location":"#gpg-list-key","text":"","title":"gpg --list-key"},{"location":"#gpg-list-public-keys","text":"","title":"gpg --list-public-keys"},{"location":"#gpg-list-secret-keys","text":"","title":"gpg --list-secret-keys"},{"location":"#keys-manipulations","text":"GPG allows several key manipulation functions such importing and exporting the keys. Sending and receiving keys from server are also supported.","title":"Keys manipulations"},{"location":"#export-a-private-key-to-a-file","text":"","title":"Export a private key to a file"},{"location":"#gpg-export-secret-key-a-fileout","text":"","title":"gpg --export-secret-key -a &gt; file.out"},{"location":"#export-a-public-key-in-a-file","text":"","title":"Export a public key in a file"},{"location":"#gpg-export-armor-keyid-fileout","text":"","title":"gpg --export --armor KeyID &gt; file.out"},{"location":"#import-a-private-key-from-a-file","text":"","title":"Import a private key from a file"},{"location":"#gpg-import-allow-secret-key-import-filein","text":"","title":"gpg --import --allow-secret-key-import file.in"},{"location":"#import-a-public-key-from-a-file","text":"","title":"Import a public key from a file"},{"location":"#gpg-import-filein","text":"","title":"gpg --import file.in"},{"location":"#send-a-public-key-to-a-server","text":"","title":"Send a public key to a server"},{"location":"#gpg-keyserver-dbmakeyserverca-send-key-keyid","text":"","title":"gpg --keyserver dbma.keyserver.ca --send-key KeyID"},{"location":"#get-a-key-from-a-server","text":"","title":"Get a Key from a server"},{"location":"#gpg-keyserver-dbmakeyserverca-recv-keys-keyid","text":"","title":"gpg --keyserver dbma.keyserver.ca --recv-keys KeyID"},{"location":"#cryptographic-options","text":"GPG allows file encryption and decryption. Another option is support for file signing that makes this program an alternative to PGP.","title":"Cryptographic options"},{"location":"#encrypt-decrypt-and-sign","text":"","title":"Encrypt, decrypt and sign"},{"location":"#gpg-r-keyid-e-a-o-fileout-filein","text":"","title":"gpg -r KeyID -e -a -o file.out file.in"},{"location":"#decrypt-file","text":"","title":"Decrypt file"},{"location":"#gpg-r-keyid-d-o-fileout-filein","text":"","title":"gpg -r KeyID -d -o file.out file.in"},{"location":"#create-signature-of-a-file","text":"","title":"Create signature of a file"},{"location":"#gpg-b-a-keyid-o-fileout-filein","text":"","title":"gpg -b -a KeyID -o file.out file.in"},{"location":"#also-you-might-check-the-gui-frontends-for-gnupg-for-easy-gpg-management","text":"","title":"Also, you might check the GUI frontends for GnuPG for easy GPG management"},{"location":"emzy_message/","text":"","title":"Index"},{"location":"openpgp.org/","text":"openpgp.org I encourage all visitors to participate in creating and improving content of this website to make it the new main source of information related to the OpenPGP standard. We are open for pull requests! Licenses Theme: minimal-mistakes MIT License Image Licenses All images are under Public Domain (CC0), except otherwise noted. Sources: * https://pixabay.com/en/castle-security-padlock-sure-metal-838353/ * https://pixabay.com/en/black-white-safe-chain-padlock-164164/ * https://pixabay.com/en/envelope-confidential-secret-264876/ * https://pixabay.com/en/mailbox-rome-newspaper-italy-post-1419789/ * https://pixabay.com/en/computer-accessories-monitor-336628/ * https://pixabay.com/en/buffer-china-administration-812510/ * https://pixabay.com/en/letter-stamp-wax-parchment-seal-735151/ * https://pixabay.com/en/workstation-office-business-336369/","title":"openpgp.org"},{"location":"openpgp.org/#openpgporg","text":"I encourage all visitors to participate in creating and improving content of this website to make it the new main source of information related to the OpenPGP standard. We are open for pull requests!","title":"openpgp.org"},{"location":"openpgp.org/#licenses","text":"Theme: minimal-mistakes MIT License","title":"Licenses"},{"location":"openpgp.org/#image-licenses","text":"All images are under Public Domain (CC0), except otherwise noted. Sources: * https://pixabay.com/en/castle-security-padlock-sure-metal-838353/ * https://pixabay.com/en/black-white-safe-chain-padlock-164164/ * https://pixabay.com/en/envelope-confidential-secret-264876/ * https://pixabay.com/en/mailbox-rome-newspaper-italy-post-1419789/ * https://pixabay.com/en/computer-accessories-monitor-336628/ * https://pixabay.com/en/buffer-china-administration-812510/ * https://pixabay.com/en/letter-stamp-wax-parchment-seal-735151/ * https://pixabay.com/en/workstation-office-business-336369/","title":"Image Licenses"},{"location":"openpgp.org/CHANGELOG/","text":"3.4.2 Enhancements Improve UX of static comment forms. #448 3.4.1 Enhancements Add staticman.filename configuration with UNIX timestamp for sorting data files. example ~> comment-1470943149 . Bug Fixes Don't add <a> to author name if URL is blank. 3.4.0 Enhancements Support static-based commenting via Staticman for sites hosted with GitHub Pages. #424 3.3.7 Bug Fixes Re-enabled Jekyll plugins in _config.yml in case they aren't autoloaded in Gemfile . #417 Enhancements Fallback to site.github.url for use in {{ base_path }} when site.url is nil . Replace Sass and Autoprefixer npm build scripts with Jekyll's built-in asset support . #333 Maintenance Document site.repository and its role with github-metadata gem. Add sample archive page with content for testing styles on demo site. 3.3.6 Bug Fixes Fix blank site.teaser bug. #412 3.3.5 Enhancements Add English default text site.locale strings. #407 Add Portuguese localized UI text. #411 Add Italian localized UI text. #409 Maintenance Remove unused Google AdSense variables in _config.yml . #404 Update Gemfile instructions for using github-pages vs. native jekyll gems. Disable gems: in _config.yml and enable plugins with Bundler instead. Add repository to _config.yml to suppress GitHub Pages error Liquid Exception: No repo name found. 3.3.4 Enhancements Add support for configurable feed URL to use a service like FeedBurner instead of linking directly to feed.xml in <head> and the site footer. #378 , #379 , #406 Add Turkish localized UI text. #403 Maintenance Update gems: activesupport (4.2.7), ffi (1.9.14), github-pages (88), jekyll-redirect-from (0.11.0), jekyll-watch (1.5.0). 3.3.3 Enhancements Make footer stick to the bottom of the page. Bug Fixes Fix gallery size bug #402 Maintenance Set default lang to en . 3.3.2 Bug Fixes Fix JavaScript that triggers \"sticky\" sidebar to avoid layout issues on screen sizes < 1024px . #396 3.3.1 Enhancements Enable image popup on < 500px wide screens. #385 Indicate the relationship between component URLs in a paginated series by applying rel=\"prev\" and rel=\"next\" to pages that use site.paginator . #253 Improve link posts in archive listings. #276 Maintenance Update gems: github-pages (86), ffi 1.9.13, jekyll-mentions 1.1.3, and rouge 1.11.1 Fix note about custom sidebar content appearing below author profile. #388 3.2.13 Enhancements Add English default UI text for Canada, Great Britain, and Australia. #377 Switch default locale from en-US to en . 3.2.12 Enhancements Remove window width \"magic number\" from sticky sidebar check in main.js for improved flexibility. #375 Bug Fixes Fix author override conditional where a missing authors.yml would show broken sidebar content. Defaults to site.author . #376 3.2.11 Bug Fixes Fix disappearing author sidebar links #372 Maintenance Update gems: github-pages (84), jekyll-github-metadata 2.0.2, and kramdown 1.11.1 Update vendor JavaScript: jQuery 1.12.4, Stickyfill.js 1.1.4 Update Font Awesome 4.6.3 3.2.10 Maintenance Add CONTRIBUTING.md 3.2.9 Enhancements Add support for header overlay images for Open Graph images. #358 Bug Fixes Fix Person typo Schema.org type #358 Maintenance Update github-pages gem and dependencies. Remove minutes_read to avoid awkward reading time wording #356 3.2.8 Bug Fixes Remove cursor: pointer that appears on white-space surrounding author side list items and links. #354 Maintenance Add contributing information to README.md . #357 3.2.7 Enhancements Add French localized UI text. #346 Bug Fixes Fix branch logic for Yandex and Alexa in seo.html . #348 3.2.6 Bug Fixes Fix error Liquid Exception: divided by 0 in _includes/archive-single.html, included in _layouts/single.html caused by null words_per_minute in _config.yml . #345 3.2.5 Bug Fixes Fix link color in hero overlay to be white. Remove underlines from archive item titles. 3.2.4 Enhancements Improve text alignment of masthead, hero overlay, page footer to be flush left and remove awkward white-space gaps. #342 Add Spanish localized UI text. #338 Bug Fixes Fix alignment of icons in author sidebar #341 Maintenance Add background color to page footer to set it apart from main content. #342 Add terms and privacy policy to theme's demo site. #343 Update screenshots found in theme documentation. 3.2.3 Enhancements Add Discourse as a commenting provider. #335 3.2.2 Enhancements Add support for image captions in Magnific Popup overlays via the gallery helper. #334 3.2.1 Bug Fixes Remove need for \"double tapping\" masthead menu links on iOS devices. #315 Maintenance Add ISSUE_TEMPLATE.md for improve issue submission process. 3.2.0 Bug Fixes Fix missing category/tag links in post footer due to possible conflict with site.tags and site.categories . #329 3.1.8 Bug Fixes Fix Liquid Exception: undefined method 'gsub' for nil:NilClass in _layouts/single.html error when page.title is null. <h1> element is now conditional if title: is not set for a page or collection item. #312 Maintenance Remove duplicate fa-twitter and fa-twitter-square classes from _utilities.scss . #302 Document installing additional Jekyll gem dependencies when using gem \"jekyll\" instead of gem \"github-pages\" to avoid any errors on run. #305 3.1.7 Enhancements Add translation key for \"Recent Posts\" used in home page index.html . #316 Maintenance Small fix to avoid underlying the whitespace between icons and related text when hovering. #303 3.1.6 Maintenance Update gem dependencies. Run bundle to update Gemfile.lock . 3.1.5 Maintenance Fix www and https links in author profile include #293 3.1.4 Enhancements Add overlay_filter param to hero headers #298 3.1.3 Enhancements Improve site.locale documentation #284 Remove ProTip note about protocol-less site.url as it is an anti-pattern #288 Bug Fixes Fix og_image URL in seo.html #277 Fix author_profile toggle when assigned in a _layout #285 Fix typo in build:all npm script #283 Fix URL typo documentation #287 SEO author bug. If twitter.username is set and author.twitter is nil bad things happen. #289 3.1.2 Enhancements Explain how to use nav_list helper in documentation . Reduce left/right padding on smaller screens to increase width of main content column. Bug Fixes Fix alignment issues with related posts #273 and \"Follow\" button in author profile #274 . 3.1.1 Bug Fix Fixed reading time bug when words_per_minute wasn't set in _config.yml #271 3.1.0 Enhancements Updated Font Awesome to version 4.6.1 Added optional GitHub and Bitbucket links to footer if set on site.author in _config.yml . Bug Fixes Fixed Bitbucket URL typo in author sidebar. 3.0.3 Enhancements Rebuilt the entire theme: layouts, includes, stylesheets, scripts, you name it. Refreshed the look and feel while staying true to the original design of the theme (author sidebar/main content). Replaced grid system with Susy . Replaced Grunt tasks with npm scripts. Removed Google Fonts and replaced with system fonts to improve performance (they can be added back if desired) Greatly improved theme documentation . Increased the amount of sample posts, sample pages, and sample collections to throughly test the theme and edge-cases. Moved all sample content and assets out of master to keep it as clean as possible for forking. Added new layouts for splash pages, archives for jekyll-archives if enabled, and compress.html to improve performance. Added taxonomy links to posts (tags and categories). Added optional \"reading time\" meta data. Improved Liquid used for Twitter Cards and Open Graph data in <head> . Improved gallery include helper and added feature_row for use with splash page layout. Added Keybase.io, author web URI, and Bitbucket optional links to sidebar. Add feed.xml link to footer. Added a UI text data file to easily change all text found in the theme. Added LinkedIn to optional social share buttons. Added Facebook, Google+, and custom commenting options in addition to Disqus. Added optional breadcrumb links. 2.2.1 2.2.0 Enhancements Add support for Jekyll 3.0 Minor updates to syntax highlighting CSS and theme documentation 2.1.3 Enhancements Cleaner print styles that remove the top navigation, social sharing buttons, and other elements not needed when printed. 2.1.2 Enhancements Add optional CodePen icon/url to author side bar #156 Documented Stackoverflow username explanation in _config.yml #157 Simplified Liquid in post-index.html to better handle year listings #166 Bug Fixes Cleanup Facebook related Open Graph meta tags #149 Corrected minor typos #158 #175 2.1.1 Enhancements Add optional XING profile link to author sidebar Include open graph meta tags for feature image (if assigned) #149 Create an include for feed footer Bug Fixes Remove http protocol from Google search form on sample 404 page Only show related posts if there are one or more available Fix alignment of email address link in author sidebar 2.1.0 Enhancements Add optional social sharing buttons ( #42 ) Add Soundcloud, YouTube ( #95 ), Flickr ( #119 ), and Weibo ( #116 ) icons for use in author sidebar. Fix typos in posts and documentation and remove references to Less Include note about Octopress gem being optional Post author override support extended to the Atom feed ( #71 ) Only include email address in feed if specified in _config.yml or author _data Wrap all page content in #main to harmonize article and post index styles ( #86 ) Include new sample feature images for posts and pages Table of contents improvements: fix collapse toggle, indent nested elements, show on small screens, and create an _include for reusing in posts and pages. Include note about running Jekyll with bundle exec when using Bundler Fix home page path in top navigation Remove Google Authorship ( #120 ) Remove duplicate author content that displayed in div.article-author-bottom Removed unused _sass/print.scss styles Improve comments in .scss files 2.0.0 1.3.3 Enhancements Added new icons and profile links for Stackoverflow, Dribbble, Pinterest, Foursquare, and Steam to the author bio sidebar. Cleaned up the Kramdown auto table of contents styling to be more readable Removed page width specific .less stylesheets and created mixins for easier updating Removed Modernizr since it wasn't being used Added pages to sitemap.xml Added category: to rake new_post task Minor typographic changes Bug Fixes Corrected various broken links in README and Theme Setup. 1.3.1 Enhancements Cleaned up table of contents styling Reworked top navigation to be a better experience on small screens. Nav items now display vertically when the menu button is tapped, revealing links with larger touch targets. 1.2.0 Bug Fixes Table weren't filling the entire width of the content container. They now scale at 100%. Thanks @dhruvbhatia Enhancements Decreased spacing between Markdown footnotes Removed dark background on footer Removed UPPERCASE styling on post titles in the index listing 1.1.4 Bug Fixes Fix top navigation bug issue ( #10 ) for real this time. Remember to clear your floats kids. 1.1.3 Bug Fixes Fix top navigation links that weren't click able on small viewports (Issue #10 ). Remove line wrap from top navigation links that may span multiple lines. 1.1.2 Enhancements Added Grunt build script for compiling Less/JavaScript and optimizing image assets. Added support for large image summary Twitter card. Stylesheet adjustments 1.1.1 Bug Fixes Removed Typeplate styles. Was causing issues with newer versions of Less and is no longer maintained. Enhancements Added image attribution for post and page feature images. Added 404 page . Cleaned up various Less variables to better align with naming conventions used in other MM Jekyll themes. Removed Chrome Frame references. Added global CSS3 transitions to text and block elements. Improved typography in a few places. 1.0.2 Enhancements Google Analytics, Google Authorship, webmaster verifies, and Twitter card meta are now optional. 1.0.1","title":"CHANGELOG"},{"location":"openpgp.org/CHANGELOG/#342","text":"","title":"3.4.2"},{"location":"openpgp.org/CHANGELOG/#enhancements","text":"Improve UX of static comment forms. #448","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#341","text":"","title":"3.4.1"},{"location":"openpgp.org/CHANGELOG/#enhancements_1","text":"Add staticman.filename configuration with UNIX timestamp for sorting data files. example ~> comment-1470943149 .","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes","text":"Don't add <a> to author name if URL is blank.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#340","text":"","title":"3.4.0"},{"location":"openpgp.org/CHANGELOG/#enhancements_2","text":"Support static-based commenting via Staticman for sites hosted with GitHub Pages. #424","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#337","text":"","title":"3.3.7"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_1","text":"Re-enabled Jekyll plugins in _config.yml in case they aren't autoloaded in Gemfile . #417","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#enhancements_3","text":"Fallback to site.github.url for use in {{ base_path }} when site.url is nil . Replace Sass and Autoprefixer npm build scripts with Jekyll's built-in asset support . #333","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#maintenance","text":"Document site.repository and its role with github-metadata gem. Add sample archive page with content for testing styles on demo site.","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#336","text":"","title":"3.3.6"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_2","text":"Fix blank site.teaser bug. #412","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#335","text":"","title":"3.3.5"},{"location":"openpgp.org/CHANGELOG/#enhancements_4","text":"Add English default text site.locale strings. #407 Add Portuguese localized UI text. #411 Add Italian localized UI text. #409","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#maintenance_1","text":"Remove unused Google AdSense variables in _config.yml . #404 Update Gemfile instructions for using github-pages vs. native jekyll gems. Disable gems: in _config.yml and enable plugins with Bundler instead. Add repository to _config.yml to suppress GitHub Pages error Liquid Exception: No repo name found.","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#334","text":"","title":"3.3.4"},{"location":"openpgp.org/CHANGELOG/#enhancements_5","text":"Add support for configurable feed URL to use a service like FeedBurner instead of linking directly to feed.xml in <head> and the site footer. #378 , #379 , #406 Add Turkish localized UI text. #403","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#maintenance_2","text":"Update gems: activesupport (4.2.7), ffi (1.9.14), github-pages (88), jekyll-redirect-from (0.11.0), jekyll-watch (1.5.0).","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#333","text":"","title":"3.3.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_6","text":"Make footer stick to the bottom of the page.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_3","text":"Fix gallery size bug #402","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_3","text":"Set default lang to en .","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#332","text":"","title":"3.3.2"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_4","text":"Fix JavaScript that triggers \"sticky\" sidebar to avoid layout issues on screen sizes < 1024px . #396","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#331","text":"","title":"3.3.1"},{"location":"openpgp.org/CHANGELOG/#enhancements_7","text":"Enable image popup on < 500px wide screens. #385 Indicate the relationship between component URLs in a paginated series by applying rel=\"prev\" and rel=\"next\" to pages that use site.paginator . #253 Improve link posts in archive listings. #276","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#maintenance_4","text":"Update gems: github-pages (86), ffi 1.9.13, jekyll-mentions 1.1.3, and rouge 1.11.1 Fix note about custom sidebar content appearing below author profile. #388","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#3213","text":"","title":"3.2.13"},{"location":"openpgp.org/CHANGELOG/#enhancements_8","text":"Add English default UI text for Canada, Great Britain, and Australia. #377 Switch default locale from en-US to en .","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#3212","text":"","title":"3.2.12"},{"location":"openpgp.org/CHANGELOG/#enhancements_9","text":"Remove window width \"magic number\" from sticky sidebar check in main.js for improved flexibility. #375","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_5","text":"Fix author override conditional where a missing authors.yml would show broken sidebar content. Defaults to site.author . #376","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#3211","text":"","title":"3.2.11"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_6","text":"Fix disappearing author sidebar links #372","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_5","text":"Update gems: github-pages (84), jekyll-github-metadata 2.0.2, and kramdown 1.11.1 Update vendor JavaScript: jQuery 1.12.4, Stickyfill.js 1.1.4 Update Font Awesome 4.6.3","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#3210","text":"","title":"3.2.10"},{"location":"openpgp.org/CHANGELOG/#maintenance_6","text":"Add CONTRIBUTING.md","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#329","text":"","title":"3.2.9"},{"location":"openpgp.org/CHANGELOG/#enhancements_10","text":"Add support for header overlay images for Open Graph images. #358","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_7","text":"Fix Person typo Schema.org type #358","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_7","text":"Update github-pages gem and dependencies. Remove minutes_read to avoid awkward reading time wording #356","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#328","text":"","title":"3.2.8"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_8","text":"Remove cursor: pointer that appears on white-space surrounding author side list items and links. #354","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_8","text":"Add contributing information to README.md . #357","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#327","text":"","title":"3.2.7"},{"location":"openpgp.org/CHANGELOG/#enhancements_11","text":"Add French localized UI text. #346","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_9","text":"Fix branch logic for Yandex and Alexa in seo.html . #348","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#326","text":"","title":"3.2.6"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_10","text":"Fix error Liquid Exception: divided by 0 in _includes/archive-single.html, included in _layouts/single.html caused by null words_per_minute in _config.yml . #345","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#325","text":"","title":"3.2.5"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_11","text":"Fix link color in hero overlay to be white. Remove underlines from archive item titles.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#324","text":"","title":"3.2.4"},{"location":"openpgp.org/CHANGELOG/#enhancements_12","text":"Improve text alignment of masthead, hero overlay, page footer to be flush left and remove awkward white-space gaps. #342 Add Spanish localized UI text. #338","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_12","text":"Fix alignment of icons in author sidebar #341","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_9","text":"Add background color to page footer to set it apart from main content. #342 Add terms and privacy policy to theme's demo site. #343 Update screenshots found in theme documentation.","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#323","text":"","title":"3.2.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_13","text":"Add Discourse as a commenting provider. #335","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#322","text":"","title":"3.2.2"},{"location":"openpgp.org/CHANGELOG/#enhancements_14","text":"Add support for image captions in Magnific Popup overlays via the gallery helper. #334","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#321","text":"","title":"3.2.1"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_13","text":"Remove need for \"double tapping\" masthead menu links on iOS devices. #315","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_10","text":"Add ISSUE_TEMPLATE.md for improve issue submission process.","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#320","text":"","title":"3.2.0"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_14","text":"Fix missing category/tag links in post footer due to possible conflict with site.tags and site.categories . #329","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#318","text":"","title":"3.1.8"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_15","text":"Fix Liquid Exception: undefined method 'gsub' for nil:NilClass in _layouts/single.html error when page.title is null. <h1> element is now conditional if title: is not set for a page or collection item. #312","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#maintenance_11","text":"Remove duplicate fa-twitter and fa-twitter-square classes from _utilities.scss . #302 Document installing additional Jekyll gem dependencies when using gem \"jekyll\" instead of gem \"github-pages\" to avoid any errors on run. #305","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#317","text":"","title":"3.1.7"},{"location":"openpgp.org/CHANGELOG/#enhancements_15","text":"Add translation key for \"Recent Posts\" used in home page index.html . #316","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#maintenance_12","text":"Small fix to avoid underlying the whitespace between icons and related text when hovering. #303","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#316","text":"","title":"3.1.6"},{"location":"openpgp.org/CHANGELOG/#maintenance_13","text":"Update gem dependencies. Run bundle to update Gemfile.lock .","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#315","text":"","title":"3.1.5"},{"location":"openpgp.org/CHANGELOG/#maintenance_14","text":"Fix www and https links in author profile include #293","title":"Maintenance"},{"location":"openpgp.org/CHANGELOG/#314","text":"","title":"3.1.4"},{"location":"openpgp.org/CHANGELOG/#enhancements_16","text":"Add overlay_filter param to hero headers #298","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#313","text":"","title":"3.1.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_17","text":"Improve site.locale documentation #284 Remove ProTip note about protocol-less site.url as it is an anti-pattern #288","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_16","text":"Fix og_image URL in seo.html #277 Fix author_profile toggle when assigned in a _layout #285 Fix typo in build:all npm script #283 Fix URL typo documentation #287 SEO author bug. If twitter.username is set and author.twitter is nil bad things happen. #289","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#312","text":"","title":"3.1.2"},{"location":"openpgp.org/CHANGELOG/#enhancements_18","text":"Explain how to use nav_list helper in documentation . Reduce left/right padding on smaller screens to increase width of main content column.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_17","text":"Fix alignment issues with related posts #273 and \"Follow\" button in author profile #274 .","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#311","text":"","title":"3.1.1"},{"location":"openpgp.org/CHANGELOG/#bug-fix","text":"Fixed reading time bug when words_per_minute wasn't set in _config.yml #271","title":"Bug Fix"},{"location":"openpgp.org/CHANGELOG/#310","text":"","title":"3.1.0"},{"location":"openpgp.org/CHANGELOG/#enhancements_19","text":"Updated Font Awesome to version 4.6.1 Added optional GitHub and Bitbucket links to footer if set on site.author in _config.yml .","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_18","text":"Fixed Bitbucket URL typo in author sidebar.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#303","text":"","title":"3.0.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_20","text":"Rebuilt the entire theme: layouts, includes, stylesheets, scripts, you name it. Refreshed the look and feel while staying true to the original design of the theme (author sidebar/main content). Replaced grid system with Susy . Replaced Grunt tasks with npm scripts. Removed Google Fonts and replaced with system fonts to improve performance (they can be added back if desired) Greatly improved theme documentation . Increased the amount of sample posts, sample pages, and sample collections to throughly test the theme and edge-cases. Moved all sample content and assets out of master to keep it as clean as possible for forking. Added new layouts for splash pages, archives for jekyll-archives if enabled, and compress.html to improve performance. Added taxonomy links to posts (tags and categories). Added optional \"reading time\" meta data. Improved Liquid used for Twitter Cards and Open Graph data in <head> . Improved gallery include helper and added feature_row for use with splash page layout. Added Keybase.io, author web URI, and Bitbucket optional links to sidebar. Add feed.xml link to footer. Added a UI text data file to easily change all text found in the theme. Added LinkedIn to optional social share buttons. Added Facebook, Google+, and custom commenting options in addition to Disqus. Added optional breadcrumb links.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#221","text":"","title":"2.2.1"},{"location":"openpgp.org/CHANGELOG/#220","text":"","title":"2.2.0"},{"location":"openpgp.org/CHANGELOG/#enhancements_21","text":"Add support for Jekyll 3.0 Minor updates to syntax highlighting CSS and theme documentation","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#213","text":"","title":"2.1.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_22","text":"Cleaner print styles that remove the top navigation, social sharing buttons, and other elements not needed when printed.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#212","text":"","title":"2.1.2"},{"location":"openpgp.org/CHANGELOG/#enhancements_23","text":"Add optional CodePen icon/url to author side bar #156 Documented Stackoverflow username explanation in _config.yml #157 Simplified Liquid in post-index.html to better handle year listings #166","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_19","text":"Cleanup Facebook related Open Graph meta tags #149 Corrected minor typos #158 #175","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#211","text":"","title":"2.1.1"},{"location":"openpgp.org/CHANGELOG/#enhancements_24","text":"Add optional XING profile link to author sidebar Include open graph meta tags for feature image (if assigned) #149 Create an include for feed footer","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_20","text":"Remove http protocol from Google search form on sample 404 page Only show related posts if there are one or more available Fix alignment of email address link in author sidebar","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#210","text":"","title":"2.1.0"},{"location":"openpgp.org/CHANGELOG/#enhancements_25","text":"Add optional social sharing buttons ( #42 ) Add Soundcloud, YouTube ( #95 ), Flickr ( #119 ), and Weibo ( #116 ) icons for use in author sidebar. Fix typos in posts and documentation and remove references to Less Include note about Octopress gem being optional Post author override support extended to the Atom feed ( #71 ) Only include email address in feed if specified in _config.yml or author _data Wrap all page content in #main to harmonize article and post index styles ( #86 ) Include new sample feature images for posts and pages Table of contents improvements: fix collapse toggle, indent nested elements, show on small screens, and create an _include for reusing in posts and pages. Include note about running Jekyll with bundle exec when using Bundler Fix home page path in top navigation Remove Google Authorship ( #120 ) Remove duplicate author content that displayed in div.article-author-bottom Removed unused _sass/print.scss styles Improve comments in .scss files","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#200","text":"","title":"2.0.0"},{"location":"openpgp.org/CHANGELOG/#133","text":"","title":"1.3.3"},{"location":"openpgp.org/CHANGELOG/#enhancements_26","text":"Added new icons and profile links for Stackoverflow, Dribbble, Pinterest, Foursquare, and Steam to the author bio sidebar. Cleaned up the Kramdown auto table of contents styling to be more readable Removed page width specific .less stylesheets and created mixins for easier updating Removed Modernizr since it wasn't being used Added pages to sitemap.xml Added category: to rake new_post task Minor typographic changes","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_21","text":"Corrected various broken links in README and Theme Setup.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#131","text":"","title":"1.3.1"},{"location":"openpgp.org/CHANGELOG/#enhancements_27","text":"Cleaned up table of contents styling Reworked top navigation to be a better experience on small screens. Nav items now display vertically when the menu button is tapped, revealing links with larger touch targets.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#120","text":"","title":"1.2.0"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_22","text":"Table weren't filling the entire width of the content container. They now scale at 100%. Thanks @dhruvbhatia","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#enhancements_28","text":"Decreased spacing between Markdown footnotes Removed dark background on footer Removed UPPERCASE styling on post titles in the index listing","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#114","text":"","title":"1.1.4"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_23","text":"Fix top navigation bug issue ( #10 ) for real this time. Remember to clear your floats kids.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#113","text":"","title":"1.1.3"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_24","text":"Fix top navigation links that weren't click able on small viewports (Issue #10 ). Remove line wrap from top navigation links that may span multiple lines.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#112","text":"","title":"1.1.2"},{"location":"openpgp.org/CHANGELOG/#enhancements_29","text":"Added Grunt build script for compiling Less/JavaScript and optimizing image assets. Added support for large image summary Twitter card. Stylesheet adjustments","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#111","text":"","title":"1.1.1"},{"location":"openpgp.org/CHANGELOG/#bug-fixes_25","text":"Removed Typeplate styles. Was causing issues with newer versions of Less and is no longer maintained.","title":"Bug Fixes"},{"location":"openpgp.org/CHANGELOG/#enhancements_30","text":"Added image attribution for post and page feature images. Added 404 page . Cleaned up various Less variables to better align with naming conventions used in other MM Jekyll themes. Removed Chrome Frame references. Added global CSS3 transitions to text and block elements. Improved typography in a few places.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#102","text":"","title":"1.0.2"},{"location":"openpgp.org/CHANGELOG/#enhancements_31","text":"Google Analytics, Google Authorship, webmaster verifies, and Twitter card meta are now optional.","title":"Enhancements"},{"location":"openpgp.org/CHANGELOG/#101","text":"","title":"1.0.1"},{"location":"openpgp.org/README.minimal-mistakes/","text":"Minimal Mistakes Jekyll Theme Minimal Mistakes is a flexible two-column Jekyll theme. Perfect for hosting your personal site, blog, or portfolio on GitHub or self-hosting on your own server. As the name implies --- styling is purposely minimalistic to be enhanced and customized by you :smile:. See what's new in the CHANGELOG . The theme includes responsive layouts ( single , archive , and splash pages) that look great on mobile and desktop browsers. Installation and Setup / Preview the Theme Notable Features Compatible with Jekyll 3.x and GitHub Pages Support for Jekyll's built-in Sass/SCSS preprocessor Several layout options (single, archive, splash pages) SEO optimized with support for Twitter Cards and Open Graph data Optional header images, sidebars, table of contents, galleries, related posts, breadcrumb links, and more. Optional comments ( Disqus , Facebook , Google+, Discourse , static-based via Staticman , and custom). Optional analytics ( Google Analytics and custom). UI localized text: English (default), Spanish, French, and Turkish. Demo Pages Name Description Post with Header Image A post with a large header image. HTML Tags and Formatting Post A variety of common markup showing how the theme styles them. Syntax Highlighting Post Post displaying highlighted code. Post with a Gallery A post showing several images wrapped in <figure> elements. Sample Collection Page Single page from a collection. Categories Archive Posts grouped by category. Tags Archive Posts grouped by tags. For even more demo pages check the posts archive . Contributing Having trouble working with the theme? Found a typo in the documentation? Interested in adding a feature or fixing a bug ? Then by all means submit an issue or pull request . If this is your first pull request, it may be helpful to read up on the GitHub Flow first. Minimal Mistakes has been designed as a base for you to customize and fit your site's unique needs. Please keep this in mind when requesting features and/or submitting pull requests. If it's not something that most people will use, I probably won't consider it. When in doubt ask. This goes for author sidebar links and \"share button\" additions -- I have no intention of merging in every possibly option, the essentials are there to get you started :smile:. Pull Requests To help me out try to avoid creating pull requests on master and instead branch off of develop . It's much easier for me to test, merge, and roll them into new releases this way. Credits Creator Michael Rose https://mademistakes.com https://twitter.com/mmistakes https://github.com/mmistakes Icons + Demo Images: The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash Other: Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Stickyfill License The MIT License (MIT) Copyright (c) 2016 Michael Rose Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"[Minimal Mistakes Jekyll Theme](https://mmistakes.github.io/minimal-mistakes/)"},{"location":"openpgp.org/README.minimal-mistakes/#minimal-mistakes-jekyll-theme","text":"Minimal Mistakes is a flexible two-column Jekyll theme. Perfect for hosting your personal site, blog, or portfolio on GitHub or self-hosting on your own server. As the name implies --- styling is purposely minimalistic to be enhanced and customized by you :smile:. See what's new in the CHANGELOG . The theme includes responsive layouts ( single , archive , and splash pages) that look great on mobile and desktop browsers.","title":"Minimal Mistakes Jekyll Theme"},{"location":"openpgp.org/README.minimal-mistakes/#installation-and-setup-preview-the-theme","text":"","title":"Installation and Setup / Preview the Theme"},{"location":"openpgp.org/README.minimal-mistakes/#notable-features","text":"Compatible with Jekyll 3.x and GitHub Pages Support for Jekyll's built-in Sass/SCSS preprocessor Several layout options (single, archive, splash pages) SEO optimized with support for Twitter Cards and Open Graph data Optional header images, sidebars, table of contents, galleries, related posts, breadcrumb links, and more. Optional comments ( Disqus , Facebook , Google+, Discourse , static-based via Staticman , and custom). Optional analytics ( Google Analytics and custom). UI localized text: English (default), Spanish, French, and Turkish.","title":"Notable Features"},{"location":"openpgp.org/README.minimal-mistakes/#demo-pages","text":"Name Description Post with Header Image A post with a large header image. HTML Tags and Formatting Post A variety of common markup showing how the theme styles them. Syntax Highlighting Post Post displaying highlighted code. Post with a Gallery A post showing several images wrapped in <figure> elements. Sample Collection Page Single page from a collection. Categories Archive Posts grouped by category. Tags Archive Posts grouped by tags. For even more demo pages check the posts archive .","title":"Demo Pages"},{"location":"openpgp.org/README.minimal-mistakes/#contributing","text":"Having trouble working with the theme? Found a typo in the documentation? Interested in adding a feature or fixing a bug ? Then by all means submit an issue or pull request . If this is your first pull request, it may be helpful to read up on the GitHub Flow first. Minimal Mistakes has been designed as a base for you to customize and fit your site's unique needs. Please keep this in mind when requesting features and/or submitting pull requests. If it's not something that most people will use, I probably won't consider it. When in doubt ask. This goes for author sidebar links and \"share button\" additions -- I have no intention of merging in every possibly option, the essentials are there to get you started :smile:.","title":"Contributing"},{"location":"openpgp.org/README.minimal-mistakes/#pull-requests","text":"To help me out try to avoid creating pull requests on master and instead branch off of develop . It's much easier for me to test, merge, and roll them into new releases this way.","title":"Pull Requests"},{"location":"openpgp.org/README.minimal-mistakes/#credits","text":"","title":"Credits"},{"location":"openpgp.org/README.minimal-mistakes/#creator","text":"Michael Rose https://mademistakes.com https://twitter.com/mmistakes https://github.com/mmistakes","title":"Creator"},{"location":"openpgp.org/README.minimal-mistakes/#icons-demo-images","text":"The Noun Project -- Garrett Knoll, Arthur Shlain, and tracy tam Font Awesome Unsplash","title":"Icons + Demo Images:"},{"location":"openpgp.org/README.minimal-mistakes/#other","text":"Jekyll jQuery Susy Breakpoint Magnific Popup FitVids.JS Greedy Navigation - lukejacksonn jQuery Smooth Scroll Stickyfill","title":"Other:"},{"location":"openpgp.org/README.minimal-mistakes/#license","text":"The MIT License (MIT) Copyright (c) 2016 Michael Rose Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"openpgp.org/_about/01-about/","text":"{% include base_path %} OpenPGP is a non-proprietary format for authenticating or encrypting data, using public key cryptography. It is based on the original PGP (Pretty Good Privacy) software. Beginning in 1997, the OpenPGP Working Group was formed in the Internet Engineering Task Force (IETF) to define this standard that had formerly been a proprietary product since 1991. Over the past decade, PGP, and later OpenPGP, has become the standard for nearly all of the world's signed or encrypted email. OpenPGP also defines a standard format for certificates which, unlike most other certificate formats, enables webs of trust . OpenPGP formats and uses are specified in many IETF RFCs and drafts [^rfcs], so these standards can be implemented by any company without paying any licensing fees to anyone. [^rfcs]: RFC 3156 MIME Security with OpenPGP, RFC 4880 OpenPGP Message Format (the main one), RFC 5581 The Camellia Cipher in OpenPGP, RFC 6091 Using OpenPGP Keys for Transport Layer Security (TLS) Authentication, RFC 6637 Elliptic Curve Cryptography (ECC) in OpenPGP, and more .","title":"About"},{"location":"openpgp.org/_about/02-history/","text":"{% include base_path %} OpenPGP is a non-proprietary protocol for encrypting email using public key cryptography. The OpenPGP protocol defines standard formats for encrypted messages, signatures, private keys, and certificates for exchanging public keys. It is based on the Pretty Good Privacy (PGP) freeware software as originally developed in 1991 by Phil Zimmermann . For that, he was the target of a three-year criminal investigation, because the US government held that US export restrictions for cryptographic software were violated when PGP spread all around the world following its publication as freeware. Despite the lack of funding, the lack of any paid staff, the lack of a company to stand behind it, and despite government persecution, PGP became the most widely used email encryption software in the world. After the government dropped its case in early 1996, Zimmermann founded PGP Inc. That company and its intellectual property were acquired by Network Associates Inc (NAI) in December 1997. NAI continued to own and develop PGP products for commercial and freeware purposes. In 2002, NAI discontinued development and sales of PGP, and sold the rights to it to a new company, PGP Corporation. OpenPGP is the open standards version of NAI's PGP encryption protocol. The OpenPGP Working Group is seeking the qualification of OpenPGP as an Internet Standard as defined by the IETF. Each distinct version of an Internet standards-related specification is published as part of the \"Request for Comments\" (RFC) document series. OpenPGP is on the Internet Standards Track and is under active development. Many e-mail clients provide OpenPGP-compliant email security as described in RFC 3156. The current specification is RFC 4880 (November 2007), the successor to RFC 2440. RFC 4880 specifies a suite of required algorithms consisting of ElGamal encryption, DSA, Triple DES and SHA-1. In addition to these algorithms, the standard recommends RSA as described in PKCS #1 v1.5 for encryption and signing, as well as AES-128, CAST-128 and IDEA. Beyond these, many other algorithms are supported. The standard was extended to support Camellia cipher by RFC 5581 in 2009, and encryption based on elliptic curve cryptography (ECDSA, ECDH) by RFC 6637 in 2012. Support of EdDSA will be added by draft-koch-eddsa-for-openpgp-00 proposed in 2014. As far as we know, intelligence organizations aren't able to break it . Learn more about the technical specifications of OpenPGP on our page about the standards .","title":"History"},{"location":"openpgp.org/_about/03-standard/","text":"{% include base_path %} The OpenPGP Proposed Standard is defined by the OpenPGP Working Group of the Internet Engineering Task Force (IETF) in RFC 4880 . This document contains all the necessary information to develop interoperable applications based on the OpenPGP format. It describes the format and methods needed to read, check, generate, and write conforming encrypted messages, keys, and signatures. Besides the message format specified in RFC 4880, a collection of other OpenPGP-related RFCs, XEPs, and, Internet Drafts have been written: IETF RFCs IETF OpenPGP Working Group RFC 4880: OpenPGP Message Format RFC 3156: MIME Security with OpenPGP RFC 6637: Elliptic Curve Cryptography (ECC) in OpenPGP RFC 6091: Using OpenPGP Keys for Transport Layer Security (TLS) Authentication RFC 5581: The Camellia Cipher in OpenPGP XMPP Integration XEP-0027 (obsolete) XEP-0373: OpenPGP for XMPP XEP-0374: OpenPGP for XMPP Instant Messaging Current Internet Drafts The OpenPGP HTTP Keyserver Protocol (HKP) Using DANE to Associate OpenPGP public keys with email addresses Best Common Practise for using OPENPGPKEY records Media type literal packet in OpenPGP EdDSA for OpenPGP Linked Identites for OpenPGP URI Attributes for OpenPGP Modernizing the OpenPGP Message Format Forward Secrecy Extensions for OpenPGP OpenPGP Extensions for Device Certificates The OpenPGP Message Format The \"OpenPGP\" mail and news header field Obsolete RFCs RFC 1991: PGP Message Exchange Formats RFC 2015: MIME Security with Pretty Good Privacy (PGP) RFC 2440: OpenPGP Message Format","title":"Standard"},{"location":"openpgp.org/_about/03-standard/#ietf-rfcs","text":"IETF OpenPGP Working Group RFC 4880: OpenPGP Message Format RFC 3156: MIME Security with OpenPGP RFC 6637: Elliptic Curve Cryptography (ECC) in OpenPGP RFC 6091: Using OpenPGP Keys for Transport Layer Security (TLS) Authentication RFC 5581: The Camellia Cipher in OpenPGP","title":"IETF RFCs"},{"location":"openpgp.org/_about/03-standard/#xmpp-integration","text":"XEP-0027 (obsolete) XEP-0373: OpenPGP for XMPP XEP-0374: OpenPGP for XMPP Instant Messaging","title":"XMPP Integration"},{"location":"openpgp.org/_about/03-standard/#current-internet-drafts","text":"The OpenPGP HTTP Keyserver Protocol (HKP) Using DANE to Associate OpenPGP public keys with email addresses Best Common Practise for using OPENPGPKEY records Media type literal packet in OpenPGP EdDSA for OpenPGP Linked Identites for OpenPGP URI Attributes for OpenPGP Modernizing the OpenPGP Message Format Forward Secrecy Extensions for OpenPGP OpenPGP Extensions for Device Certificates The OpenPGP Message Format The \"OpenPGP\" mail and news header field","title":"Current Internet Drafts"},{"location":"openpgp.org/_about/03-standard/#obsolete-rfcs","text":"RFC 1991: PGP Message Exchange Formats RFC 2015: MIME Security with Pretty Good Privacy (PGP) RFC 2440: OpenPGP Message Format","title":"Obsolete RFCs"},{"location":"openpgp.org/_community/01-community/","text":"{% include base_path %} Community The following mailing lists are related to OpenPGP without connection to specific projects: IETF OpenPGP Working Group ModernCrypto Messaging Consulting The following organizations provide OpenPGP consulting. Confidential Technologies GmbH Giegerich & Partner GmbH g10 Code GmbH Intevation GmbH Organization Missing? If a organization is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . The organizations are ordered alphabetically within the sections.","title":"Community/Consulting"},{"location":"openpgp.org/_community/01-community/#community","text":"The following mailing lists are related to OpenPGP without connection to specific projects: IETF OpenPGP Working Group ModernCrypto Messaging","title":"Community"},{"location":"openpgp.org/_community/01-community/#consulting","text":"The following organizations provide OpenPGP consulting. Confidential Technologies GmbH Giegerich & Partner GmbH g10 Code GmbH Intevation GmbH","title":"Consulting"},{"location":"openpgp.org/_community/01-community/#organization-missing","text":"If a organization is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . The organizations are ordered alphabetically within the sections.","title":"Organization Missing?"},{"location":"openpgp.org/_drafts/04-why/","text":"{% include base_path %} Philip Zimmermann 27 Feb 2001 In the minds of many people, the phrase \"Public Key Infrastructure\" has become synonymous with \"Certificate Authority\". This is because in the X.509 world, the only PKI that we usually encounter is one built on a centralized CA. Matt Blaze made the cogent observation that commercial CAs will protect you against anyone who that CA refuses to accept money from. These CAs are \"baked into\" the major browsers, with no decisions by the users to trust them. Throughout this discussion, we refer to the IETF OpenPGP standard instead of PGP, which is a single company\u2019s implementation of the OpenPGP standard. There is indeed an OpenPGP Public Key Infrastructure. But what we call a PKI in the OpenPGP world is actually an emergent property of the sum total of all the keys in the user population, all the signatures on all those keys, the individual opinions of each OpenPGP user as to who they choose as trusted introducers, all the OpenPGP client software which runs the OpenPGP trust model and performs trust calculations for each client user, and the key servers which fluidly disseminate this collective knowledge. PGP has flourished for many years without the need to establish a centralized CA. This is because OpenPGP uses a decentralized system of trusted introducers, which are the same as a CA. OpenPGP allows anyone to sign anyone else\u2019s public key. When Alice signs Bob\u2019s key, she is introducing Bob\u2019s key to anyone who trusts Alice. If someone trusts Alice to introduce keys, then Alice is a trusted introducer in the mind of that observer. If I get a key signed by several introducers, and one of these introducers is Alice, and I trust Alice, then the key is certified by a trusted introducer. It may also be signed by other introducers, but they are not trusted by me, so they are not trusted introducers from my point of view. It is enough that Alice signed the key, because I trust Alice. It would be even better if the several introducers of that key includes two or more people that I trust. If the key is signed by two trusted introducers, then I can be more confident of the key\u2019s certification, because it is less likely that an attacker could trick two introducers that I trust into signing a bogus key. People can make mistakes, and sign the wrong key occasionally. OpenPGP has a fault tolerant architecture that allows me to require a key to be signed by two trusted introducers to be regarded as a valid key. This allows a higher level of confidence that the key truly belongs to the person named on the key. Of course, a clever attacker could trick two or more unsophisticated introducers into signing a bogus public key. But that does not matter in the OpenPGP trust model, because I don\u2019t trust unsophisticated introducers that can be so easily fooled. No one should. You should only trust honest and sophisticated introducers that understand what it means to sign a key, and will exercise due diligence in ascertaining the identity of the keyholder before signing the key in question. If only untrusted introducers sign a bogus key, no one will be fooled in the PGP trust model. You must tell the OpenPGP client software which introducers you trust, and the client software uses that knowledge to calculate if a key is properly certified by an introducer that you trust by looking for signatures from one of the trusted introducers. If the key lacks any signatures from introducers that you\u2019ve told the client software that you trust, the client software does not regard they key as certified, and won\u2019t let you use it (or at least will strongly urge you not to use it). Everyone gets to choose who they trust as introducers. Different OpenPGP users will have different sets of trusted introducers. In many cases, there will be overlap, because some introducers become widely trusted. They may even sign a great many keys, on a full time basis. Such people are called CAs in the X.509 world. There is nothing wrong with having CAs in the OpenPGP world. If many people choose to trust the same CA to act as an introducer, and they all configure their own copies of the OpenPGP client software to trust that CA, then the OpenPGP trust model acts like the X.509 trust model. In fact, the OpenPGP trust model is a proper superset of the centralized trust model we most often see in the X.509 world. There is no situation in the X.509 trust model that cannot be handled exactly the same way in the OpenPGP trust model. But OpenPGP can do so much more, and with a fault tolerant architecture, and more user control of his view of the OpenPGP PKI.","title":"Why OpenPGP\u2019s PKI is better than an X.509 PKI"},{"location":"openpgp.org/_pages/404/","text":"Sorry, but the page you were trying to view does not exist.","title":"Page Not Found"},{"location":"openpgp.org/_pages/home/","text":"{% include feature_row id=\"intro\" type=\"center\" %} {% include feature_row %}","title":"Home"},{"location":"openpgp.org/_posts/2016-08-22-new-website/","tags":["website"],"text":"Welcome to our new website. I took over the maintenance of openpgp.org and created new webpages using Jekyll and the Minimal Mistakes theme . The images are licensed under CC0 and were obtained from pixabay . The website is hosted on GitHub and I encourage all visitors to participate in creating and improving content of this website to make it the new main source of information related to the OpenPGP standard. We are open for pull requests .","title":"Welcome to openpgp.org"},{"location":"openpgp.org/_posts/2016-08-24-openpgp-conf/","tags":["conference"],"text":"The German Unix User Group (GUUG) is pleased to announce the first public conference on the OpenPGP protocol taking place in Cologne, Germany on September 8+9, 2016. OpenPGP.conf is a conference for users and implementers of the OpenPGP protocol, the popular standard for encrypted email communication and protection of data at rest. That protocol is the foundation of encryption software like PGP, GnuPG, Mailvelope, OpenKeyChain, and others. OpenPGP.conf is a place to meet, discuss, and learn about latest developments of OpenPGP aware applications and what technical measures can be deployed to repel the ever increasing trend to mass surveillance. Topics are: The OpenPGP protocol and its planned revision Current status of OpenPGP applications Interesting use cases Key discovery and distribution Ubiquitous end-to-end encryption Security analysis User interface studies Anonymous mail and the spam problem The full program is available at: https://openpgp-conf.org/program.html More information has been published at the conference site: https://openpgp-conf.org/","title":"First OpenPGP conference"},{"location":"openpgp.org/_software/01-01-gpg4o/","text":"Gpg4o is a Microsoft Outlook Add-in which implements the OpenPGP standard through GnuPG. It is available for Outlook 2010 \u2013 2016 and focuses on simple handling and good integration into Outlook. It also provides special features for commercial usage. Key Facts Developer/Publisher: Giegerich & Partner GmbH License: Proprietary (Closed Source) Price: gpg4o offers different types of enduser licenses Free version for no commercial use 56,36\u20ac for commercial use Web: https://www.giepa.de/products/gpg4o/?lang=en Help: Support is only available for pro users Forum FAQ","title":"gpg4o"},{"location":"openpgp.org/_software/01-01-gpg4o/#key-facts","text":"Developer/Publisher: Giegerich & Partner GmbH License: Proprietary (Closed Source) Price: gpg4o offers different types of enduser licenses Free version for no commercial use 56,36\u20ac for commercial use Web: https://www.giepa.de/products/gpg4o/?lang=en Help: Support is only available for pro users Forum FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-02-gpg4win/","text":"Gpg4win initiative does not only offer email encryption but a whole suite of tools. It can also be used for file encryption directly in the file explorer. Gpg4win is also the official distribution of GnuPG for Windows. The international initiative wants to focus on the builder to easily create updated installers for GnuPG. Key Facts Developer/Publisher: Community License: Open Source (GNU GPL) Price: All tools are free of charge. Donations are desired. Web: https://www.gpg4win.de/index.html Help: Help is given through the communities Support Forum","title":"Gpg4win"},{"location":"openpgp.org/_software/01-02-gpg4win/#key-facts","text":"Developer/Publisher: Community License: Open Source (GNU GPL) Price: All tools are free of charge. Donations are desired. Web: https://www.gpg4win.de/index.html Help: Help is given through the communities Support Forum","title":"Key Facts"},{"location":"openpgp.org/_software/01-03-pep/","text":"Pretty Easy Privacy (pep) is a cross platform implementation of the OpenPGP standard. The email encryption is available for Microsoft Outlook on Windows as well as Android phones. The product focuses on automatic encryption so that a very simple usage for the end user is possible. Key Facts Developer/Publisher: p\u2261p Foundation License: Open Source (GNU GPL) Price: Android app: Free Outlook Add-In: $24.99 Web: https://prettyeasyprivacy.com Help: Help is given over email Support FAQ","title":"p\u2261p"},{"location":"openpgp.org/_software/01-03-pep/#key-facts","text":"Developer/Publisher: p\u2261p Foundation License: Open Source (GNU GPL) Price: Android app: Free Outlook Add-In: $24.99 Web: https://prettyeasyprivacy.com Help: Help is given over email Support FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-04-enigmail/","text":"Enigmail is an Add-On for Postbox and Mozilla Thunderbird. With GnuPG, it implements the OpenPGP standard. The product enables email encryption and signing directly into Postbox and Thunderbird. The focus is on an easy interface for email security. Key Facts Developer/Publisher: Team of dedicated professionals License: Open Source (MPL) Price: Free. Donations desired Web: https://enigmail.net Help: Help is provided by volunteers Forum FAQ","title":"Enigmail"},{"location":"openpgp.org/_software/01-04-enigmail/#key-facts","text":"Developer/Publisher: Team of dedicated professionals License: Open Source (MPL) Price: Free. Donations desired Web: https://enigmail.net Help: Help is provided by volunteers Forum FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-05-gpgtools/","text":"GPG Tools is a whole package of GPG based software tools. This suite contains four tools to bring encryption in all areas of your Mac system. Every software is based on GnuPG. The package contains an email plugin for Apple Mail , a key manager, a Service to use GPG in almost any application and an engine to use GPG with the command line. Key Facts Developer/Publisher: Community project License: Open Source (GNU GPL) Price: \u20ac 23.80 Web: https://gpgtools.org/ Help: Help is provided by the support team Forum FAQ","title":"GPG Tools"},{"location":"openpgp.org/_software/01-05-gpgtools/#key-facts","text":"Developer/Publisher: Community project License: Open Source (GNU GPL) Price: \u20ac 23.80 Web: https://gpgtools.org/ Help: Help is provided by the support team Forum FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-05-mutt/","text":"Mutt is an email client for Unix operating systems. The client is text-based and uses GnuPG for the encryption. The focus is on a fast and clear usage for the user. Key Facts Developer/Publisher: Michael Elkins License: Open Source (GNU GPL) Price: Free Web: http://www.mutt.org/ Help: Help is provided by the community Wiki FAQ","title":"Mutt"},{"location":"openpgp.org/_software/01-05-mutt/#key-facts","text":"Developer/Publisher: Michael Elkins License: Open Source (GNU GPL) Price: Free Web: http://www.mutt.org/ Help: Help is provided by the community Wiki FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-06-openkeychain/","text":"OpenKeychain is an Android app that brings secure communication, through the OpenPGP Standard, to your mobile phone. This app manages your keys and can also decrypt/encrypt data. It also integrates with other apps and brings the encryption feature to these apps. In association with K-9 Mail you have a secure email client for your Android phone. Key Facts Developer/Publisher: Team of dedicated professionals with community License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://www.openkeychain.org Help: Help is provided by the community Forum FAQ","title":"OpenKeychain"},{"location":"openpgp.org/_software/01-06-openkeychain/#key-facts","text":"Developer/Publisher: Team of dedicated professionals with community License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://www.openkeychain.org Help: Help is provided by the community Forum FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-07-r2mail2/","text":"R2Mail2 is an email client for Android, with a driven OpenPGP implementation. The app focuses on the cryptographic implementation and good experience in association with email communication. Key Facts Developer/Publisher: rundQuadrat OG License: Proprietary (Closed Source) Price: Free. Donations desired Web: https://r2mail2.com/ Help: No support address available","title":"R2Mail2"},{"location":"openpgp.org/_software/01-07-r2mail2/#key-facts","text":"Developer/Publisher: rundQuadrat OG License: Proprietary (Closed Source) Price: Free. Donations desired Web: https://r2mail2.com/ Help: No support address available","title":"Key Facts"},{"location":"openpgp.org/_software/01-08-ipgmail/","text":"iPGMail is an iOS app that implements the OpenPGP standard. The app manages your keys and also brings all cryptographic features to your Apple device. In association with the iOS Mail application, it is also possible to take advantages of the OpenPGP implementation in your email communication. Key Facts Developer/Publisher: Wyllys Ingersoll License: Proprietary (Closed Source) Price: $1.99 Web: https://ipgmail.com/ Help: Help is provided by the author via the contact form Contact FAQ","title":"iPG Mail"},{"location":"openpgp.org/_software/01-08-ipgmail/#key-facts","text":"Developer/Publisher: Wyllys Ingersoll License: Proprietary (Closed Source) Price: $1.99 Web: https://ipgmail.com/ Help: Help is provided by the author via the contact form Contact FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-09-seahorse/","text":"Seahorse is a Linux application that implements the OpenPGP standard. With this software, you can manage your keys and use the cryptographical features for files and texts. In association with the Evolution email client, you can also use the encryption features for your communication. Key Facts Developer/Publisher: Gnome.org community License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://wiki.gnome.org/Apps/Seahorse Help: Help is provided by the community through a mail list Mail list","title":"Seahorse"},{"location":"openpgp.org/_software/01-09-seahorse/#key-facts","text":"Developer/Publisher: Gnome.org community License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://wiki.gnome.org/Apps/Seahorse Help: Help is provided by the community through a mail list Mail list","title":"Key Facts"},{"location":"openpgp.org/_software/01-10-kleopatra/","text":"Kleopatra is a certificate manager and GUI for GnuPG. The software stores your OpenPGP certificates and keys. It is available for Windows and Linux. In association with the KMail email client, you can also take advantages of the cryptographical features for your communication via email. Key Facts Developer/Publisher: KDE License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://www.kde.org/applications/utilities/kleopatra/ Help: Help is provided by the community Manual Forum","title":"Kleopatra"},{"location":"openpgp.org/_software/01-10-kleopatra/#key-facts","text":"Developer/Publisher: KDE License: Open Source (GNU GPL) Price: Free. Donations desired Web: https://www.kde.org/applications/utilities/kleopatra/ Help: Help is provided by the community Manual Forum","title":"Key Facts"},{"location":"openpgp.org/_software/01-11-mailvelope/","text":"Mailvelope is a browser extension for Google Chrome and Firefox that allows secure email communication based on the OpenPGP standard. It can be configured to work with arbitrary Webmail provider. The project focuses on easy usage and good integration with nearly every webmail client. Key Facts Developer/Publisher: Thomas Obernd\u00f6rfer with Community License: Open Source (GNU GPL) Price: Free Web: https://www.mailvelope.com/ Help: Help is provided by the CEO Email FAQ","title":"Mailvelope"},{"location":"openpgp.org/_software/01-11-mailvelope/#key-facts","text":"Developer/Publisher: Thomas Obernd\u00f6rfer with Community License: Open Source (GNU GPL) Price: Free Web: https://www.mailvelope.com/ Help: Help is provided by the CEO Email FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-12-emclient/","text":"eM Client is a versatile email client with calendar, tasks and chat. It supports both PGP/MIME and traditional armored PGP and focuses on ease of use. eM Client synchronizes with Gmail, Office 365, Exchange and any IMAP/POP3/CalDAV/CardDAV/XMPP server. Key Facts Developer/Publisher: eM Client s.r.o. License: Proprietary (Closed Source) Price: eM Client offers two types of licenses Free license for non-commercial use with limitation to two accounts Commercial license for 49.95USD Web: https://www.emclient.com Help: Forum for Free license users Pro support for commercial license users FAQ","title":"eM Client"},{"location":"openpgp.org/_software/01-12-emclient/#key-facts","text":"Developer/Publisher: eM Client s.r.o. License: Proprietary (Closed Source) Price: eM Client offers two types of licenses Free license for non-commercial use with limitation to two accounts Commercial license for 49.95USD Web: https://www.emclient.com Help: Forum for Free license users Pro support for commercial license users FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-13-psono/","text":"Psono is mainly a password manager, that allows with his browser extension for Google Chrome and Firefox to encrypt and decrypt messages based on the OpenPGP standard. It is tightly integrated with various Webmail provider. The private keys can be shared and synced with users and teams. Key Facts Developer/Publisher: Sascha Pfeiffer with Community License: Open Source (Apache 2.0) Price: Free Web: https://psono.com/ Help: Help is provided by the CEO Email Support Website Documentation Issue Tracker","title":"Psono"},{"location":"openpgp.org/_software/01-13-psono/#key-facts","text":"Developer/Publisher: Sascha Pfeiffer with Community License: Open Source (Apache 2.0) Price: Free Web: https://psono.com/ Help: Help is provided by the CEO Email Support Website Documentation Issue Tracker","title":"Key Facts"},{"location":"openpgp.org/_software/01-14-canary-mail/","text":"Canary Mail for Mac and iOS implements the OpenPGP standard. Encryption and decryption are handled seamlessly in-app. Users can generate and manage keys via the built-in key manager, as well as search for keys on SKS and Keybase servers. Canary also offers an optional zero-setup encryption mode for users who prefer automatic WhatsApp-like encryption. In addition, Canary offers a full range of powerful productivity features such as read notifications, snooze, follow-up reminders, to-dos, email templates, etc, and works with all popular IMAP and Exchange accounts, including Gmail, iCloud, Outlook, Office365, etc. Key Facts Developer/Publisher: Mailr Tech LLP License: Proprietary (Closed Source) Encryption Library: ObjectivePGP (Open Source) Price: Mac: $19.99 iOS: $9.99 Web: https://canarymail.io Help: Documentation and chat support Twitter","title":"Canary Mail"},{"location":"openpgp.org/_software/01-14-canary-mail/#key-facts","text":"Developer/Publisher: Mailr Tech LLP License: Proprietary (Closed Source) Encryption Library: ObjectivePGP (Open Source) Price: Mac: $19.99 iOS: $9.99 Web: https://canarymail.io Help: Documentation and chat support Twitter","title":"Key Facts"},{"location":"openpgp.org/_software/01-15-everdesk/","text":"EverDesk is the first and only email client which stores email messages as individual files together with your other files and documents in regular Windows folders, so you can keep all the information related to the same subject together and work with it in a simpler, more flexible, and more powerful way. It can send PGP-encrypted messages using a quick and easy 'Lock' button in Compose window. Key Facts Developer/Publisher: EverEZ Systems Ltd License: Proprietary (Closed Source) Price: $44.95 Web: https://www.everdesk.com/","title":"EverDesk"},{"location":"openpgp.org/_software/01-15-everdesk/#key-facts","text":"Developer/Publisher: EverEZ Systems Ltd License: Proprietary (Closed Source) Price: $44.95 Web: https://www.everdesk.com/","title":"Key Facts"},{"location":"openpgp.org/_software/01-16-thebat/","text":"The Bat! is a secure desktop email client for Windows, built to protect your correspondence against third-parties. The Bat! email program is able to process and store an unlimited number of messages and has no restriction on the number of email accounts accessible via IMAP, POP, MAPI protocols. Key Facts Developer/Publisher: Ritlabs, SRL License: Proprietary (Closed Source) Price: The Bat! offers two types of licenses The Bat! Home for 47.95\u20ac The Bat! Pro with additional encryption and portability features for 59.95\u20ac Web: https://www.ritlabs.com/en/products/thebat/ Help: Forum Customer Service FAQ","title":"The Bat!"},{"location":"openpgp.org/_software/01-16-thebat/#key-facts","text":"Developer/Publisher: Ritlabs, SRL License: Proprietary (Closed Source) Price: The Bat! offers two types of licenses The Bat! Home for 47.95\u20ac The Bat! Pro with additional encryption and portability features for 59.95\u20ac Web: https://www.ritlabs.com/en/products/thebat/ Help: Forum Customer Service FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-17-autocrypt/","text":"Autocrypt is an Add-On for Mozilla Thunderbird. It implements OpenPGP in a very user friendly manner. Following the concepts of Autocrypt the user experience a full automated OpenPGP experience. Key Facts Developer/Publisher: Valodim License: Open Source (MPL) Price: Free. Web: Get Autocrypt","title":"Autocrypt"},{"location":"openpgp.org/_software/01-17-autocrypt/#key-facts","text":"Developer/Publisher: Valodim License: Open Source (MPL) Price: Free. Web: Get Autocrypt","title":"Key Facts"},{"location":"openpgp.org/_software/01-18-fairemail/","text":"Fully featured, open source, privacy friendly email app for Android. Uses OpenKeychain to decrypt messages and optionally encrypt messages. Key Facts Developer/Publisher: Marcel Bokhorst (M66B) License: Open Source (GNU GPLv3) Price: Free. Donations appreciated. Web: https://email.faircode.eu Help: XDA forum","title":"FairEmail"},{"location":"openpgp.org/_software/01-18-fairemail/#key-facts","text":"Developer/Publisher: Marcel Bokhorst (M66B) License: Open Source (GNU GPLv3) Price: Free. Donations appreciated. Web: https://email.faircode.eu Help: XDA forum","title":"Key Facts"},{"location":"openpgp.org/_software/01-19-claws/","text":"Claws Mail is a lightweight and fast email client based on GTK+ for Linux and Windows. It contains a plugin to enable email signing and encryption using GnuPG / gpgme, implementing the OpenPGP standard. Key Facts Developer/Publisher: Team of dedicated developers, translators and contributors License: Open Source (GPL) Price: Free. Donations welcome Web: https://claws-mail.org Help: Help is provided on their website User Manual FAQ","title":"Claws Mail"},{"location":"openpgp.org/_software/01-19-claws/#key-facts","text":"Developer/Publisher: Team of dedicated developers, translators and contributors License: Open Source (GPL) Price: Free. Donations welcome Web: https://claws-mail.org Help: Help is provided on their website User Manual FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-20-postbox/","text":"Postbox for macOS and Windows is a power email app that has the ease of use of Apple Mail, but with more features and configuration options to handle high-volume workloads. Enigmail for Postbox, an add-on that uses GnuPG to implement the OpenPGP standard, enables email encryption and signing directly within the app. Key Facts Developer/Publisher: Postbox, Inc. License: Proprietary (Closed Source) Encryption Library: OpenPGP (Open Source) Price: 1-Year License: $29.00 Lifetime License: $59.00 Web: https://postbox-inc.com Help: Documentation and Help Center Twitter","title":"Postbox"},{"location":"openpgp.org/_software/01-20-postbox/#key-facts","text":"Developer/Publisher: Postbox, Inc. License: Proprietary (Closed Source) Encryption Library: OpenPGP (Open Source) Price: 1-Year License: $29.00 Lifetime License: $59.00 Web: https://postbox-inc.com Help: Documentation and Help Center Twitter","title":"Key Facts"},{"location":"openpgp.org/_software/01-20-safe/","text":"Safe Easy Privacy is a privacy tool. Import, Create and Share PGP keys easily via AirDrop, Safe Codes and Safe Secure links. Encrypt and Decrypt messages. Key Facts Developer/Publisher: Safe Mobile License: Proprietary (Closed Source) Price: Free Web: https://safepgpapp.com/ Help: Help is provided by the author via the contact form Contact","title":"Safe Easy Privacy"},{"location":"openpgp.org/_software/01-20-safe/#key-facts","text":"Developer/Publisher: Safe Mobile License: Proprietary (Closed Source) Price: Free Web: https://safepgpapp.com/ Help: Help is provided by the author via the contact form Contact","title":"Key Facts"},{"location":"openpgp.org/_software/01-21-pgpro/","text":"PGPro can encrypt and decrypt messages as well as manage your PGP keys. It is free, simple and lightweight. Everything stays on your device. PGPro is open-source and made in Switzerland \ud83c\udde8\ud83c\udded You can Encrypt and Decrypt your Messages Import Keys from File, Clipboard and the Web ( Web Key Directory and OpenPGP Keyserver ) Export all Keys to a GPG Keyring file Share Keys via Share Sheet Generate new 3072-bit RSA Keys Limitations: PGPro does not support ECC Keys PGPro does not support sign-only keys PGPro does not support symmetric encryption Key Facts Developer/Publisher: Luca N\u00e4f License: Open Source (GNU GPL-3.0) Encryption Library: ObjectivePGP (Open Source) Price: Free. Donations accepted Web: https://pgpro.app Help: Help is provided in the FAQ and by the developer via email FAQ Email","title":"PGPro"},{"location":"openpgp.org/_software/01-21-pgpro/#key-facts","text":"Developer/Publisher: Luca N\u00e4f License: Open Source (GNU GPL-3.0) Encryption Library: ObjectivePGP (Open Source) Price: Free. Donations accepted Web: https://pgpro.app Help: Help is provided in the FAQ and by the developer via email FAQ Email","title":"Key Facts"},{"location":"openpgp.org/_software/01-22-thunderbird/","text":"The Email Client Mozilla Thunderbird supports OpenPGP directly since version 78. Key Facts Developer/Publisher: Mozilla License: Open Source (MPL) Price: Free ( Donations ) Web: Get Thunderbird FAQ: OpenPGP in Thunderbird - HOWTO and FAQ","title":"Thunderbird"},{"location":"openpgp.org/_software/01-22-thunderbird/#key-facts","text":"Developer/Publisher: Mozilla License: Open Source (MPL) Price: Free ( Donations ) Web: Get Thunderbird FAQ: OpenPGP in Thunderbird - HOWTO and FAQ","title":"Key Facts"},{"location":"openpgp.org/_software/01-software/","text":"{% include base_path %} {% include toc %} All email applications on this page support the OpenPGP standard either directly or with additional software. The authors of this webpage are not actively participating in the development of each of these third-party apps. No security audits have been done by us and, thus, we cannot provide any security guarantees. Windows Claws Mail eM Client EverDesk The Bat! Outlook: gpg4o Gpg4win p\u2261p Postbox using Enigmail Thunderbird : Autocrypt for versions <78 Enigmail for versions <78 Mac OS Apple Mail: GPGTools Canary Mail Mutt Postbox using Enigmail Thunderbird : Autocrypt for versions <78 Enigmail for versions <78 Android FairEmail K-9 Mail: OpenKeychain p\u2261p R2Mail2 iOS Canary Mail iPGMail PGPro Safe Easy Privacy Linux Claws Mail Evolution: Seahorse KMail: Kleopatra Mutt Thunderbird : Autocrypt for versions <78 Enigmail for versions <78 Browser Plugins Mailvelope FlowCrypt (Gmail) Psono Webmail Provider with Browser Plugins A lot of webmail providers support email encryption via the OpenPGP standard using Mailvelope . The Mailvelope website provides a list of supported webmail providers . Providers with help pages: GMX Posteo WEB.DE Pre-configured (authorized) providers: Gmail mail.ru Outlook.com volny.cz Yahoo Zoho Mail Other authorized providers with API support: mailbox.org riseup.net Roundcube Webmail Provider with In-Browser Cryptography In contrast to the previous section, the following webmail providers do not require the installation of additional browser plugins, instead OpenPGP is implemented in JavaScript provided directly by the website. While these are easier to set up and provide basic security guarantees with OpenPGP, some people don't consider these \"end-to-end secure\" . Hushmail (limited OpenPGP support) Mailfence postale.io ProtonMail Project Missing? If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Email Encryption"},{"location":"openpgp.org/_software/01-software/#windows","text":"Claws Mail eM Client EverDesk The Bat! Outlook: gpg4o Gpg4win p\u2261p Postbox using Enigmail Thunderbird : Autocrypt for versions <78 Enigmail for versions <78","title":"Windows"},{"location":"openpgp.org/_software/01-software/#mac-os","text":"Apple Mail: GPGTools Canary Mail Mutt Postbox using Enigmail Thunderbird : Autocrypt for versions <78 Enigmail for versions <78","title":"Mac OS"},{"location":"openpgp.org/_software/01-software/#android","text":"FairEmail K-9 Mail: OpenKeychain p\u2261p R2Mail2","title":"Android"},{"location":"openpgp.org/_software/01-software/#ios","text":"Canary Mail iPGMail PGPro Safe Easy Privacy","title":"iOS"},{"location":"openpgp.org/_software/01-software/#linux","text":"Claws Mail Evolution: Seahorse KMail: Kleopatra Mutt Thunderbird : Autocrypt for versions <78 Enigmail for versions <78","title":"Linux"},{"location":"openpgp.org/_software/01-software/#browser-plugins","text":"Mailvelope FlowCrypt (Gmail) Psono","title":"Browser Plugins"},{"location":"openpgp.org/_software/01-software/#webmail-provider-with-browser-plugins","text":"A lot of webmail providers support email encryption via the OpenPGP standard using Mailvelope . The Mailvelope website provides a list of supported webmail providers . Providers with help pages: GMX Posteo WEB.DE Pre-configured (authorized) providers: Gmail mail.ru Outlook.com volny.cz Yahoo Zoho Mail Other authorized providers with API support: mailbox.org riseup.net Roundcube","title":"Webmail Provider with Browser Plugins"},{"location":"openpgp.org/_software/01-software/#webmail-provider-with-in-browser-cryptography","text":"In contrast to the previous section, the following webmail providers do not require the installation of additional browser plugins, instead OpenPGP is implemented in JavaScript provided directly by the website. While these are easier to set up and provide basic security guarantees with OpenPGP, some people don't consider these \"end-to-end secure\" . Hushmail (limited OpenPGP support) Mailfence postale.io ProtonMail","title":"Webmail Provider with In-Browser Cryptography"},{"location":"openpgp.org/_software/01-software/#project-missing","text":"If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Project Missing?"},{"location":"openpgp.org/_software/02-server/","text":"{% include base_path %} {% include toc %} All applications on this page implement the OpenPGP standard. The authors of this webpage are not actively participating in the development of each of these third-party apps. No security audits have been done by us and, thus, we cannot provide any security guarantees. Webmail Clients Mailpile Pixelated Roundcube Keyservers Hockeypuck Keyserver (in Go) keys.openpgp.org (in Rust) Mailvelope Keyserver (in JS) Nicknym , from the LEAP project Nyms SKS Keyserver (in OCaml) Mailing List Software Mailman 3 PGP plugin Schleuder encrypted mailinglist Password Managers Passbolt Project Missing? If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Server"},{"location":"openpgp.org/_software/02-server/#webmail-clients","text":"Mailpile Pixelated Roundcube","title":"Webmail Clients"},{"location":"openpgp.org/_software/02-server/#keyservers","text":"Hockeypuck Keyserver (in Go) keys.openpgp.org (in Rust) Mailvelope Keyserver (in JS) Nicknym , from the LEAP project Nyms SKS Keyserver (in OCaml)","title":"Keyservers"},{"location":"openpgp.org/_software/02-server/#mailing-list-software","text":"Mailman 3 PGP plugin Schleuder encrypted mailinglist","title":"Mailing List Software"},{"location":"openpgp.org/_software/02-server/#password-managers","text":"Passbolt","title":"Password Managers"},{"location":"openpgp.org/_software/02-server/#project-missing","text":"If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Project Missing?"},{"location":"openpgp.org/_software/03-developer-tools/","text":"{% include base_path %} All applications on this page implement the OpenPGP standard. The authors of this webpage are not actively participating in the development of each of these third-party apps. No security audits have been done by us and, thus, we cannot provide any security guarantees. OpenPGP Libraries Bouncy Castle (Low-level Java/C#) calccrypto/OpenPGP (C++) GnuPG Made Easy (GPGME) (C, with Python and Lisp bindings) Golang OpenPGP (Go) Haskell OpenPGP (Haskell) hOpenPGP (Haskell) IPWorks OpenPGP (.NET, Java, C++, Python, Delphi, PHP, Node.js, Android, iOS) kbpgp (JavaScript) NeoPG (C++, GnuPG fork as a library) NetPGP (C, with Python, Perl and Lua bindings) ObjectivePGP (Objective C) OCaml PGP (OCaml) OpenKeychain API (Java) OpenPGP-PHP (PHP) OpenPGP.js (Javascript) PGPainless (Java) PGPy (Python) RNP (C++) Sequoia PGP (Rust) Swift-PGP (Swift) Libraries Supporting OpenPGP Smartcards GnuPG Made Easy (GPGME) (C, with Python and Lisp bindings) Hardware Security SDK (Java) OpenSC (C) Developer Tools Debian Package Signing with GnuPG Distributed Key Generation and Threshold Cryptography for OpenPGP Git Tools - Signing Your Work with GnuPG Monkeysign pass: the standard unix password manager Project Missing? If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Developer Libraries/Tools"},{"location":"openpgp.org/_software/03-developer-tools/#openpgp-libraries","text":"Bouncy Castle (Low-level Java/C#) calccrypto/OpenPGP (C++) GnuPG Made Easy (GPGME) (C, with Python and Lisp bindings) Golang OpenPGP (Go) Haskell OpenPGP (Haskell) hOpenPGP (Haskell) IPWorks OpenPGP (.NET, Java, C++, Python, Delphi, PHP, Node.js, Android, iOS) kbpgp (JavaScript) NeoPG (C++, GnuPG fork as a library) NetPGP (C, with Python, Perl and Lua bindings) ObjectivePGP (Objective C) OCaml PGP (OCaml) OpenKeychain API (Java) OpenPGP-PHP (PHP) OpenPGP.js (Javascript) PGPainless (Java) PGPy (Python) RNP (C++) Sequoia PGP (Rust) Swift-PGP (Swift)","title":"OpenPGP Libraries"},{"location":"openpgp.org/_software/03-developer-tools/#libraries-supporting-openpgp-smartcards","text":"GnuPG Made Easy (GPGME) (C, with Python and Lisp bindings) Hardware Security SDK (Java) OpenSC (C)","title":"Libraries Supporting OpenPGP Smartcards"},{"location":"openpgp.org/_software/03-developer-tools/#developer-tools","text":"Debian Package Signing with GnuPG Distributed Key Generation and Threshold Cryptography for OpenPGP Git Tools - Signing Your Work with GnuPG Monkeysign pass: the standard unix password manager","title":"Developer Tools"},{"location":"openpgp.org/_software/03-developer-tools/#project-missing","text":"If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Project Missing?"},{"location":"openpgp.org/_software/04-01-gpgfrontend/","text":"GpgFrontend is a modern, easy-to-use, compact, cross-platform, and installation-free gpg front-end tool. By using GpgFrontend, you can quickly encrypt and decrypt text or files. Or at the same time as the above operations, you can add your own signature to let others know that this document or this paragraph of text was issued by you. Furthermore, it visualizes most of the common operations of gpg commands. It aims to allow ordinary users to quickly use gpg and make professional users more convenient. GpgFrontend supports some new features of OpenPGP. Features: Open source, free, no need to install. Can run on Windows, Linux and macOS. Just double-click, and then you can use it freely. Before use, you only need to install gnupg. A tiny tool of a few MB. Supports multiple languages. Don\u2019t forget to help me translate this software. Key Facts Developer/Publisher: Saturneric License: Open Source (GNU GPL-3.0) Price: Free. Web: GitHub Page GitHub Repository Help: Help is provided in the README.md and by the developer via email README.md Email","title":"GPGFrontend"},{"location":"openpgp.org/_software/04-01-gpgfrontend/#key-facts","text":"Developer/Publisher: Saturneric License: Open Source (GNU GPL-3.0) Price: Free. Web: GitHub Page GitHub Repository Help: Help is provided in the README.md and by the developer via email README.md Email","title":"Key Facts"},{"location":"openpgp.org/_software/04-misc/","text":"{% include base_path %} All applications on this page implement the OpenPGP standard. The authors of this webpage are not actively participating in the development of each of these third-party apps. No security audits have been done by us and, thus, we cannot provide any security guarantees. PC Applications GpgFrontend (Windows, macOS, Linux) Web-Based Tools Pipefile (Secure File Sharing) Cryptonomica (Identity Verification) Apps Pignus (iOS) neutriNote (Android) Project Missing? If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Miscellaneous Tools"},{"location":"openpgp.org/_software/04-misc/#pc-applications","text":"GpgFrontend (Windows, macOS, Linux)","title":"PC Applications"},{"location":"openpgp.org/_software/04-misc/#web-based-tools","text":"Pipefile (Secure File Sharing) Cryptonomica (Identity Verification)","title":"Web-Based Tools"},{"location":"openpgp.org/_software/04-misc/#apps","text":"Pignus (iOS) neutriNote (Android)","title":"Apps"},{"location":"openpgp.org/_software/04-misc/#project-missing","text":"If a project is missing and you would like it included, please open a pull request at github.com/OpenPGP/openpgp.org . Please note that we only include published, working software, which implements the standard. The software is ordered alphabetically within the sections.","title":"Project Missing?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/","text":"Rails 6.0.5 (May 09, 2022) No changes. Rails 6.0.4.8 (April 26, 2022) Fix and add protections for XSS in ActionView::Helpers and ERB::Util . Add the method ERB::Util.xml_name_escape to escape dangerous characters in names of tags and names of attributes, following the specification of XML. \u00c1lvaro Mart\u00edn Fraguas Rails 6.0.4.7 (March 08, 2022) No changes. Rails 6.0.4.6 (February 11, 2022) Fix Reloader method signature to work with the new Executor signature Rails 6.0.4.5 (February 11, 2022) No changes. Rails 6.0.4.4 (December 15, 2021) No changes. Rails 6.0.4.3 (December 14, 2021) No changes. Rails 6.0.4.2 (December 14, 2021) No changes. Rails 6.0.4.1 (August 19, 2021) No changes. Rails 6.0.4 (June 15, 2021) Fixed issue in ActiveSupport::Cache::RedisCacheStore not passing options to read_multi causing fetch_multi to not work properly. Rajesh Sharma with_options copies its options hash again to avoid leaking mutations. Fixes #39343. Eugene Kenny Rails 6.0.3.7 (May 05, 2021) No changes. Rails 6.0.3.6 (March 26, 2021) No changes. Rails 6.0.3.5 (February 10, 2021) No changes. Rails 6.0.3.4 (October 07, 2020) No changes. Rails 6.0.3.3 (September 09, 2020) No changes. Rails 6.0.3.2 (June 17, 2020) No changes. Rails 6.0.3.1 (May 18, 2020) [CVE-2020-8165] Deprecate Marshal.load on raw cache read in RedisCacheStore [CVE-2020-8165] Avoid Marshal.load on raw cache value in MemCacheStore Rails 6.0.3 (May 06, 2020) Array#to_sentence no longer returns a frozen string. Before: ['one', 'two'].to_sentence.frozen? # => true After: ['one', 'two'].to_sentence.frozen? # => false Nicolas Dular Update ActiveSupport::Messages::Metadata#fresh? to work for cookies with expiry set when ActiveSupport.parse_json_times = true . Christian Gregg Rails 6.0.2.2 (March 19, 2020) No changes. Rails 6.0.2.1 (December 18, 2019) No changes. Rails 6.0.2 (December 13, 2019) Eager load translations during initialization. Diego Plentz Use per-thread CPU time clock on ActiveSupport::Notifications . George Claghorn Rails 6.0.1 (November 5, 2019) ActiveSupport::SafeBuffer supports Enumerator methods. Shugo Maeda The Redis cache store fails gracefully when the server returns a \"max number of clients reached\" error. Brandon Medenwald Fixed that mutating a value returned by a memory cache store would unexpectedly change the cached value. Jonathan Hyman The default inflectors in zeitwerk mode support overrides: ```ruby config/initializers/zeitwerk.rb Rails.autoloaders.each do |autoloader| autoloader.inflector.inflect( \"html_parser\" => \"HTMLParser\", \"ssl_error\" => \"SSLError\" ) end ``` That way, you can tweak how individual basenames are inflected without touching Active Support inflection rules, which are global. These inflectors fallback to String#camelize , so existing inflection rules are still taken into account for non-overridden basenames. Please, check the autoloading guide for zeitwerk mode if you prefer not to depend on String#camelize at all. Xavier Noria Improve Range#=== , Range#include? , and Range#cover? to work with beginless (startless) and endless range targets. Allen Hsu , Andrew Hodgkinson Don't use Process#clock_gettime(CLOCK_THREAD_CPUTIME_ID) on Solaris. Iain Beeston Rails 6.0.0 (August 16, 2019) Let require_dependency in zeitwerk mode look the autoload paths up for better backwards compatibility. Xavier Noria Let require_dependency in zeitwerk mode support arguments that respond to to_path for better backwards compatibility. Xavier Noria Make ActiveSupport::Logger Fiber-safe. Fixes #36752. Use Fiber.current.__id__ in ActiveSupport::Logger#local_level= in order to make log level local to Ruby Fibers in addition to Threads. Example: logger = ActiveSupport::Logger.new(STDOUT) logger.level = 1 p \"Main is debug? #{logger.debug?}\" Fiber.new { logger.local_level = 0 p \"Thread is debug? #{logger.debug?}\" }.resume p \"Main is debug? #{logger.debug?}\" Before: Main is debug? false Thread is debug? true Main is debug? true After: Main is debug? false Thread is debug? true Main is debug? false Alexander Varnin Do not delegate missing marshal_dump and _dump methods via the delegate_missing_to extension. This avoids unintentionally adding instance variables when calling Marshal.dump(object) , should the delegation target of object be a method which would otherwise add them. Fixes #36522. Aaron Lipman Rails 6.0.0.rc2 (July 22, 2019) truncate would return the original string if it was too short to be truncated and a frozen string if it were long enough to be truncated. Now truncate will consistently return an unfrozen string regardless. This behavior is consistent with gsub and strip . Before: 'foobar'.truncate(5).frozen? # => true 'foobar'.truncate(6).frozen? # => false After: 'foobar'.truncate(5).frozen? # => false 'foobar'.truncate(6).frozen? # => false Jordan Thomas Rails 6.0.0.rc1 (April 24, 2019) Speed improvements to Hash.except and HashWithIndifferentAccess#except . These methods now unset the default / default_proc on the returned Hash, compatible with Ruby 3.0\u2019s native implementation. Timo Schilling Introduce ActiveSupport::ActionableError . Actionable errors let's you dispatch actions from Rails' error pages. This can help you save time if you have a clear action for the resolution of common development errors. The de-facto example are pending migrations. Every time pending migrations are found, a middleware raises an error. With actionable errors, you can run the migrations right from the error page. Other examples include Rails plugins that need to run a rake task to setup themselves. They can now raise actionable errors to run the setup straight from the error pages. Here is how to define an actionable error: ```ruby class PendingMigrationError < MigrationError #:nodoc: include ActiveSupport::ActionableError action \"Run pending migrations\" do ActiveRecord::Tasks::DatabaseTasks.migrate end end ``` To make an error actionable, include the ActiveSupport::ActionableError module and invoke the action class macro to define the action. An action needs a name and a procedure to execute. The name is shown as the name of a button on the error pages. Once clicked, it will invoke the given procedure. Vipul A M , Yao Jie , Genadi Samokovarov Preserve html_safe? status on ActiveSupport::SafeBuffer#* . Before: (\"<br />\".html_safe * 2).html_safe? #=> nil After: (\"<br />\".html_safe * 2).html_safe? #=> true Ryo Nakamura Calling test methods with with_info_handler method to allow minitest-hooks plugin to work. Mauri Mustonen The Zeitwerk compatibility interface for ActiveSupport::Dependencies no longer implements autoloaded_constants or autoloaded? (undocumented, anyway). Experience shows introspection does not have many use cases, and troubleshooting is done by logging. With this design trade-off we are able to use even less memory in all environments. Xavier Noria Depends on Zeitwerk 2, which stores less metadata if reloading is disabled and hence uses less memory when config.cache_classes is true , a standard setup in production. Xavier Noria In :zeitwerk mode, eager load directories in engines and applications only if present in their respective config.eager_load_paths . A common use case for this is adding lib to config.autoload_paths , but not to config.eager_load_paths . In that configuration, for example, files in the lib directory should not be eager loaded. Xavier Noria Fix bug in Range comparisons when comparing to an excluded-end Range Before: (1..10).cover?(1...11) # => false After: (1..10).cover?(1...11) # => true With the same change for Range#include? and Range#=== . Owen Stephens Use weak references in descendants tracker to allow anonymous subclasses to be garbage collected. Edgars Beigarts Update ActiveSupport::Notifications::Instrumenter#instrument to make passing a block optional. This will let users use ActiveSupport::Notifications messaging features outside of instrumentation. Ali Ibrahim Fix Time#advance to work with dates before 1001-03-07 Before: Time.utc(1001, 3, 6).advance(years: -1) # => 1000-03-05 00:00:00 UTC After Time.utc(1001, 3, 6).advance(years: -1) # => 1000-03-06 00:00:00 UTC Note that this doesn't affect DateTime#advance as that doesn't use a proleptic calendar. Andrew White In Zeitwerk mode, engines are now managed by the main autoloader. Engines may reference application constants, if the application is reloaded and we do not reload engines, they won't use the reloaded application code. Xavier Noria Add support for supplying locale to transliterate and parameterize . I18n.backend.store_translations(:de, i18n: { transliterate: { rule: { \"\u00fc\" => \"ue\" } } }) ActiveSupport::Inflector.transliterate(\"\u00fc\", locale: :de) # => \"ue\" \"F\u00fcnf autos\".parameterize(locale: :de) # => \"fuenf-autos\" ActiveSupport::Inflector.parameterize(\"F\u00fcnf autos\", locale: :de) # => \"fuenf-autos\" Kaan Ozkan , Sharang Dashputre Allow Array#excluding and Enumerable#excluding to deal with a passed array gracefully. [ 1, 2, 3, 4, 5 ].excluding([4, 5]) # => [ 1, 2, 3 ] DHH Renamed Array#without and Enumerable#without to Array#excluding and Enumerable#excluding , to create parity with Array#including and Enumerable#including . Retained the old names as aliases. DHH Added Array#including and Enumerable#including to conveniently enlarge a collection with more members using a method rather than an operator: [ 1, 2, 3 ].including(4, 5) # => [ 1, 2, 3, 4, 5 ] post.authors.including(Current.person) # => All the authors plus the current person! DHH Rails 6.0.0.beta3 (March 11, 2019) No changes. Rails 6.0.0.beta2 (February 25, 2019) New autoloading based on Zeitwerk . Xavier Noria Revise ActiveSupport::Notifications.unsubscribe to correctly handle Regex or other multiple-pattern subscribers. Zach Kemp Add before_reset callback to CurrentAttributes and define after_reset as an alias of resets for symmetry. Rosa Gutierrez Remove the Kernel#` override that suppresses ENOENT and accidentally returns nil on Unix systems. Akinori Musha Add ActiveSupport::HashWithIndifferentAccess#assoc . assoc can now be called with either a string or a symbol. Stefan Sch\u00fc\u00dfler Add Hash#deep_transform_values , and Hash#deep_transform_values! . Guillermo Iguaran Rails 6.0.0.beta1 (January 18, 2019) Remove deprecated Module#reachable? method. Rafael Mendon\u00e7a Fran\u00e7a Remove deprecated #acronym_regex method from Inflections . Rafael Mendon\u00e7a Fran\u00e7a Fix String#safe_constantize throwing a LoadError for incorrectly cased constant references. Keenan Brock Preserve key order passed to ActiveSupport::CacheStore#fetch_multi . fetch_multi(*names) now returns its results in the same order as the *names requested, rather than returning cache hits followed by cache misses. Gannon McGibbon If the same block is included multiple times for a Concern, an exception is no longer raised. Mark J. Titorenko , Vlad Bokov Fix bug where #to_options for ActiveSupport::HashWithIndifferentAccess would not act as alias for #symbolize_keys . Nick Weiland Improve the logic that detects non-autoloaded constants. Jan Habermann , Xavier Noria Deprecate ActiveSupport::Multibyte::Unicode#pack_graphemes(array) and ActiveSupport::Multibyte::Unicode#unpack_graphemes(string) in favor of array.flatten.pack(\"U*\") and string.scan(/\\X/).map(&:codepoints) , respectively. Francesco Rodr\u00edguez Deprecate ActiveSupport::Multibyte::Chars.consumes? in favor of String#is_utf8? . Francesco Rodr\u00edguez Fix duration being rounded to a full second. time = DateTime.parse(\"2018-1-1\") time += 0.51.seconds Will now correctly add 0.51 second and not 1 full second. Edouard Chin Deprecate ActiveSupport::Multibyte::Unicode#normalize and ActiveSupport::Multibyte::Chars#normalize in favor of String#unicode_normalize Francesco Rodr\u00edguez Deprecate ActiveSupport::Multibyte::Unicode#downcase/upcase/swapcase in favor of String#downcase/upcase/swapcase . Francesco Rodr\u00edguez Add ActiveSupport::ParameterFilter . Yoshiyuki Kinjo Rename Module#parent , Module#parents , and Module#parent_name to module_parent , module_parents , and module_parent_name . Gannon McGibbon Deprecate the use of LoggerSilence in favor of ActiveSupport::LoggerSilence Edouard Chin Deprecate using negative limits in String#first and String#last . Gannon McGibbon , Eric Turner Fix bug where #without for ActiveSupport::HashWithIndifferentAccess would fail with symbol arguments Abraham Chan Treat #delete_prefix , #delete_suffix and #unicode_normalize results as non- html_safe . Ensure safety of arguments for #insert , #[]= and #replace calls on html_safe Strings. Janosch M\u00fcller Changed ActiveSupport::TaggedLogging.new to return a new logger instance instead of mutating the one received as parameter. Thierry Joyal Define unfreeze_time as an alias of travel_back in ActiveSupport::Testing::TimeHelpers . The alias is provided for symmetry with freeze_time . Ryan Davidson Add support for tracing constant autoloads. Just throw ActiveSupport::Dependencies.logger = Rails.logger ActiveSupport::Dependencies.verbose = true in an initializer. Xavier Noria Maintain html_safe? on html_safe strings when sliced. string = \"<div>test</div>\".html_safe string[-1..1].html_safe? # => true Elom Gomez , Yumin Wong Add Array#extract! . The method removes and returns the elements for which the block returns a true value. If no block is given, an Enumerator is returned instead. numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] odd_numbers = numbers.extract! { |number| number.odd? } # => [1, 3, 5, 7, 9] numbers # => [0, 2, 4, 6, 8] bogdanvlviv Support not to cache nil for ActiveSupport::Cache#fetch . cache.fetch('bar', skip_nil: true) { nil } cache.exist?('bar') # => false Martin Hong Add \"event object\" support to the notification system. Before this change, end users were forced to create hand made artisanal event objects on their own, like this: ActiveSupport::Notifications.subscribe('wait') do |*args| @event = ActiveSupport::Notifications::Event.new(*args) end ActiveSupport::Notifications.instrument('wait') do sleep 1 end @event.duration # => 1000.138 After this change, if the block passed to subscribe only takes one parameter, the framework will yield an event object to the block. Now end users are no longer required to make their own: ActiveSupport::Notifications.subscribe('wait') do |event| @event = event end ActiveSupport::Notifications.instrument('wait') do sleep 1 end p @event.allocations # => 7 p @event.cpu_time # => 0.256 p @event.idle_time # => 1003.2399 Now you can enjoy event objects without making them yourself. Neat! Aaron \"t.lo\" Patterson Add cpu_time, idle_time, and allocations to Event. Eileen M. Uchitelle , Aaron Patterson RedisCacheStore: support key expiry in increment/decrement. Pass :expires_in to #increment and #decrement to set a Redis EXPIRE on the key. If the key is already set to expire, RedisCacheStore won't extend its expiry. Rails.cache.increment(\"some_key\", 1, expires_in: 2.minutes) Jason Lee Allow Range#=== and Range#cover? on Range. Range#cover? can now accept a range argument like Range#include? and Range#=== . Range#=== works correctly on Ruby 2.6. Range#include? is moved into a new file, with these two methods. Requiring active_support/core_ext/range/include_range is now deprecated. Use require \"active_support/core_ext/range/compare_range\" instead. utilum Add index_with to Enumerable. Allows creating a hash from an enumerable with the value from a passed block or a default argument. %i( title body ).index_with { |attr| post.public_send(attr) } # => { title: \"hey\", body: \"what's up?\" } %i( title body ).index_with(nil) # => { title: nil, body: nil } Closely linked with index_by , which creates a hash where the keys are extracted from a block. Kasper Timm Hansen Fix bug where ActiveSupport::TimeZone.all would fail when tzinfo data for any timezone defined in ActiveSupport::TimeZone::MAPPING is missing. Dominik Sander Redis cache store: delete_matched no longer blocks the Redis server. (Switches from evaled Lua to a batched SCAN + DEL loop.) Gleb Mazovetskiy Fix bug where ActiveSupport::Cache will massively inflate the storage size when compression is enabled (which is true by default). This patch does not attempt to repair existing data: please manually flush the cache to clear out the problematic entries. Godfrey Chan Fix bug where URI.unescape would fail with mixed Unicode/escaped character input: URI.unescape(\"\\xe3\\x83\\x90\") # => \"\u30d0\" URI.unescape(\"%E3%83%90\") # => \"\u30d0\" URI.unescape(\"\\xe3\\x83\\x90%E3%83%90\") # => Encoding::CompatibilityError Ashe Connor , Aaron Patterson Add before? and after? methods to Date , DateTime , Time , and TimeWithZone . Nick Holden ActiveSupport::Inflector#ordinal and ActiveSupport::Inflector#ordinalize now support translations through I18n. # locale/fr.rb { fr: { number: { nth: { ordinals: lambda do |_key, number:, **_options| if number.to_i.abs == 1 'er' else 'e' end end, ordinalized: lambda do |_key, number:, **_options| \"#{number}#{ActiveSupport::Inflector.ordinal(number)}\" end } } } } Christian Blais Add :private option to ActiveSupport's Module#delegate in order to delegate methods as private: class User < ActiveRecord::Base has_one :profile delegate :date_of_birth, to: :profile, private: true def age Date.today.year - date_of_birth.year end end # User.new.age # => 29 # User.new.date_of_birth # => NoMethodError: private method `date_of_birth' called for #<User:0x00000008221340> Tomas Valent String#truncate_bytes to truncate a string to a maximum bytesize without breaking multibyte characters or grapheme clusters like \ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66. Jeremy Daer String#strip_heredoc preserves frozenness. \"foo\".freeze.strip_heredoc.frozen? # => true Fixes that frozen string literals would inadvertently become unfrozen: # frozen_string_literal: true foo = <<-MSG.strip_heredoc la la la MSG foo.frozen? # => false !?? Jeremy Daer Rails 6 requires Ruby 2.5.0 or newer. Jeremy Daer , Kasper Timm Hansen Adds parallel testing to Rails. Parallelize your test suite with forked processes or threads. Eileen M. Uchitelle , Aaron Patterson Please check 5-2-stable for previous changes.","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-605-may-09-2022","text":"No changes.","title":"Rails 6.0.5 (May 09, 2022)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6048-april-26-2022","text":"Fix and add protections for XSS in ActionView::Helpers and ERB::Util . Add the method ERB::Util.xml_name_escape to escape dangerous characters in names of tags and names of attributes, following the specification of XML. \u00c1lvaro Mart\u00edn Fraguas","title":"Rails 6.0.4.8 (April 26, 2022)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6047-march-08-2022","text":"No changes.","title":"Rails 6.0.4.7 (March 08, 2022)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6046-february-11-2022","text":"Fix Reloader method signature to work with the new Executor signature","title":"Rails 6.0.4.6 (February 11, 2022)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6045-february-11-2022","text":"No changes.","title":"Rails 6.0.4.5 (February 11, 2022)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6044-december-15-2021","text":"No changes.","title":"Rails 6.0.4.4 (December 15, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6043-december-14-2021","text":"No changes.","title":"Rails 6.0.4.3 (December 14, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6042-december-14-2021","text":"No changes.","title":"Rails 6.0.4.2 (December 14, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6041-august-19-2021","text":"No changes.","title":"Rails 6.0.4.1 (August 19, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-604-june-15-2021","text":"Fixed issue in ActiveSupport::Cache::RedisCacheStore not passing options to read_multi causing fetch_multi to not work properly. Rajesh Sharma with_options copies its options hash again to avoid leaking mutations. Fixes #39343. Eugene Kenny","title":"Rails 6.0.4 (June 15, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6037-may-05-2021","text":"No changes.","title":"Rails 6.0.3.7 (May 05, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6036-march-26-2021","text":"No changes.","title":"Rails 6.0.3.6 (March 26, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6035-february-10-2021","text":"No changes.","title":"Rails 6.0.3.5 (February 10, 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6034-october-07-2020","text":"No changes.","title":"Rails 6.0.3.4 (October 07, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6033-september-09-2020","text":"No changes.","title":"Rails 6.0.3.3 (September 09, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6032-june-17-2020","text":"No changes.","title":"Rails 6.0.3.2 (June 17, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6031-may-18-2020","text":"[CVE-2020-8165] Deprecate Marshal.load on raw cache read in RedisCacheStore [CVE-2020-8165] Avoid Marshal.load on raw cache value in MemCacheStore","title":"Rails 6.0.3.1 (May 18, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-603-may-06-2020","text":"Array#to_sentence no longer returns a frozen string. Before: ['one', 'two'].to_sentence.frozen? # => true After: ['one', 'two'].to_sentence.frozen? # => false Nicolas Dular Update ActiveSupport::Messages::Metadata#fresh? to work for cookies with expiry set when ActiveSupport.parse_json_times = true . Christian Gregg","title":"Rails 6.0.3 (May 06, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6022-march-19-2020","text":"No changes.","title":"Rails 6.0.2.2 (March 19, 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-6021-december-18-2019","text":"No changes.","title":"Rails 6.0.2.1 (December 18, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-602-december-13-2019","text":"Eager load translations during initialization. Diego Plentz Use per-thread CPU time clock on ActiveSupport::Notifications . George Claghorn","title":"Rails 6.0.2 (December 13, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-601-november-5-2019","text":"ActiveSupport::SafeBuffer supports Enumerator methods. Shugo Maeda The Redis cache store fails gracefully when the server returns a \"max number of clients reached\" error. Brandon Medenwald Fixed that mutating a value returned by a memory cache store would unexpectedly change the cached value. Jonathan Hyman The default inflectors in zeitwerk mode support overrides: ```ruby","title":"Rails 6.0.1 (November 5, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#configinitializerszeitwerkrb","text":"Rails.autoloaders.each do |autoloader| autoloader.inflector.inflect( \"html_parser\" => \"HTMLParser\", \"ssl_error\" => \"SSLError\" ) end ``` That way, you can tweak how individual basenames are inflected without touching Active Support inflection rules, which are global. These inflectors fallback to String#camelize , so existing inflection rules are still taken into account for non-overridden basenames. Please, check the autoloading guide for zeitwerk mode if you prefer not to depend on String#camelize at all. Xavier Noria Improve Range#=== , Range#include? , and Range#cover? to work with beginless (startless) and endless range targets. Allen Hsu , Andrew Hodgkinson Don't use Process#clock_gettime(CLOCK_THREAD_CPUTIME_ID) on Solaris. Iain Beeston","title":"config/initializers/zeitwerk.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600-august-16-2019","text":"Let require_dependency in zeitwerk mode look the autoload paths up for better backwards compatibility. Xavier Noria Let require_dependency in zeitwerk mode support arguments that respond to to_path for better backwards compatibility. Xavier Noria Make ActiveSupport::Logger Fiber-safe. Fixes #36752. Use Fiber.current.__id__ in ActiveSupport::Logger#local_level= in order to make log level local to Ruby Fibers in addition to Threads. Example: logger = ActiveSupport::Logger.new(STDOUT) logger.level = 1 p \"Main is debug? #{logger.debug?}\" Fiber.new { logger.local_level = 0 p \"Thread is debug? #{logger.debug?}\" }.resume p \"Main is debug? #{logger.debug?}\" Before: Main is debug? false Thread is debug? true Main is debug? true After: Main is debug? false Thread is debug? true Main is debug? false Alexander Varnin Do not delegate missing marshal_dump and _dump methods via the delegate_missing_to extension. This avoids unintentionally adding instance variables when calling Marshal.dump(object) , should the delegation target of object be a method which would otherwise add them. Fixes #36522. Aaron Lipman","title":"Rails 6.0.0 (August 16, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600rc2-july-22-2019","text":"truncate would return the original string if it was too short to be truncated and a frozen string if it were long enough to be truncated. Now truncate will consistently return an unfrozen string regardless. This behavior is consistent with gsub and strip . Before: 'foobar'.truncate(5).frozen? # => true 'foobar'.truncate(6).frozen? # => false After: 'foobar'.truncate(5).frozen? # => false 'foobar'.truncate(6).frozen? # => false Jordan Thomas","title":"Rails 6.0.0.rc2 (July 22, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600rc1-april-24-2019","text":"Speed improvements to Hash.except and HashWithIndifferentAccess#except . These methods now unset the default / default_proc on the returned Hash, compatible with Ruby 3.0\u2019s native implementation. Timo Schilling Introduce ActiveSupport::ActionableError . Actionable errors let's you dispatch actions from Rails' error pages. This can help you save time if you have a clear action for the resolution of common development errors. The de-facto example are pending migrations. Every time pending migrations are found, a middleware raises an error. With actionable errors, you can run the migrations right from the error page. Other examples include Rails plugins that need to run a rake task to setup themselves. They can now raise actionable errors to run the setup straight from the error pages. Here is how to define an actionable error: ```ruby class PendingMigrationError < MigrationError #:nodoc: include ActiveSupport::ActionableError action \"Run pending migrations\" do ActiveRecord::Tasks::DatabaseTasks.migrate end end ``` To make an error actionable, include the ActiveSupport::ActionableError module and invoke the action class macro to define the action. An action needs a name and a procedure to execute. The name is shown as the name of a button on the error pages. Once clicked, it will invoke the given procedure. Vipul A M , Yao Jie , Genadi Samokovarov Preserve html_safe? status on ActiveSupport::SafeBuffer#* . Before: (\"<br />\".html_safe * 2).html_safe? #=> nil After: (\"<br />\".html_safe * 2).html_safe? #=> true Ryo Nakamura Calling test methods with with_info_handler method to allow minitest-hooks plugin to work. Mauri Mustonen The Zeitwerk compatibility interface for ActiveSupport::Dependencies no longer implements autoloaded_constants or autoloaded? (undocumented, anyway). Experience shows introspection does not have many use cases, and troubleshooting is done by logging. With this design trade-off we are able to use even less memory in all environments. Xavier Noria Depends on Zeitwerk 2, which stores less metadata if reloading is disabled and hence uses less memory when config.cache_classes is true , a standard setup in production. Xavier Noria In :zeitwerk mode, eager load directories in engines and applications only if present in their respective config.eager_load_paths . A common use case for this is adding lib to config.autoload_paths , but not to config.eager_load_paths . In that configuration, for example, files in the lib directory should not be eager loaded. Xavier Noria Fix bug in Range comparisons when comparing to an excluded-end Range Before: (1..10).cover?(1...11) # => false After: (1..10).cover?(1...11) # => true With the same change for Range#include? and Range#=== . Owen Stephens Use weak references in descendants tracker to allow anonymous subclasses to be garbage collected. Edgars Beigarts Update ActiveSupport::Notifications::Instrumenter#instrument to make passing a block optional. This will let users use ActiveSupport::Notifications messaging features outside of instrumentation. Ali Ibrahim Fix Time#advance to work with dates before 1001-03-07 Before: Time.utc(1001, 3, 6).advance(years: -1) # => 1000-03-05 00:00:00 UTC After Time.utc(1001, 3, 6).advance(years: -1) # => 1000-03-06 00:00:00 UTC Note that this doesn't affect DateTime#advance as that doesn't use a proleptic calendar. Andrew White In Zeitwerk mode, engines are now managed by the main autoloader. Engines may reference application constants, if the application is reloaded and we do not reload engines, they won't use the reloaded application code. Xavier Noria Add support for supplying locale to transliterate and parameterize . I18n.backend.store_translations(:de, i18n: { transliterate: { rule: { \"\u00fc\" => \"ue\" } } }) ActiveSupport::Inflector.transliterate(\"\u00fc\", locale: :de) # => \"ue\" \"F\u00fcnf autos\".parameterize(locale: :de) # => \"fuenf-autos\" ActiveSupport::Inflector.parameterize(\"F\u00fcnf autos\", locale: :de) # => \"fuenf-autos\" Kaan Ozkan , Sharang Dashputre Allow Array#excluding and Enumerable#excluding to deal with a passed array gracefully. [ 1, 2, 3, 4, 5 ].excluding([4, 5]) # => [ 1, 2, 3 ] DHH Renamed Array#without and Enumerable#without to Array#excluding and Enumerable#excluding , to create parity with Array#including and Enumerable#including . Retained the old names as aliases. DHH Added Array#including and Enumerable#including to conveniently enlarge a collection with more members using a method rather than an operator: [ 1, 2, 3 ].including(4, 5) # => [ 1, 2, 3, 4, 5 ] post.authors.including(Current.person) # => All the authors plus the current person! DHH","title":"Rails 6.0.0.rc1 (April 24, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600beta3-march-11-2019","text":"No changes.","title":"Rails 6.0.0.beta3 (March 11, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600beta2-february-25-2019","text":"New autoloading based on Zeitwerk . Xavier Noria Revise ActiveSupport::Notifications.unsubscribe to correctly handle Regex or other multiple-pattern subscribers. Zach Kemp Add before_reset callback to CurrentAttributes and define after_reset as an alias of resets for symmetry. Rosa Gutierrez Remove the Kernel#` override that suppresses ENOENT and accidentally returns nil on Unix systems. Akinori Musha Add ActiveSupport::HashWithIndifferentAccess#assoc . assoc can now be called with either a string or a symbol. Stefan Sch\u00fc\u00dfler Add Hash#deep_transform_values , and Hash#deep_transform_values! . Guillermo Iguaran","title":"Rails 6.0.0.beta2 (February 25, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.5/CHANGELOG/#rails-600beta1-january-18-2019","text":"Remove deprecated Module#reachable? method. Rafael Mendon\u00e7a Fran\u00e7a Remove deprecated #acronym_regex method from Inflections . Rafael Mendon\u00e7a Fran\u00e7a Fix String#safe_constantize throwing a LoadError for incorrectly cased constant references. Keenan Brock Preserve key order passed to ActiveSupport::CacheStore#fetch_multi . fetch_multi(*names) now returns its results in the same order as the *names requested, rather than returning cache hits followed by cache misses. Gannon McGibbon If the same block is included multiple times for a Concern, an exception is no longer raised. Mark J. Titorenko , Vlad Bokov Fix bug where #to_options for ActiveSupport::HashWithIndifferentAccess would not act as alias for #symbolize_keys . Nick Weiland Improve the logic that detects non-autoloaded constants. Jan Habermann , Xavier Noria Deprecate ActiveSupport::Multibyte::Unicode#pack_graphemes(array) and ActiveSupport::Multibyte::Unicode#unpack_graphemes(string) in favor of array.flatten.pack(\"U*\") and string.scan(/\\X/).map(&:codepoints) , respectively. Francesco Rodr\u00edguez Deprecate ActiveSupport::Multibyte::Chars.consumes? in favor of String#is_utf8? . Francesco Rodr\u00edguez Fix duration being rounded to a full second. time = DateTime.parse(\"2018-1-1\") time += 0.51.seconds Will now correctly add 0.51 second and not 1 full second. Edouard Chin Deprecate ActiveSupport::Multibyte::Unicode#normalize and ActiveSupport::Multibyte::Chars#normalize in favor of String#unicode_normalize Francesco Rodr\u00edguez Deprecate ActiveSupport::Multibyte::Unicode#downcase/upcase/swapcase in favor of String#downcase/upcase/swapcase . Francesco Rodr\u00edguez Add ActiveSupport::ParameterFilter . Yoshiyuki Kinjo Rename Module#parent , Module#parents , and Module#parent_name to module_parent , module_parents , and module_parent_name . Gannon McGibbon Deprecate the use of LoggerSilence in favor of ActiveSupport::LoggerSilence Edouard Chin Deprecate using negative limits in String#first and String#last . Gannon McGibbon , Eric Turner Fix bug where #without for ActiveSupport::HashWithIndifferentAccess would fail with symbol arguments Abraham Chan Treat #delete_prefix , #delete_suffix and #unicode_normalize results as non- html_safe . Ensure safety of arguments for #insert , #[]= and #replace calls on html_safe Strings. Janosch M\u00fcller Changed ActiveSupport::TaggedLogging.new to return a new logger instance instead of mutating the one received as parameter. Thierry Joyal Define unfreeze_time as an alias of travel_back in ActiveSupport::Testing::TimeHelpers . The alias is provided for symmetry with freeze_time . Ryan Davidson Add support for tracing constant autoloads. Just throw ActiveSupport::Dependencies.logger = Rails.logger ActiveSupport::Dependencies.verbose = true in an initializer. Xavier Noria Maintain html_safe? on html_safe strings when sliced. string = \"<div>test</div>\".html_safe string[-1..1].html_safe? # => true Elom Gomez , Yumin Wong Add Array#extract! . The method removes and returns the elements for which the block returns a true value. If no block is given, an Enumerator is returned instead. numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] odd_numbers = numbers.extract! { |number| number.odd? } # => [1, 3, 5, 7, 9] numbers # => [0, 2, 4, 6, 8] bogdanvlviv Support not to cache nil for ActiveSupport::Cache#fetch . cache.fetch('bar', skip_nil: true) { nil } cache.exist?('bar') # => false Martin Hong Add \"event object\" support to the notification system. Before this change, end users were forced to create hand made artisanal event objects on their own, like this: ActiveSupport::Notifications.subscribe('wait') do |*args| @event = ActiveSupport::Notifications::Event.new(*args) end ActiveSupport::Notifications.instrument('wait') do sleep 1 end @event.duration # => 1000.138 After this change, if the block passed to subscribe only takes one parameter, the framework will yield an event object to the block. Now end users are no longer required to make their own: ActiveSupport::Notifications.subscribe('wait') do |event| @event = event end ActiveSupport::Notifications.instrument('wait') do sleep 1 end p @event.allocations # => 7 p @event.cpu_time # => 0.256 p @event.idle_time # => 1003.2399 Now you can enjoy event objects without making them yourself. Neat! Aaron \"t.lo\" Patterson Add cpu_time, idle_time, and allocations to Event. Eileen M. Uchitelle , Aaron Patterson RedisCacheStore: support key expiry in increment/decrement. Pass :expires_in to #increment and #decrement to set a Redis EXPIRE on the key. If the key is already set to expire, RedisCacheStore won't extend its expiry. Rails.cache.increment(\"some_key\", 1, expires_in: 2.minutes) Jason Lee Allow Range#=== and Range#cover? on Range. Range#cover? can now accept a range argument like Range#include? and Range#=== . Range#=== works correctly on Ruby 2.6. Range#include? is moved into a new file, with these two methods. Requiring active_support/core_ext/range/include_range is now deprecated. Use require \"active_support/core_ext/range/compare_range\" instead. utilum Add index_with to Enumerable. Allows creating a hash from an enumerable with the value from a passed block or a default argument. %i( title body ).index_with { |attr| post.public_send(attr) } # => { title: \"hey\", body: \"what's up?\" } %i( title body ).index_with(nil) # => { title: nil, body: nil } Closely linked with index_by , which creates a hash where the keys are extracted from a block. Kasper Timm Hansen Fix bug where ActiveSupport::TimeZone.all would fail when tzinfo data for any timezone defined in ActiveSupport::TimeZone::MAPPING is missing. Dominik Sander Redis cache store: delete_matched no longer blocks the Redis server. (Switches from evaled Lua to a batched SCAN + DEL loop.) Gleb Mazovetskiy Fix bug where ActiveSupport::Cache will massively inflate the storage size when compression is enabled (which is true by default). This patch does not attempt to repair existing data: please manually flush the cache to clear out the problematic entries. Godfrey Chan Fix bug where URI.unescape would fail with mixed Unicode/escaped character input: URI.unescape(\"\\xe3\\x83\\x90\") # => \"\u30d0\" URI.unescape(\"%E3%83%90\") # => \"\u30d0\" URI.unescape(\"\\xe3\\x83\\x90%E3%83%90\") # => Encoding::CompatibilityError Ashe Connor , Aaron Patterson Add before? and after? methods to Date , DateTime , Time , and TimeWithZone . Nick Holden ActiveSupport::Inflector#ordinal and ActiveSupport::Inflector#ordinalize now support translations through I18n. # locale/fr.rb { fr: { number: { nth: { ordinals: lambda do |_key, number:, **_options| if number.to_i.abs == 1 'er' else 'e' end end, ordinalized: lambda do |_key, number:, **_options| \"#{number}#{ActiveSupport::Inflector.ordinal(number)}\" end } } } } Christian Blais Add :private option to ActiveSupport's Module#delegate in order to delegate methods as private: class User < ActiveRecord::Base has_one :profile delegate :date_of_birth, to: :profile, private: true def age Date.today.year - date_of_birth.year end end # User.new.age # => 29 # User.new.date_of_birth # => NoMethodError: private method `date_of_birth' called for #<User:0x00000008221340> Tomas Valent String#truncate_bytes to truncate a string to a maximum bytesize without breaking multibyte characters or grapheme clusters like \ud83d\udc69\u200d\ud83d\udc69\u200d\ud83d\udc66\u200d\ud83d\udc66. Jeremy Daer String#strip_heredoc preserves frozenness. \"foo\".freeze.strip_heredoc.frozen? # => true Fixes that frozen string literals would inadvertently become unfrozen: # frozen_string_literal: true foo = <<-MSG.strip_heredoc la la la MSG foo.frozen? # => false !?? Jeremy Daer Rails 6 requires Ruby 2.5.0 or newer. Jeremy Daer , Kasper Timm Hansen Adds parallel testing to Rails. Parallelize your test suite with forked processes or threads. Eileen M. Uchitelle , Aaron Patterson Please check 5-2-stable for previous changes.","title":"Rails 6.0.0.beta1 (January 18, 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/","text":"Addressable Homepage github.com/sporkmonger/addressable Author Bob Aman Copyright Copyright \u00a9 2006-2015 Bob Aman License Apache 2.0 Description Addressable is a replacement for the URI implementation that is part of Ruby's standard library. It more closely conforms to RFC 3986, RFC 3987, and RFC 6570 (level 4), providing support for IRIs and URI templates. Reference {Addressable::URI} {Addressable::Template} Example usage require \"addressable/uri\" uri = Addressable::URI.parse(\"http://example.com/path/to/resource/\") uri.scheme #=> \"http\" uri.host #=> \"example.com\" uri.path #=> \"/path/to/resource/\" uri = Addressable::URI.parse(\"http://www.\u8a79\u59c6\u65af.com/\") uri.normalize #=> #<Addressable::URI:0xc9a4c8 URI:http://www.xn--8ws00zhy3a.com/> URI Templates For more details, see RFC 6570 . require \"addressable/template\" template = Addressable::Template.new(\"http://example.com/{?query*}/\") template.expand({ \"query\" => { 'foo' => 'bar', 'color' => 'red' } }) #=> #<Addressable::URI:0xc9d95c URI:http://example.com/?foo=bar&color=red> template = Addressable::Template.new(\"http://example.com/{?one,two,three}\") template.partial_expand({\"one\" => \"1\", \"three\" => 3}).pattern #=> \"http://example.com/?one=1{&two}&three=3\" template = Addressable::Template.new( \"http://{host}{/segments*}/{?one,two,bogus}{#fragment}\" ) uri = Addressable::URI.parse( \"http://example.com/a/b/c/?one=1&two=2#foo\" ) template.extract(uri) #=> # { # \"host\" => \"example.com\", # \"segments\" => [\"a\", \"b\", \"c\"], # \"one\" => \"1\", # \"two\" => \"2\", # \"fragment\" => \"foo\" # } Install $ sudo gem install addressable You may optionally turn on native IDN support by installing libidn and the idn gem: $ sudo apt-get install idn # Debian/Ubuntu $ brew install libidn # OS X $ gem install idn-ruby","title":"Addressable"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#addressable","text":"Homepage github.com/sporkmonger/addressable Author Bob Aman Copyright Copyright \u00a9 2006-2015 Bob Aman License Apache 2.0","title":"Addressable"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#description","text":"Addressable is a replacement for the URI implementation that is part of Ruby's standard library. It more closely conforms to RFC 3986, RFC 3987, and RFC 6570 (level 4), providing support for IRIs and URI templates.","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#reference","text":"{Addressable::URI} {Addressable::Template}","title":"Reference"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#example-usage","text":"require \"addressable/uri\" uri = Addressable::URI.parse(\"http://example.com/path/to/resource/\") uri.scheme #=> \"http\" uri.host #=> \"example.com\" uri.path #=> \"/path/to/resource/\" uri = Addressable::URI.parse(\"http://www.\u8a79\u59c6\u65af.com/\") uri.normalize #=> #<Addressable::URI:0xc9a4c8 URI:http://www.xn--8ws00zhy3a.com/>","title":"Example usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#uri-templates","text":"For more details, see RFC 6570 . require \"addressable/template\" template = Addressable::Template.new(\"http://example.com/{?query*}/\") template.expand({ \"query\" => { 'foo' => 'bar', 'color' => 'red' } }) #=> #<Addressable::URI:0xc9d95c URI:http://example.com/?foo=bar&color=red> template = Addressable::Template.new(\"http://example.com/{?one,two,three}\") template.partial_expand({\"one\" => \"1\", \"three\" => 3}).pattern #=> \"http://example.com/?one=1{&two}&three=3\" template = Addressable::Template.new( \"http://{host}{/segments*}/{?one,two,bogus}{#fragment}\" ) uri = Addressable::URI.parse( \"http://example.com/a/b/c/?one=1&two=2#foo\" ) template.extract(uri) #=> # { # \"host\" => \"example.com\", # \"segments\" => [\"a\", \"b\", \"c\"], # \"one\" => \"1\", # \"two\" => \"2\", # \"fragment\" => \"foo\" # }","title":"URI Templates"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/#install","text":"$ sudo gem install addressable You may optionally turn on native IDN support by installing libidn and the idn gem: $ sudo apt-get install idn # Debian/Ubuntu $ brew install libidn # OS X $ gem install idn-ruby","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/","text":"Addressable 2.4.0 support for 1.8.x dropped double quotes in a host now raises an error newlines in host will no longer get unescaped during normalization stricter handling of bogus scheme values stricter handling of encoded port values calling require 'addressable' will now load both the URI and Template files assigning to the hostname component with an IPAddr object is now supported assigning to the origin component is now supported fixed minor bug where an exception would be thrown for a missing ACE suffix better partial expansion of URI templates Addressable 2.3.8 fix warnings update dependency gems support for 1.8.x officially deprecated Addressable 2.3.7 fix scenario in which invalid URIs don't get an exception until inspected handle hostnames with two adjacent periods correctly upgrade of RSpec Addressable 2.3.6 normalization drops empty query string better handling in template extract for missing values template modifier for '?' now treated as optional fixed issue where character class parameters were modified templates can now be tested for equality added :sorted option to normalization of query strings fixed issue with normalization of hosts given in 'example.com.' form Addressable 2.3.5 added Addressable::URI#empty? method Addressable::URI#hostname methods now strip square brackets from IPv6 hosts compatibility with Net::HTTP in Ruby 2.0.0 Addressable::URI#route_from should always give relative URIs Addressable 2.3.4 fixed issue with encoding altering its inputs query string normalization now leaves ';' characters alone FakeFS is detected before attempting to load unicode tables additional testing to ensure frozen objects don't cause problems Addressable 2.3.3 fixed issue with converting common primitives during template expansion fixed port encoding issue removed a few warnings normalize should now ignore %2B in query strings the IDNA logic should now be handled by libidn in Ruby 1.9 no template match should now result in nil instead of an empty MatchData added license information to gemspec Addressable 2.3.2 added Addressable::URI#default_port method fixed issue with Marshalling Unicode data on Windows improved heuristic parsing to better handle IPv4 addresses Addressable 2.3.1 fixed missing unicode data file Addressable 2.3.0 updated Addressable::Template to use RFC 6570, level 4 fixed compatibility problems with some versions of Ruby moved unicode tables into a data file for performance reasons removing support for multiple query value notations Addressable 2.2.8 fixed issues with dot segment removal code form encoding can now handle multiple values per key updated development environment Addressable 2.2.7 fixed issues related to Addressable::URI#query_values= the Addressable::URI.parse method is now polymorphic Addressable 2.2.6 changed the way ambiguous paths are handled fixed bug with frozen URIs https supported in heuristic parsing Addressable 2.2.5 'parsing' a pre-parsed URI object is now a dup operation introduced conditional support for libidn fixed normalization issue on ampersands in query strings added additional tests around handling of query strings Addressable 2.2.4 added origin support from draft-ietf-websec-origin-00 resolved issue with attempting to navigate below root fixed bug with string splitting in query strings Addressable 2.2.3 added :flat_array notation for query strings Addressable 2.2.2 fixed issue with percent escaping of '+' character in query strings Addressable 2.2.1 added support for application/x-www-form-urlencoded. Addressable 2.2.0 added site methods improved documentation Addressable 2.1.2 added HTTP request URI methods better handling of Windows file paths validation_deferred boolean replaced with defer_validation block normalization of percent-encoded paths should now be correct fixed issue with constructing URIs with relative paths fixed warnings Addressable 2.1.1 more type checking changes fixed issue with unicode normalization added method to find template defaults symbolic keys are now allowed in template mappings numeric values and symbolic values are now allowed in template mappings Addressable 2.1.0 refactored URI template support out into its own class removed extract method due to being useless and unreliable removed Addressable::URI.expand_template removed Addressable::URI#extract_mapping added partial template expansion fixed minor bugs in the parse and heuristic_parse methods fixed incompatibility with Ruby 1.9.1 fixed bottleneck in Addressable::URI#hash and Addressable::URI#to_s fixed unicode normalization exception updated query_values methods to better handle subscript notation worked around issue with freezing URIs improved specs Addressable 2.0.2 fixed issue with URI template expansion fixed issue with percent escaping characters 0-15 Addressable 2.0.1 fixed issue with query string assignment fixed issue with improperly encoded components Addressable 2.0.0 the initialize method now takes an options hash as its only parameter added query_values method to URI class completely replaced IDNA implementation with pure Ruby renamed Addressable::ADDRESSABLE_VERSION to Addressable::VERSION completely reworked the Rakefile changed the behavior of the port method significantly Addressable::URI.encode_segment, Addressable::URI.unencode_segment renamed documentation is now in YARD format more rigorous type checking to_str method implemented, implicit conversion to Strings now allowed Addressable::URI#omit method added, Addressable::URI#merge method replaced updated URI Template code to match v 03 of the draft spec added a bunch of new specifications Addressable 1.0.4 switched to using RSpec's pending system for specs that rely on IDN fixed issue with creating URIs with paths that are not prefixed with '/' Addressable 1.0.3 implemented a hash method Addressable 1.0.2 fixed minor bug with the extract_mapping method Addressable 1.0.1 fixed minor bug with the extract_mapping method Addressable 1.0.0 heuristic parse method added parsing is slightly more strict replaced to_h with to_hash fixed routing methods improved specifications improved heckle rake task no surviving heckle mutations Addressable 0.1.2 improved normalization fixed bug in joining algorithm updated specifications Addressable 0.1.1 updated documentation added URI Template variable extraction Addressable 0.1.0 initial release implementation based on RFC 3986, 3987 support for IRIs via libidn support for the URI Template draft spec","title":"Addressable 2.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-240","text":"support for 1.8.x dropped double quotes in a host now raises an error newlines in host will no longer get unescaped during normalization stricter handling of bogus scheme values stricter handling of encoded port values calling require 'addressable' will now load both the URI and Template files assigning to the hostname component with an IPAddr object is now supported assigning to the origin component is now supported fixed minor bug where an exception would be thrown for a missing ACE suffix better partial expansion of URI templates","title":"Addressable 2.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-238","text":"fix warnings update dependency gems support for 1.8.x officially deprecated","title":"Addressable 2.3.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-237","text":"fix scenario in which invalid URIs don't get an exception until inspected handle hostnames with two adjacent periods correctly upgrade of RSpec","title":"Addressable 2.3.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-236","text":"normalization drops empty query string better handling in template extract for missing values template modifier for '?' now treated as optional fixed issue where character class parameters were modified templates can now be tested for equality added :sorted option to normalization of query strings fixed issue with normalization of hosts given in 'example.com.' form","title":"Addressable 2.3.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-235","text":"added Addressable::URI#empty? method Addressable::URI#hostname methods now strip square brackets from IPv6 hosts compatibility with Net::HTTP in Ruby 2.0.0 Addressable::URI#route_from should always give relative URIs","title":"Addressable 2.3.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-234","text":"fixed issue with encoding altering its inputs query string normalization now leaves ';' characters alone FakeFS is detected before attempting to load unicode tables additional testing to ensure frozen objects don't cause problems","title":"Addressable 2.3.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-233","text":"fixed issue with converting common primitives during template expansion fixed port encoding issue removed a few warnings normalize should now ignore %2B in query strings the IDNA logic should now be handled by libidn in Ruby 1.9 no template match should now result in nil instead of an empty MatchData added license information to gemspec","title":"Addressable 2.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-232","text":"added Addressable::URI#default_port method fixed issue with Marshalling Unicode data on Windows improved heuristic parsing to better handle IPv4 addresses","title":"Addressable 2.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-231","text":"fixed missing unicode data file","title":"Addressable 2.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-230","text":"updated Addressable::Template to use RFC 6570, level 4 fixed compatibility problems with some versions of Ruby moved unicode tables into a data file for performance reasons removing support for multiple query value notations","title":"Addressable 2.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-228","text":"fixed issues with dot segment removal code form encoding can now handle multiple values per key updated development environment","title":"Addressable 2.2.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-227","text":"fixed issues related to Addressable::URI#query_values= the Addressable::URI.parse method is now polymorphic","title":"Addressable 2.2.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-226","text":"changed the way ambiguous paths are handled fixed bug with frozen URIs https supported in heuristic parsing","title":"Addressable 2.2.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-225","text":"'parsing' a pre-parsed URI object is now a dup operation introduced conditional support for libidn fixed normalization issue on ampersands in query strings added additional tests around handling of query strings","title":"Addressable 2.2.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-224","text":"added origin support from draft-ietf-websec-origin-00 resolved issue with attempting to navigate below root fixed bug with string splitting in query strings","title":"Addressable 2.2.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-223","text":"added :flat_array notation for query strings","title":"Addressable 2.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-222","text":"fixed issue with percent escaping of '+' character in query strings","title":"Addressable 2.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-221","text":"added support for application/x-www-form-urlencoded.","title":"Addressable 2.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-220","text":"added site methods improved documentation","title":"Addressable 2.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-212","text":"added HTTP request URI methods better handling of Windows file paths validation_deferred boolean replaced with defer_validation block normalization of percent-encoded paths should now be correct fixed issue with constructing URIs with relative paths fixed warnings","title":"Addressable 2.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-211","text":"more type checking changes fixed issue with unicode normalization added method to find template defaults symbolic keys are now allowed in template mappings numeric values and symbolic values are now allowed in template mappings","title":"Addressable 2.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-210","text":"refactored URI template support out into its own class removed extract method due to being useless and unreliable removed Addressable::URI.expand_template removed Addressable::URI#extract_mapping added partial template expansion fixed minor bugs in the parse and heuristic_parse methods fixed incompatibility with Ruby 1.9.1 fixed bottleneck in Addressable::URI#hash and Addressable::URI#to_s fixed unicode normalization exception updated query_values methods to better handle subscript notation worked around issue with freezing URIs improved specs","title":"Addressable 2.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-202","text":"fixed issue with URI template expansion fixed issue with percent escaping characters 0-15","title":"Addressable 2.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-201","text":"fixed issue with query string assignment fixed issue with improperly encoded components","title":"Addressable 2.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-200","text":"the initialize method now takes an options hash as its only parameter added query_values method to URI class completely replaced IDNA implementation with pure Ruby renamed Addressable::ADDRESSABLE_VERSION to Addressable::VERSION completely reworked the Rakefile changed the behavior of the port method significantly Addressable::URI.encode_segment, Addressable::URI.unencode_segment renamed documentation is now in YARD format more rigorous type checking to_str method implemented, implicit conversion to Strings now allowed Addressable::URI#omit method added, Addressable::URI#merge method replaced updated URI Template code to match v 03 of the draft spec added a bunch of new specifications","title":"Addressable 2.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-104","text":"switched to using RSpec's pending system for specs that rely on IDN fixed issue with creating URIs with paths that are not prefixed with '/'","title":"Addressable 1.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-103","text":"implemented a hash method","title":"Addressable 1.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-102","text":"fixed minor bug with the extract_mapping method","title":"Addressable 1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-101","text":"fixed minor bug with the extract_mapping method","title":"Addressable 1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-100","text":"heuristic parse method added parsing is slightly more strict replaced to_h with to_hash fixed routing methods improved specifications improved heckle rake task no surviving heckle mutations","title":"Addressable 1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-012","text":"improved normalization fixed bug in joining algorithm updated specifications","title":"Addressable 0.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-011","text":"updated documentation added URI Template variable extraction","title":"Addressable 0.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.4.0/CHANGELOG/#addressable-010","text":"initial release implementation based on RFC 3986, 3987 support for IRIs via libidn support for the URI Template draft spec","title":"Addressable 0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/","text":"Addressable Homepage github.com/sporkmonger/addressable Author Bob Aman Copyright Copyright \u00a9 Bob Aman License Apache 2.0 Description Addressable is an alternative implementation to the URI implementation that is part of Ruby's standard library. It is flexible, offers heuristic parsing, and additionally provides extensive support for IRIs and URI templates. Addressable closely conforms to RFC 3986, RFC 3987, and RFC 6570 (level 4). Reference {Addressable::URI} {Addressable::Template} Example usage require \"addressable/uri\" uri = Addressable::URI.parse(\"http://example.com/path/to/resource/\") uri.scheme #=> \"http\" uri.host #=> \"example.com\" uri.path #=> \"/path/to/resource/\" uri = Addressable::URI.parse(\"http://www.\u8a79\u59c6\u65af.com/\") uri.normalize #=> #<Addressable::URI:0xc9a4c8 URI:http://www.xn--8ws00zhy3a.com/> URI Templates For more details, see RFC 6570 . require \"addressable/template\" template = Addressable::Template.new(\"http://example.com/{?query*}\") template.expand({ \"query\" => { 'foo' => 'bar', 'color' => 'red' } }) #=> #<Addressable::URI:0xc9d95c URI:http://example.com/?foo=bar&color=red> template = Addressable::Template.new(\"http://example.com/{?one,two,three}\") template.partial_expand({\"one\" => \"1\", \"three\" => 3}).pattern #=> \"http://example.com/?one=1{&two}&three=3\" template = Addressable::Template.new( \"http://{host}{/segments*}/{?one,two,bogus}{#fragment}\" ) uri = Addressable::URI.parse( \"http://example.com/a/b/c/?one=1&two=2#foo\" ) template.extract(uri) #=> # { # \"host\" => \"example.com\", # \"segments\" => [\"a\", \"b\", \"c\"], # \"one\" => \"1\", # \"two\" => \"2\", # \"fragment\" => \"foo\" # } Install $ gem install addressable You may optionally turn on native IDN support by installing libidn and the idn gem: $ sudo apt-get install libidn11-dev # Debian/Ubuntu $ brew install libidn # OS X $ gem install idn-ruby Semantic Versioning This project uses Semantic Versioning . You can (and should) specify your dependency using a pessimistic version constraint covering the major and minor values: spec.add_dependency 'addressable', '~> 2.7' If you need a specific bug fix, you can also specify minimum tiny versions without preventing updates to the latest minor release: spec.add_dependency 'addressable', '~> 2.3', '>= 2.3.7'","title":"Addressable"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#addressable","text":"Homepage github.com/sporkmonger/addressable Author Bob Aman Copyright Copyright \u00a9 Bob Aman License Apache 2.0","title":"Addressable"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#description","text":"Addressable is an alternative implementation to the URI implementation that is part of Ruby's standard library. It is flexible, offers heuristic parsing, and additionally provides extensive support for IRIs and URI templates. Addressable closely conforms to RFC 3986, RFC 3987, and RFC 6570 (level 4).","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#reference","text":"{Addressable::URI} {Addressable::Template}","title":"Reference"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#example-usage","text":"require \"addressable/uri\" uri = Addressable::URI.parse(\"http://example.com/path/to/resource/\") uri.scheme #=> \"http\" uri.host #=> \"example.com\" uri.path #=> \"/path/to/resource/\" uri = Addressable::URI.parse(\"http://www.\u8a79\u59c6\u65af.com/\") uri.normalize #=> #<Addressable::URI:0xc9a4c8 URI:http://www.xn--8ws00zhy3a.com/>","title":"Example usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#uri-templates","text":"For more details, see RFC 6570 . require \"addressable/template\" template = Addressable::Template.new(\"http://example.com/{?query*}\") template.expand({ \"query\" => { 'foo' => 'bar', 'color' => 'red' } }) #=> #<Addressable::URI:0xc9d95c URI:http://example.com/?foo=bar&color=red> template = Addressable::Template.new(\"http://example.com/{?one,two,three}\") template.partial_expand({\"one\" => \"1\", \"three\" => 3}).pattern #=> \"http://example.com/?one=1{&two}&three=3\" template = Addressable::Template.new( \"http://{host}{/segments*}/{?one,two,bogus}{#fragment}\" ) uri = Addressable::URI.parse( \"http://example.com/a/b/c/?one=1&two=2#foo\" ) template.extract(uri) #=> # { # \"host\" => \"example.com\", # \"segments\" => [\"a\", \"b\", \"c\"], # \"one\" => \"1\", # \"two\" => \"2\", # \"fragment\" => \"foo\" # }","title":"URI Templates"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#install","text":"$ gem install addressable You may optionally turn on native IDN support by installing libidn and the idn gem: $ sudo apt-get install libidn11-dev # Debian/Ubuntu $ brew install libidn # OS X $ gem install idn-ruby","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/#semantic-versioning","text":"This project uses Semantic Versioning . You can (and should) specify your dependency using a pessimistic version constraint covering the major and minor values: spec.add_dependency 'addressable', '~> 2.7' If you need a specific bug fix, you can also specify minimum tiny versions without preventing updates to the latest minor release: spec.add_dependency 'addressable', '~> 2.3', '>= 2.3.7'","title":"Semantic Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/","text":"Addressable 2.8.0 fixes ReDoS vulnerability in Addressable::Template#match no longer replaces + with spaces in queries for non-http(s) schemes fixed encoding ipv6 literals the :compacted flag for normalized_query now dedupes parameters fix broken escape_component alias dropping support for Ruby 2.0 and 2.1 adding Ruby 3.0 compatibility for development tasks drop support for rack-mount and remove Addressable::Template#generate performance improvements switch CI/CD to GitHub Actions Addressable 2.7.0 added :compacted flag to normalized_query heuristic_parse handles mailto: more intuitively dropped explicit support for JRuby 9.0.5.0 compatibility w/ public_suffix 4.x performance improvements Addressable 2.6.0 added tld= method to allow assignment to the public suffix most heuristic_parse patterns are now case-insensitive heuristic_parse handles more file:// URI variations fixes bug in heuristic_parse when uri starts with digit fixes bug in request_uri= with query strings fixes template issues with nil and ? operator frozen_string_literal pragmas added minor performance improvements in regexps fixes to eliminate warnings Addressable 2.5.2 better support for frozen string literals fixed bug w/ uppercase characters in scheme IDNA errors w/ emoji URLs compatibility w/ public_suffix 3.x Addressable 2.5.1 allow unicode normalization to be disabled for URI Template expansion removed duplicate test Addressable 2.5.0 dropping support for Ruby 1.9 adding support for Ruby 2.4 preview add support for public suffixes and tld; first runtime dependency hostname escaping should match RFC; underscores in hostnames no longer escaped paths beginning with // and missing an authority are now considered invalid validation now also takes place after setting a path handle backslashes in authority more like a browser for heuristic_parse unescaped backslashes in host now raise an InvalidURIError merge! , join! , omit! and normalize! don't disable deferred validation heuristic_parse now trims whitespace before parsing host parts longer than 63 bytes will be ignored and not passed to libidn normalized values always encoded as UTF-8 Addressable 2.4.0 support for 1.8.x dropped double quotes in a host now raises an error newlines in host will no longer get unescaped during normalization stricter handling of bogus scheme values stricter handling of encoded port values calling require 'addressable' will now load both the URI and Template files assigning to the hostname component with an IPAddr object is now supported assigning to the origin component is now supported fixed minor bug where an exception would be thrown for a missing ACE suffix better partial expansion of URI templates Addressable 2.3.8 fix warnings update dependency gems support for 1.8.x officially deprecated Addressable 2.3.7 fix scenario in which invalid URIs don't get an exception until inspected handle hostnames with two adjacent periods correctly upgrade of RSpec Addressable 2.3.6 normalization drops empty query string better handling in template extract for missing values template modifier for '?' now treated as optional fixed issue where character class parameters were modified templates can now be tested for equality added :sorted option to normalization of query strings fixed issue with normalization of hosts given in 'example.com.' form Addressable 2.3.5 added Addressable::URI#empty? method Addressable::URI#hostname methods now strip square brackets from IPv6 hosts compatibility with Net::HTTP in Ruby 2.0.0 Addressable::URI#route_from should always give relative URIs Addressable 2.3.4 fixed issue with encoding altering its inputs query string normalization now leaves ';' characters alone FakeFS is detected before attempting to load unicode tables additional testing to ensure frozen objects don't cause problems Addressable 2.3.3 fixed issue with converting common primitives during template expansion fixed port encoding issue removed a few warnings normalize should now ignore %2B in query strings the IDNA logic should now be handled by libidn in Ruby 1.9 no template match should now result in nil instead of an empty MatchData added license information to gemspec Addressable 2.3.2 added Addressable::URI#default_port method fixed issue with Marshalling Unicode data on Windows improved heuristic parsing to better handle IPv4 addresses Addressable 2.3.1 fixed missing unicode data file Addressable 2.3.0 updated Addressable::Template to use RFC 6570, level 4 fixed compatibility problems with some versions of Ruby moved unicode tables into a data file for performance reasons removing support for multiple query value notations Addressable 2.2.8 fixed issues with dot segment removal code form encoding can now handle multiple values per key updated development environment Addressable 2.2.7 fixed issues related to Addressable::URI#query_values= the Addressable::URI.parse method is now polymorphic Addressable 2.2.6 changed the way ambiguous paths are handled fixed bug with frozen URIs https supported in heuristic parsing Addressable 2.2.5 'parsing' a pre-parsed URI object is now a dup operation introduced conditional support for libidn fixed normalization issue on ampersands in query strings added additional tests around handling of query strings Addressable 2.2.4 added origin support from draft-ietf-websec-origin-00 resolved issue with attempting to navigate below root fixed bug with string splitting in query strings Addressable 2.2.3 added :flat_array notation for query strings Addressable 2.2.2 fixed issue with percent escaping of '+' character in query strings Addressable 2.2.1 added support for application/x-www-form-urlencoded. Addressable 2.2.0 added site methods improved documentation Addressable 2.1.2 added HTTP request URI methods better handling of Windows file paths validation_deferred boolean replaced with defer_validation block normalization of percent-encoded paths should now be correct fixed issue with constructing URIs with relative paths fixed warnings Addressable 2.1.1 more type checking changes fixed issue with unicode normalization added method to find template defaults symbolic keys are now allowed in template mappings numeric values and symbolic values are now allowed in template mappings Addressable 2.1.0 refactored URI template support out into its own class removed extract method due to being useless and unreliable removed Addressable::URI.expand_template removed Addressable::URI#extract_mapping added partial template expansion fixed minor bugs in the parse and heuristic_parse methods fixed incompatibility with Ruby 1.9.1 fixed bottleneck in Addressable::URI#hash and Addressable::URI#to_s fixed unicode normalization exception updated query_values methods to better handle subscript notation worked around issue with freezing URIs improved specs Addressable 2.0.2 fixed issue with URI template expansion fixed issue with percent escaping characters 0-15 Addressable 2.0.1 fixed issue with query string assignment fixed issue with improperly encoded components Addressable 2.0.0 the initialize method now takes an options hash as its only parameter added query_values method to URI class completely replaced IDNA implementation with pure Ruby renamed Addressable::ADDRESSABLE_VERSION to Addressable::VERSION completely reworked the Rakefile changed the behavior of the port method significantly Addressable::URI.encode_segment, Addressable::URI.unencode_segment renamed documentation is now in YARD format more rigorous type checking to_str method implemented, implicit conversion to Strings now allowed Addressable::URI#omit method added, Addressable::URI#merge method replaced updated URI Template code to match v 03 of the draft spec added a bunch of new specifications Addressable 1.0.4 switched to using RSpec's pending system for specs that rely on IDN fixed issue with creating URIs with paths that are not prefixed with '/' Addressable 1.0.3 implemented a hash method Addressable 1.0.2 fixed minor bug with the extract_mapping method Addressable 1.0.1 fixed minor bug with the extract_mapping method Addressable 1.0.0 heuristic parse method added parsing is slightly more strict replaced to_h with to_hash fixed routing methods improved specifications improved heckle rake task no surviving heckle mutations Addressable 0.1.2 improved normalization fixed bug in joining algorithm updated specifications Addressable 0.1.1 updated documentation added URI Template variable extraction Addressable 0.1.0 initial release implementation based on RFC 3986, 3987 support for IRIs via libidn support for the URI Template draft spec","title":"Addressable 2.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-280","text":"fixes ReDoS vulnerability in Addressable::Template#match no longer replaces + with spaces in queries for non-http(s) schemes fixed encoding ipv6 literals the :compacted flag for normalized_query now dedupes parameters fix broken escape_component alias dropping support for Ruby 2.0 and 2.1 adding Ruby 3.0 compatibility for development tasks drop support for rack-mount and remove Addressable::Template#generate performance improvements switch CI/CD to GitHub Actions","title":"Addressable 2.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-270","text":"added :compacted flag to normalized_query heuristic_parse handles mailto: more intuitively dropped explicit support for JRuby 9.0.5.0 compatibility w/ public_suffix 4.x performance improvements","title":"Addressable 2.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-260","text":"added tld= method to allow assignment to the public suffix most heuristic_parse patterns are now case-insensitive heuristic_parse handles more file:// URI variations fixes bug in heuristic_parse when uri starts with digit fixes bug in request_uri= with query strings fixes template issues with nil and ? operator frozen_string_literal pragmas added minor performance improvements in regexps fixes to eliminate warnings","title":"Addressable 2.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-252","text":"better support for frozen string literals fixed bug w/ uppercase characters in scheme IDNA errors w/ emoji URLs compatibility w/ public_suffix 3.x","title":"Addressable 2.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-251","text":"allow unicode normalization to be disabled for URI Template expansion removed duplicate test","title":"Addressable 2.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-250","text":"dropping support for Ruby 1.9 adding support for Ruby 2.4 preview add support for public suffixes and tld; first runtime dependency hostname escaping should match RFC; underscores in hostnames no longer escaped paths beginning with // and missing an authority are now considered invalid validation now also takes place after setting a path handle backslashes in authority more like a browser for heuristic_parse unescaped backslashes in host now raise an InvalidURIError merge! , join! , omit! and normalize! don't disable deferred validation heuristic_parse now trims whitespace before parsing host parts longer than 63 bytes will be ignored and not passed to libidn normalized values always encoded as UTF-8","title":"Addressable 2.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-240","text":"support for 1.8.x dropped double quotes in a host now raises an error newlines in host will no longer get unescaped during normalization stricter handling of bogus scheme values stricter handling of encoded port values calling require 'addressable' will now load both the URI and Template files assigning to the hostname component with an IPAddr object is now supported assigning to the origin component is now supported fixed minor bug where an exception would be thrown for a missing ACE suffix better partial expansion of URI templates","title":"Addressable 2.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-238","text":"fix warnings update dependency gems support for 1.8.x officially deprecated","title":"Addressable 2.3.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-237","text":"fix scenario in which invalid URIs don't get an exception until inspected handle hostnames with two adjacent periods correctly upgrade of RSpec","title":"Addressable 2.3.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-236","text":"normalization drops empty query string better handling in template extract for missing values template modifier for '?' now treated as optional fixed issue where character class parameters were modified templates can now be tested for equality added :sorted option to normalization of query strings fixed issue with normalization of hosts given in 'example.com.' form","title":"Addressable 2.3.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-235","text":"added Addressable::URI#empty? method Addressable::URI#hostname methods now strip square brackets from IPv6 hosts compatibility with Net::HTTP in Ruby 2.0.0 Addressable::URI#route_from should always give relative URIs","title":"Addressable 2.3.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-234","text":"fixed issue with encoding altering its inputs query string normalization now leaves ';' characters alone FakeFS is detected before attempting to load unicode tables additional testing to ensure frozen objects don't cause problems","title":"Addressable 2.3.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-233","text":"fixed issue with converting common primitives during template expansion fixed port encoding issue removed a few warnings normalize should now ignore %2B in query strings the IDNA logic should now be handled by libidn in Ruby 1.9 no template match should now result in nil instead of an empty MatchData added license information to gemspec","title":"Addressable 2.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-232","text":"added Addressable::URI#default_port method fixed issue with Marshalling Unicode data on Windows improved heuristic parsing to better handle IPv4 addresses","title":"Addressable 2.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-231","text":"fixed missing unicode data file","title":"Addressable 2.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-230","text":"updated Addressable::Template to use RFC 6570, level 4 fixed compatibility problems with some versions of Ruby moved unicode tables into a data file for performance reasons removing support for multiple query value notations","title":"Addressable 2.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-228","text":"fixed issues with dot segment removal code form encoding can now handle multiple values per key updated development environment","title":"Addressable 2.2.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-227","text":"fixed issues related to Addressable::URI#query_values= the Addressable::URI.parse method is now polymorphic","title":"Addressable 2.2.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-226","text":"changed the way ambiguous paths are handled fixed bug with frozen URIs https supported in heuristic parsing","title":"Addressable 2.2.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-225","text":"'parsing' a pre-parsed URI object is now a dup operation introduced conditional support for libidn fixed normalization issue on ampersands in query strings added additional tests around handling of query strings","title":"Addressable 2.2.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-224","text":"added origin support from draft-ietf-websec-origin-00 resolved issue with attempting to navigate below root fixed bug with string splitting in query strings","title":"Addressable 2.2.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-223","text":"added :flat_array notation for query strings","title":"Addressable 2.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-222","text":"fixed issue with percent escaping of '+' character in query strings","title":"Addressable 2.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-221","text":"added support for application/x-www-form-urlencoded.","title":"Addressable 2.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-220","text":"added site methods improved documentation","title":"Addressable 2.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-212","text":"added HTTP request URI methods better handling of Windows file paths validation_deferred boolean replaced with defer_validation block normalization of percent-encoded paths should now be correct fixed issue with constructing URIs with relative paths fixed warnings","title":"Addressable 2.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-211","text":"more type checking changes fixed issue with unicode normalization added method to find template defaults symbolic keys are now allowed in template mappings numeric values and symbolic values are now allowed in template mappings","title":"Addressable 2.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-210","text":"refactored URI template support out into its own class removed extract method due to being useless and unreliable removed Addressable::URI.expand_template removed Addressable::URI#extract_mapping added partial template expansion fixed minor bugs in the parse and heuristic_parse methods fixed incompatibility with Ruby 1.9.1 fixed bottleneck in Addressable::URI#hash and Addressable::URI#to_s fixed unicode normalization exception updated query_values methods to better handle subscript notation worked around issue with freezing URIs improved specs","title":"Addressable 2.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-202","text":"fixed issue with URI template expansion fixed issue with percent escaping characters 0-15","title":"Addressable 2.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-201","text":"fixed issue with query string assignment fixed issue with improperly encoded components","title":"Addressable 2.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-200","text":"the initialize method now takes an options hash as its only parameter added query_values method to URI class completely replaced IDNA implementation with pure Ruby renamed Addressable::ADDRESSABLE_VERSION to Addressable::VERSION completely reworked the Rakefile changed the behavior of the port method significantly Addressable::URI.encode_segment, Addressable::URI.unencode_segment renamed documentation is now in YARD format more rigorous type checking to_str method implemented, implicit conversion to Strings now allowed Addressable::URI#omit method added, Addressable::URI#merge method replaced updated URI Template code to match v 03 of the draft spec added a bunch of new specifications","title":"Addressable 2.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-104","text":"switched to using RSpec's pending system for specs that rely on IDN fixed issue with creating URIs with paths that are not prefixed with '/'","title":"Addressable 1.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-103","text":"implemented a hash method","title":"Addressable 1.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-102","text":"fixed minor bug with the extract_mapping method","title":"Addressable 1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-101","text":"fixed minor bug with the extract_mapping method","title":"Addressable 1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-100","text":"heuristic parse method added parsing is slightly more strict replaced to_h with to_hash fixed routing methods improved specifications improved heckle rake task no surviving heckle mutations","title":"Addressable 1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-012","text":"improved normalization fixed bug in joining algorithm updated specifications","title":"Addressable 0.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-011","text":"updated documentation added URI Template variable extraction","title":"Addressable 0.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/addressable-2.8.0/CHANGELOG/#addressable-010","text":"initial release implementation based on RFC 3986, 3987 support for IRIs via libidn support for the URI Template draft spec","title":"Addressable 0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/","text":"Ruby CoffeeScript Ruby CoffeeScript is a bridge to the official CoffeeScript compiler. CoffeeScript.compile File.read(\"script.coffee\") Installation gem install coffee-script Note: This compiler library has replaced the original CoffeeScript compiler that was written in Ruby. Dependencies This library depends on the coffee-script-source gem which is updated any time a new version of CoffeeScript is released. (The coffee-script-source gem's version number is synced with each official CoffeeScript release.) This way you can build against different versions of CoffeeScript by requiring the correct version of the coffee-script-source gem. In addition, you can use this library with unreleased versions of CoffeeScript by setting the COFFEESCRIPT_SOURCE_PATH environment variable: export COFFEESCRIPT_SOURCE_PATH=/path/to/coffee-script/extras/coffee-script.js JSON The json library is also required but is not explicitly stated as a gem dependency. If you're on Ruby 1.8 you'll need to install the json or json_pure gem. On Ruby 1.9, json is included in the standard library. ExecJS The ExecJS library is used to automatically choose the best JavaScript engine for your platform. Check out its README for a complete list of supported engines.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/#ruby-coffeescript","text":"Ruby CoffeeScript is a bridge to the official CoffeeScript compiler. CoffeeScript.compile File.read(\"script.coffee\")","title":"Ruby CoffeeScript"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/#installation","text":"gem install coffee-script Note: This compiler library has replaced the original CoffeeScript compiler that was written in Ruby.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/#dependencies","text":"This library depends on the coffee-script-source gem which is updated any time a new version of CoffeeScript is released. (The coffee-script-source gem's version number is synced with each official CoffeeScript release.) This way you can build against different versions of CoffeeScript by requiring the correct version of the coffee-script-source gem. In addition, you can use this library with unreleased versions of CoffeeScript by setting the COFFEESCRIPT_SOURCE_PATH environment variable: export COFFEESCRIPT_SOURCE_PATH=/path/to/coffee-script/extras/coffee-script.js","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/#json","text":"The json library is also required but is not explicitly stated as a gem dependency. If you're on Ruby 1.8 you'll need to install the json or json_pure gem. On Ruby 1.9, json is included in the standard library.","title":"JSON"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/coffee-script-2.4.1/#execjs","text":"The ExecJS library is used to automatically choose the best JavaScript engine for your platform. Check out its README for a complete list of supported engines.","title":"ExecJS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/","text":"colorator Colorize your text for the terminal Example \"this string\".red # => \\e[31mthis string\\e[0m \"my string\".blue # => \\e[34mthis string\\e[0m # etc... Supported Colors black red green yellow blue magenta cyan white bold Why There are a bunch of gems that provide functionality like this, but none have as simple an API as this. Just call \"string\".color and your text will be colorized. License MIT. Written as a single Ruby file by Brandon Mathis, converted into a gem by Parker Moore.","title":"colorator"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/#colorator","text":"Colorize your text for the terminal","title":"colorator"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/#example","text":"\"this string\".red # => \\e[31mthis string\\e[0m \"my string\".blue # => \\e[34mthis string\\e[0m # etc...","title":"Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/#supported-colors","text":"black red green yellow blue magenta cyan white bold","title":"Supported Colors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/#why","text":"There are a bunch of gems that provide functionality like this, but none have as simple an API as this. Just call \"string\".color and your text will be colorized.","title":"Why"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-0.1/#license","text":"MIT. Written as a single Ruby file by Brandon Mathis, converted into a gem by Parker Moore.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/","text":"colorator Colorize your text for the terminal Example \"this string\".red # => \\e[31mthis string\\e[0m \"my string\".blue # => \\e[34mmy string\\e[0m # etc... Supported Colors red black green yellow magenta white blue cyan bold Other supported Ansi methods clear_line has_ansi? , has_color? strip_ansi , strip_color reset_ansi , reset_color clear_screen ansi_jump Why There are a bunch of gems that provide functionality like this, but none have as simple an API as this. Just call \"string\".color and your text will be colorized. License MIT. Written as a single Ruby file by Brandon Mathis, converted into a gem by Parker Moore.","title":"colorator"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#colorator","text":"Colorize your text for the terminal","title":"colorator"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#example","text":"\"this string\".red # => \\e[31mthis string\\e[0m \"my string\".blue # => \\e[34mmy string\\e[0m # etc...","title":"Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#supported-colors","text":"red black green yellow magenta white blue cyan bold","title":"Supported Colors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#other-supported-ansi-methods","text":"clear_line has_ansi? , has_color? strip_ansi , strip_color reset_ansi , reset_color clear_screen ansi_jump","title":"Other supported Ansi methods"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#why","text":"There are a bunch of gems that provide functionality like this, but none have as simple an API as this. Just call \"string\".color and your text will be colorized.","title":"Why"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/#license","text":"MIT. Written as a single Ruby file by Brandon Mathis, converted into a gem by Parker Moore.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/","text":"1.1.0 / 2016-06-28 Minor Enhancements Support jruby (#8) 1.0.0 / 2016-04-28 Major enhancements Merge Simple::ANSI and Colorator. (#7) Minor Enhancements Delete unnecessary Symbol#to_sym (#2) Change argument name of Enumerator#each for better code legibility (#3) Development Fixes Convert to new RSpec expectation syntax (#1) Fix String#blue result in README (#4) 0.1 / 2013-04-13 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#110-2016-06-28","text":"","title":"1.1.0 / 2016-06-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#minor-enhancements","text":"Support jruby (#8)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#100-2016-04-28","text":"","title":"1.0.0 / 2016-04-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#major-enhancements","text":"Merge Simple::ANSI and Colorator. (#7)","title":"Major enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#minor-enhancements_1","text":"Delete unnecessary Symbol#to_sym (#2) Change argument name of Enumerator#each for better code legibility (#3)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#development-fixes","text":"Convert to new RSpec expectation syntax (#1) Fix String#blue result in README (#4)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/colorator-1.1.0/History/#01-2013-04-13","text":"Birthday!","title":"0.1 / 2013-04-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/","text":"CommonMarker Ruby wrapper for libcmark-gfm , GitHub's fork of the reference parser for CommonMark. It passes all of the C tests, and is therefore spec-complete. It also includes extensions to the CommonMark spec as documented in the GitHub Flavored Markdown spec , such as support for tables, strikethroughs, and autolinking. For more information on available extensions, see the documentation below . Installation Add this line to your application's Gemfile: gem 'commonmarker' And then execute: $ bundle Or install it yourself as: $ gem install commonmarker Usage Converting to HTML Call render_html on a string to convert it to HTML: require 'commonmarker' CommonMarker.render_html('Hi *there*', :DEFAULT) # <p>Hi <em>there</em></p>\\n The second argument is optional-- see below for more information. Generating a document You can also parse a string to receive a Document node. You can then print that node to HTML, iterate over the children, and other fun node stuff. For example: require 'commonmarker' doc = CommonMarker.render_doc('*Hello* world', :DEFAULT) puts(doc.to_html) # <p>Hi <em>there</em></p>\\n doc.walk do |node| puts node.type # [:document, :paragraph, :text, :emph, :text] end The second argument is optional-- see below for more information. Example: walking the AST You can use walk or each to iterate over nodes: walk will iterate on a node and recursively iterate on a node's children. each will iterate on a node and its children, but no further. require 'commonmarker' # parse the files specified on the command line doc = CommonMarker.render_doc(\"# The site\\n\\n [GitHub](https://www.github.com)\") # Walk tree and print out URLs for links doc.walk do |node| if node.type == :link printf(\"URL = %s\\n\", node.url) end end # Capitalize all regular text in headers doc.walk do |node| if node.type == :header node.each do |subnode| if subnode.type == :text subnode.string_content = subnode.string_content.upcase end end end end # Transform links to regular text doc.walk do |node| if node.type == :link node.insert_before(node.first_child) node.delete end end Creating a custom renderer You can also derive a class from CommonMarker's HtmlRenderer class. This produces slower output, but is far more customizable. For example: class MyHtmlRenderer < CommonMarker::HtmlRenderer def initialize super @headerid = 1 end def header(node) block do out(\"<h\", node.header_level, \" id=\\\"\", @headerid, \"\\\">\", :children, \"</h\", node.header_level, \">\") @headerid += 1 end end end myrenderer = MyHtmlRenderer.new puts myrenderer.render(doc) # Print any warnings to STDERR renderer.warnings.each do |w| STDERR.write(\"#{w}\\n\") end Options CommonMarker accepts the same options that CMark does, as symbols. Note that there is a distinction in CMark for \"parse\" options and \"render\" options, which are represented in the tables below. Parse options Name Description :DEFAULT The default parsing system. :SOURCEPOS Include source position in nodes :UNSAFE Allow raw/custom HTML and unsafe links. :VALIDATE_UTF8 Replace illegal sequences with the replacement character U+FFFD . :SMART Use smart punctuation (curly quotes, etc.). :LIBERAL_HTML_TAG Support liberal parsing of inline HTML tags. :FOOTNOTES Parse footnotes. :STRIKETHROUGH_DOUBLE_TILDE Parse strikethroughs by double tildes (compatibility with redcarpet ) Render options Name Description :DEFAULT The default rendering system. :SOURCEPOS Include source position in rendered HTML. :HARDBREAKS Treat \\n as hardbreaks (by adding <br/> ). :UNSAFE Allow raw/custom HTML and unsafe links. :NOBREAKS Translate \\n in the source to a single whitespace. :VALIDATE_UTF8 Replace illegal sequences with the replacement character U+FFFD . :SMART Use smart punctuation (curly quotes, etc.). :GITHUB_PRE_LANG Use GitHub-style <pre lang> for fenced code blocks. :LIBERAL_HTML_TAG Support liberal parsing of inline HTML tags. :FOOTNOTES Render footnotes. :STRIKETHROUGH_DOUBLE_TILDE Parse strikethroughs by double tildes (compatibility with redcarpet ) :TABLE_PREFER_STYLE_ATTRIBUTES Use style insted of align for table cells. :FULL_INFO_STRING Include full info strings of code blocks in separate attribute. Passing options To apply a single option, pass it in as a symbol argument: CommonMarker.render_doc(\"\\\"Hello,\\\" said the spider.\", :SMART) # <p>\u201cHello,\u201d said the spider.</p>\\n To have multiple options applied, pass in an array of symbols: CommonMarker.render_html(\"\\\"'Shelob' is my name.\\\"\", [:HARDBREAKS, :SOURCEPOS]) For more information on these options, see the CMark documentation . Extensions Both render_html and render_doc take an optional third argument defining the extensions you want enabled as your CommonMark document is being processed. The documentation for these extensions are defined in this spec , and the rationale is provided in this blog post . The available extensions are: :table - This provides support for tables. :tasklist - This provides support for task list items. :strikethrough - This provides support for strikethroughs. :autolink - This provides support for automatically converting URLs to anchor tags. :tagfilter - This escapes several \"unsafe\" HTML tags , causing them to not have any effect. Output formats Like CMark, CommonMarker can generate output in several formats: HTML, XML, plaintext, and commonmark are currently supported. HTML The default output format, HTML, will be generated when calling to_html or using --to=html on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_html) <p><em>Hello</em> world!</p> XML XML will be generated when calling to_xml or using --to=xml on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_xml) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE document SYSTEM \"CommonMark.dtd\"> <document xmlns=\"http://commonmark.org/xml/1.0\"> <paragraph> <emph> <text xml:space=\"preserve\">Hello</text> </emph> <text xml:space=\"preserve\"> world!</text> </paragraph> </document> Plaintext Plaintext will be generated when calling to_plaintext or using --to=plaintext on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_plaintext) Hello world! Commonmark Commonmark will be generated when calling to_commonmark or using --to=commonmark on the command line. text = <<-TEXT 1. I am a numeric list. 2. I continue the list. * Suddenly, an unordered list! * What fun! TEXT doc = CommonMarker.render_doc(text, :DEFAULT) puts(doc.to_commonmark) 1. I am a numeric list. 2. I continue the list. <!-- end list --> - Suddenly, an unordered list\\! - What fun\\! Developing locally After cloning the repo: script/bootstrap bundle exec rake compile If there were no errors, you're done! Otherwise, make sure to follow the CMark dependency instructions. Benchmarks Some rough benchmarks: $ bundle exec rake benchmark input size = 11063727 bytes redcarpet 0.070000 0.020000 0.090000 ( 0.079641) github-markdown 0.070000 0.010000 0.080000 ( 0.083535) commonmarker with to_html 0.100000 0.010000 0.110000 ( 0.111947) commonmarker with ruby HtmlRenderer 1.830000 0.030000 1.860000 ( 1.866203) kramdown 4.610000 0.070000 4.680000 ( 4.678398)","title":"CommonMarker"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#commonmarker","text":"Ruby wrapper for libcmark-gfm , GitHub's fork of the reference parser for CommonMark. It passes all of the C tests, and is therefore spec-complete. It also includes extensions to the CommonMark spec as documented in the GitHub Flavored Markdown spec , such as support for tables, strikethroughs, and autolinking. For more information on available extensions, see the documentation below .","title":"CommonMarker"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#installation","text":"Add this line to your application's Gemfile: gem 'commonmarker' And then execute: $ bundle Or install it yourself as: $ gem install commonmarker","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#converting-to-html","text":"Call render_html on a string to convert it to HTML: require 'commonmarker' CommonMarker.render_html('Hi *there*', :DEFAULT) # <p>Hi <em>there</em></p>\\n The second argument is optional-- see below for more information.","title":"Converting to HTML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#generating-a-document","text":"You can also parse a string to receive a Document node. You can then print that node to HTML, iterate over the children, and other fun node stuff. For example: require 'commonmarker' doc = CommonMarker.render_doc('*Hello* world', :DEFAULT) puts(doc.to_html) # <p>Hi <em>there</em></p>\\n doc.walk do |node| puts node.type # [:document, :paragraph, :text, :emph, :text] end The second argument is optional-- see below for more information.","title":"Generating a document"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#example-walking-the-ast","text":"You can use walk or each to iterate over nodes: walk will iterate on a node and recursively iterate on a node's children. each will iterate on a node and its children, but no further. require 'commonmarker' # parse the files specified on the command line doc = CommonMarker.render_doc(\"# The site\\n\\n [GitHub](https://www.github.com)\") # Walk tree and print out URLs for links doc.walk do |node| if node.type == :link printf(\"URL = %s\\n\", node.url) end end # Capitalize all regular text in headers doc.walk do |node| if node.type == :header node.each do |subnode| if subnode.type == :text subnode.string_content = subnode.string_content.upcase end end end end # Transform links to regular text doc.walk do |node| if node.type == :link node.insert_before(node.first_child) node.delete end end","title":"Example: walking the AST"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#creating-a-custom-renderer","text":"You can also derive a class from CommonMarker's HtmlRenderer class. This produces slower output, but is far more customizable. For example: class MyHtmlRenderer < CommonMarker::HtmlRenderer def initialize super @headerid = 1 end def header(node) block do out(\"<h\", node.header_level, \" id=\\\"\", @headerid, \"\\\">\", :children, \"</h\", node.header_level, \">\") @headerid += 1 end end end myrenderer = MyHtmlRenderer.new puts myrenderer.render(doc) # Print any warnings to STDERR renderer.warnings.each do |w| STDERR.write(\"#{w}\\n\") end","title":"Creating a custom renderer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#options","text":"CommonMarker accepts the same options that CMark does, as symbols. Note that there is a distinction in CMark for \"parse\" options and \"render\" options, which are represented in the tables below.","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#parse-options","text":"Name Description :DEFAULT The default parsing system. :SOURCEPOS Include source position in nodes :UNSAFE Allow raw/custom HTML and unsafe links. :VALIDATE_UTF8 Replace illegal sequences with the replacement character U+FFFD . :SMART Use smart punctuation (curly quotes, etc.). :LIBERAL_HTML_TAG Support liberal parsing of inline HTML tags. :FOOTNOTES Parse footnotes. :STRIKETHROUGH_DOUBLE_TILDE Parse strikethroughs by double tildes (compatibility with redcarpet )","title":"Parse options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#render-options","text":"Name Description :DEFAULT The default rendering system. :SOURCEPOS Include source position in rendered HTML. :HARDBREAKS Treat \\n as hardbreaks (by adding <br/> ). :UNSAFE Allow raw/custom HTML and unsafe links. :NOBREAKS Translate \\n in the source to a single whitespace. :VALIDATE_UTF8 Replace illegal sequences with the replacement character U+FFFD . :SMART Use smart punctuation (curly quotes, etc.). :GITHUB_PRE_LANG Use GitHub-style <pre lang> for fenced code blocks. :LIBERAL_HTML_TAG Support liberal parsing of inline HTML tags. :FOOTNOTES Render footnotes. :STRIKETHROUGH_DOUBLE_TILDE Parse strikethroughs by double tildes (compatibility with redcarpet ) :TABLE_PREFER_STYLE_ATTRIBUTES Use style insted of align for table cells. :FULL_INFO_STRING Include full info strings of code blocks in separate attribute.","title":"Render options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#passing-options","text":"To apply a single option, pass it in as a symbol argument: CommonMarker.render_doc(\"\\\"Hello,\\\" said the spider.\", :SMART) # <p>\u201cHello,\u201d said the spider.</p>\\n To have multiple options applied, pass in an array of symbols: CommonMarker.render_html(\"\\\"'Shelob' is my name.\\\"\", [:HARDBREAKS, :SOURCEPOS]) For more information on these options, see the CMark documentation .","title":"Passing options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#extensions","text":"Both render_html and render_doc take an optional third argument defining the extensions you want enabled as your CommonMark document is being processed. The documentation for these extensions are defined in this spec , and the rationale is provided in this blog post . The available extensions are: :table - This provides support for tables. :tasklist - This provides support for task list items. :strikethrough - This provides support for strikethroughs. :autolink - This provides support for automatically converting URLs to anchor tags. :tagfilter - This escapes several \"unsafe\" HTML tags , causing them to not have any effect.","title":"Extensions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#output-formats","text":"Like CMark, CommonMarker can generate output in several formats: HTML, XML, plaintext, and commonmark are currently supported.","title":"Output formats"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#html","text":"The default output format, HTML, will be generated when calling to_html or using --to=html on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_html) <p><em>Hello</em> world!</p>","title":"HTML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#xml","text":"XML will be generated when calling to_xml or using --to=xml on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_xml) <?xml version=\"1.0\" encoding=\"UTF-8\"?> <!DOCTYPE document SYSTEM \"CommonMark.dtd\"> <document xmlns=\"http://commonmark.org/xml/1.0\"> <paragraph> <emph> <text xml:space=\"preserve\">Hello</text> </emph> <text xml:space=\"preserve\"> world!</text> </paragraph> </document>","title":"XML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#plaintext","text":"Plaintext will be generated when calling to_plaintext or using --to=plaintext on the command line. doc = CommonMarker.render_doc('*Hello* world!', :DEFAULT) puts(doc.to_plaintext) Hello world!","title":"Plaintext"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#commonmark","text":"Commonmark will be generated when calling to_commonmark or using --to=commonmark on the command line. text = <<-TEXT 1. I am a numeric list. 2. I continue the list. * Suddenly, an unordered list! * What fun! TEXT doc = CommonMarker.render_doc(text, :DEFAULT) puts(doc.to_commonmark) 1. I am a numeric list. 2. I continue the list. <!-- end list --> - Suddenly, an unordered list\\! - What fun\\!","title":"Commonmark"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#developing-locally","text":"After cloning the repo: script/bootstrap bundle exec rake compile If there were no errors, you're done! Otherwise, make sure to follow the CMark dependency instructions.","title":"Developing locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/#benchmarks","text":"Some rough benchmarks: $ bundle exec rake benchmark input size = 11063727 bytes redcarpet 0.070000 0.020000 0.090000 ( 0.079641) github-markdown 0.070000 0.010000 0.080000 ( 0.083535) commonmarker with to_html 0.100000 0.010000 0.110000 ( 0.111947) commonmarker with ruby HtmlRenderer 1.830000 0.030000 1.860000 ( 1.866203) kramdown 4.610000 0.070000 4.680000 ( 4.678398)","title":"Benchmarks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/test/fixtures/curly/","text":"This curly quote \u201cmakes commonmarker throw an exception\u201d.","title":"Curly"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/test/fixtures/dingus/","text":"Try CommonMark You can try CommonMark here. This dingus is powered by commonmark.js , the JavaScript reference implementation. item one item two sublist sublist","title":"Dingus"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/test/fixtures/dingus/#try-commonmark","text":"You can try CommonMark here. This dingus is powered by commonmark.js , the JavaScript reference implementation. item one item two sublist sublist","title":"Try CommonMark"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/test/fixtures/strong/","text":"I am strong","title":"Strong"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/commonmarker-0.23.4/test/fixtures/table/","text":"One extension: a b c d x Another extension: ~~hi~~","title":"Table"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/","text":"Concurrent Ruby Modern concurrency tools for Ruby. Inspired by Erlang , Clojure , Scala , Haskell , F# , C# , Java , and classic concurrency patterns. The design goals of this gem are: Be an 'unopinionated' toolbox that provides useful utilities without debating which is better or why Remain free of external gem dependencies Stay true to the spirit of the languages providing inspiration But implement in a way that makes sense for Ruby Keep the semantics as idiomatic Ruby as possible Support features that make sense in Ruby Exclude features that don't make sense in Ruby Be small, lean, and loosely coupled Thread-safety Backward compatibility Contributing This gem depends on contributions and we appreciate your help. Would you like to contribute? Great! Have a look at issues with looking-for-contributor label . And if you pick something up let us know on the issue. You can also get started by triaging issues which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to concurrent-ruby on CodeTriage . Thread Safety Concurrent Ruby makes one of the strongest thread safety guarantees of any Ruby concurrency library, providing consistent behavior and guarantees on all four of the main Ruby interpreters (MRI/CRuby, JRuby, Rubinius, TruffleRuby). Every abstraction in this library is thread safe. Specific thread safety guarantees are documented with each abstraction. It is critical to remember, however, that Ruby is a language of mutable references. No concurrency library for Ruby can ever prevent the user from making thread safety mistakes (such as sharing a mutable object between threads and modifying it on both threads) or from creating deadlocks through incorrect use of locks. All the library can do is provide safe abstractions which encourage safe practices. Concurrent Ruby provides more safe concurrency abstractions than any other Ruby library, many of which support the mantra of \"Do not communicate by sharing memory; instead, share memory by communicating\" . Concurrent Ruby is also the only Ruby library which provides a full suite of thread safe and immutable variable types and data structures. We've also initiated discussion to document memory model of Ruby which would provide consistent behaviour and guarantees on all four of the main Ruby interpreters (MRI/CRuby, JRuby, Rubinius, TruffleRuby). Features & Documentation The primary site for documentation is the automatically generated API documentation which is up to date with latest release. This readme matches the master so may contain new stuff not yet released. We also have a IRC (gitter) . Versioning concurrent-ruby uses Semantic Versioning concurrent-ruby-ext has always same version as concurrent-ruby concurrent-ruby-edge will always be 0.y.z therefore following point 4 applies \"Major version zero (0.y.z) is for initial development. Anything may change at any time. The public API should not be considered stable.\" However we additionally use following rules: Minor version increment means incompatible changes were made Patch version increment means only compatible changes were made General-purpose Concurrency Abstractions Async : A mixin module that provides simple asynchronous behavior to a class. Loosely based on Erlang's gen_server . ScheduledTask : Like a Future scheduled for a specific future time. TimerTask : A Thread that periodically wakes up to perform work at regular intervals. Promises : Unified implementation of futures and promises which combines features of previous Future , Promise , IVar , Event , dataflow , Delay , and (partially) TimerTask into a single framework. It extensively uses the new synchronization layer to make all the features non-blocking and lock-free , with the exception of obviously blocking operations like #wait , #value . It also offers better performance. Thread-safe Value Objects, Structures, and Collections Collection classes that were originally part of the (deprecated) thread_safe gem: Array A thread-safe subclass of Ruby's standard Array . Hash A thread-safe subclass of Ruby's standard Hash . Set A thread-safe subclass of Ruby's standard Set . Map A hash-like object that should have much better performance characteristics, especially under high concurrency, than Concurrent::Hash . Tuple A fixed size array with volatile (synchronized, thread safe) getters/setters. Value objects inspired by other languages: Maybe A thread-safe, immutable object representing an optional value, based on Haskell Data.Maybe . Structure classes derived from Ruby's Struct : ImmutableStruct Immutable struct where values are set at construction and cannot be changed later. MutableStruct Synchronized, mutable struct where values can be safely changed at any time. SettableStruct Synchronized, write-once struct where values can be set at most once, either at construction or any time thereafter. Thread-safe variables: Agent : A way to manage shared, mutable, asynchronous , independent state. Based on Clojure's Agent . Atom : A way to manage shared, mutable, synchronous , independent state. Based on Clojure's Atom . AtomicBoolean A boolean value that can be updated atomically. AtomicFixnum A numeric value that can be updated atomically. AtomicReference An object reference that may be updated atomically. Exchanger A synchronization point at which threads can pair and swap elements within pairs. Based on Java's Exchanger . MVar A synchronized single element container. Based on Haskell's MVar and Scala's MVar . ThreadLocalVar A variable where the value is different for each thread. TVar A transactional variable implementing software transactional memory (STM). Based on Clojure's Ref . Java-inspired ThreadPools and Other Executors See the thread pool overview, which also contains a list of other Executors available. Thread Synchronization Classes and Algorithms CountDownLatch A synchronization object that allows one thread to wait on multiple other threads. CyclicBarrier A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. Event Old school kernel-style event. ReadWriteLock A lock that supports multiple readers but only one writer. ReentrantReadWriteLock A read/write lock with reentrant and upgrade features. Semaphore A counting-based locking mechanism that uses permits. AtomicMarkableReference Deprecated Deprecated features are still available and bugs are being fixed, but new features will not be added. ~~ Future : An asynchronous operation that produces a value.~~ Replaced by Promises . ~~ .dataflow : Built on Futures, Dataflow allows you to create a task that will be scheduled when all of its data dependencies are available.~~ Replaced by Promises . ~~ Promise : Similar to Futures, with more features.~~ Replaced by Promises . ~~ Delay Lazy evaluation of a block yielding an immutable result. Based on Clojure's delay .~~ Replaced by Promises . ~~ IVar Similar to a \"future\" but can be manually assigned once, after which it becomes immutable.~~ Replaced by Promises . Edge Features These are available in the concurrent-ruby-edge companion gem. These features are under active development and may change frequently. They are expected not to keep backward compatibility (there may also lack tests and documentation). Semantic versions will be obeyed though. Features developed in concurrent-ruby-edge are expected to move to concurrent-ruby when final. Actor : Implements the Actor Model, where concurrent actors exchange messages. Status: Partial documentation and tests; depends on new future/promise framework; stability is good. Channel : Communicating Sequential Processes ( CSP ). Functionally equivalent to Go channels with additional inspiration from Clojure core.async . Status: Partial documentation and tests. LazyRegister LockFreeLinkedSet Status: will be moved to core soon. LockFreeStack Status: missing documentation and tests. Promises::Channel A first in first out channel that accepts messages with push family of methods and returns messages with pop family of methods. Pop and push operations can be represented as futures, see #pop_op and #push_op . The capacity of the channel can be limited to support back pressure, use capacity option in #initialize . #pop method blocks ans #pop_op returns pending future if there is no message in the channel. If the capacity is limited the #push method blocks and #push_op returns pending future. Cancellation The Cancellation abstraction provides cooperative cancellation. The standard methods Thread#raise of Thread#kill available in Ruby are very dangerous (see linked the blog posts bellow). Therefore concurrent-ruby provides an alternative. https://jvns.ca/blog/2015/11/27/why-rubys-timeout-is-dangerous-and-thread-dot-raise-is-terrifying/ http://www.mikeperham.com/2015/05/08/timeout-rubys-most-dangerous-api/ http://blog.headius.com/2008/02/rubys-threadraise-threadkill-timeoutrb.html It provides an object which represents a task which can be executed, the task has to get the reference to the object and periodically cooperatively check that it is not cancelled. Good practices to make tasks cancellable: * check cancellation every cycle of a loop which does significant work, * do all blocking actions in a loop with a timeout then on timeout check cancellation and if ok block again with the timeout * Throttle A tool managing concurrency level of tasks. * ErlangActor Actor implementation which precisely matches Erlang actor behaviour. Requires at least Ruby 2.1 otherwise it's not loaded. * WrappingExecutor A delegating executor which modifies each task before the task is given to the target executor it delegates to. Supported Ruby versions MRI 2.2 and above Latest JRuby 9000 Latest TruffleRuby The legacy support for Rubinius is kept for the moment but it is no longer maintained and is liable to be removed. If you would like to help please respond to #739 . Usage Everything within this gem can be loaded simply by requiring it: require 'concurrent' Requiring only specific abstractions from Concurrent Ruby is not yet supported. To use the tools in the Edge gem it must be required separately: require 'concurrent-edge' If the library does not behave as expected, Concurrent.use_stdlib_logger(Logger::DEBUG) could help to reveal the problem. Installation gem install concurrent-ruby or add the following line to Gemfile: gem 'concurrent-ruby', require: 'concurrent' and run bundle install from your shell. Edge Gem Installation The Edge gem must be installed separately from the core gem: gem install concurrent-ruby-edge or add the following line to Gemfile: gem 'concurrent-ruby-edge', require: 'concurrent-edge' and run bundle install from your shell. C Extensions for MRI Potential performance improvements may be achieved under MRI by installing optional C extensions. To minimise installation errors the C extensions are available in the concurrent-ruby-ext extension gem. concurrent-ruby and concurrent-ruby-ext are always released together with same version. Simply install the extension gem too: gem install concurrent-ruby-ext or add the following line to Gemfile: gem 'concurrent-ruby-ext' and run bundle install from your shell. In code it is only necessary to require 'concurrent' The concurrent-ruby gem will automatically detect the presence of the concurrent-ruby-ext gem and load the appropriate C extensions. Note For gem developers No gems should depend on concurrent-ruby-ext . Doing so will force C extensions on your users. The best practice is to depend on concurrent-ruby and let users to decide if they want C extensions. Building the gem Requirements Recent CRuby JRuby, rbenv install jruby-9.2.17.0 Set env variable CONCURRENT_JRUBY_HOME to point to it, e.g. /usr/local/opt/rbenv/versions/jruby-9.2.17.0 Install Docker, required for Windows builds Publishing the Gem Update version.rb Update the CHANGELOG Update the Yard documentation Add the new version to docs-source/signpost.md . Needs to be done only if there are visible changes in the documentation. Run bundle exec rake yard to update the master documentation and signpost. Run bundle exec rake yard:<new-version> to add or update the documentation of the new version. Commit (and push) the changes. Use be rake release to release the gem. It consists of ['release:checks', 'release:build', 'release:test', 'release:publish'] steps. It will ask at the end before publishing anything. Steps can also be executed individually. Maintainers Chris Seaton \u2014 Lead maintainer, point-of-contact. Benoit Daloze \u2014 If Chris is not available Benoit can help. Special Thanks to Jerry D'Antonio for creating the gem Brian Durand for the ref gem Charles Oliver Nutter for the atomic and thread_safe gems thedarkone for the thread_safe gem to the past maintainers Petr Chalupa Michele Della Torre Pawe\u0142 Obrok Lucas Allan and to Ruby Association for sponsoring a project \"Enhancing Ruby\u2019s concurrency tooling\" in 2018. License and Copyright Concurrent Ruby is free software released under the MIT License . The Concurrent Ruby logo was designed by David Jones . It is Copyright \u00a9 2014 Jerry D'Antonio . All Rights Reserved.","title":"Concurrent Ruby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#concurrent-ruby","text":"Modern concurrency tools for Ruby. Inspired by Erlang , Clojure , Scala , Haskell , F# , C# , Java , and classic concurrency patterns. The design goals of this gem are: Be an 'unopinionated' toolbox that provides useful utilities without debating which is better or why Remain free of external gem dependencies Stay true to the spirit of the languages providing inspiration But implement in a way that makes sense for Ruby Keep the semantics as idiomatic Ruby as possible Support features that make sense in Ruby Exclude features that don't make sense in Ruby Be small, lean, and loosely coupled Thread-safety Backward compatibility","title":"Concurrent Ruby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#contributing","text":"This gem depends on contributions and we appreciate your help. Would you like to contribute? Great! Have a look at issues with looking-for-contributor label . And if you pick something up let us know on the issue. You can also get started by triaging issues which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to concurrent-ruby on CodeTriage .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#thread-safety","text":"Concurrent Ruby makes one of the strongest thread safety guarantees of any Ruby concurrency library, providing consistent behavior and guarantees on all four of the main Ruby interpreters (MRI/CRuby, JRuby, Rubinius, TruffleRuby). Every abstraction in this library is thread safe. Specific thread safety guarantees are documented with each abstraction. It is critical to remember, however, that Ruby is a language of mutable references. No concurrency library for Ruby can ever prevent the user from making thread safety mistakes (such as sharing a mutable object between threads and modifying it on both threads) or from creating deadlocks through incorrect use of locks. All the library can do is provide safe abstractions which encourage safe practices. Concurrent Ruby provides more safe concurrency abstractions than any other Ruby library, many of which support the mantra of \"Do not communicate by sharing memory; instead, share memory by communicating\" . Concurrent Ruby is also the only Ruby library which provides a full suite of thread safe and immutable variable types and data structures. We've also initiated discussion to document memory model of Ruby which would provide consistent behaviour and guarantees on all four of the main Ruby interpreters (MRI/CRuby, JRuby, Rubinius, TruffleRuby).","title":"Thread Safety"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#features-documentation","text":"The primary site for documentation is the automatically generated API documentation which is up to date with latest release. This readme matches the master so may contain new stuff not yet released. We also have a IRC (gitter) .","title":"Features &amp; Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#versioning","text":"concurrent-ruby uses Semantic Versioning concurrent-ruby-ext has always same version as concurrent-ruby concurrent-ruby-edge will always be 0.y.z therefore following point 4 applies \"Major version zero (0.y.z) is for initial development. Anything may change at any time. The public API should not be considered stable.\" However we additionally use following rules: Minor version increment means incompatible changes were made Patch version increment means only compatible changes were made","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#general-purpose-concurrency-abstractions","text":"Async : A mixin module that provides simple asynchronous behavior to a class. Loosely based on Erlang's gen_server . ScheduledTask : Like a Future scheduled for a specific future time. TimerTask : A Thread that periodically wakes up to perform work at regular intervals. Promises : Unified implementation of futures and promises which combines features of previous Future , Promise , IVar , Event , dataflow , Delay , and (partially) TimerTask into a single framework. It extensively uses the new synchronization layer to make all the features non-blocking and lock-free , with the exception of obviously blocking operations like #wait , #value . It also offers better performance.","title":"General-purpose Concurrency Abstractions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#thread-safe-value-objects-structures-and-collections","text":"Collection classes that were originally part of the (deprecated) thread_safe gem: Array A thread-safe subclass of Ruby's standard Array . Hash A thread-safe subclass of Ruby's standard Hash . Set A thread-safe subclass of Ruby's standard Set . Map A hash-like object that should have much better performance characteristics, especially under high concurrency, than Concurrent::Hash . Tuple A fixed size array with volatile (synchronized, thread safe) getters/setters. Value objects inspired by other languages: Maybe A thread-safe, immutable object representing an optional value, based on Haskell Data.Maybe . Structure classes derived from Ruby's Struct : ImmutableStruct Immutable struct where values are set at construction and cannot be changed later. MutableStruct Synchronized, mutable struct where values can be safely changed at any time. SettableStruct Synchronized, write-once struct where values can be set at most once, either at construction or any time thereafter. Thread-safe variables: Agent : A way to manage shared, mutable, asynchronous , independent state. Based on Clojure's Agent . Atom : A way to manage shared, mutable, synchronous , independent state. Based on Clojure's Atom . AtomicBoolean A boolean value that can be updated atomically. AtomicFixnum A numeric value that can be updated atomically. AtomicReference An object reference that may be updated atomically. Exchanger A synchronization point at which threads can pair and swap elements within pairs. Based on Java's Exchanger . MVar A synchronized single element container. Based on Haskell's MVar and Scala's MVar . ThreadLocalVar A variable where the value is different for each thread. TVar A transactional variable implementing software transactional memory (STM). Based on Clojure's Ref .","title":"Thread-safe Value Objects, Structures, and Collections"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#java-inspired-threadpools-and-other-executors","text":"See the thread pool overview, which also contains a list of other Executors available.","title":"Java-inspired ThreadPools and Other Executors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#thread-synchronization-classes-and-algorithms","text":"CountDownLatch A synchronization object that allows one thread to wait on multiple other threads. CyclicBarrier A synchronization aid that allows a set of threads to all wait for each other to reach a common barrier point. Event Old school kernel-style event. ReadWriteLock A lock that supports multiple readers but only one writer. ReentrantReadWriteLock A read/write lock with reentrant and upgrade features. Semaphore A counting-based locking mechanism that uses permits. AtomicMarkableReference","title":"Thread Synchronization Classes and Algorithms"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#deprecated","text":"Deprecated features are still available and bugs are being fixed, but new features will not be added. ~~ Future : An asynchronous operation that produces a value.~~ Replaced by Promises . ~~ .dataflow : Built on Futures, Dataflow allows you to create a task that will be scheduled when all of its data dependencies are available.~~ Replaced by Promises . ~~ Promise : Similar to Futures, with more features.~~ Replaced by Promises . ~~ Delay Lazy evaluation of a block yielding an immutable result. Based on Clojure's delay .~~ Replaced by Promises . ~~ IVar Similar to a \"future\" but can be manually assigned once, after which it becomes immutable.~~ Replaced by Promises .","title":"Deprecated"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#edge-features","text":"These are available in the concurrent-ruby-edge companion gem. These features are under active development and may change frequently. They are expected not to keep backward compatibility (there may also lack tests and documentation). Semantic versions will be obeyed though. Features developed in concurrent-ruby-edge are expected to move to concurrent-ruby when final. Actor : Implements the Actor Model, where concurrent actors exchange messages. Status: Partial documentation and tests; depends on new future/promise framework; stability is good. Channel : Communicating Sequential Processes ( CSP ). Functionally equivalent to Go channels with additional inspiration from Clojure core.async . Status: Partial documentation and tests. LazyRegister LockFreeLinkedSet Status: will be moved to core soon. LockFreeStack Status: missing documentation and tests. Promises::Channel A first in first out channel that accepts messages with push family of methods and returns messages with pop family of methods. Pop and push operations can be represented as futures, see #pop_op and #push_op . The capacity of the channel can be limited to support back pressure, use capacity option in #initialize . #pop method blocks ans #pop_op returns pending future if there is no message in the channel. If the capacity is limited the #push method blocks and #push_op returns pending future. Cancellation The Cancellation abstraction provides cooperative cancellation. The standard methods Thread#raise of Thread#kill available in Ruby are very dangerous (see linked the blog posts bellow). Therefore concurrent-ruby provides an alternative. https://jvns.ca/blog/2015/11/27/why-rubys-timeout-is-dangerous-and-thread-dot-raise-is-terrifying/ http://www.mikeperham.com/2015/05/08/timeout-rubys-most-dangerous-api/ http://blog.headius.com/2008/02/rubys-threadraise-threadkill-timeoutrb.html It provides an object which represents a task which can be executed, the task has to get the reference to the object and periodically cooperatively check that it is not cancelled. Good practices to make tasks cancellable: * check cancellation every cycle of a loop which does significant work, * do all blocking actions in a loop with a timeout then on timeout check cancellation and if ok block again with the timeout * Throttle A tool managing concurrency level of tasks. * ErlangActor Actor implementation which precisely matches Erlang actor behaviour. Requires at least Ruby 2.1 otherwise it's not loaded. * WrappingExecutor A delegating executor which modifies each task before the task is given to the target executor it delegates to.","title":"Edge Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#supported-ruby-versions","text":"MRI 2.2 and above Latest JRuby 9000 Latest TruffleRuby The legacy support for Rubinius is kept for the moment but it is no longer maintained and is liable to be removed. If you would like to help please respond to #739 .","title":"Supported Ruby versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#usage","text":"Everything within this gem can be loaded simply by requiring it: require 'concurrent' Requiring only specific abstractions from Concurrent Ruby is not yet supported. To use the tools in the Edge gem it must be required separately: require 'concurrent-edge' If the library does not behave as expected, Concurrent.use_stdlib_logger(Logger::DEBUG) could help to reveal the problem.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#installation","text":"gem install concurrent-ruby or add the following line to Gemfile: gem 'concurrent-ruby', require: 'concurrent' and run bundle install from your shell.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#edge-gem-installation","text":"The Edge gem must be installed separately from the core gem: gem install concurrent-ruby-edge or add the following line to Gemfile: gem 'concurrent-ruby-edge', require: 'concurrent-edge' and run bundle install from your shell.","title":"Edge Gem Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#c-extensions-for-mri","text":"Potential performance improvements may be achieved under MRI by installing optional C extensions. To minimise installation errors the C extensions are available in the concurrent-ruby-ext extension gem. concurrent-ruby and concurrent-ruby-ext are always released together with same version. Simply install the extension gem too: gem install concurrent-ruby-ext or add the following line to Gemfile: gem 'concurrent-ruby-ext' and run bundle install from your shell. In code it is only necessary to require 'concurrent' The concurrent-ruby gem will automatically detect the presence of the concurrent-ruby-ext gem and load the appropriate C extensions.","title":"C Extensions for MRI"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#note-for-gem-developers","text":"No gems should depend on concurrent-ruby-ext . Doing so will force C extensions on your users. The best practice is to depend on concurrent-ruby and let users to decide if they want C extensions.","title":"Note For gem developers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#building-the-gem","text":"","title":"Building the gem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#requirements","text":"Recent CRuby JRuby, rbenv install jruby-9.2.17.0 Set env variable CONCURRENT_JRUBY_HOME to point to it, e.g. /usr/local/opt/rbenv/versions/jruby-9.2.17.0 Install Docker, required for Windows builds","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#publishing-the-gem","text":"Update version.rb Update the CHANGELOG Update the Yard documentation Add the new version to docs-source/signpost.md . Needs to be done only if there are visible changes in the documentation. Run bundle exec rake yard to update the master documentation and signpost. Run bundle exec rake yard:<new-version> to add or update the documentation of the new version. Commit (and push) the changes. Use be rake release to release the gem. It consists of ['release:checks', 'release:build', 'release:test', 'release:publish'] steps. It will ask at the end before publishing anything. Steps can also be executed individually.","title":"Publishing the Gem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#maintainers","text":"Chris Seaton \u2014 Lead maintainer, point-of-contact. Benoit Daloze \u2014 If Chris is not available Benoit can help.","title":"Maintainers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#special-thanks-to","text":"Jerry D'Antonio for creating the gem Brian Durand for the ref gem Charles Oliver Nutter for the atomic and thread_safe gems thedarkone for the thread_safe gem to the past maintainers Petr Chalupa Michele Della Torre Pawe\u0142 Obrok Lucas Allan and to Ruby Association for sponsoring a project \"Enhancing Ruby\u2019s concurrency tooling\" in 2018.","title":"Special Thanks to"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/#license-and-copyright","text":"Concurrent Ruby is free software released under the MIT License . The Concurrent Ruby logo was designed by David Jones . It is Copyright \u00a9 2014 Jerry D'Antonio . All Rights Reserved.","title":"License and Copyright"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/","text":"Current Release v1.1.10 concurrent-ruby: (#951) Set the Ruby compatibility version at 2.2 (#939, #933) The caller_runs fallback policy no longer blocks reads from the job queue by worker threads (#938, #761, #652) You can now explicitly prune_pool a thread pool (Sylvain Joyeux) (#937, #757, #670) We switched the Yahoo stock API for demos to Alpha Vantage (Gustavo Caso) (#932, #931) We changed how SafeTaskExecutor handles local jump errors (Aaron Jensen) (#927) You can use keyword arguments in your initialize when using Async (Matt Larraz) (#926, #639) We removed timeout from TimerTask because it wasn't sound, and now it's a no-op with a warning (Jacob Atzen) (#919) If you double-lock a re-entrant read-write lock, we promote to locked for writing (zp yuan) (#915) monotonic_time now accepts an optional unit parameter, as Ruby's clock_gettime (Jean Boussier) Release v1.1.9 (5 Jun 2021) concurrent-ruby: (#866) Child promise state not set to :pending immediately after #execute when parent has completed (#905, #872) Fix RubyNonConcurrentPriorityQueue#delete method (2df0337d) Make sure locks are not shared on shared when objects are dup/cloned (#900, #906, #796, #847, #911) Fix Concurrent::Set tread-safety issues on CRuby (#907) Add new ConcurrentMap backend for TruffleRuby Release v1.1.8 (20 January 2021) concurrent-ruby: (#885) Fix race condition in TVar for stale reads (#884) RubyThreadLocalVar: Do not iterate over hash which might conflict with new pair addition Release v1.1.7 (6 August 2020) concurrent-ruby: (#879) Consider falsy value on Concurrent::Map#compute_if_absent for fast non-blocking path (#876) Reset Async queue on forking, makes Async fork-safe (#856) Avoid running problematic code in RubyThreadLocalVar on MRI that occasionally results in segfault (#853) Introduce ThreadPoolExecutor without a Queue Release v1.1.6, edge v0.6.0 (10 Feb 2020) concurrent-ruby: (#841) Concurrent.disable_at_exit_handlers! is no longer needed and was deprecated. (#841) AbstractExecutorService#auto_terminate= was deprecated and has no effect. Set :auto_terminate option instead when executor is initialized. Release v1.1.6.pre1, edge v0.6.0.pre1 (26 Jan 2020) concurrent-ruby: (#828) Allow to name executors, the name is also used to name their threads (#838) Implement #dup and #clone for structs (#821) Safer finalizers for thread local variables Documentation fixes (#814) Use Ruby's Etc.nprocessors if available (#812) Fix directory structure not to mess with packaging tools (#840) Fix termination of pools on JRuby concurrent-ruby-edge: Add WrappingExecutor (#830) Release v1.1.5, edge v0.5.0 (10 Mar 2019) concurrent-ruby: fix potential leak of context on JRuby and Java 7 concurrent-ruby-edge: Add finalized Concurrent::Cancellation Add finalized Concurrent::Throttle Add finalized Concurrent::Promises::Channel Add new Concurrent::ErlangActor Release v1.1.4 (14 Dec 2018) (#780) Remove java_alias of 'submit' method of Runnable to let executor service work on java 11 (#776) Fix NameError on defining a struct with a name which is already taken in an ancestor Release v1.1.3 (7 Nov 2018) (#775) fix partial require of the gem (although not officially supported) Release v1.1.2 (6 Nov 2018) (#773) more defensive 1.9.3 support Release v1.1.1, edge v0.4.1 (1 Nov 2018) (#768) add support for 1.9.3 back Release v1.1.0, edge v0.4.0 (31 OCt 2018) (yanked) (#768) yanked because of issues with removed 1.9.3 support Release v1.1.0.pre2, edge v0.4.0.pre2 (18 Sep 2018) concurrent-ruby: fixed documentation and README links fix Set for TruffleRuby and Rubinius use properly supported TruffleRuby APIs concurrent-ruby-edge: add Promises.zip_futures_over_on Release v1.1.0.pre1, edge v0.4.0.pre1 (15 Aug 2018) concurrent-ruby: requires at least Ruby 2.0 Promises are moved from concurrent-ruby-edge to concurrent-ruby Add support for TruffleRuby (#734) Fix Array/Hash/Set construction broken on TruffleRuby AtomicReference fixed CI stabilization remove sharp dependency edge -> core remove warnings documentation updates Exchanger is no longer documented as edge since it was already available in concurrent-ruby (#644) Fix Map#each and #each_pair not returning enumerator outside of MRI (#659) Edge promises fail during error handling (#741) Raise on recursive Delay#value call (#727) #717 fix global IO executor on JRuby (#740) Drop support for CRuby 1.9, JRuby 1.7, Rubinius. (#737) Move AtomicMarkableReference out of Edge (#708) Prefer platform specific memory barriers (#735) Fix wrong expected exception in channel spec assertion (#729) Allow executor option in Promise#then (#725) fix timeout check to use timeout_interval (#719) update engine detection (#660) Add specs for Promise#zip/Promise.zip ordering (#654) Promise.zip execution changes (#666) Add thread safe set implementation (#651) #699 #to_s, #inspect should not output negative object IDs. (#685) Avoid RSpec warnings about raise_error (#680) Avoid RSpec monkey patching, persist spec results locally, use RSpec v3.7.0 (#665) Initialize the monitor for new subarrays on Rubinius (#661) Fix error handling in edge promises concurrent-ruby-edge: (#659) Edge promises fail during error handling Edge files clearly separated in lib-edge added ReInclude Release v1.0.5, edge v0.3.1 (26 Feb 2017) concurrent-ruby: Documentation for Event and Semaphore Use Unsafe#fullFence and #loadFence directly since the shortcuts were removed in JRuby Do not depend on org.jruby.util.unsafe.UnsafeHolder concurrent-ruby-edge: (#620) Actors on Pool raise an error (#624) Delayed promises did not interact correctly with flatting Fix arguments yielded by callback methods Overridable default executor in promises factory methods Asking actor to terminate will always resolve to true Release v1.0.4, edge v0.3.0 (27 Dec 2016) concurrent-ruby: Nothing concurrent-ruby-edge: New promises' API renamed, lots of improvements, edge bumped to 0.3.0 Incompatible with previous 0.2.3 version see https://github.com/ruby-concurrency/concurrent-ruby/pull/522 Release v1.0.3 (17 Dec 2016) Trigger execution of flattened delayed futures Avoid forking for processor_count if possible Semaphore Mutex and JRuby parity Adds Map#each as alias to Map#each_pair Fix uninitialized instance variables Make Fixnum, Bignum merger ready Allows Promise#then to receive an executor TimerSet now survives a fork Reject promise on any exception Allow ThreadLocalVar to be initialized with a block Support Alpha with Concurrent::processor_count Fixes format-security error when compiling ruby_193_compatible.h Concurrent::Atom#swap fixed: reraise the exceptions from block Release v1.0.2 (2 May 2016) Fix bug with Concurrent::Map MRI backend #inspect method Fix bug with Concurrent::Map MRI backend using Hash#value? Improved documentation and examples Minor updates to Edge Release v1.0.1 (27 February 2016) Fix \"uninitialized constant Concurrent::ReentrantReadWriteLock\" error. Better handling of autoload vs. require . Improved API for Edge Future zipping. Fix reference leak in Edge Future constructor . Fix bug which prevented thread pools from surviving a fork . Fix bug in which TimerTask did not correctly specify all its dependencies. Improved support for JRuby+Truffle Improved error messages. Improved documentation. Updated README and CONTRIBUTING. Release v1.0.0 (13 November 2015) Rename attr_volatile_with_cas to attr_atomic Add clear_each to LockFreeStack Update AtomicReference documentation Further updates and improvements to the synchronization layer. Performance and memory usage performance with Actor logging. Fixed ThreadPoolExecutor task count methods. Improved Async performance for both short and long-lived objects. Fixed bug in LockFreeLinkedSet . Fixed bug in which Agent#await triggered a validation failure. Further Channel updates. Adopted a project Code of Conduct Cleared interpreter warnings Fixed bug in ThreadPoolExecutor task count methods Fixed bug in 'LockFreeLinkedSet' Improved Java extension loading Handle Exception children in Edge::Future Continued improvements to channel Removed interpreter warnings. Shared constants now in lib/concurrent/constants.rb Refactored many tests. Improved synchronization layer/memory model documentation. Bug fix in Edge Future#flat Brand new Channel implementation in Edge gem. Simplification of RubySingleThreadExecutor Async improvements Each object uses its own SingleThreadExecutor instead of the global thread pool. No longers supports executor injection Much better documentation Atom updates No longer Dereferenceable Now Observable Added a #reset method Brand new Agent API and implementation. Now functionally equivalent to Clojure. Continued improvements to the synchronization layer Merged in the thread_safe gem Concurrent::Array Concurrent::Hash Concurrent::Map (formerly ThreadSafe::Cache) Concurrent::Tuple Minor improvements to Concurrent::Map Complete rewrite of Exchanger Removed all deprecated code (classes, methods, constants, etc.) Updated Agent, MutexAtomic, and BufferedChannel to inherit from Synchronization::Object. Many improved tests Some internal reorganization Release v0.9.1 (09 August 2015) Fixed a Rubiniux bug in synchronization object Fixed all interpreter warnings (except circular references) Fixed require statements when requiring Atom alone Significantly improved ThreadLocalVar on non-JRuby platforms Fixed error handling in Edge Concurrent.zip AtomicFixnum methods #increment and #decrement now support optional delta New AtomicFixnum#update method Minor optimizations in ReadWriteLock New ReentrantReadWriteLock class ThreadLocalVar#bind method is now public Refactored many tests Release v0.9.0 (10 July 2015) Updated AtomicReference AtomicReference#try_update now simply returns instead of raising exception AtomicReference#try_update! was added to raise exceptions if an update fails. Note: this is the same behavior as the old try_update Pure Java implementations of AtomicBoolean AtomicFixnum Semaphore Fixed bug when pruning Ruby thread pools Fixed bug in time calculations within ScheduledTask Default count in CountDownLatch to 1 Use monotonic clock for all timers via Concurrent.monotonic_time Use Process.clock_gettime(Process::CLOCK_MONOTONIC) when available Fallback to java.lang.System.nanoTime() on unsupported JRuby versions Pure Ruby implementation for everything else Effects Concurrent.timer , Concurrent.timeout , TimerSet , TimerTask , and ScheduledTask Deprecated all clock-time based timer scheduling Only support scheduling by delay Effects Concurrent.timer , TimerSet , and ScheduledTask Added new ReadWriteLock class Consistent at_exit behavior for Java and Ruby thread pools. Added at_exit handler to Ruby thread pools (already in Java thread pools) Ruby handler stores the object id and retrieves from ObjectSpace JRuby disables ObjectSpace by default so that handler stores the object reference Added a :stop_on_exit option to thread pools to enable/disable at_exit handler Updated thread pool docs to better explain shutting down thread pools Simpler :executor option syntax for all abstractions which support this option Added Executor#auto_terminate? predicate method (for thread pools) Added at_exit handler to TimerSet Simplified auto-termination of the global executors Can now disable auto-termination of global executors Added shutdown/kill/wait_for_termination variants for global executors Can now disable auto-termination for all executors (the nuclear option) Simplified auto-termination of the global executors Deprecated terms \"task pool\" and \"operation pool\" New terms are \"io executor\" and \"fast executor\" New functions added with new names Deprecation warnings added to functions referencing old names Moved all thread pool related functions from Concurrent::Configuration to Concurrent Old functions still exist with deprecation warnings New functions have updated names as appropriate All high-level abstractions default to the \"io executor\" Fixed bug in Actor causing it to prematurely warm global thread pools on gem load This also fixed a RejectedExecutionError bug when running with minitest/autorun via JRuby Moved global logger up to the Concurrent namespace and refactored the code Optimized the performance of Delay Fixed a bug in which no executor option on construction caused block execution on a global thread pool Numerous improvements and bug fixes to TimerSet Fixed deadlock of Future when the handler raises Exception Added shared specs for more classes New concurrency abstractions including: Atom Maybe ImmutableStruct MutableStruct SettableStruct Created an Edge gem for unstable abstractions including Actor Agent Channel Exchanger LazyRegister new Future Framework http://ruby-concurrency.github.io/concurrent-ruby/Concurrent/Edge.html - unified implementation of Futures and Promises which combines Features of previous Future , Promise , IVar , Event , Probe , dataflow , Delay , TimerTask into single framework. It uses extensively new synchronization layer to make all the paths lock-free with exception of blocking threads on #wait . It offers better performance and does not block threads when not required. Actor framework changes: fixed reset loop in Pool Pool can use any actor as a worker, abstract worker class is no longer needed. Actor events not have format [:event_name, *payload] instead of just the Symbol. Actor now uses new Future/Promise Framework instead of IVar for better interoperability Behaviour definition array was simplified to [BehaviourClass1, [BehaviourClass2, *initialization_args]] Linking behavior responds to :linked message by returning array of linked actors Supervised behavior is removed in favour of just Linking RestartingContext is supervised by default now, supervise: true is not required any more Events can be private and public, so far only difference is that Linking will pass to linked actors only public messages. Adding private :restarting and :resetting events which are send before the actor restarts or resets allowing to add callbacks to cleanup current child actors. Print also object_id in Reference to_s Add AbstractContext#default_executor to be able to override executor class wide Add basic IO example Documentation somewhat improved All messages should have same priority. It's now possible to send actor << job1 << job2 << :terminate! and be sure that both jobs are processed first. Refactored Channel to use newer synchronization objects Added #reset and #cancel methods to TimerSet Added #cancel method to Future and ScheduledTask Refactored TimerSet to use ScheduledTask Updated Async with a factory that initializes the object Deprecated Concurrent.timer and Concurrent.timeout Reduced max threads on pure-Ruby thread pools (abends around 14751 threads) Moved many private/internal classes/modules into \"namespace\" modules Removed brute-force killing of threads in tests Fixed a thread pool bug when the operating system cannot allocate more threads Release v0.8.0 (25 January 2015) C extension for MRI have been extracted into the concurrent-ruby-ext companion gem. Please see the README for more detail. Better variable isolation in Promise and Future via an :args option Continued to update intermittently failing tests Release v0.7.2 (24 January 2015) New Semaphore class based on java.util.concurrent.Semaphore New Promise.all? and Promise.any? class methods Renamed :overflow_policy on thread pools to :fallback_policy Thread pools still accept the :overflow_policy option but display a warning Thread pools now implement fallback_policy behavior when not running (rather than universally rejecting tasks) Fixed minor set_deref_options constructor bug in Promise class Fixed minor require bug in ThreadLocalVar class Fixed race condition bug in TimerSet class Fixed race condition bug in TimerSet class Fixed signal bug in TimerSet#post method Numerous non-functional updates to clear warning when running in debug mode Fixed more intermittently failing tests Tests now run on new Travis build environment Multiple documentation updates Release v0.7.1 (4 December 2014) Please see the roadmap for more information on the next planned release. Added flat_map method to Promise Added zip method to Promise Fixed bug with logging in Actor Improvements to Promise tests Removed actor-experimental warning Added an IndirectImmediateExecutor class Allow disabling auto termination of global executors Fix thread leaking in ThreadLocalVar (uses Ref gem on non-JRuby systems) Fix thread leaking when pruning pure-Ruby thread pools Prevent Actor from using an ImmediateExecutor (causes deadlock) Added missing synchronizations to TimerSet Fixed bug with return value of Concurrent::Actor::Utils::Pool#ask Fixed timing bug in TimerTask Fixed bug when creating a JavaThreadPoolExecutor with minimum pool size of zero Removed confusing warning when not using native extenstions Improved documentation Release v0.7.0 (13 August 2014) Merge the atomic gem Pure Ruby MutexAtomic atomic reference class Platform native atomic reference classes CAtomic , JavaAtomic , and RbxAtomic Automated build process Fat binary releases for multiple platforms including Windows (32/64), Linux (32/64), OS X (64-bit), Solaris (64-bit), and JRuby C native CAtomicBoolean C native CAtomicFixnum Refactored intermittently failing tests Added dataflow! and dataflow_with! methods to match Future#value! method Better handling of timeout in Agent Actor Improvements Fine-grained implementation using chain of behaviors. Each behavior is responsible for single aspect like: Termination , Pausing , Linking , Supervising , etc. Users can create custom Actors easily based on their needs. Supervision was added. RestartingContext will pause on error waiting on its supervisor to decide what to do next ( options are :terminate! , :resume! , :reset! , :restart! ). Supervising behavior also supports strategies :one_for_one and :one_for_all . Linking was added to be able to monitor actor's events like: :terminated , :paused , :restarted , etc. Dead letter routing added. Rejected envelopes are collected in a configurable actor (default: Concurrent::Actor.root.ask!(:dead_letter_routing) ) Old Actor class removed and replaced by new implementation previously called Actress . Actress was kept as an alias for Actor to keep compatibility. Utils::Broadcast actor which allows Publish\u2013subscribe pattern. More executors for managing serialized operations SerializedExecution mixin module SerializedExecutionDelegator for serializing any executor Updated Async with serialized execution Updated ImmediateExecutor and PerThreadExecutor with full executor service lifecycle Added a Delay to root Actress initialization Minor bug fixes to thread pools Refactored many intermittently failing specs Removed Java interop warning executor.rb:148 warning: ambiguous Java methods found, using submit(java.lang.Runnable) Fixed minor bug in RubyCachedThreadPool overflow policy Updated tests to use RSpec 3.0 Removed deprecated Actor class Better support for Rubinius Release v0.6.1 (14 June 2014) Many improvements to Concurrent::Actress Bug fixes to Concurrent::RubyThreadPoolExecutor Fixed several brittle tests Moved documentation to http://ruby-concurrency.github.io/concurrent-ruby/frames.html Release v0.6.0 (25 May 2014) Added Concurrent::Observable to encapsulate our thread safe observer sets Improvements to new Channel Major improvements to CachedThreadPool and FixedThreadPool Added SingleThreadExecutor Added Current::timer function Added TimerSet executor Added AtomicBoolean ScheduledTask refactoring Pure Ruby and JRuby-optimized PriorityQueue classes Updated Agent behavior to more closely match Clojure Observer sets support block callbacks to the add_observer method New algorithm for thread creation in RubyThreadPoolExecutor Minor API updates to Event Rewritten TimerTask now an Executor instead of a Runnable Fixed many brittle specs Renamed FixedThreadPool and CachedThreadPool to RubyFixedThreadPool and RubyCachedThreadPool Created JRuby optimized JavaFixedThreadPool and JavaCachedThreadPool Consolidated fixed thread pool tests into spec/concurrent/fixed_thread_pool_shared.rb and spec/concurrent/cached_thread_pool_shared.rb FixedThreadPool now subclasses RubyFixedThreadPool or JavaFixedThreadPool as appropriate CachedThreadPool now subclasses RubyCachedThreadPool or JavaCachedThreadPool as appropriate New Delay class Concurrent::processor_count helper function New Async module Renamed NullThreadPool to PerThreadExecutor Deprecated Channel (we are planning a new implementation based on Go ) Added gem-level configuration Deprecated $GLOBAL_THREAD_POOL in lieu of gem-level configuration Removed support for Ruby 1.9.2 New RubyThreadPoolExecutor and JavaThreadPoolExecutor classes All thread pools now extend the appropriate thread pool executor classes All thread pools now support :overflow_policy (based on Java's reject policies ) Deprecated UsesGlobalThreadPool in lieu of explicit :executor option (dependency injection) on Future , Promise , and Agent Added Concurrent::dataflow_with(executor, *inputs) method to support executor dependency injection for dataflow Software transactional memory with TVar and Concurrent::atomically First implementation of new, high-performance Channel Actor is deprecated in favor of new experimental actor implementation #73 . To avoid namespace collision it is living in Actress namespace until Actor is removed in next release. Release v0.5.0 This is the most significant release of this gem since its inception. This release includes many improvements and optimizations. It also includes several bug fixes. The major areas of focus for this release were: Stability improvements on Ruby versions with thread-level parallelism ( JRuby and Rubinius ) Creation of new low-level concurrency abstractions Internal refactoring to use the new low-level abstractions Most of these updates had no effect on the gem API. There are a few notable exceptions which were unavoidable. Please read the release notes for more information. Specific changes include: New class IVar New class MVar New class ThreadLocalVar New class AtomicFixnum New class method dataflow New class Condition New class CountDownLatch New class DependencyCounter New class SafeTaskExecutor New class CopyOnNotifyObserverSet New class CopyOnWriteObserverSet Future updated with execute API ScheduledTask updated with execute API New Promise API Future now extends IVar Postable#post? now returns an IVar Thread safety fixes to Dereferenceable Thread safety fixes to Obligation Thread safety fixes to Supervisor Thread safety fixes to Event Various other thread safety (race condition) fixes Refactored brittle tests Implemented pending tests Added JRuby and Rubinius as Travis CI build targets Added CodeClimate code review Improved YARD documentation","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#current","text":"","title":"Current"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v1110","text":"concurrent-ruby: (#951) Set the Ruby compatibility version at 2.2 (#939, #933) The caller_runs fallback policy no longer blocks reads from the job queue by worker threads (#938, #761, #652) You can now explicitly prune_pool a thread pool (Sylvain Joyeux) (#937, #757, #670) We switched the Yahoo stock API for demos to Alpha Vantage (Gustavo Caso) (#932, #931) We changed how SafeTaskExecutor handles local jump errors (Aaron Jensen) (#927) You can use keyword arguments in your initialize when using Async (Matt Larraz) (#926, #639) We removed timeout from TimerTask because it wasn't sound, and now it's a no-op with a warning (Jacob Atzen) (#919) If you double-lock a re-entrant read-write lock, we promote to locked for writing (zp yuan) (#915) monotonic_time now accepts an optional unit parameter, as Ruby's clock_gettime (Jean Boussier)","title":"Release v1.1.10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v119-5-jun-2021","text":"concurrent-ruby: (#866) Child promise state not set to :pending immediately after #execute when parent has completed (#905, #872) Fix RubyNonConcurrentPriorityQueue#delete method (2df0337d) Make sure locks are not shared on shared when objects are dup/cloned (#900, #906, #796, #847, #911) Fix Concurrent::Set tread-safety issues on CRuby (#907) Add new ConcurrentMap backend for TruffleRuby","title":"Release v1.1.9 (5 Jun 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v118-20-january-2021","text":"concurrent-ruby: (#885) Fix race condition in TVar for stale reads (#884) RubyThreadLocalVar: Do not iterate over hash which might conflict with new pair addition","title":"Release v1.1.8 (20 January 2021)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v117-6-august-2020","text":"concurrent-ruby: (#879) Consider falsy value on Concurrent::Map#compute_if_absent for fast non-blocking path (#876) Reset Async queue on forking, makes Async fork-safe (#856) Avoid running problematic code in RubyThreadLocalVar on MRI that occasionally results in segfault (#853) Introduce ThreadPoolExecutor without a Queue","title":"Release v1.1.7 (6 August 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v116-edge-v060-10-feb-2020","text":"concurrent-ruby: (#841) Concurrent.disable_at_exit_handlers! is no longer needed and was deprecated. (#841) AbstractExecutorService#auto_terminate= was deprecated and has no effect. Set :auto_terminate option instead when executor is initialized.","title":"Release v1.1.6, edge v0.6.0 (10 Feb 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v116pre1-edge-v060pre1-26-jan-2020","text":"concurrent-ruby: (#828) Allow to name executors, the name is also used to name their threads (#838) Implement #dup and #clone for structs (#821) Safer finalizers for thread local variables Documentation fixes (#814) Use Ruby's Etc.nprocessors if available (#812) Fix directory structure not to mess with packaging tools (#840) Fix termination of pools on JRuby concurrent-ruby-edge: Add WrappingExecutor (#830)","title":"Release v1.1.6.pre1, edge v0.6.0.pre1 (26 Jan 2020)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v115-edge-v050-10-mar-2019","text":"concurrent-ruby: fix potential leak of context on JRuby and Java 7 concurrent-ruby-edge: Add finalized Concurrent::Cancellation Add finalized Concurrent::Throttle Add finalized Concurrent::Promises::Channel Add new Concurrent::ErlangActor","title":"Release v1.1.5, edge v0.5.0 (10 Mar 2019)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v114-14-dec-2018","text":"(#780) Remove java_alias of 'submit' method of Runnable to let executor service work on java 11 (#776) Fix NameError on defining a struct with a name which is already taken in an ancestor","title":"Release v1.1.4 (14 Dec 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v113-7-nov-2018","text":"(#775) fix partial require of the gem (although not officially supported)","title":"Release v1.1.3 (7 Nov 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v112-6-nov-2018","text":"(#773) more defensive 1.9.3 support","title":"Release v1.1.2 (6 Nov 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v111-edge-v041-1-nov-2018","text":"(#768) add support for 1.9.3 back","title":"Release v1.1.1, edge v0.4.1 (1 Nov 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v110-edge-v040-31-oct-2018-yanked","text":"(#768) yanked because of issues with removed 1.9.3 support","title":"Release v1.1.0, edge v0.4.0 (31 OCt 2018) (yanked)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v110pre2-edge-v040pre2-18-sep-2018","text":"concurrent-ruby: fixed documentation and README links fix Set for TruffleRuby and Rubinius use properly supported TruffleRuby APIs concurrent-ruby-edge: add Promises.zip_futures_over_on","title":"Release v1.1.0.pre2, edge v0.4.0.pre2 (18 Sep 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v110pre1-edge-v040pre1-15-aug-2018","text":"concurrent-ruby: requires at least Ruby 2.0 Promises are moved from concurrent-ruby-edge to concurrent-ruby Add support for TruffleRuby (#734) Fix Array/Hash/Set construction broken on TruffleRuby AtomicReference fixed CI stabilization remove sharp dependency edge -> core remove warnings documentation updates Exchanger is no longer documented as edge since it was already available in concurrent-ruby (#644) Fix Map#each and #each_pair not returning enumerator outside of MRI (#659) Edge promises fail during error handling (#741) Raise on recursive Delay#value call (#727) #717 fix global IO executor on JRuby (#740) Drop support for CRuby 1.9, JRuby 1.7, Rubinius. (#737) Move AtomicMarkableReference out of Edge (#708) Prefer platform specific memory barriers (#735) Fix wrong expected exception in channel spec assertion (#729) Allow executor option in Promise#then (#725) fix timeout check to use timeout_interval (#719) update engine detection (#660) Add specs for Promise#zip/Promise.zip ordering (#654) Promise.zip execution changes (#666) Add thread safe set implementation (#651) #699 #to_s, #inspect should not output negative object IDs. (#685) Avoid RSpec warnings about raise_error (#680) Avoid RSpec monkey patching, persist spec results locally, use RSpec v3.7.0 (#665) Initialize the monitor for new subarrays on Rubinius (#661) Fix error handling in edge promises concurrent-ruby-edge: (#659) Edge promises fail during error handling Edge files clearly separated in lib-edge added ReInclude","title":"Release v1.1.0.pre1, edge v0.4.0.pre1 (15 Aug 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v105-edge-v031-26-feb-2017","text":"concurrent-ruby: Documentation for Event and Semaphore Use Unsafe#fullFence and #loadFence directly since the shortcuts were removed in JRuby Do not depend on org.jruby.util.unsafe.UnsafeHolder concurrent-ruby-edge: (#620) Actors on Pool raise an error (#624) Delayed promises did not interact correctly with flatting Fix arguments yielded by callback methods Overridable default executor in promises factory methods Asking actor to terminate will always resolve to true","title":"Release v1.0.5, edge v0.3.1 (26 Feb 2017)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v104-edge-v030-27-dec-2016","text":"concurrent-ruby: Nothing concurrent-ruby-edge: New promises' API renamed, lots of improvements, edge bumped to 0.3.0 Incompatible with previous 0.2.3 version see https://github.com/ruby-concurrency/concurrent-ruby/pull/522","title":"Release v1.0.4, edge v0.3.0 (27 Dec 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v103-17-dec-2016","text":"Trigger execution of flattened delayed futures Avoid forking for processor_count if possible Semaphore Mutex and JRuby parity Adds Map#each as alias to Map#each_pair Fix uninitialized instance variables Make Fixnum, Bignum merger ready Allows Promise#then to receive an executor TimerSet now survives a fork Reject promise on any exception Allow ThreadLocalVar to be initialized with a block Support Alpha with Concurrent::processor_count Fixes format-security error when compiling ruby_193_compatible.h Concurrent::Atom#swap fixed: reraise the exceptions from block","title":"Release v1.0.3 (17 Dec 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v102-2-may-2016","text":"Fix bug with Concurrent::Map MRI backend #inspect method Fix bug with Concurrent::Map MRI backend using Hash#value? Improved documentation and examples Minor updates to Edge","title":"Release v1.0.2 (2 May 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v101-27-february-2016","text":"Fix \"uninitialized constant Concurrent::ReentrantReadWriteLock\" error. Better handling of autoload vs. require . Improved API for Edge Future zipping. Fix reference leak in Edge Future constructor . Fix bug which prevented thread pools from surviving a fork . Fix bug in which TimerTask did not correctly specify all its dependencies. Improved support for JRuby+Truffle Improved error messages. Improved documentation. Updated README and CONTRIBUTING.","title":"Release v1.0.1 (27 February 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v100-13-november-2015","text":"Rename attr_volatile_with_cas to attr_atomic Add clear_each to LockFreeStack Update AtomicReference documentation Further updates and improvements to the synchronization layer. Performance and memory usage performance with Actor logging. Fixed ThreadPoolExecutor task count methods. Improved Async performance for both short and long-lived objects. Fixed bug in LockFreeLinkedSet . Fixed bug in which Agent#await triggered a validation failure. Further Channel updates. Adopted a project Code of Conduct Cleared interpreter warnings Fixed bug in ThreadPoolExecutor task count methods Fixed bug in 'LockFreeLinkedSet' Improved Java extension loading Handle Exception children in Edge::Future Continued improvements to channel Removed interpreter warnings. Shared constants now in lib/concurrent/constants.rb Refactored many tests. Improved synchronization layer/memory model documentation. Bug fix in Edge Future#flat Brand new Channel implementation in Edge gem. Simplification of RubySingleThreadExecutor Async improvements Each object uses its own SingleThreadExecutor instead of the global thread pool. No longers supports executor injection Much better documentation Atom updates No longer Dereferenceable Now Observable Added a #reset method Brand new Agent API and implementation. Now functionally equivalent to Clojure. Continued improvements to the synchronization layer Merged in the thread_safe gem Concurrent::Array Concurrent::Hash Concurrent::Map (formerly ThreadSafe::Cache) Concurrent::Tuple Minor improvements to Concurrent::Map Complete rewrite of Exchanger Removed all deprecated code (classes, methods, constants, etc.) Updated Agent, MutexAtomic, and BufferedChannel to inherit from Synchronization::Object. Many improved tests Some internal reorganization","title":"Release v1.0.0 (13 November 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v091-09-august-2015","text":"Fixed a Rubiniux bug in synchronization object Fixed all interpreter warnings (except circular references) Fixed require statements when requiring Atom alone Significantly improved ThreadLocalVar on non-JRuby platforms Fixed error handling in Edge Concurrent.zip AtomicFixnum methods #increment and #decrement now support optional delta New AtomicFixnum#update method Minor optimizations in ReadWriteLock New ReentrantReadWriteLock class ThreadLocalVar#bind method is now public Refactored many tests","title":"Release v0.9.1 (09 August 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v090-10-july-2015","text":"Updated AtomicReference AtomicReference#try_update now simply returns instead of raising exception AtomicReference#try_update! was added to raise exceptions if an update fails. Note: this is the same behavior as the old try_update Pure Java implementations of AtomicBoolean AtomicFixnum Semaphore Fixed bug when pruning Ruby thread pools Fixed bug in time calculations within ScheduledTask Default count in CountDownLatch to 1 Use monotonic clock for all timers via Concurrent.monotonic_time Use Process.clock_gettime(Process::CLOCK_MONOTONIC) when available Fallback to java.lang.System.nanoTime() on unsupported JRuby versions Pure Ruby implementation for everything else Effects Concurrent.timer , Concurrent.timeout , TimerSet , TimerTask , and ScheduledTask Deprecated all clock-time based timer scheduling Only support scheduling by delay Effects Concurrent.timer , TimerSet , and ScheduledTask Added new ReadWriteLock class Consistent at_exit behavior for Java and Ruby thread pools. Added at_exit handler to Ruby thread pools (already in Java thread pools) Ruby handler stores the object id and retrieves from ObjectSpace JRuby disables ObjectSpace by default so that handler stores the object reference Added a :stop_on_exit option to thread pools to enable/disable at_exit handler Updated thread pool docs to better explain shutting down thread pools Simpler :executor option syntax for all abstractions which support this option Added Executor#auto_terminate? predicate method (for thread pools) Added at_exit handler to TimerSet Simplified auto-termination of the global executors Can now disable auto-termination of global executors Added shutdown/kill/wait_for_termination variants for global executors Can now disable auto-termination for all executors (the nuclear option) Simplified auto-termination of the global executors Deprecated terms \"task pool\" and \"operation pool\" New terms are \"io executor\" and \"fast executor\" New functions added with new names Deprecation warnings added to functions referencing old names Moved all thread pool related functions from Concurrent::Configuration to Concurrent Old functions still exist with deprecation warnings New functions have updated names as appropriate All high-level abstractions default to the \"io executor\" Fixed bug in Actor causing it to prematurely warm global thread pools on gem load This also fixed a RejectedExecutionError bug when running with minitest/autorun via JRuby Moved global logger up to the Concurrent namespace and refactored the code Optimized the performance of Delay Fixed a bug in which no executor option on construction caused block execution on a global thread pool Numerous improvements and bug fixes to TimerSet Fixed deadlock of Future when the handler raises Exception Added shared specs for more classes New concurrency abstractions including: Atom Maybe ImmutableStruct MutableStruct SettableStruct Created an Edge gem for unstable abstractions including Actor Agent Channel Exchanger LazyRegister new Future Framework http://ruby-concurrency.github.io/concurrent-ruby/Concurrent/Edge.html - unified implementation of Futures and Promises which combines Features of previous Future , Promise , IVar , Event , Probe , dataflow , Delay , TimerTask into single framework. It uses extensively new synchronization layer to make all the paths lock-free with exception of blocking threads on #wait . It offers better performance and does not block threads when not required. Actor framework changes: fixed reset loop in Pool Pool can use any actor as a worker, abstract worker class is no longer needed. Actor events not have format [:event_name, *payload] instead of just the Symbol. Actor now uses new Future/Promise Framework instead of IVar for better interoperability Behaviour definition array was simplified to [BehaviourClass1, [BehaviourClass2, *initialization_args]] Linking behavior responds to :linked message by returning array of linked actors Supervised behavior is removed in favour of just Linking RestartingContext is supervised by default now, supervise: true is not required any more Events can be private and public, so far only difference is that Linking will pass to linked actors only public messages. Adding private :restarting and :resetting events which are send before the actor restarts or resets allowing to add callbacks to cleanup current child actors. Print also object_id in Reference to_s Add AbstractContext#default_executor to be able to override executor class wide Add basic IO example Documentation somewhat improved All messages should have same priority. It's now possible to send actor << job1 << job2 << :terminate! and be sure that both jobs are processed first. Refactored Channel to use newer synchronization objects Added #reset and #cancel methods to TimerSet Added #cancel method to Future and ScheduledTask Refactored TimerSet to use ScheduledTask Updated Async with a factory that initializes the object Deprecated Concurrent.timer and Concurrent.timeout Reduced max threads on pure-Ruby thread pools (abends around 14751 threads) Moved many private/internal classes/modules into \"namespace\" modules Removed brute-force killing of threads in tests Fixed a thread pool bug when the operating system cannot allocate more threads","title":"Release v0.9.0 (10 July 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v080-25-january-2015","text":"C extension for MRI have been extracted into the concurrent-ruby-ext companion gem. Please see the README for more detail. Better variable isolation in Promise and Future via an :args option Continued to update intermittently failing tests","title":"Release v0.8.0 (25 January 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v072-24-january-2015","text":"New Semaphore class based on java.util.concurrent.Semaphore New Promise.all? and Promise.any? class methods Renamed :overflow_policy on thread pools to :fallback_policy Thread pools still accept the :overflow_policy option but display a warning Thread pools now implement fallback_policy behavior when not running (rather than universally rejecting tasks) Fixed minor set_deref_options constructor bug in Promise class Fixed minor require bug in ThreadLocalVar class Fixed race condition bug in TimerSet class Fixed race condition bug in TimerSet class Fixed signal bug in TimerSet#post method Numerous non-functional updates to clear warning when running in debug mode Fixed more intermittently failing tests Tests now run on new Travis build environment Multiple documentation updates","title":"Release v0.7.2 (24 January 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v071-4-december-2014","text":"Please see the roadmap for more information on the next planned release. Added flat_map method to Promise Added zip method to Promise Fixed bug with logging in Actor Improvements to Promise tests Removed actor-experimental warning Added an IndirectImmediateExecutor class Allow disabling auto termination of global executors Fix thread leaking in ThreadLocalVar (uses Ref gem on non-JRuby systems) Fix thread leaking when pruning pure-Ruby thread pools Prevent Actor from using an ImmediateExecutor (causes deadlock) Added missing synchronizations to TimerSet Fixed bug with return value of Concurrent::Actor::Utils::Pool#ask Fixed timing bug in TimerTask Fixed bug when creating a JavaThreadPoolExecutor with minimum pool size of zero Removed confusing warning when not using native extenstions Improved documentation","title":"Release v0.7.1 (4 December 2014)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v070-13-august-2014","text":"Merge the atomic gem Pure Ruby MutexAtomic atomic reference class Platform native atomic reference classes CAtomic , JavaAtomic , and RbxAtomic Automated build process Fat binary releases for multiple platforms including Windows (32/64), Linux (32/64), OS X (64-bit), Solaris (64-bit), and JRuby C native CAtomicBoolean C native CAtomicFixnum Refactored intermittently failing tests Added dataflow! and dataflow_with! methods to match Future#value! method Better handling of timeout in Agent Actor Improvements Fine-grained implementation using chain of behaviors. Each behavior is responsible for single aspect like: Termination , Pausing , Linking , Supervising , etc. Users can create custom Actors easily based on their needs. Supervision was added. RestartingContext will pause on error waiting on its supervisor to decide what to do next ( options are :terminate! , :resume! , :reset! , :restart! ). Supervising behavior also supports strategies :one_for_one and :one_for_all . Linking was added to be able to monitor actor's events like: :terminated , :paused , :restarted , etc. Dead letter routing added. Rejected envelopes are collected in a configurable actor (default: Concurrent::Actor.root.ask!(:dead_letter_routing) ) Old Actor class removed and replaced by new implementation previously called Actress . Actress was kept as an alias for Actor to keep compatibility. Utils::Broadcast actor which allows Publish\u2013subscribe pattern. More executors for managing serialized operations SerializedExecution mixin module SerializedExecutionDelegator for serializing any executor Updated Async with serialized execution Updated ImmediateExecutor and PerThreadExecutor with full executor service lifecycle Added a Delay to root Actress initialization Minor bug fixes to thread pools Refactored many intermittently failing specs Removed Java interop warning executor.rb:148 warning: ambiguous Java methods found, using submit(java.lang.Runnable) Fixed minor bug in RubyCachedThreadPool overflow policy Updated tests to use RSpec 3.0 Removed deprecated Actor class Better support for Rubinius","title":"Release v0.7.0 (13 August 2014)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v061-14-june-2014","text":"Many improvements to Concurrent::Actress Bug fixes to Concurrent::RubyThreadPoolExecutor Fixed several brittle tests Moved documentation to http://ruby-concurrency.github.io/concurrent-ruby/frames.html","title":"Release v0.6.1 (14 June 2014)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v060-25-may-2014","text":"Added Concurrent::Observable to encapsulate our thread safe observer sets Improvements to new Channel Major improvements to CachedThreadPool and FixedThreadPool Added SingleThreadExecutor Added Current::timer function Added TimerSet executor Added AtomicBoolean ScheduledTask refactoring Pure Ruby and JRuby-optimized PriorityQueue classes Updated Agent behavior to more closely match Clojure Observer sets support block callbacks to the add_observer method New algorithm for thread creation in RubyThreadPoolExecutor Minor API updates to Event Rewritten TimerTask now an Executor instead of a Runnable Fixed many brittle specs Renamed FixedThreadPool and CachedThreadPool to RubyFixedThreadPool and RubyCachedThreadPool Created JRuby optimized JavaFixedThreadPool and JavaCachedThreadPool Consolidated fixed thread pool tests into spec/concurrent/fixed_thread_pool_shared.rb and spec/concurrent/cached_thread_pool_shared.rb FixedThreadPool now subclasses RubyFixedThreadPool or JavaFixedThreadPool as appropriate CachedThreadPool now subclasses RubyCachedThreadPool or JavaCachedThreadPool as appropriate New Delay class Concurrent::processor_count helper function New Async module Renamed NullThreadPool to PerThreadExecutor Deprecated Channel (we are planning a new implementation based on Go ) Added gem-level configuration Deprecated $GLOBAL_THREAD_POOL in lieu of gem-level configuration Removed support for Ruby 1.9.2 New RubyThreadPoolExecutor and JavaThreadPoolExecutor classes All thread pools now extend the appropriate thread pool executor classes All thread pools now support :overflow_policy (based on Java's reject policies ) Deprecated UsesGlobalThreadPool in lieu of explicit :executor option (dependency injection) on Future , Promise , and Agent Added Concurrent::dataflow_with(executor, *inputs) method to support executor dependency injection for dataflow Software transactional memory with TVar and Concurrent::atomically First implementation of new, high-performance Channel Actor is deprecated in favor of new experimental actor implementation #73 . To avoid namespace collision it is living in Actress namespace until Actor is removed in next release.","title":"Release v0.6.0 (25 May 2014)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.10/CHANGELOG/#release-v050","text":"This is the most significant release of this gem since its inception. This release includes many improvements and optimizations. It also includes several bug fixes. The major areas of focus for this release were: Stability improvements on Ruby versions with thread-level parallelism ( JRuby and Rubinius ) Creation of new low-level concurrency abstractions Internal refactoring to use the new low-level abstractions Most of these updates had no effect on the gem API. There are a few notable exceptions which were unavoidable. Please read the release notes for more information. Specific changes include: New class IVar New class MVar New class ThreadLocalVar New class AtomicFixnum New class method dataflow New class Condition New class CountDownLatch New class DependencyCounter New class SafeTaskExecutor New class CopyOnNotifyObserverSet New class CopyOnWriteObserverSet Future updated with execute API ScheduledTask updated with execute API New Promise API Future now extends IVar Postable#post? now returns an IVar Thread safety fixes to Dereferenceable Thread safety fixes to Obligation Thread safety fixes to Supervisor Thread safety fixes to Event Various other thread safety (race condition) fixes Refactored brittle tests Implemented pending tests Added JRuby and Rubinius as Travis CI build targets Added CodeClimate code review Improved YARD documentation","title":"Release v0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/","text":"[ ] Dnsruby Dnsruby is a pure Ruby DNS client library which implements a stub resolver. It aims to comply with all DNS RFCs. Dnsruby presents an enhanced API for DNS. It is based on Ruby's core resolv.rb Resolv API, but has been much extended to provide a complete DNS implementation. Dnsruby runs a single I/O thread to handle all concurrent queries. It is therefore suitable for high volume DNS applications. The following is a (non-exhaustive) list of features : Implemented RRs : A, AAAA, AFSDB, ANY, CAA, CERT, CNAME, DNAME, GPOS, HINFO, ISDN, LOC, MB, MG, MINFO, MR, MX, NAPTR, NS, NSAP, NXT, OPT, PTR, PX, RP, RT, SOA, SPF, SRV, TKEY, TSIG, TXT, WKS, X25, DNSKEY, RRSIG, NSEC, NSEC3, NSEC3PARAM, DS, DLV Generic RR types supported (RFC3597) (Signed) Zone transfer (AXFR and IXFR) supported (Signed) Dynamic updates supported DNSSEC validation supported Dependencies Dnsruby can run with no dependencies. However, if you wish to use TSIG or DNSSEC then the OpenSSL library must be available. This is a part of the Ruby standard library, but appears not to be present on all Ruby platforms. If it is not available, then the test code will not run the tests which require it. Code which attempts to use the library (if it is not present) will raise an exception. Demo Code The demo folder contains some example programs using Dnsruby. These examples include a basic dig tool (rubydig) and a tool to concurrently resolve many names, amongst others. Unit Tests Tests require a current version of minitest (see the .gemspec file for which version is required). In order for the tests to run successfully you may need to have the bundler gem installed and run bundle or bundle install from the project root to install a suitable version of minitest. There are \"online\" and \"offline\" tests. You can use rake to conveniently run the tests. From the project root you can run: rake test # run all tests rake test_offline # run only offline tests rake test_online # run only online tests If you get the following error when running rake test tasks, then you may need to preface the command with bundle exec to ensure that the gem versions specified in Gemfile.lock are used at runtime: bundle exec rake test Usage Help There are a couple of blog articles that might be helpful in understanding how to use Dnsruby. These used to be hosted by Nominet UK, however the original content has been copied to the dnsruby github wiki at : https://github.com/alexdalitz/dnsruby/wiki Contact/Links Link Type Link/Text Author Email alex@caerkettontech.com Github https://github.com/alexdalitz/dnsruby Google Group https://groups.google.com/forum/#!forum/dnsruby Rubygems http://rubygems.org/gems/dnsruby/ Documentation https://www.rubydoc.info/gems/dnsruby/","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#dnsruby","text":"Dnsruby is a pure Ruby DNS client library which implements a stub resolver. It aims to comply with all DNS RFCs. Dnsruby presents an enhanced API for DNS. It is based on Ruby's core resolv.rb Resolv API, but has been much extended to provide a complete DNS implementation. Dnsruby runs a single I/O thread to handle all concurrent queries. It is therefore suitable for high volume DNS applications. The following is a (non-exhaustive) list of features : Implemented RRs : A, AAAA, AFSDB, ANY, CAA, CERT, CNAME, DNAME, GPOS, HINFO, ISDN, LOC, MB, MG, MINFO, MR, MX, NAPTR, NS, NSAP, NXT, OPT, PTR, PX, RP, RT, SOA, SPF, SRV, TKEY, TSIG, TXT, WKS, X25, DNSKEY, RRSIG, NSEC, NSEC3, NSEC3PARAM, DS, DLV Generic RR types supported (RFC3597) (Signed) Zone transfer (AXFR and IXFR) supported (Signed) Dynamic updates supported DNSSEC validation supported","title":"Dnsruby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#dependencies","text":"Dnsruby can run with no dependencies. However, if you wish to use TSIG or DNSSEC then the OpenSSL library must be available. This is a part of the Ruby standard library, but appears not to be present on all Ruby platforms. If it is not available, then the test code will not run the tests which require it. Code which attempts to use the library (if it is not present) will raise an exception.","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#demo-code","text":"The demo folder contains some example programs using Dnsruby. These examples include a basic dig tool (rubydig) and a tool to concurrently resolve many names, amongst others.","title":"Demo Code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#unit-tests","text":"Tests require a current version of minitest (see the .gemspec file for which version is required). In order for the tests to run successfully you may need to have the bundler gem installed and run bundle or bundle install from the project root to install a suitable version of minitest. There are \"online\" and \"offline\" tests. You can use rake to conveniently run the tests. From the project root you can run: rake test # run all tests rake test_offline # run only offline tests rake test_online # run only online tests If you get the following error when running rake test tasks, then you may need to preface the command with bundle exec to ensure that the gem versions specified in Gemfile.lock are used at runtime: bundle exec rake test","title":"Unit Tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#usage-help","text":"There are a couple of blog articles that might be helpful in understanding how to use Dnsruby. These used to be hosted by Nominet UK, however the original content has been copied to the dnsruby github wiki at : https://github.com/alexdalitz/dnsruby/wiki","title":"Usage Help"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/#contactlinks","text":"Link Type Link/Text Author Email alex@caerkettontech.com Github https://github.com/alexdalitz/dnsruby Google Group https://groups.google.com/forum/#!forum/dnsruby Rubygems http://rubygems.org/gems/dnsruby/ Documentation https://www.rubydoc.info/gems/dnsruby/","title":"Contact/Links"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/","text":"Release Notes v.1.61.9 Remove unused net-ftp dependency v.1.61.8 Fix compatability with Ruby 3.1 - thanks @byroot Jean Boussier Get the digdlv demo to enable dnssec v1.61.7 Fix namespace issue from v1.61.6 v1.61.6 RD bit not set on Recursor queries (thanks Sean Dilda!) Handle quoted strings followed by unquoted strings in TXT records do not worry about rogue repeated Ids - just log an error and get on with life Clear Ruby warnings Use GitHub Actions rather than Travis v1.61.5 CAA record fixes - add contactphone and contactemail Fix eprecation warnings v1.61.4 Dnsruby::Name : document .punycode gemspec enhancement add yard build file fix create name include url special characters Fix uninitialized constant error when using via Rails Implement ECDSAP256SHA256 (13) / ECDSAP384SHA384 (14) algorithms for DNSKEY Reinitialize all IANA TAR keys with Dnssec.reset v1.61.3 TCP timeout and port changes v1.61.2 Add new root key v1.61.1 Add Addressable as a gem runtime dependency v1.61.0 Add URI, CDS and CDNSKEY records Supply port to DNS.new as optiona parameter Supply timeout to zone transfer connect Fix multi-line strings Try absolute name as candidate in DNS even if not dot supplied Do not try to generate candidates if no domain is given Handle new OpenSSL interface as well as old Handle new DSA interface fix encode error select thread issue handle encoding errors add punycode support Make sure dnssec is enabled in verifier and also in digroot demo Other minor fixes and changes to test code and infrastructure v1.60.2 Fix deletion of TXT records with spaces in dynamic updates (thanks Sean Dilda) Fix use of non-default ports in Dnsruby::Resolver (thanks Thomas Morgan) Fix NAPTR encoding for null rdata dynamic update packets Fix CAA resource record encoding Avoid changing ruby global thread abort behavior (thanks Brent Cook) v1.60.1 DNSSEC validation switched OFF by default (but can still be switched on) Add APL RR support (thanks Manabu Sonoda) Various test fixes (thanks Keith Bennett) 'include' issues fixed (thanks Keith Bennett!) Fixnum replacement (thanks Keith Bennett) Zone transfer fixes (thanks Manabu Sonoda) Name decoding fix MX record passing error now raised CAA RR support (thanks Richard Luther) TLSA RR support (thanks Manabu Sonoda) v1.60.0 TCP multi-packet support fixed Response 'Message' now included with exception. Docs added CNAME dynamic update fix v1.59.3 Output TXT record multiple strings correctly NONE class encoding fix only add name labels if there are any v1.59.2 Timeout error fix v1.59.1 Support for HMAC SHA512 TSIG keys Fix TCP pipelining tests IDN encoding error returned as Dnsruby::OtherResolvError v1.59.0 Add LICENSE file Add Cache max_size (gihub issue 64) Disable caching for SOA lookups in demo check_soa.rb Fix for invalid nameserver in config Fix encoding for OPT data (thanks Craig Despeaux) Various test system fixes OPT fixes DNSSEC verification failure handling wrt lack of DS chain DNSSEC validation policy name constants Fix for BOGUS DLV chains demo upgrades Resolver hints improvements v1.58.0 Add TCP pipelining (reusing a single TCP connection for multiple requests). Enhance zone reading, including reading data from a string. Add add_answer! method for adding duplicate answers, as needed for an AXFR response. Add support for GPOS and NXT resource records. Test cleanup, including removal of use of Nominet servers, soak_test cleanup. Refactorings: MessageDecoder, Resolv, Resolver (part). Fix zone reader adding unwanted dot to relative hostnames being converted to absolute. Fix default access for tsig options in Resolver. Fix ZoneTransfer not to use deprecated SingleResolver. Fix Resolver bug in parameter to create_tsig_options. Fix tests to always use working copy and not gem. v1.57.0 Add query_raw method as alias for send_plain_message, with option to raise or return error. Fixed a bug in RR hash calculation where TTL should have been ignored but wasn't. Add support for (obsolete) GPOS resource record type. Tweak Travis CI configuration. Fix zone reader for case where a line contains whitespace preceding a comment. Add post install message. Improve README. Moved content of NEWS to RELEASE_NOTES.md. Use git ls-files now to determine files for inclusion in gem. v1.56.0 Drop support for Ruby 1.8, using lambda -> and hash 'key: value' notations. First release since the move from Rubyforge to Github (https://github.com/alexdalitz/dnsruby). Add EDNS client subnet support. Relocate CodeMapper subclasses, Resolv, RR, and RRSet classes. Add Travis CI and coveralls integration. Improve Google IPV6 support. Convert some file names to snake case. Remove trailing whitespace from lines, and ensure that comments have space between '#' and text. Restore test success when running under JRuby. Disabled attempt to connect to Nominet servers, which are no longer available. Convert from test/unit to minitest/autorun to support Ruby 2.1+. Remove setup.rb. Other minor refactoring and improvements to production code, test code, and documentation. v1.53 Validation routine fixes Ruby 1.9 fixes Recursor fixes IPv4 Regex fixes Fixes for A/PTR lookups with IP-like domain name TXT and SSHFP processing fixes Default retry parameters in Resolver more sensible v1.48 Fixed deadlock/performance issue seen on some platforms DNSSEC validation now disabled by default Signed root DS record can be added to validator ITAR support removed multi-line DS/RRSIG reading bug fixed (thanks Marco Davids!) DS algorithms of more than one digit can now be read from string LOC records now parsed correctly HINFO records now parsed correctly v1.42 Complicated TXT and NAPTR records now handled correctly ZoneReader now handles odd escape characters correctly Warns when immediate timeout occurs because no nameservers are configured Easy hmac-sha1/256 options to Resolver#tsig= ZoneReader fixed for \"IN CNAME @\" notations ZoneReader supports wildcards Dnsruby.version method added - currently returns 1.42 v1.41 RFC3597 unknown classes (e.g. CLASS32) now handled correctly in RRSIGs Resolver#do_caching flag added for Resolver-level caching DNSKEY#key_tag now cached - only recalculated when key data changes Bugfix where Resolver would not time queries out if no nameservers were configured Recursor now performs A and AAAA queries in parallel Fix for zero length salt Fixing priming for signed root Fixes for DLV verification Other minor fixes v1.40 Zone file reading support added (Dnsruby::ZoneReader) Name and Label speed-ups CodeMapper speed-ups DHCID RR added LOC presentation format parsing fixed KX RR added Quotations now allowed in text representation for ISDN, X25 and HINFO AFSDB from_string fixes Fixing CERT types and from_string CERT now allows algorithm 0 Fix for DS record comparison HIP RR added Minor bug fixes IPSECKEY RR added Clients can now manipulate Name::Labels","title":"Release Notes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#release-notes","text":"","title":"Release Notes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1619","text":"Remove unused net-ftp dependency","title":"v.1.61.9"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1618","text":"Fix compatability with Ruby 3.1 - thanks @byroot Jean Boussier Get the digdlv demo to enable dnssec","title":"v.1.61.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1617","text":"Fix namespace issue from v1.61.6","title":"v1.61.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1616","text":"RD bit not set on Recursor queries (thanks Sean Dilda!) Handle quoted strings followed by unquoted strings in TXT records do not worry about rogue repeated Ids - just log an error and get on with life Clear Ruby warnings Use GitHub Actions rather than Travis","title":"v1.61.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1615","text":"CAA record fixes - add contactphone and contactemail Fix eprecation warnings","title":"v1.61.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1614","text":"Dnsruby::Name : document .punycode gemspec enhancement add yard build file fix create name include url special characters Fix uninitialized constant error when using via Rails Implement ECDSAP256SHA256 (13) / ECDSAP384SHA384 (14) algorithms for DNSKEY Reinitialize all IANA TAR keys with Dnssec.reset","title":"v1.61.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1613","text":"TCP timeout and port changes","title":"v1.61.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1612","text":"Add new root key","title":"v1.61.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1611","text":"Add Addressable as a gem runtime dependency","title":"v1.61.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1610","text":"Add URI, CDS and CDNSKEY records Supply port to DNS.new as optiona parameter Supply timeout to zone transfer connect Fix multi-line strings Try absolute name as candidate in DNS even if not dot supplied Do not try to generate candidates if no domain is given Handle new OpenSSL interface as well as old Handle new DSA interface fix encode error select thread issue handle encoding errors add punycode support Make sure dnssec is enabled in verifier and also in digroot demo Other minor fixes and changes to test code and infrastructure","title":"v1.61.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1602","text":"Fix deletion of TXT records with spaces in dynamic updates (thanks Sean Dilda) Fix use of non-default ports in Dnsruby::Resolver (thanks Thomas Morgan) Fix NAPTR encoding for null rdata dynamic update packets Fix CAA resource record encoding Avoid changing ruby global thread abort behavior (thanks Brent Cook)","title":"v1.60.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1601","text":"DNSSEC validation switched OFF by default (but can still be switched on) Add APL RR support (thanks Manabu Sonoda) Various test fixes (thanks Keith Bennett) 'include' issues fixed (thanks Keith Bennett!) Fixnum replacement (thanks Keith Bennett) Zone transfer fixes (thanks Manabu Sonoda) Name decoding fix MX record passing error now raised CAA RR support (thanks Richard Luther) TLSA RR support (thanks Manabu Sonoda)","title":"v1.60.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1600","text":"TCP multi-packet support fixed Response 'Message' now included with exception. Docs added CNAME dynamic update fix","title":"v1.60.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1593","text":"Output TXT record multiple strings correctly NONE class encoding fix only add name labels if there are any","title":"v1.59.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1592","text":"Timeout error fix","title":"v1.59.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1591","text":"Support for HMAC SHA512 TSIG keys Fix TCP pipelining tests IDN encoding error returned as Dnsruby::OtherResolvError","title":"v1.59.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1590","text":"Add LICENSE file Add Cache max_size (gihub issue 64) Disable caching for SOA lookups in demo check_soa.rb Fix for invalid nameserver in config Fix encoding for OPT data (thanks Craig Despeaux) Various test system fixes OPT fixes DNSSEC verification failure handling wrt lack of DS chain DNSSEC validation policy name constants Fix for BOGUS DLV chains demo upgrades Resolver hints improvements","title":"v1.59.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1580","text":"Add TCP pipelining (reusing a single TCP connection for multiple requests). Enhance zone reading, including reading data from a string. Add add_answer! method for adding duplicate answers, as needed for an AXFR response. Add support for GPOS and NXT resource records. Test cleanup, including removal of use of Nominet servers, soak_test cleanup. Refactorings: MessageDecoder, Resolv, Resolver (part). Fix zone reader adding unwanted dot to relative hostnames being converted to absolute. Fix default access for tsig options in Resolver. Fix ZoneTransfer not to use deprecated SingleResolver. Fix Resolver bug in parameter to create_tsig_options. Fix tests to always use working copy and not gem.","title":"v1.58.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1570","text":"Add query_raw method as alias for send_plain_message, with option to raise or return error. Fixed a bug in RR hash calculation where TTL should have been ignored but wasn't. Add support for (obsolete) GPOS resource record type. Tweak Travis CI configuration. Fix zone reader for case where a line contains whitespace preceding a comment. Add post install message. Improve README. Moved content of NEWS to RELEASE_NOTES.md. Use git ls-files now to determine files for inclusion in gem.","title":"v1.57.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v1560","text":"Drop support for Ruby 1.8, using lambda -> and hash 'key: value' notations. First release since the move from Rubyforge to Github (https://github.com/alexdalitz/dnsruby). Add EDNS client subnet support. Relocate CodeMapper subclasses, Resolv, RR, and RRSet classes. Add Travis CI and coveralls integration. Improve Google IPV6 support. Convert some file names to snake case. Remove trailing whitespace from lines, and ensure that comments have space between '#' and text. Restore test success when running under JRuby. Disabled attempt to connect to Nominet servers, which are no longer available. Convert from test/unit to minitest/autorun to support Ruby 2.1+. Remove setup.rb. Other minor refactoring and improvements to production code, test code, and documentation.","title":"v1.56.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v153","text":"Validation routine fixes Ruby 1.9 fixes Recursor fixes IPv4 Regex fixes Fixes for A/PTR lookups with IP-like domain name TXT and SSHFP processing fixes Default retry parameters in Resolver more sensible","title":"v1.53"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v148","text":"Fixed deadlock/performance issue seen on some platforms DNSSEC validation now disabled by default Signed root DS record can be added to validator ITAR support removed multi-line DS/RRSIG reading bug fixed (thanks Marco Davids!) DS algorithms of more than one digit can now be read from string LOC records now parsed correctly HINFO records now parsed correctly","title":"v1.48"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v142","text":"Complicated TXT and NAPTR records now handled correctly ZoneReader now handles odd escape characters correctly Warns when immediate timeout occurs because no nameservers are configured Easy hmac-sha1/256 options to Resolver#tsig= ZoneReader fixed for \"IN CNAME @\" notations ZoneReader supports wildcards Dnsruby.version method added - currently returns 1.42","title":"v1.42"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v141","text":"RFC3597 unknown classes (e.g. CLASS32) now handled correctly in RRSIGs Resolver#do_caching flag added for Resolver-level caching DNSKEY#key_tag now cached - only recalculated when key data changes Bugfix where Resolver would not time queries out if no nameservers were configured Recursor now performs A and AAAA queries in parallel Fix for zero length salt Fixing priming for signed root Fixes for DLV verification Other minor fixes","title":"v1.41"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/dnsruby-1.61.9/RELEASE_NOTES/#v140","text":"Zone file reading support added (Dnsruby::ZoneReader) Name and Label speed-ups CodeMapper speed-ups DHCID RR added LOC presentation format parsing fixed KX RR added Quotations now allowed in text representation for ISDN, X25 and HINFO AFSDB from_string fixes Fixing CERT types and from_string CERT now allows algorithm 0 Fix for DS record comparison HIP RR added Minor bug fixes IPSECKEY RR added Clients can now manipulate Name::Labels","title":"v1.40"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/","text":"EM-WebSocket EventMachine based, async, Ruby WebSocket server. Take a look at examples directory, or check out the blog post: Ruby & Websockets: TCP for the Web . Simple server example require 'em-websocket' EM.run { EM::WebSocket.run(:host => \"0.0.0.0\", :port => 8080) do |ws| ws.onopen { |handshake| puts \"WebSocket connection open\" # Access properties on the EM::WebSocket::Handshake object, e.g. # path, query_string, origin, headers # Publish message to the client ws.send \"Hello Client, you connected to #{handshake.path}\" } ws.onclose { puts \"Connection closed\" } ws.onmessage { |msg| puts \"Recieved message: #{msg}\" ws.send \"Pong: #{msg}\" } end } Protocols supported, and protocol specific functionality Supports all WebSocket protocols in use in the wild (and a few that are not): drafts 75, 76, 1-17, rfc. While some of the changes between protocols are unimportant from the point of view of application developers, a few drafts did introduce new functionality. It's possible to easily test for this functionality by using Ping & pong supported Call ws.pingable? to check whether ping & pong is supported by the protocol in use. It's possible to send a ping frame ( ws.ping(body = '') ), which the client must respond to with a pong, or the server can send an unsolicited pong frame ( ws.pong(body = '') ) which the client should not respond to. These methods can be used regardless of protocol version; they return true if the protocol supports ping&pong or false otherwise. When receiving a ping, the server will automatically respond with a pong as the spec requires (so you should not write an onping handler that replies with a pong), however it is possible to bind to ping & pong events if desired by using the onping and onpong methods. Healthchecks It's possible to send a regular HTTP GET request to the /healthcheck endpoint and receive a 200 response from the server. Close codes and reasons A WebSocket connection can be closed cleanly, regardless of protocol, by calling ws.close(code = nil, body = nil) . Early protocols just close the TCP connection, draft 3 introduced a close handshake, and draft 6 added close codes and reasons to the close handshake. Call ws.supports_close_codes? to check whether close codes are supported (i.e. the protocol version is 6 or above). The onclose callback is passed a hash which may contain following keys (depending on the protocol version): was_clean : boolean indicating whether the connection was closed via the close handshake. code : the close code. There are two special close codes which the server may set (as defined in the WebSocket spec): 1005: no code was supplied 1006: abnormal closure (the same as was_clean: false ) reason : the close reason Acceptable close codes are defined in the WebSocket rfc ( http://tools.ietf.org/html/rfc6455#section-7.4 ). The following codes can be supplies when calling ws.close(code) : 1000: a generic normal close range 3xxx: reserved for libraries, frameworks, and applications (and can be registered with IANA) range 4xxx: for private use If unsure use a code in the 4xxx range. em-websocket may also close a connection with one of the following close codes: 1002: WebSocket protocol error. 1009: Message too big to process. By default em-websocket will accept frames up to 10MB in size. If a frame is larger than this the connection will be closed without reading the frame data. The limit can be overriden globally ( EM::WebSocket.max_frame_size = bytes ) or on a specific connection ( ws.max_frame_size = bytes ). Secure server It is possible to accept secure wss:// connections by passing :secure => true when opening the connection. Pass a :tls_options hash containing keys as described in http://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls Warning : Safari 5 does not currently support prompting on untrusted SSL certificates therefore using a self signed certificate may leave you scratching your head. EM::WebSocket.start({ :host => \"0.0.0.0\", :port => 443, :secure => true, :tls_options => { :private_key_file => \"/private/key\", :cert_chain_file => \"/ssl/certificate\" } }) do |ws| # ... end It's possible to check whether an incoming connection is secure by reading handshake.secure? in the onopen callback. Running behind an SSL Proxy/Terminator, like Stunnel The :secure_proxy => true option makes it possible to use em-websocket behind a secure SSL proxy/terminator like Stunnel which does the actual encryption & decryption. Note that this option is only required to support drafts 75 & 76 correctly (e.g. Safari 5.1.x & earlier, and Safari on iOS 5.x & earlier). EM::WebSocket.start({ :host => \"0.0.0.0\", :port => 8080, :secure_proxy => true }) do |ws| # ... end Handling errors There are two kinds of errors that need to be handled -- WebSocket protocol errors and errors in application code. WebSocket protocol errors (for example invalid data in the handshake or invalid message frames) raise errors which descend from EM::WebSocket::WebSocketError . Such errors are rescued internally and the WebSocket connection will be closed immediately or an error code sent to the browser in accordance to the WebSocket specification. It is possible to be notified in application code of such errors by including an onerror callback. ws.onerror { |error| if error.kind_of?(EM::WebSocket::WebSocketError) # ... end } Application errors are treated differently. If no onerror callback has been defined these errors will propagate to the EventMachine reactor, typically causing your program to terminate. If you wish to handle exceptions, simply supply an onerror callback and check for exceptions which are not descendant from EM::WebSocket::WebSocketError . It is also possible to log all errors when developing by including the :debug => true option when initialising the WebSocket server. Emulating WebSockets in older browsers It is possible to emulate WebSockets in older browsers using flash emulation. For example take a look at the web-socket-js project. Using flash emulation does require some minimal support from em-websocket which is enabled by default. If flash connects to the WebSocket port and requests a policy file (which it will do if it fails to receive a policy file on port 843 after a timeout), em-websocket will return one. Also see https://github.com/igrigorik/em-websocket/issues/61 for an example policy file server which you can run on port 843. Examples & Projects using em-websocket Pusher - Realtime Messaging Service Livereload - LiveReload applies CSS/JS changes to Safari or Chrome w/o reloading Twitter AMQP WebSocket Example examples/multicast.rb - broadcast all ruby tweets to all subscribers examples/echo.rb - server <> client exchange via a websocket","title":"EM-WebSocket"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#em-websocket","text":"EventMachine based, async, Ruby WebSocket server. Take a look at examples directory, or check out the blog post: Ruby & Websockets: TCP for the Web .","title":"EM-WebSocket"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#simple-server-example","text":"require 'em-websocket' EM.run { EM::WebSocket.run(:host => \"0.0.0.0\", :port => 8080) do |ws| ws.onopen { |handshake| puts \"WebSocket connection open\" # Access properties on the EM::WebSocket::Handshake object, e.g. # path, query_string, origin, headers # Publish message to the client ws.send \"Hello Client, you connected to #{handshake.path}\" } ws.onclose { puts \"Connection closed\" } ws.onmessage { |msg| puts \"Recieved message: #{msg}\" ws.send \"Pong: #{msg}\" } end }","title":"Simple server example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#protocols-supported-and-protocol-specific-functionality","text":"Supports all WebSocket protocols in use in the wild (and a few that are not): drafts 75, 76, 1-17, rfc. While some of the changes between protocols are unimportant from the point of view of application developers, a few drafts did introduce new functionality. It's possible to easily test for this functionality by using","title":"Protocols supported, and protocol specific functionality"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#ping-pong-supported","text":"Call ws.pingable? to check whether ping & pong is supported by the protocol in use. It's possible to send a ping frame ( ws.ping(body = '') ), which the client must respond to with a pong, or the server can send an unsolicited pong frame ( ws.pong(body = '') ) which the client should not respond to. These methods can be used regardless of protocol version; they return true if the protocol supports ping&pong or false otherwise. When receiving a ping, the server will automatically respond with a pong as the spec requires (so you should not write an onping handler that replies with a pong), however it is possible to bind to ping & pong events if desired by using the onping and onpong methods.","title":"Ping &amp; pong supported"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#healthchecks","text":"It's possible to send a regular HTTP GET request to the /healthcheck endpoint and receive a 200 response from the server.","title":"Healthchecks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#close-codes-and-reasons","text":"A WebSocket connection can be closed cleanly, regardless of protocol, by calling ws.close(code = nil, body = nil) . Early protocols just close the TCP connection, draft 3 introduced a close handshake, and draft 6 added close codes and reasons to the close handshake. Call ws.supports_close_codes? to check whether close codes are supported (i.e. the protocol version is 6 or above). The onclose callback is passed a hash which may contain following keys (depending on the protocol version): was_clean : boolean indicating whether the connection was closed via the close handshake. code : the close code. There are two special close codes which the server may set (as defined in the WebSocket spec): 1005: no code was supplied 1006: abnormal closure (the same as was_clean: false ) reason : the close reason Acceptable close codes are defined in the WebSocket rfc ( http://tools.ietf.org/html/rfc6455#section-7.4 ). The following codes can be supplies when calling ws.close(code) : 1000: a generic normal close range 3xxx: reserved for libraries, frameworks, and applications (and can be registered with IANA) range 4xxx: for private use If unsure use a code in the 4xxx range. em-websocket may also close a connection with one of the following close codes: 1002: WebSocket protocol error. 1009: Message too big to process. By default em-websocket will accept frames up to 10MB in size. If a frame is larger than this the connection will be closed without reading the frame data. The limit can be overriden globally ( EM::WebSocket.max_frame_size = bytes ) or on a specific connection ( ws.max_frame_size = bytes ).","title":"Close codes and reasons"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#secure-server","text":"It is possible to accept secure wss:// connections by passing :secure => true when opening the connection. Pass a :tls_options hash containing keys as described in http://www.rubydoc.info/github/eventmachine/eventmachine/EventMachine/Connection:start_tls Warning : Safari 5 does not currently support prompting on untrusted SSL certificates therefore using a self signed certificate may leave you scratching your head. EM::WebSocket.start({ :host => \"0.0.0.0\", :port => 443, :secure => true, :tls_options => { :private_key_file => \"/private/key\", :cert_chain_file => \"/ssl/certificate\" } }) do |ws| # ... end It's possible to check whether an incoming connection is secure by reading handshake.secure? in the onopen callback.","title":"Secure server"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#running-behind-an-ssl-proxyterminator-like-stunnel","text":"The :secure_proxy => true option makes it possible to use em-websocket behind a secure SSL proxy/terminator like Stunnel which does the actual encryption & decryption. Note that this option is only required to support drafts 75 & 76 correctly (e.g. Safari 5.1.x & earlier, and Safari on iOS 5.x & earlier). EM::WebSocket.start({ :host => \"0.0.0.0\", :port => 8080, :secure_proxy => true }) do |ws| # ... end","title":"Running behind an SSL Proxy/Terminator, like Stunnel"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#handling-errors","text":"There are two kinds of errors that need to be handled -- WebSocket protocol errors and errors in application code. WebSocket protocol errors (for example invalid data in the handshake or invalid message frames) raise errors which descend from EM::WebSocket::WebSocketError . Such errors are rescued internally and the WebSocket connection will be closed immediately or an error code sent to the browser in accordance to the WebSocket specification. It is possible to be notified in application code of such errors by including an onerror callback. ws.onerror { |error| if error.kind_of?(EM::WebSocket::WebSocketError) # ... end } Application errors are treated differently. If no onerror callback has been defined these errors will propagate to the EventMachine reactor, typically causing your program to terminate. If you wish to handle exceptions, simply supply an onerror callback and check for exceptions which are not descendant from EM::WebSocket::WebSocketError . It is also possible to log all errors when developing by including the :debug => true option when initialising the WebSocket server.","title":"Handling errors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#emulating-websockets-in-older-browsers","text":"It is possible to emulate WebSockets in older browsers using flash emulation. For example take a look at the web-socket-js project. Using flash emulation does require some minimal support from em-websocket which is enabled by default. If flash connects to the WebSocket port and requests a policy file (which it will do if it fails to receive a policy file on port 843 after a timeout), em-websocket will return one. Also see https://github.com/igrigorik/em-websocket/issues/61 for an example policy file server which you can run on port 843.","title":"Emulating WebSockets in older browsers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/em-websocket-0.5.3/#examples-projects-using-em-websocket","text":"Pusher - Realtime Messaging Service Livereload - LiveReload applies CSS/JS changes to Safari or Chrome w/o reloading Twitter AMQP WebSocket Example examples/multicast.rb - broadcast all ruby tweets to all subscribers examples/echo.rb - server <> client exchange via a websocket","title":"Examples &amp; Projects using em-websocket"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/","text":"Ethon In Greek mythology, Ethon, the son of Typhoeus and Echidna, is a gigantic eagle. So much for the history. In the modern world, Ethon is a very basic libcurl wrapper using ffi. Documentation Website Mailing list Installation With bundler: gem \"ethon\" With rubygems: gem install ethon Usage Making the first request is simple: easy = Ethon::Easy.new(url: \"www.example.com\") easy.perform #=> :ok You have access to various options, such as following redirects: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform #=> :ok Once you're done you can inspect the response code and body: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform easy.response_code #=> 200 easy.response_body #=> \"<!doctype html><html ...\" Http In order to make life easier, there are some helpers for making HTTP requests: easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :get, { params: {a: 1} }) easy.perform #=> :ok easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :post, { params: { a: 1 }, body: { b: 2 } }) easy.perform #=> :ok This is really handy when making requests since you don't have to care about setting everything up correctly. LICENSE (The MIT License) Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/#ethon","text":"In Greek mythology, Ethon, the son of Typhoeus and Echidna, is a gigantic eagle. So much for the history. In the modern world, Ethon is a very basic libcurl wrapper using ffi. Documentation Website Mailing list","title":"Ethon"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/#installation","text":"With bundler: gem \"ethon\" With rubygems: gem install ethon","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/#usage","text":"Making the first request is simple: easy = Ethon::Easy.new(url: \"www.example.com\") easy.perform #=> :ok You have access to various options, such as following redirects: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform #=> :ok Once you're done you can inspect the response code and body: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform easy.response_code #=> 200 easy.response_body #=> \"<!doctype html><html ...\"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/#http","text":"In order to make life easier, there are some helpers for making HTTP requests: easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :get, { params: {a: 1} }) easy.perform #=> :ok easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :post, { params: { a: 1 }, body: { b: 2 } }) easy.perform #=> :ok This is really handy when making requests since you don't have to care about setting everything up correctly.","title":"Http"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/#license","text":"(The MIT License) Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/","text":"Changelog Master Full Changelog 0.15.0 Full Changelog 0.12.0 Full Changelog Removed deprecated CURLE_SSL_CACERT pinned in curl v7.62.0 ( @arku in #158 ) 0.11.0 Full Changelog 0.10.1 Full Changelog 0.10.0 Full Changelog 0.9.1 Full Changelog 0.9.0 Full Changelog 0.8.1 Full Changelog Support optional escaping of params. ( Tasos Laskos Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos 0.8.0 Full Changelog Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos 0.7.4 Full Changelog Support different array encodings for params. ( Marcello Barnaba , #104 ) Programtic access to version infos. ( Jonas Wagner , #90 ) 0.7.3 Full Changelog Ethon::Curl::FDSet Set :fd_array size to the current MS Windows FD_SETSIZE (2048). ( Tasos Laskos Added redirect_time value to available informations and Easy::Mirror . ( Adrien Jarthon 0.7.2 Full Changelog FFI data-types updated to be more correct. 0.7.1 MS Windows determination delegated to Gem.windows? for better accuracy. FFI data-types updated to work on MS Windows. 0.7.0 Not backwards compatible changes: mime-types are no longer a dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Full Changelog 0.6.3 Full Changelog 0.6.2 Full Changelog 0.6.1 Full Changelog The changelog entries are coming soon! 0.6.0 Full Changelog The changelog entries are coming soon! Bugfixes: URL-encode nullbytes in parameters instead of escaping them to \\\\0 . ( Tasos Laskos 0.5.12 Full Changelog Enhancements: Performance optimizations. ( Kyle Oppenheim and Richie Vos , #48 ) Reuse memory pointer. ( Richie Vos , #49 ) Bugfixes: Fix windows install. ( Derik Olsson , #47 ) Handle urls that already contain query params. ( Turner King , #45 ) 0.5.11 Full Changelog Enhancements: Add support for postredirs, unrestricted_auth. Add support for cookie, cookiejar, cookiefile. ( erwanlr , #46 ) Relax ffi requirements. ( voxik , #40 ) Various documentation improvements. ( Craig Little ) Bugfixes: Fix the memory leaks. ( Richie Vos , #45 ) 0.5.10 Full Changelog Enhancements: Allow custom requests. ( Nathan Sutton , #36 ) Use updated version of FFI. Bugfixes: Fix windows install issue. ( brainsucker , #38 ) 0.5.9 Full Changelog Enhancements: Allow to set multiple protocols. 0.5.8 Full Changelog Enhancements: Add support for protocols and redir_protocols( libcurl SASL buffer overflow vulnerability ). Add max_send_speed_large and max_recv_speed_large( Paul Schuegraf , #33 ) 0.5.7 Full Changelog Enhancements: Use new version of ffi. 0.5.6 Full Changelog Bugfixes: Easy#reset resets on_complete callbacks. 0.5.4 Full Changelog Enhancements: Use Libc#getdtablesize to get the FDSet size. New libcurl option accept_encoding. Documentation updates. 0.5.3 Full Changelog Enhancements: Deprecate Easy#prepare. It is no longer necessary. Unroll metaprogramming for easy and multi options. More specs. Bugfixes: Correct size for FDSets Add proxytypes to enums. 0.5.2 Full Changelog Enhancements: New libcurl option keypasswd. Bugfixes: Correct request logging when using multi interface. Remove invalid libcurl option sslcertpasswd. 0.5.1 Full Changelog Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi. 0.5.0 Full Changelog Enhancements: New libcurl option proxyuserpwd Rename response_header to response_headers Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi. 0.4.4 Full Changelog Enhancements: Prepare multi explicit like easy 0.4.3 Full Changelog Enhancements: Remove deprecated libcurl option put More documentation New libcurl option connecttimeout_ms and timeout_ms Support multi options Bugfixes: Handle nil values in query params 0.4.2 Full Changelog Enhancements: New libcurl option forbid_reuse Use libcurls escape instead of CGI::escape 0.4.1 Full Changelog Bugfixes: Handle nested hash in an array in params correct ( #201 ) 0.4.0 Full Changelog Enhancements: ruby 1.8.7 compatible Ethon.logger Deal with string param/body More documentation Bugfixes: Add multi_cleanup to curl 0.3.0 Full Changelog Enhancements: New libcurl option proxyport Raise invalid value error when providing a wrong key for sslversion or httpauth Bugfixes: Libcurl option sslversion is handled correct 0.2.0 Full Changelog Enhancements: GET requests are using custom requests only when there is a request body Easy#on_complete takes multiple callbacks raise Errors::GlobalInit when libcurls global_init failed instead of runtime error raise Errors::InvalidOption if option is invalid 0.1.0 Full Changelog Enhancements: Documentation ( Alex P , #13 ) New libcurl option dns_cache_timeout ( Chris Heald , #192 ) Bugfixes: Libcurl option ssl_verifyhost takes an integer. Add space between header key and value. 0.0.2 Full Changelog Bugfixes: Add libcurl.so.4 to ffi_lib in order to load correct lib on Debian. Escape zero bytes. 0.0.1 Initial version","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#master","text":"Full Changelog","title":"Master"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0150","text":"Full Changelog","title":"0.15.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0120","text":"Full Changelog Removed deprecated CURLE_SSL_CACERT pinned in curl v7.62.0 ( @arku in #158 )","title":"0.12.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0110","text":"Full Changelog","title":"0.11.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0101","text":"Full Changelog","title":"0.10.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0100","text":"Full Changelog","title":"0.10.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#091","text":"Full Changelog","title":"0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#090","text":"Full Changelog","title":"0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#081","text":"Full Changelog Support optional escaping of params. ( Tasos Laskos Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos","title":"0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#080","text":"Full Changelog Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos","title":"0.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#074","text":"Full Changelog Support different array encodings for params. ( Marcello Barnaba , #104 ) Programtic access to version infos. ( Jonas Wagner , #90 )","title":"0.7.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#073","text":"Full Changelog Ethon::Curl::FDSet Set :fd_array size to the current MS Windows FD_SETSIZE (2048). ( Tasos Laskos Added redirect_time value to available informations and Easy::Mirror . ( Adrien Jarthon","title":"0.7.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#072","text":"Full Changelog FFI data-types updated to be more correct.","title":"0.7.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#071","text":"MS Windows determination delegated to Gem.windows? for better accuracy. FFI data-types updated to work on MS Windows.","title":"0.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#070","text":"Not backwards compatible changes: mime-types are no longer a dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Full Changelog","title":"0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#063","text":"Full Changelog","title":"0.6.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#062","text":"Full Changelog","title":"0.6.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#061","text":"Full Changelog The changelog entries are coming soon!","title":"0.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#060","text":"Full Changelog The changelog entries are coming soon! Bugfixes: URL-encode nullbytes in parameters instead of escaping them to \\\\0 . ( Tasos Laskos","title":"0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0512","text":"Full Changelog Enhancements: Performance optimizations. ( Kyle Oppenheim and Richie Vos , #48 ) Reuse memory pointer. ( Richie Vos , #49 ) Bugfixes: Fix windows install. ( Derik Olsson , #47 ) Handle urls that already contain query params. ( Turner King , #45 )","title":"0.5.12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0511","text":"Full Changelog Enhancements: Add support for postredirs, unrestricted_auth. Add support for cookie, cookiejar, cookiefile. ( erwanlr , #46 ) Relax ffi requirements. ( voxik , #40 ) Various documentation improvements. ( Craig Little ) Bugfixes: Fix the memory leaks. ( Richie Vos , #45 )","title":"0.5.11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#0510","text":"Full Changelog Enhancements: Allow custom requests. ( Nathan Sutton , #36 ) Use updated version of FFI. Bugfixes: Fix windows install issue. ( brainsucker , #38 )","title":"0.5.10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#059","text":"Full Changelog Enhancements: Allow to set multiple protocols.","title":"0.5.9"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#058","text":"Full Changelog Enhancements: Add support for protocols and redir_protocols( libcurl SASL buffer overflow vulnerability ). Add max_send_speed_large and max_recv_speed_large( Paul Schuegraf , #33 )","title":"0.5.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#057","text":"Full Changelog Enhancements: Use new version of ffi.","title":"0.5.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#056","text":"Full Changelog Bugfixes: Easy#reset resets on_complete callbacks.","title":"0.5.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#054","text":"Full Changelog Enhancements: Use Libc#getdtablesize to get the FDSet size. New libcurl option accept_encoding. Documentation updates.","title":"0.5.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#053","text":"Full Changelog Enhancements: Deprecate Easy#prepare. It is no longer necessary. Unroll metaprogramming for easy and multi options. More specs. Bugfixes: Correct size for FDSets Add proxytypes to enums.","title":"0.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#052","text":"Full Changelog Enhancements: New libcurl option keypasswd. Bugfixes: Correct request logging when using multi interface. Remove invalid libcurl option sslcertpasswd.","title":"0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#051","text":"Full Changelog Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi.","title":"0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#050","text":"Full Changelog Enhancements: New libcurl option proxyuserpwd Rename response_header to response_headers Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi.","title":"0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#044","text":"Full Changelog Enhancements: Prepare multi explicit like easy","title":"0.4.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#043","text":"Full Changelog Enhancements: Remove deprecated libcurl option put More documentation New libcurl option connecttimeout_ms and timeout_ms Support multi options Bugfixes: Handle nil values in query params","title":"0.4.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#042","text":"Full Changelog Enhancements: New libcurl option forbid_reuse Use libcurls escape instead of CGI::escape","title":"0.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#041","text":"Full Changelog Bugfixes: Handle nested hash in an array in params correct ( #201 )","title":"0.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#040","text":"Full Changelog Enhancements: ruby 1.8.7 compatible Ethon.logger Deal with string param/body More documentation Bugfixes: Add multi_cleanup to curl","title":"0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#030","text":"Full Changelog Enhancements: New libcurl option proxyport Raise invalid value error when providing a wrong key for sslversion or httpauth Bugfixes: Libcurl option sslversion is handled correct","title":"0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#020","text":"Full Changelog Enhancements: GET requests are using custom requests only when there is a request body Easy#on_complete takes multiple callbacks raise Errors::GlobalInit when libcurls global_init failed instead of runtime error raise Errors::InvalidOption if option is invalid","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#010","text":"Full Changelog Enhancements: Documentation ( Alex P , #13 ) New libcurl option dns_cache_timeout ( Chris Heald , #192 ) Bugfixes: Libcurl option ssl_verifyhost takes an integer. Add space between header key and value.","title":"0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#002","text":"Full Changelog Bugfixes: Add libcurl.so.4 to ffi_lib in order to load correct lib on Debian. Escape zero bytes.","title":"0.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.15.0/CHANGELOG/#001-initial-version","text":"","title":"0.0.1 Initial version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/","text":"Ethon In Greek mythology, Ethon, the son of Typhoeus and Echidna, is a gigantic eagle. So much for the history. In the modern world, Ethon is a very basic libcurl wrapper using ffi. Documentation Website Mailing list Installation With bundler: gem \"ethon\" With rubygems: gem install ethon Usage Making the first request is simple: easy = Ethon::Easy.new(url: \"www.example.com\") easy.perform #=> :ok You have access to various options, such as following redirects: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform #=> :ok Once you're done you can inspect the response code and body: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform easy.response_code #=> 200 easy.response_body #=> \"<!doctype html><html ...\" Http In order to make life easier, there are some helpers for making HTTP requests: easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :get, { params: {a: 1} }) easy.perform #=> :ok easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :post, { params: { a: 1 }, body: { b: 2 } }) easy.perform #=> :ok This is really handy when making requests since you don't have to care about setting everything up correctly. LICENSE (The MIT License) Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Ethon [![Build Status](https://secure.travis-ci.org/typhoeus/ethon.png?branch=master)](http://travis-ci.org/typhoeus/ethon) [![Gem Version](https://badge.fury.io/rb/ethon.png)](http://badge.fury.io/rb/ethon)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/#ethon","text":"In Greek mythology, Ethon, the son of Typhoeus and Echidna, is a gigantic eagle. So much for the history. In the modern world, Ethon is a very basic libcurl wrapper using ffi. Documentation Website Mailing list","title":"Ethon"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/#installation","text":"With bundler: gem \"ethon\" With rubygems: gem install ethon","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/#usage","text":"Making the first request is simple: easy = Ethon::Easy.new(url: \"www.example.com\") easy.perform #=> :ok You have access to various options, such as following redirects: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform #=> :ok Once you're done you can inspect the response code and body: easy = Ethon::Easy.new(url: \"www.example.com\", followlocation: true) easy.perform easy.response_code #=> 200 easy.response_body #=> \"<!doctype html><html ...\"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/#http","text":"In order to make life easier, there are some helpers for making HTTP requests: easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :get, { params: {a: 1} }) easy.perform #=> :ok easy = Ethon::Easy.new easy.http_request(\"www.example.com\", :post, { params: { a: 1 }, body: { b: 2 } }) easy.perform #=> :ok This is really handy when making requests since you don't have to care about setting everything up correctly.","title":"Http"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/#license","text":"(The MIT License) Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/","text":"Changelog Master Full Changelog 0.9.0 Full Changelog 0.8.1 Full Changelog Support optional escaping of params. ( Tasos Laskos Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos 0.8.0 Full Changelog Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos 0.7.4 Full Changelog Support different array encodings for params. ( Marcello Barnaba , #104 ) Programtic access to version infos. ( Jonas Wagner , #90 ) 0.7.3 Full Changelog Ethon::Curl::FDSet Set :fd_array size to the current MS Windows FD_SETSIZE (2048). ( Tasos Laskos Added redirect_time value to available informations and Easy::Mirror . ( Adrien Jarthon 0.7.2 Full Changelog FFI data-types updated to be more correct. 0.7.1 MS Windows determination delegated to Gem.windows? for better accuracy. FFI data-types updated to work on MS Windows. 0.7.0 Not backwards compatible changes: mime-types are no longer a dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Full Changelog 0.6.3 Full Changelog 0.6.2 Full Changelog 0.6.1 Full Changelog The changelog entries are coming soon! 0.6.0 Full Changelog The changelog entries are coming soon! Bugfixes: URL-encode nullbytes in parameters instead of escaping them to \\\\0 . ( Tasos Laskos 0.5.12 Full Changelog Enhancements: Performance optimizations. ( Kyle Oppenheim and Richie Vos , #48 ) Reuse memory pointer. ( Richie Vos , #49 ) Bugfixes: Fix windows install. ( Derik Olsson , #47 ) Handle urls that already contain query params. ( Turner King , #45 ) 0.5.11 Full Changelog Enhancements: Add support for postredirs, unrestricted_auth. Add support for cookie, cookiejar, cookiefile. ( erwanlr , #46 ) Relax ffi requirements. ( voxik , #40 ) Various documentation improvements. ( Craig Little ) Bugfixes: Fix the memory leaks. ( Richie Vos , #45 ) 0.5.10 Full Changelog Enhancements: Allow custom requests. ( Nathan Sutton , #36 ) Use updated version of FFI. Bugfixes: Fix windows install issue. ( brainsucker , #38 ) 0.5.9 Full Changelog Enhancements: Allow to set multiple protocols. 0.5.8 Full Changelog Enhancements: Add support for protocols and redir_protocols( libcurl SASL buffer overflow vulnerability ). Add max_send_speed_large and max_recv_speed_large( Paul Schuegraf , #33 ) 0.5.7 Full Changelog Enhancements: Use new version of ffi. 0.5.6 Full Changelog Bugfixes: Easy#reset resets on_complete callbacks. 0.5.4 Full Changelog Enhancements: Use Libc#getdtablesize to get the FDSet size. New libcurl option accept_encoding. Documentation updates. 0.5.3 Full Changelog Enhancements: Deprecate Easy#prepare. It is no longer necessary. Unroll metaprogramming for easy and multi options. More specs. Bugfixes: Correct size for FDSets Add proxytypes to enums. 0.5.2 Full Changelog Enhancements: New libcurl option keypasswd. Bugfixes: Correct request logging when using multi interface. Remove invalid libcurl option sslcertpasswd. 0.5.1 Full Changelog Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi. 0.5.0 Full Changelog Enhancements: New libcurl option proxyuserpwd Rename response_header to response_headers Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi. 0.4.4 Full Changelog Enhancements: Prepare multi explicit like easy 0.4.3 Full Changelog Enhancements: Remove deprecated libcurl option put More documentation New libcurl option connecttimeout_ms and timeout_ms Support multi options Bugfixes: Handle nil values in query params 0.4.2 Full Changelog Enhancements: New libcurl option forbid_reuse Use libcurls escape instead of CGI::escape 0.4.1 Full Changelog Bugfixes: Handle nested hash in an array in params correct ( #201 ) 0.4.0 Full Changelog Enhancements: ruby 1.8.7 compatible Ethon.logger Deal with string param/body More documentation Bugfixes: Add multi_cleanup to curl 0.3.0 Full Changelog Enhancements: New libcurl option proxyport Raise invalid value error when providing a wrong key for sslversion or httpauth Bugfixes: Libcurl option sslversion is handled correct 0.2.0 Full Changelog Enhancements: GET requests are using custom requests only when there is a request body Easy#on_complete takes multiple callbacks raise Errors::GlobalInit when libcurls global_init failed instead of runtime error raise Errors::InvalidOption if option is invalid 0.1.0 Full Changelog Enhancements: Documentation ( Alex P , #13 ) New libcurl option dns_cache_timeout ( Chris Heald , #192 ) Bugfixes: Libcurl option ssl_verifyhost takes an integer. Add space between header key and value. 0.0.2 Full Changelog Bugfixes: Add libcurl.so.4 to ffi_lib in order to load correct lib on Debian. Escape zero bytes. 0.0.1 Initial version","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#master","text":"Full Changelog","title":"Master"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#090","text":"Full Changelog","title":"0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#081","text":"Full Changelog Support optional escaping of params. ( Tasos Laskos Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos","title":"0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#080","text":"Full Changelog Easy::Mirror : Reduced object allocations and method calls during info handling. ( Tasos Laskos","title":"0.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#074","text":"Full Changelog Support different array encodings for params. ( Marcello Barnaba , #104 ) Programtic access to version infos. ( Jonas Wagner , #90 )","title":"0.7.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#073","text":"Full Changelog Ethon::Curl::FDSet Set :fd_array size to the current MS Windows FD_SETSIZE (2048). ( Tasos Laskos Added redirect_time value to available informations and Easy::Mirror . ( Adrien Jarthon","title":"0.7.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#072","text":"Full Changelog FFI data-types updated to be more correct.","title":"0.7.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#071","text":"MS Windows determination delegated to Gem.windows? for better accuracy. FFI data-types updated to work on MS Windows.","title":"0.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#070","text":"Not backwards compatible changes: mime-types are no longer a dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Full Changelog","title":"0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#063","text":"Full Changelog","title":"0.6.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#062","text":"Full Changelog","title":"0.6.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#061","text":"Full Changelog The changelog entries are coming soon!","title":"0.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#060","text":"Full Changelog The changelog entries are coming soon! Bugfixes: URL-encode nullbytes in parameters instead of escaping them to \\\\0 . ( Tasos Laskos","title":"0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#0512","text":"Full Changelog Enhancements: Performance optimizations. ( Kyle Oppenheim and Richie Vos , #48 ) Reuse memory pointer. ( Richie Vos , #49 ) Bugfixes: Fix windows install. ( Derik Olsson , #47 ) Handle urls that already contain query params. ( Turner King , #45 )","title":"0.5.12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#0511","text":"Full Changelog Enhancements: Add support for postredirs, unrestricted_auth. Add support for cookie, cookiejar, cookiefile. ( erwanlr , #46 ) Relax ffi requirements. ( voxik , #40 ) Various documentation improvements. ( Craig Little ) Bugfixes: Fix the memory leaks. ( Richie Vos , #45 )","title":"0.5.11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#0510","text":"Full Changelog Enhancements: Allow custom requests. ( Nathan Sutton , #36 ) Use updated version of FFI. Bugfixes: Fix windows install issue. ( brainsucker , #38 )","title":"0.5.10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#059","text":"Full Changelog Enhancements: Allow to set multiple protocols.","title":"0.5.9"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#058","text":"Full Changelog Enhancements: Add support for protocols and redir_protocols( libcurl SASL buffer overflow vulnerability ). Add max_send_speed_large and max_recv_speed_large( Paul Schuegraf , #33 )","title":"0.5.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#057","text":"Full Changelog Enhancements: Use new version of ffi.","title":"0.5.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#056","text":"Full Changelog Bugfixes: Easy#reset resets on_complete callbacks.","title":"0.5.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#054","text":"Full Changelog Enhancements: Use Libc#getdtablesize to get the FDSet size. New libcurl option accept_encoding. Documentation updates.","title":"0.5.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#053","text":"Full Changelog Enhancements: Deprecate Easy#prepare. It is no longer necessary. Unroll metaprogramming for easy and multi options. More specs. Bugfixes: Correct size for FDSets Add proxytypes to enums.","title":"0.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#052","text":"Full Changelog Enhancements: New libcurl option keypasswd. Bugfixes: Correct request logging when using multi interface. Remove invalid libcurl option sslcertpasswd.","title":"0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#051","text":"Full Changelog Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi.","title":"0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#050","text":"Full Changelog Enhancements: New libcurl option proxyuserpwd Rename response_header to response_headers Bugfixes: Mark Curl.select and Curl.easy_perform as blocking so that the GIL is released by ffi.","title":"0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#044","text":"Full Changelog Enhancements: Prepare multi explicit like easy","title":"0.4.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#043","text":"Full Changelog Enhancements: Remove deprecated libcurl option put More documentation New libcurl option connecttimeout_ms and timeout_ms Support multi options Bugfixes: Handle nil values in query params","title":"0.4.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#042","text":"Full Changelog Enhancements: New libcurl option forbid_reuse Use libcurls escape instead of CGI::escape","title":"0.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#041","text":"Full Changelog Bugfixes: Handle nested hash in an array in params correct ( #201 )","title":"0.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#040","text":"Full Changelog Enhancements: ruby 1.8.7 compatible Ethon.logger Deal with string param/body More documentation Bugfixes: Add multi_cleanup to curl","title":"0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#030","text":"Full Changelog Enhancements: New libcurl option proxyport Raise invalid value error when providing a wrong key for sslversion or httpauth Bugfixes: Libcurl option sslversion is handled correct","title":"0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#020","text":"Full Changelog Enhancements: GET requests are using custom requests only when there is a request body Easy#on_complete takes multiple callbacks raise Errors::GlobalInit when libcurls global_init failed instead of runtime error raise Errors::InvalidOption if option is invalid","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#010","text":"Full Changelog Enhancements: Documentation ( Alex P , #13 ) New libcurl option dns_cache_timeout ( Chris Heald , #192 ) Bugfixes: Libcurl option ssl_verifyhost takes an integer. Add space between header key and value.","title":"0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#002","text":"Full Changelog Bugfixes: Add libcurl.so.4 to ffi_lib in order to load correct lib on Debian. Escape zero bytes.","title":"0.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ethon-0.9.0/CHANGELOG/#001-initial-version","text":"","title":"0.0.1 Initial version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/","text":"About EventMachine What is EventMachine EventMachine is an event-driven I/O and lightweight concurrency library for Ruby. It provides event-driven I/O using the Reactor pattern , much like JBoss Netty , Apache MINA , Python's Twisted , Node.js , libevent and libev. EventMachine is designed to simultaneously meet two key needs: Extremely high scalability, performance and stability for the most demanding production environments. An API that eliminates the complexities of high-performance threaded network programming, allowing engineers to concentrate on their application logic. This unique combination makes EventMachine a premier choice for designers of critical networked applications, including Web servers and proxies, email and IM production systems, authentication/authorization processors, and many more. EventMachine has been around since the early 2000s and is a mature and battle-tested library. What EventMachine is good for? Scalable event-driven servers. Examples: Thin or Goliath . Scalable asynchronous clients for various protocols, RESTful APIs and so on. Examples: em-http-request or amqp gem . Efficient network proxies with custom logic. Examples: Proxymachine . File and network monitoring tools. Examples: eventmachine-tail and logstash . What platforms are supported by EventMachine? EventMachine supports Ruby 1.8.7 through 2.6, REE, JRuby and works well on Windows as well as many operating systems from the Unix family (Linux, Mac OS X, BSD flavors). Install the gem Install it with RubyGems gem install eventmachine or add this to your Gemfile if you use Bundler : gem \"eventmachine\" Getting started For an introduction to EventMachine, check out: blog post about EventMachine by Ilya Grigorik . EventMachine Introductions by Dan Sinclair . Server example: Echo server Here's a fully-functional echo server written with EventMachine: require 'eventmachine' module EchoServer def post_init puts \"-- someone connected to the echo server!\" end def receive_data data send_data \">>>you sent: #{data}\" close_connection if data =~ /quit/i end def unbind puts \"-- someone disconnected from the echo server!\" end end # Note that this will block current thread. EventMachine.run { EventMachine.start_server \"127.0.0.1\", 8081, EchoServer } EventMachine documentation Currently we only have reference documentation and a wiki . Community and where to get help Join the mailing list (Google Group) Join IRC channel #eventmachine on irc.freenode.net License and copyright EventMachine is copyrighted free software made available under the terms of either the GPL or Ruby's License. Copyright: (C) 2006-07 by Francis Cianfrocca. All Rights Reserved. Alternatives If you are unhappy with EventMachine and want to use Ruby, check out Celluloid .","title":"About EventMachine  [![Build Status](https://travis-ci.org/eventmachine/eventmachine.svg?branch=master)](https://travis-ci.org/eventmachine/eventmachine) [![Code Climate Maintainability](https://api.codeclimate.com/v1/badges/e9b0603462905d5b9118/maintainability)](https://codeclimate.com/github/eventmachine/eventmachine/maintainability)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#about-eventmachine","text":"","title":"About EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#what-is-eventmachine","text":"EventMachine is an event-driven I/O and lightweight concurrency library for Ruby. It provides event-driven I/O using the Reactor pattern , much like JBoss Netty , Apache MINA , Python's Twisted , Node.js , libevent and libev. EventMachine is designed to simultaneously meet two key needs: Extremely high scalability, performance and stability for the most demanding production environments. An API that eliminates the complexities of high-performance threaded network programming, allowing engineers to concentrate on their application logic. This unique combination makes EventMachine a premier choice for designers of critical networked applications, including Web servers and proxies, email and IM production systems, authentication/authorization processors, and many more. EventMachine has been around since the early 2000s and is a mature and battle-tested library.","title":"What is EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#what-eventmachine-is-good-for","text":"Scalable event-driven servers. Examples: Thin or Goliath . Scalable asynchronous clients for various protocols, RESTful APIs and so on. Examples: em-http-request or amqp gem . Efficient network proxies with custom logic. Examples: Proxymachine . File and network monitoring tools. Examples: eventmachine-tail and logstash .","title":"What EventMachine is good for?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#what-platforms-are-supported-by-eventmachine","text":"EventMachine supports Ruby 1.8.7 through 2.6, REE, JRuby and works well on Windows as well as many operating systems from the Unix family (Linux, Mac OS X, BSD flavors).","title":"What platforms are supported by EventMachine?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#install-the-gem","text":"Install it with RubyGems gem install eventmachine or add this to your Gemfile if you use Bundler : gem \"eventmachine\"","title":"Install the gem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#getting-started","text":"For an introduction to EventMachine, check out: blog post about EventMachine by Ilya Grigorik . EventMachine Introductions by Dan Sinclair .","title":"Getting started"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#server-example-echo-server","text":"Here's a fully-functional echo server written with EventMachine: require 'eventmachine' module EchoServer def post_init puts \"-- someone connected to the echo server!\" end def receive_data data send_data \">>>you sent: #{data}\" close_connection if data =~ /quit/i end def unbind puts \"-- someone disconnected from the echo server!\" end end # Note that this will block current thread. EventMachine.run { EventMachine.start_server \"127.0.0.1\", 8081, EchoServer }","title":"Server example: Echo server"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#eventmachine-documentation","text":"Currently we only have reference documentation and a wiki .","title":"EventMachine documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#community-and-where-to-get-help","text":"Join the mailing list (Google Group) Join IRC channel #eventmachine on irc.freenode.net","title":"Community and where to get help"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#license-and-copyright","text":"EventMachine is copyrighted free software made available under the terms of either the GPL or Ruby's License. Copyright: (C) 2006-07 by Francis Cianfrocca. All Rights Reserved.","title":"License and copyright"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/#alternatives","text":"If you are unhappy with EventMachine and want to use Ruby, check out Celluloid .","title":"Alternatives"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/","text":"Changelog 1.2.7 (May 12, 2018) Fix segfault on large numbers of connections [#843] 1.2.6 (April 30, 2018) Fix segfault when an Exception is raised from unbind callback (for real this time!) Fix race condition while initializing the machine [#756] Fix for newer compilers where bind() and std::bind() conflict [#830, #831] Be verbose about SSL connection errors [#807] Avoid explicitly calling class methods when in class scope Java: Add EM_PROTO_SSL/TLS definitions [#773, #791] Java: return zero when sending data to a closed connection [#475, #804] Pure Ruby: Connection::error? calls report_connection_error_status [#801] 1.2.5 (July 27, 2017) Java: Use long for larger values in oneshot timer intervals [#784, #794] 1.2.4 (July 27, 2017) Java: Add EM_PROTO_SSL/TLS definitions [#773, #791] Fix IPv6 UDP get_peername [#788] Allow for larger values in oneshot timer intervals [#784, #793] Update extconf.rb to allow MinGW builds with OpenSSL 1.1.0 [#785] 1.2.3 (February 22, 2017) Pure Ruby: Add get_sockname [#308, #772] Fix segfault when an Exception is raised from unbind callback [#765, #766] Allow destructors to throw when compiling in >= C++11 [#767] 1.2.2 (January 23, 2017) Java: Fix Fixnum deprecated warning in Ruby 2.4+ [#759] Fix uncaught C++ exception in file watcher and raise InvalidSignature [#512, #757] Fix connection count off-by-one for epoll and kqueue [#750] Fix uninitialized variable warning in EM::P::HttpClient [#749] Fix missing initial value for EventableDescriptor NextHeartbeat [#748] Fix hostname resolution on Solaris, Ilumos, SmartOS, et al [#745, #746] Improve reliability of tests, reduce public Internet accesses in tests [#656, #666, #749] 1.2.1 (November 15, 2016) Throw strerror(errno) when getsockname or getpeername fail [#683] Use a single concrete implementation of getpeername/getsockname, the rest pure virtuals [#683] Use gai_strerror to get the failure string from getaddrinfo [#744] Fix deregistering descriptor when using KQUEUE [#728] Fix to enable to work an example code in EM::Pool [#731] LineText2: Add regular expression delimiter support [#706] Pure Ruby: EM rescue ECONNREFUSED on initial TCP connect [#741] Pure Ruby: EM SSL (working start_tls) [#712] Pure Ruby: EM fixes [#707] Java: Use Acceptors to get peer and sock names if not present in Connections [#743] 1.2.0.1 (March 15, 2016) Fix crash when accepting IPv6 connections due to struct sockaddr_in [#698, #699] 1.2.0 (March 15, 2016) Integrate work from the EventMachine-LE 1.1.x versions [#570] Add start_tls options :ecdh_curve, :dhparam, :fail_if_no_peer_cert [#195, #275, #399, #665] Add start_tls option :ssl_version for choosing SSL/TLS versions and ciphers [#359, #348, #603, #654] Add start_tls option :sni_hostname to be passed to TLS params [#593] Add method EM::Channel#num_subscribers to get the number of subscribers to a channel [#640] Add support for proc-sources in EM::Iterator [#639] Factor out method cleanup_machine to cleanup code from EM.run [#650] Replace Exception class with StandardError [#637] Close socket on close_connection even after close_connection_after_writing [#694] Allow reusing of datagram socket/setting bind device [#662] Handle deferred exceptions in reactor thread [#486] Reimplement Queue to avoid shift/push performance problem [#311] Windows: Switch from gethostbyname to getaddrinfo, support IPv6 addresses [#303, #630] Windows: Use rake-compiler-dock to cross-compile gems [#627] Windows: Add AppVeyor configuration for Windows CI testing [#578] Windows: Bump rake-compiler to version 0.9.x [#542] Fix compilation on AIX (w/ XLC) [#693] Fix build on OpenBSD [#690] Fix OpenSSL compile issue on AIX 7.1 [#678] Fix EventMachine.fork_reactor keeps the threadpool of the original process [#425] Fix to prevent event machine from stopping when a raise is done in an unbind [#327] 1.0.9.1 (January 14, 2016) Fix EPROTO not defined on Windows [#676] Fix missing cast to struct sockaddr * [#671] Fix bug in OpenSSL path detection [#675] 1.0.9 (January 13, 2016) Try more ways to detect OpenSSL [#602, #643, #661, #663, #668, #669] Use WSAGetLastError in pipe.cpp same as ed.cpp [#659] Test compiler flags with the C++ compiler and add them to CXXFLAGS [#634, #651] Restore silent-fail on unsupported EM.epoll and EM.kqueue [#638, #649] getDescriptorByFileno deprecated in JRuby 1.7.x, removed in JRuby 9000 [#642, #648] Add -Wno-address always-true because on Windows rb_fd_select [#578] Remove the WITHOUT_SSL constant [#578] Fix SSL error when the server replies a TLS Alert to our ClientHello [#544, #653] Use WSAStringToAddress in lieu of inet_pton for IPv6 address detection on Windows [#595, #632] Fix nasty TCP/IPv6 bug [#595, #632] Use select_large_fdset on Solaris [#611, #625] Detect the Solaris Studio compiler [#611, #625] Throw a message with strerror included [#136, #621] 1.0.8 (August 6, 2015) fix kqueue assertion failed, postpone ArmKqueueWriter until all events are processed [#51, #176, #372, #401, #619] fix Rubinius GC, crank the machine from Ruby space when running Rubinius [#201, #202, #617] test to show that LineText2 preserves whitespace and newlines [#32, #622] bump up compiler warnings and resolve them [#616] fix Windows x64 use uintptr_t instead of unsigned long for binding pointers [#612, #615] fix linetext2 unroll tail recursion to avoid stack level too deep [#609] fix for compilation with SSL on windows [#601] open file descriptors and sockets with O_CLOEXEC where possible [#298, #488, #591] fix SmtpClient: send second EHLO after STARTTLS. [#589] fix nul-terminated strings in C, use StringValueCStr instead of StringValuePtr 1.0.7 (February 10, 2015) fix delay in kqueue/epoll reactor shutdown when timers exist [#587] fix memory leak introduced in v1.0.5 [#586] expose EM.set_simultaneous_accept_count [#420] fix busy loop when EM.run and EM.next_tick are invoked from exception handler [#452] 1.0.6 (February 3, 2015) add support for Rubinius Process::Status [#568] small bugfixes for SmtpServer [#449] update buftok.rb [#547] fix assertion on Write() [#525] work around mkmf.rb bug preventing gem installation [#574] add pause/resume support to jruby reactor [#556] fix pure ruby reactor to use 127.0.0.1 instead of localhost [#439] fix compilation under macruby [#243] add chunked encoding to http client [#111] fix errors on win32 when dealing with pipes [1ea45498] [#105] 1.0.5 (February 2, 2015) use monotonic clocks on Linux, OS X, Solaris, and Windows [#563] use the rb_fd_* API to get autosized fd_sets [#502] add basic tests that the DNS resolver isn't leaking timers [#571] update to test-unit 2.x and improve various unit tests [#551] remove EventMachine_t::Popen code marked by ifdef OBSOLETE [#551] ruby 2.0 may fail at Queue.pop, so rescue and complain to $stderr [#551] set file handle to INVALID_HANDLE_VALUE after closing the file [#565] use defined? instead of rescuing NameError for flow control [#535] fix closing files and sockets on Windows [#564] fix file uploads in Windows [#562] catch failure to fork [#539] use chunks for SSL write [#545] 1.0.4 (December 19, 2014) add starttls_options to smtp server [#552] fix closesocket on windows [#497] fix build on ruby 2.2 [#503] fix build error on ruby 1.9 [#508] fix timer leak during dns resolution [#489] add concurrency validation to EM::Iterator [#468] add get_file_descriptor to get fd for a signature [#467] add EM.attach_server and EM.attach_socket_server [#465, #466] calling pause from receive_data takes effect immediately [#464] reactor_running? returns false after fork [#455] fix infinite loop on double close [edc4d0e6, #441, #445] fix compilation issue on llvm [#433] fix socket error codes on win32 [ff811a81] fix EM.stop latency when timers exist [8b613d05, #426] fix infinite loop when system time changes [1427a2c80, #428] fix crash when callin attach/detach in the same tick [#427] fix compilation issue on solaris [#416] 1.0.3 (March 8, 2013) EM.system was broken in 1.0.2 release [#413] 1.0.2 (March 8, 2013) binary win32 gems now include fastfilereader shim [#222] fix long-standing connection timeout issues [27fdd5b, igrigorik/em-http-request#222] http and line protocol cleanups [#193, #151] reactor return value cleanup [#225] fix double require from gemspec [#284] fix smtp server reset behavior [#351] fix EM.system argument handling [#322] ruby 1.9 compat in smtp server and stomp protocols [#349, #315] fix pause from post_init [#380] 1.0.1 (February 27, 2013) use rb_wait_for_single_fd() on ruby 2.0 to fix rb_thread_select() deprecation [#363] fix epoll/kqueue mode in ruby 2.0 by removing calls to rb_enable_interrupt() [#248, #389] fix memory leak when verifying ssl cerificates [#403] fix initial connection delay [#393, #374] fix build on windows [#371]","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#127-may-12-2018","text":"Fix segfault on large numbers of connections [#843]","title":"1.2.7 (May 12, 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#126-april-30-2018","text":"Fix segfault when an Exception is raised from unbind callback (for real this time!) Fix race condition while initializing the machine [#756] Fix for newer compilers where bind() and std::bind() conflict [#830, #831] Be verbose about SSL connection errors [#807] Avoid explicitly calling class methods when in class scope Java: Add EM_PROTO_SSL/TLS definitions [#773, #791] Java: return zero when sending data to a closed connection [#475, #804] Pure Ruby: Connection::error? calls report_connection_error_status [#801]","title":"1.2.6 (April 30, 2018)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#125-july-27-2017","text":"Java: Use long for larger values in oneshot timer intervals [#784, #794]","title":"1.2.5 (July 27, 2017)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#124-july-27-2017","text":"Java: Add EM_PROTO_SSL/TLS definitions [#773, #791] Fix IPv6 UDP get_peername [#788] Allow for larger values in oneshot timer intervals [#784, #793] Update extconf.rb to allow MinGW builds with OpenSSL 1.1.0 [#785]","title":"1.2.4 (July 27, 2017)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#123-february-22-2017","text":"Pure Ruby: Add get_sockname [#308, #772] Fix segfault when an Exception is raised from unbind callback [#765, #766] Allow destructors to throw when compiling in >= C++11 [#767]","title":"1.2.3 (February 22, 2017)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#122-january-23-2017","text":"Java: Fix Fixnum deprecated warning in Ruby 2.4+ [#759] Fix uncaught C++ exception in file watcher and raise InvalidSignature [#512, #757] Fix connection count off-by-one for epoll and kqueue [#750] Fix uninitialized variable warning in EM::P::HttpClient [#749] Fix missing initial value for EventableDescriptor NextHeartbeat [#748] Fix hostname resolution on Solaris, Ilumos, SmartOS, et al [#745, #746] Improve reliability of tests, reduce public Internet accesses in tests [#656, #666, #749]","title":"1.2.2 (January 23, 2017)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#121-november-15-2016","text":"Throw strerror(errno) when getsockname or getpeername fail [#683] Use a single concrete implementation of getpeername/getsockname, the rest pure virtuals [#683] Use gai_strerror to get the failure string from getaddrinfo [#744] Fix deregistering descriptor when using KQUEUE [#728] Fix to enable to work an example code in EM::Pool [#731] LineText2: Add regular expression delimiter support [#706] Pure Ruby: EM rescue ECONNREFUSED on initial TCP connect [#741] Pure Ruby: EM SSL (working start_tls) [#712] Pure Ruby: EM fixes [#707] Java: Use Acceptors to get peer and sock names if not present in Connections [#743]","title":"1.2.1 (November 15, 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#1201-march-15-2016","text":"Fix crash when accepting IPv6 connections due to struct sockaddr_in [#698, #699]","title":"1.2.0.1 (March 15, 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#120-march-15-2016","text":"Integrate work from the EventMachine-LE 1.1.x versions [#570] Add start_tls options :ecdh_curve, :dhparam, :fail_if_no_peer_cert [#195, #275, #399, #665] Add start_tls option :ssl_version for choosing SSL/TLS versions and ciphers [#359, #348, #603, #654] Add start_tls option :sni_hostname to be passed to TLS params [#593] Add method EM::Channel#num_subscribers to get the number of subscribers to a channel [#640] Add support for proc-sources in EM::Iterator [#639] Factor out method cleanup_machine to cleanup code from EM.run [#650] Replace Exception class with StandardError [#637] Close socket on close_connection even after close_connection_after_writing [#694] Allow reusing of datagram socket/setting bind device [#662] Handle deferred exceptions in reactor thread [#486] Reimplement Queue to avoid shift/push performance problem [#311] Windows: Switch from gethostbyname to getaddrinfo, support IPv6 addresses [#303, #630] Windows: Use rake-compiler-dock to cross-compile gems [#627] Windows: Add AppVeyor configuration for Windows CI testing [#578] Windows: Bump rake-compiler to version 0.9.x [#542] Fix compilation on AIX (w/ XLC) [#693] Fix build on OpenBSD [#690] Fix OpenSSL compile issue on AIX 7.1 [#678] Fix EventMachine.fork_reactor keeps the threadpool of the original process [#425] Fix to prevent event machine from stopping when a raise is done in an unbind [#327]","title":"1.2.0 (March 15, 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#1091-january-14-2016","text":"Fix EPROTO not defined on Windows [#676] Fix missing cast to struct sockaddr * [#671] Fix bug in OpenSSL path detection [#675]","title":"1.0.9.1 (January 14, 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#109-january-13-2016","text":"Try more ways to detect OpenSSL [#602, #643, #661, #663, #668, #669] Use WSAGetLastError in pipe.cpp same as ed.cpp [#659] Test compiler flags with the C++ compiler and add them to CXXFLAGS [#634, #651] Restore silent-fail on unsupported EM.epoll and EM.kqueue [#638, #649] getDescriptorByFileno deprecated in JRuby 1.7.x, removed in JRuby 9000 [#642, #648] Add -Wno-address always-true because on Windows rb_fd_select [#578] Remove the WITHOUT_SSL constant [#578] Fix SSL error when the server replies a TLS Alert to our ClientHello [#544, #653] Use WSAStringToAddress in lieu of inet_pton for IPv6 address detection on Windows [#595, #632] Fix nasty TCP/IPv6 bug [#595, #632] Use select_large_fdset on Solaris [#611, #625] Detect the Solaris Studio compiler [#611, #625] Throw a message with strerror included [#136, #621]","title":"1.0.9 (January 13, 2016)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#108-august-6-2015","text":"fix kqueue assertion failed, postpone ArmKqueueWriter until all events are processed [#51, #176, #372, #401, #619] fix Rubinius GC, crank the machine from Ruby space when running Rubinius [#201, #202, #617] test to show that LineText2 preserves whitespace and newlines [#32, #622] bump up compiler warnings and resolve them [#616] fix Windows x64 use uintptr_t instead of unsigned long for binding pointers [#612, #615] fix linetext2 unroll tail recursion to avoid stack level too deep [#609] fix for compilation with SSL on windows [#601] open file descriptors and sockets with O_CLOEXEC where possible [#298, #488, #591] fix SmtpClient: send second EHLO after STARTTLS. [#589] fix nul-terminated strings in C, use StringValueCStr instead of StringValuePtr","title":"1.0.8 (August 6, 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#107-february-10-2015","text":"fix delay in kqueue/epoll reactor shutdown when timers exist [#587] fix memory leak introduced in v1.0.5 [#586] expose EM.set_simultaneous_accept_count [#420] fix busy loop when EM.run and EM.next_tick are invoked from exception handler [#452]","title":"1.0.7 (February 10, 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#106-february-3-2015","text":"add support for Rubinius Process::Status [#568] small bugfixes for SmtpServer [#449] update buftok.rb [#547] fix assertion on Write() [#525] work around mkmf.rb bug preventing gem installation [#574] add pause/resume support to jruby reactor [#556] fix pure ruby reactor to use 127.0.0.1 instead of localhost [#439] fix compilation under macruby [#243] add chunked encoding to http client [#111] fix errors on win32 when dealing with pipes [1ea45498] [#105]","title":"1.0.6 (February 3, 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#105-february-2-2015","text":"use monotonic clocks on Linux, OS X, Solaris, and Windows [#563] use the rb_fd_* API to get autosized fd_sets [#502] add basic tests that the DNS resolver isn't leaking timers [#571] update to test-unit 2.x and improve various unit tests [#551] remove EventMachine_t::Popen code marked by ifdef OBSOLETE [#551] ruby 2.0 may fail at Queue.pop, so rescue and complain to $stderr [#551] set file handle to INVALID_HANDLE_VALUE after closing the file [#565] use defined? instead of rescuing NameError for flow control [#535] fix closing files and sockets on Windows [#564] fix file uploads in Windows [#562] catch failure to fork [#539] use chunks for SSL write [#545]","title":"1.0.5 (February 2, 2015)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#104-december-19-2014","text":"add starttls_options to smtp server [#552] fix closesocket on windows [#497] fix build on ruby 2.2 [#503] fix build error on ruby 1.9 [#508] fix timer leak during dns resolution [#489] add concurrency validation to EM::Iterator [#468] add get_file_descriptor to get fd for a signature [#467] add EM.attach_server and EM.attach_socket_server [#465, #466] calling pause from receive_data takes effect immediately [#464] reactor_running? returns false after fork [#455] fix infinite loop on double close [edc4d0e6, #441, #445] fix compilation issue on llvm [#433] fix socket error codes on win32 [ff811a81] fix EM.stop latency when timers exist [8b613d05, #426] fix infinite loop when system time changes [1427a2c80, #428] fix crash when callin attach/detach in the same tick [#427] fix compilation issue on solaris [#416]","title":"1.0.4 (December 19, 2014)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#103-march-8-2013","text":"EM.system was broken in 1.0.2 release [#413]","title":"1.0.3 (March 8, 2013)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#102-march-8-2013","text":"binary win32 gems now include fastfilereader shim [#222] fix long-standing connection timeout issues [27fdd5b, igrigorik/em-http-request#222] http and line protocol cleanups [#193, #151] reactor return value cleanup [#225] fix double require from gemspec [#284] fix smtp server reset behavior [#351] fix EM.system argument handling [#322] ruby 1.9 compat in smtp server and stomp protocols [#349, #315] fix pause from post_init [#380]","title":"1.0.2 (March 8, 2013)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/CHANGELOG/#101-february-27-2013","text":"use rb_wait_for_single_fd() on ruby 2.0 to fix rb_thread_select() deprecation [#363] fix epoll/kqueue mode in ruby 2.0 by removing calls to rb_enable_interrupt() [#248, #389] fix memory leak when verifying ssl cerificates [#403] fix initial connection delay [#393, #374] fix build on windows [#371]","title":"1.0.1 (February 27, 2013)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/DocumentationGuidesIndex/","text":"EventMachine documentation guides Welcome to the documentation guides for EventMachine , a fast and simple event-processing library for Ruby programs (\u00e0 la JBoss Netty, Twisted, Node.js and so on). Guide list {file:docs/GettingStarted.md Getting started with EventMachine} {file:docs/EventDrivenServers.md Writing event-driven servers} {file:docs/EventDrivenClients.md Writing event-driven clients} {file:docs/ConnectionFailureAndRecovery.md Connection Failure and Recovery} {file:docs/TLS.md TLS (aka SSL)} {file:docs/Ecosystem.md EventMachine ecosystem}: Thin, Goliath, em-http-request, em-websockets, Proxymachine and beyond {file:docs/BlockingEventLoop.md On blocking the event loop: why it is harmful for performance and how to avoid it} {file:docs/LightweightConcurrency.md Lightweight concurrency with EventMachine} {file:docs/Deferrables.md Deferrables} {file:docs/ModernKernelInputOutputAPIs.md Brief introduction to epoll, kqueue, select} {file:docs/WorkingWithOtherIOSources.md Working with other IO sources such as the keyboard} Tell us what you think! Please take a moment and tell us what you think about this guide on the EventMachine mailing list or in the #eventmachine channel on irc.freenode.net: what was unclear? What wasn't covered? Maybe you don't like the guide style or the grammar and spelling are incorrect? Reader feedback is key to making documentation better.","title":"EventMachine documentation guides #"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/DocumentationGuidesIndex/#eventmachine-documentation-guides","text":"Welcome to the documentation guides for EventMachine , a fast and simple event-processing library for Ruby programs (\u00e0 la JBoss Netty, Twisted, Node.js and so on).","title":"EventMachine documentation guides"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/DocumentationGuidesIndex/#guide-list","text":"{file:docs/GettingStarted.md Getting started with EventMachine} {file:docs/EventDrivenServers.md Writing event-driven servers} {file:docs/EventDrivenClients.md Writing event-driven clients} {file:docs/ConnectionFailureAndRecovery.md Connection Failure and Recovery} {file:docs/TLS.md TLS (aka SSL)} {file:docs/Ecosystem.md EventMachine ecosystem}: Thin, Goliath, em-http-request, em-websockets, Proxymachine and beyond {file:docs/BlockingEventLoop.md On blocking the event loop: why it is harmful for performance and how to avoid it} {file:docs/LightweightConcurrency.md Lightweight concurrency with EventMachine} {file:docs/Deferrables.md Deferrables} {file:docs/ModernKernelInputOutputAPIs.md Brief introduction to epoll, kqueue, select} {file:docs/WorkingWithOtherIOSources.md Working with other IO sources such as the keyboard}","title":"Guide list"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/DocumentationGuidesIndex/#tell-us-what-you-think","text":"Please take a moment and tell us what you think about this guide on the EventMachine mailing list or in the #eventmachine channel on irc.freenode.net: what was unclear? What wasn't covered? Maybe you don't like the guide style or the grammar and spelling are incorrect? Reader feedback is key to making documentation better.","title":"Tell us what you think!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/","text":"@title Getting Started with Ruby EventMachine @markup markdown @author Michael S. Klishin, Dan Sinclair Getting started with Ruby EventMachine About this guide This guide is a quick tutorial that helps you to get started with EventMachine for writing event-driven servers, clients and using it as a lightweight concurrency library. It should take about 20 minutes to read and study the provided code examples. This guide covers Installing EventMachine via Rubygems and Bundler . Building an Echo server, the \"Hello, world\"-like code example of network servers. Building a simple chat, both server and client. Building a very small asynchronous Websockets client. Covered versions This guide covers EventMachine v0.12.10 and 1.0 (including betas). Level This guide assumes you are comfortable (but not necessary a guru) with the command line. On Microsoft Windows\u2122, we recommend you to use JRuby when running these examples. Installing EventMachine Make sure you have Ruby installed This guide assumes you have one of the supported Ruby implementations installed: Ruby 1.8.7 Ruby 1.9.2 JRuby (we recommend 1.6) Rubinius 1.2 or higher Ruby Enterprise Edition EventMachine works on Microsoft Windows\u2122. With Rubygems To install the EventMachine gem do gem install eventmachine With Bundler gem \"eventmachine\" Verifying your installation Lets verify your installation with this quick IRB session: irb -rubygems ruby-1.9.2-p180 :001 > require \"eventmachine\" => true ruby-1.9.2-p180 :002 > EventMachine::VERSION => \"1.0.0.beta.3\" An Echo Server Example Lets begin with the classic \"Hello, world\"-like example, an echo server. The echo server responds clients with the same data that was provided. First, here's the code: {include:file:examples/guides/getting_started/01_eventmachine_echo_server.rb} When run, the server binds to port 10000. We can connect using Telnet and verify it's working: telnet localhost 10000 On my machine the output looks like: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. Let's send something to our server. Type in \"Hello, EventMachine\" and hit Enter. The server will respond with the same string: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. Hello, EventMachine # (here we hit Enter) Hello, EventMachine # (this ^^^ is our echo server reply) It works! Congratulations, you now can tell your Node.js-loving friends that you \"have done some event-driven programming, too\". Oh, and to stop Telnet, hit Control + Shift + ] and then Control + C. Lets walk this example line by line and see what's going on. These lines require 'rubygems' # or use Bundler.setup require 'eventmachine' probably look familiar: you use RubyGems (or Bundler ) for dependencies and then require EventMachine gem. Boring. Next: class EchoServer < EventMachine::Connection def receive_data(data) send_data(data) end end Is the implementation of our echo server. We define a class that inherits from {EventMachine::Connection} and a handler (aka callback) for one event: when we receive data from a client. EventMachine handles the connection setup, receiving data and passing it to our handler, {EventMachine::Connection#receive_data}. Then we implement our protocol logic, which in the case of Echo is pretty trivial: we send back whatever we receive. To do so, we're using {EventMachine::Connection#send_data}. Lets modify the example to recognize exit command: {include:file:examples/guides/getting_started/02_eventmachine_echo_server_that_recognizes_exit_command.rb} Our receive\\_data changed slightly and now looks like this: def receive_data(data) if data.strip =~ /exit$/i EventMachine.stop_event_loop else send_data(data) end end Because incoming data has trailing newline character, we strip it off before matching it against a simple regular expression. If the data ends in exit , we stop EventMachine event loop with {EventMachine.stop_event_loop}. This unblocks main thread and it finishes execution, and our little program exits as the result. To summarize this first example: Subclass {EventMachine::Connection} and override {EventMachine::Connection#send_data} to handle incoming data. Use {EventMachine.run} to start EventMachine event loop and then bind echo server with {EventMachine.start_server}. To stop the event loop, use {EventMachine.stop_event_loop} (aliased as {EventMachine.stop}) Lets move on to a slightly more sophisticated example that will introduce several more features and methods EventMachine has to offer. A Simple Chat Server Example Next we will write a simple chat. Initially clients will still use telnet to connect, but then we will add little client application that will serve as a proxy between telnet and the chat server. This example is certainly longer (~ 150 lines with whitespace and comments) so instead of looking at the final version and going through it line by line, we will instead begin with a very simple version that only keeps track of connected clients and then add features as we go. To set some expectations about our example: It will keep track of connected clients It will support a couple of commands, \u00e0 la IRC It will support direct messages using Twitter-like @usernames It won't use MongoDB, fibers or distributed map/reduce for anything but will be totally Web Scale\u2122 nonetheless. Maybe even ROFLscale . Step one: detecting connections and disconnectons First step looks like this: {include:file:examples/guides/getting_started/04_simple_chat_server_step_one.rb} We see familiar {EventMachine.run} and {EventMachine.start_server}, but also {EventMachine::Connection#post_init} and {EventMachine::Connection#unbind} we haven't met yet. We don't use them in this code, so when are they run? Like {EventMachine::Connection#receive_data}, these methods are callbacks. EventMachine calls them when certain events happen: {EventMachine#post_init} is called by the event loop immediately after the network connection has been established. In the chat server example case, this is when a new client connects. {EventMachine#unbind} is called when client disconnects, connection is closed or is lost (because of a network issue, for example). All our chat server does so far is logging connections or disconnections. What we want it to do next is to keep track of connected clients. Step two: keep track of connected clients Next iteration of the code looks like this: {include:file:examples/guides/getting_started/05_simple_chat_server_step_two.rb} While the code we added is very straightforward, we have to clarify one this first: subclasses of {EventMachine::Connection} are instantiated by EventMachine for every new connected peer. So for 10 connected chat clients, there will be 10 separate SimpleChatServer instances in our server process. Like any other objects, they can be stored in a collection, can provide public API other objects use, can instantiate or inject dependencies and in general live a happy life all Ruby objects live until garbage collection happens. In the example above we use a @@class_variable to keep track of connected clients. In Ruby, @@class variables are accessible from instance methods so we can add new connections to the list from SimpleChatServer#post_init and remove them in SimpleChatServer#unbind . We can also filter connections by some criteria, as SimpleChatServer#other_peers demonstrates . So, we keep track of connections but how do we identify them? For a chat app, it's pretty common to use usernames for that. Lets ask our clients to enter usernames when they connect. Step three: adding usernames To add usernames, we need to add a few things: We need to invite newly connected clients to enter their username. A reader (getter) method on our {EventMachine::Connection} subclass. An idea of connection state (keeping track of whether a particular participant had entered username before). Here is one way to do it: {include:file:examples/guides/getting_started/06_simple_chat_server_step_three.rb} This is quite an update so lets take a look at each method individually. First, SimpleChatServer#post_init : def post_init @username = nil puts \"A client has connected...\" ask_username end To keep track of username we ask chat participants for, we add @username instance variable to our connection class. Connection instances are just Ruby objects associated with a particular connected peer, so using @ivars is very natural. To make username value accessible to other objects, we added a reader method that was not shown on the snippet above. Lets dig into SimpleChatServer#ask_username : def ask_username self.send_line(\"[info] Enter your username:\") end # ask_username # ... def send_line(line) self.send_data(\"#{line}\\n\") end # send_line(line) Nothing new here, we are using {EventMachine::Connection#send_data} which we have seen before. In SimpleChatServer#receive_data we now have to check if the username was entered or we need to ask for it: def receive_data(data) if entered_username? handle_chat_message(data.strip) else handle_username(data.strip) end end # ... def entered_username? !@username.nil? && !@username.empty? end # entered_username? Finally, handler of chat messages is not yet implemented: def handle_chat_message(msg) raise NotImplementedError end Lets try this example out using Telnet: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: antares_ [info] Ohai, antares_ and the server output: A client has connected... antares_ has joined This version requires you to remember how to terminate your Telnet session (Ctrl + Shift + ], then Ctrl + C). It is annoying, so why don't we add the same exit command to our chat server? Step four: adding exit command and delivering chat messages {include:file:examples/guides/getting_started/07_simple_chat_server_step_four.rb} TBD Lets test-drive this version. Client A: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: michael [info] Ohai, michael Hi everyone michael: Hi everyone joe has joined the room # here ^^^ client B connects, lets greet him hi joe michael: hi joe joe: hey michael # ^^^ client B replies exit # ^^^ out command in action Connection closed by foreign host. Client B: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: joe [info] Ohai, joe michael: hi joe # ^^^ client A greets us, lets reply hey michael joe: hey michael exit # ^^^ out command in action Connection closed by foreign host. And finally, the server output: A client has connected... michael has joined A client has connected... _antares has joined [info] _antares has left [info] michael has left Our little char server now supports usernames, sending messages and the exit command. Next up, private (aka direct) messages. Step five: adding direct messages and one more command To add direct messages, we come up with a simple convention: private messages begin with @username and may have optional colon before message text, like this: @joe: hey, how do you like eventmachine? This convention makes parsing of messages simple so that we can concentrate on delivering them to a particular client connection. Remember when we added username reader on our connection class? That tiny change makes this step possible: when a new direct message comes in, we extract username and message text and then find then connection for @username in question: # # Message handling # def handle_chat_message(msg) if command?(msg) self.handle_command(msg) else if direct_message?(msg) self.handle_direct_message(msg) else self.announce(msg, \"#{@username}:\") end end end # handle_chat_message(msg) def direct_message?(input) input =~ DM_REGEXP end # direct_message?(input) def handle_direct_message(input) username, message = parse_direct_message(input) if connection = @@connected_clients.find { |c| c.username == username } puts \"[dm] @#{@username} => @#{username}\" connection.send_line(\"[dm] @#{@username}: #{message}\") else send_line \"@#{username} is not in the room. Here's who is: #{usernames.join(', ')}\" end end # handle_direct_message(input) def parse_direct_message(input) return [$1, $2] if input =~ DM_REGEXP end # parse_direct_message(input) This snippet demonstrates how one connection instance can obtain another connection instance and send data to it. This is a very powerful feature, consider just a few use cases: Peer-to-peer protocols Content-aware routing Efficient streaming with optional filtering Less common use cases include extending C++ core of EventMachine to provide access to hardware that streams events that can be re-broadcasted to any interested parties connected via TCP, UDP or something like AMQP or WebSockets. With this, sky is the limit. Actually, EventMachine has several features for efficient proxying data between connections. We will not cover them in this guide. One last feature that we are going to add to our chat server is the status command that tells you current server time and how many people are there in the chat room: # # Commands handling # def command?(input) input =~ /(exit|status)$/i end # command?(input) def handle_command(cmd) case cmd when /exit$/i then self.close_connection when /status$/i then self.send_line(\"[chat server] It's #{Time.now.strftime('%H:%M')} and there are #{self.number_of_connected_clients} people in the room\") end end # handle_command(cmd) Hopefully this piece of code is easy to follow. Try adding a few more commands, for example, the whoishere command that lists people currently in the chat room. In the end, our chat server looks like this: {include:file:examples/guides/getting_started/08_simple_chat_server_step_five.rb} We are almost done with the server but there are some closing thoughts. Step six: final version Just in case, here is the final version of the chat server code we have built: {include:file:examples/guides/getting_started/03_simple_chat_server.rb} Step seven: future directions and some closing thoughts The chat server is just about 150 lines of Ruby including empty lines and comments, yet it has a few features most of chat server examples never add. We did not, however, implement many other features that popular IRC clients like Colloquy have: Chat moderation Multiple rooms Connection timeout detection How would one go about implementing them? We thought it is worth discussing what else EventMachine has to offer and what ecosystem projects one can use to build a really feature-rich Web-based IRC chat client. With multiple rooms it's more or less straightforward, just add one more hash and a bunch of commands and use the information about which rooms participant is in when you are delivering messages. There is nothing in EventMachine itself that can make the job much easier for developer. To implement chat moderation feature you may want to do a few things: Work with client IP addresses. Maybe we want to consider everyone who connects from certain IPs a moderator. Access persistent data about usernames of moderators and their credentials. Does EventMachine have anything to offer here? It does. To obtain peer IP address, take a look at {EventMachine::Connection#get_peername}. The name of this method is a little bit misleading and originates from low-level socket programming APIs. A whirlwind tour of the EventMachine ecosystem To work with data stores you can use several database drivers that ship with EventMachine itself, however, quite often there are some 3rd party projects in the EventMachine ecosystem that have more features, are faster or just better maintained. So we figured it will be helpful to provide a few pointers to some of those projects: For MySQL, check out em-mysql project. For PostgreSQL, have a look at Mike Perham's EventMachine-based PostgreSQL driver . For Redis, there is a young but already popular em-hiredis library that combines EventMachine's non-blocking I/O with extreme performance of the official Redis C client, hiredis . For MongoDB, see em-mongo For Cassandra, Mike Perham added transport agnosticism feature to the cassandra gem . Riak and CouchDB talk HTTP so it's possible to use em-http-request . If you are aware of EventMachine-based non-blocking drivers for these databases, as well as for HBase, let us know on the EventMachine mailing list . Also, EventMachine supports TLS (aka SSL) and works well on JRuby and Windows. Learn more in our {file:docs/Ecosystem.md EventMachine ecosystem} and {file:docs/TLS.md TLS (aka SSL)} guides. Connection loss detection Finally, connection loss detection. When our chat participant closes her laptop lid, how do we know that she is no longer active? The answer is, when EventMachine detects TCP connectin closure, it calls {EventMachine::Connection#unbind}. Version 1.0.beta3 and later also pass an optional argument to that method. The argument indicates what error (if any) caused the connection to be closed. Learn more in our {file:docs/ConnectionFailureAndRecovery.md Connection Failure and Recovery} guide. What the Chat Server Example doesn't demonstrate This chat server also leaves out something production quality clients and servers must take care of: buffering. We intentionally did not include any buffering in our chat server example: it would only distract you from learning what you really came here to learn: how to use EventMachine to build blazing fast asynchronous networking programs quickly. However, {EventMachine::Connection#receive_data} does not offer any guarantees that you will be receiving \"whole messages\" all the time, largely because the underlying transport (UDP or TCP) does not offer such guarantees. Many protocols, for example, AMQP, mandate that large content chunks are split into smaller frames of certain size. This means that amq-client library, for instance, that has EventMachine-based driver, has to deal with figuring out when exactly we received \"the whole message\". To do so, it uses buffering and employs various checks to detect frame boundaries . So don't be deceived by the simplicity of this chat example : it intentionally leaves framing out, but real world protocols usually require it. A (Proxying) Chat Client Example TBD Wrapping up This tutorial ends here. Congratulations! You have learned quite a bit about EventMachine. What to read next The documentation is organized as a {file:docs/DocumentationGuidesIndex.md number of guides}, covering all kinds of topics. TBD Tell us what you think! Please take a moment and tell us what you think about this guide on the EventMachine mailing list or in the #eventmachine channel on irc.freenode.net: what was unclear? What wasn't covered? Maybe you don't like the guide style or the grammar and spelling are incorrect? Reader feedback is key to making documentation better.","title":"@title Getting Started with Ruby EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#title-getting-started-with-ruby-eventmachine","text":"","title":"@title Getting Started with Ruby EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#markup-markdown","text":"","title":"@markup markdown"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#author-michael-s-klishin-dan-sinclair","text":"","title":"@author Michael S. Klishin, Dan Sinclair"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#getting-started-with-ruby-eventmachine","text":"","title":"Getting started with Ruby EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#about-this-guide","text":"This guide is a quick tutorial that helps you to get started with EventMachine for writing event-driven servers, clients and using it as a lightweight concurrency library. It should take about 20 minutes to read and study the provided code examples. This guide covers Installing EventMachine via Rubygems and Bundler . Building an Echo server, the \"Hello, world\"-like code example of network servers. Building a simple chat, both server and client. Building a very small asynchronous Websockets client.","title":"About this guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#covered-versions","text":"This guide covers EventMachine v0.12.10 and 1.0 (including betas).","title":"Covered versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#level","text":"This guide assumes you are comfortable (but not necessary a guru) with the command line. On Microsoft Windows\u2122, we recommend you to use JRuby when running these examples.","title":"Level"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#installing-eventmachine","text":"","title":"Installing EventMachine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#make-sure-you-have-ruby-installed","text":"This guide assumes you have one of the supported Ruby implementations installed: Ruby 1.8.7 Ruby 1.9.2 JRuby (we recommend 1.6) Rubinius 1.2 or higher Ruby Enterprise Edition EventMachine works on Microsoft Windows\u2122.","title":"Make sure you have Ruby installed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#with-rubygems","text":"To install the EventMachine gem do gem install eventmachine","title":"With Rubygems"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#with-bundler","text":"gem \"eventmachine\"","title":"With Bundler"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#verifying-your-installation","text":"Lets verify your installation with this quick IRB session: irb -rubygems ruby-1.9.2-p180 :001 > require \"eventmachine\" => true ruby-1.9.2-p180 :002 > EventMachine::VERSION => \"1.0.0.beta.3\"","title":"Verifying your installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#an-echo-server-example","text":"Lets begin with the classic \"Hello, world\"-like example, an echo server. The echo server responds clients with the same data that was provided. First, here's the code: {include:file:examples/guides/getting_started/01_eventmachine_echo_server.rb} When run, the server binds to port 10000. We can connect using Telnet and verify it's working: telnet localhost 10000 On my machine the output looks like: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. Let's send something to our server. Type in \"Hello, EventMachine\" and hit Enter. The server will respond with the same string: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. Hello, EventMachine # (here we hit Enter) Hello, EventMachine # (this ^^^ is our echo server reply) It works! Congratulations, you now can tell your Node.js-loving friends that you \"have done some event-driven programming, too\". Oh, and to stop Telnet, hit Control + Shift + ] and then Control + C. Lets walk this example line by line and see what's going on. These lines require 'rubygems' # or use Bundler.setup require 'eventmachine' probably look familiar: you use RubyGems (or Bundler ) for dependencies and then require EventMachine gem. Boring. Next: class EchoServer < EventMachine::Connection def receive_data(data) send_data(data) end end Is the implementation of our echo server. We define a class that inherits from {EventMachine::Connection} and a handler (aka callback) for one event: when we receive data from a client. EventMachine handles the connection setup, receiving data and passing it to our handler, {EventMachine::Connection#receive_data}. Then we implement our protocol logic, which in the case of Echo is pretty trivial: we send back whatever we receive. To do so, we're using {EventMachine::Connection#send_data}. Lets modify the example to recognize exit command: {include:file:examples/guides/getting_started/02_eventmachine_echo_server_that_recognizes_exit_command.rb} Our receive\\_data changed slightly and now looks like this: def receive_data(data) if data.strip =~ /exit$/i EventMachine.stop_event_loop else send_data(data) end end Because incoming data has trailing newline character, we strip it off before matching it against a simple regular expression. If the data ends in exit , we stop EventMachine event loop with {EventMachine.stop_event_loop}. This unblocks main thread and it finishes execution, and our little program exits as the result. To summarize this first example: Subclass {EventMachine::Connection} and override {EventMachine::Connection#send_data} to handle incoming data. Use {EventMachine.run} to start EventMachine event loop and then bind echo server with {EventMachine.start_server}. To stop the event loop, use {EventMachine.stop_event_loop} (aliased as {EventMachine.stop}) Lets move on to a slightly more sophisticated example that will introduce several more features and methods EventMachine has to offer.","title":"An Echo Server Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#a-simple-chat-server-example","text":"Next we will write a simple chat. Initially clients will still use telnet to connect, but then we will add little client application that will serve as a proxy between telnet and the chat server. This example is certainly longer (~ 150 lines with whitespace and comments) so instead of looking at the final version and going through it line by line, we will instead begin with a very simple version that only keeps track of connected clients and then add features as we go. To set some expectations about our example: It will keep track of connected clients It will support a couple of commands, \u00e0 la IRC It will support direct messages using Twitter-like @usernames It won't use MongoDB, fibers or distributed map/reduce for anything but will be totally Web Scale\u2122 nonetheless. Maybe even ROFLscale .","title":"A Simple Chat Server Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-one-detecting-connections-and-disconnectons","text":"First step looks like this: {include:file:examples/guides/getting_started/04_simple_chat_server_step_one.rb} We see familiar {EventMachine.run} and {EventMachine.start_server}, but also {EventMachine::Connection#post_init} and {EventMachine::Connection#unbind} we haven't met yet. We don't use them in this code, so when are they run? Like {EventMachine::Connection#receive_data}, these methods are callbacks. EventMachine calls them when certain events happen: {EventMachine#post_init} is called by the event loop immediately after the network connection has been established. In the chat server example case, this is when a new client connects. {EventMachine#unbind} is called when client disconnects, connection is closed or is lost (because of a network issue, for example). All our chat server does so far is logging connections or disconnections. What we want it to do next is to keep track of connected clients.","title":"Step one: detecting connections and disconnectons"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-two-keep-track-of-connected-clients","text":"Next iteration of the code looks like this: {include:file:examples/guides/getting_started/05_simple_chat_server_step_two.rb} While the code we added is very straightforward, we have to clarify one this first: subclasses of {EventMachine::Connection} are instantiated by EventMachine for every new connected peer. So for 10 connected chat clients, there will be 10 separate SimpleChatServer instances in our server process. Like any other objects, they can be stored in a collection, can provide public API other objects use, can instantiate or inject dependencies and in general live a happy life all Ruby objects live until garbage collection happens. In the example above we use a @@class_variable to keep track of connected clients. In Ruby, @@class variables are accessible from instance methods so we can add new connections to the list from SimpleChatServer#post_init and remove them in SimpleChatServer#unbind . We can also filter connections by some criteria, as SimpleChatServer#other_peers demonstrates . So, we keep track of connections but how do we identify them? For a chat app, it's pretty common to use usernames for that. Lets ask our clients to enter usernames when they connect.","title":"Step two: keep track of connected clients"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-three-adding-usernames","text":"To add usernames, we need to add a few things: We need to invite newly connected clients to enter their username. A reader (getter) method on our {EventMachine::Connection} subclass. An idea of connection state (keeping track of whether a particular participant had entered username before). Here is one way to do it: {include:file:examples/guides/getting_started/06_simple_chat_server_step_three.rb} This is quite an update so lets take a look at each method individually. First, SimpleChatServer#post_init : def post_init @username = nil puts \"A client has connected...\" ask_username end To keep track of username we ask chat participants for, we add @username instance variable to our connection class. Connection instances are just Ruby objects associated with a particular connected peer, so using @ivars is very natural. To make username value accessible to other objects, we added a reader method that was not shown on the snippet above. Lets dig into SimpleChatServer#ask_username : def ask_username self.send_line(\"[info] Enter your username:\") end # ask_username # ... def send_line(line) self.send_data(\"#{line}\\n\") end # send_line(line) Nothing new here, we are using {EventMachine::Connection#send_data} which we have seen before. In SimpleChatServer#receive_data we now have to check if the username was entered or we need to ask for it: def receive_data(data) if entered_username? handle_chat_message(data.strip) else handle_username(data.strip) end end # ... def entered_username? !@username.nil? && !@username.empty? end # entered_username? Finally, handler of chat messages is not yet implemented: def handle_chat_message(msg) raise NotImplementedError end Lets try this example out using Telnet: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: antares_ [info] Ohai, antares_ and the server output: A client has connected... antares_ has joined This version requires you to remember how to terminate your Telnet session (Ctrl + Shift + ], then Ctrl + C). It is annoying, so why don't we add the same exit command to our chat server?","title":"Step three: adding usernames"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-four-adding-exit-command-and-delivering-chat-messages","text":"{include:file:examples/guides/getting_started/07_simple_chat_server_step_four.rb} TBD Lets test-drive this version. Client A: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: michael [info] Ohai, michael Hi everyone michael: Hi everyone joe has joined the room # here ^^^ client B connects, lets greet him hi joe michael: hi joe joe: hey michael # ^^^ client B replies exit # ^^^ out command in action Connection closed by foreign host. Client B: ~ telnet localhost 10000 Trying 127.0.0.1... Connected to localhost. Escape character is '^]'. [info] Enter your username: joe [info] Ohai, joe michael: hi joe # ^^^ client A greets us, lets reply hey michael joe: hey michael exit # ^^^ out command in action Connection closed by foreign host. And finally, the server output: A client has connected... michael has joined A client has connected... _antares has joined [info] _antares has left [info] michael has left Our little char server now supports usernames, sending messages and the exit command. Next up, private (aka direct) messages.","title":"Step four: adding exit command and delivering chat messages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-five-adding-direct-messages-and-one-more-command","text":"To add direct messages, we come up with a simple convention: private messages begin with @username and may have optional colon before message text, like this: @joe: hey, how do you like eventmachine? This convention makes parsing of messages simple so that we can concentrate on delivering them to a particular client connection. Remember when we added username reader on our connection class? That tiny change makes this step possible: when a new direct message comes in, we extract username and message text and then find then connection for @username in question: # # Message handling # def handle_chat_message(msg) if command?(msg) self.handle_command(msg) else if direct_message?(msg) self.handle_direct_message(msg) else self.announce(msg, \"#{@username}:\") end end end # handle_chat_message(msg) def direct_message?(input) input =~ DM_REGEXP end # direct_message?(input) def handle_direct_message(input) username, message = parse_direct_message(input) if connection = @@connected_clients.find { |c| c.username == username } puts \"[dm] @#{@username} => @#{username}\" connection.send_line(\"[dm] @#{@username}: #{message}\") else send_line \"@#{username} is not in the room. Here's who is: #{usernames.join(', ')}\" end end # handle_direct_message(input) def parse_direct_message(input) return [$1, $2] if input =~ DM_REGEXP end # parse_direct_message(input) This snippet demonstrates how one connection instance can obtain another connection instance and send data to it. This is a very powerful feature, consider just a few use cases: Peer-to-peer protocols Content-aware routing Efficient streaming with optional filtering Less common use cases include extending C++ core of EventMachine to provide access to hardware that streams events that can be re-broadcasted to any interested parties connected via TCP, UDP or something like AMQP or WebSockets. With this, sky is the limit. Actually, EventMachine has several features for efficient proxying data between connections. We will not cover them in this guide. One last feature that we are going to add to our chat server is the status command that tells you current server time and how many people are there in the chat room: # # Commands handling # def command?(input) input =~ /(exit|status)$/i end # command?(input) def handle_command(cmd) case cmd when /exit$/i then self.close_connection when /status$/i then self.send_line(\"[chat server] It's #{Time.now.strftime('%H:%M')} and there are #{self.number_of_connected_clients} people in the room\") end end # handle_command(cmd) Hopefully this piece of code is easy to follow. Try adding a few more commands, for example, the whoishere command that lists people currently in the chat room. In the end, our chat server looks like this: {include:file:examples/guides/getting_started/08_simple_chat_server_step_five.rb} We are almost done with the server but there are some closing thoughts.","title":"Step five: adding direct messages and one more command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-six-final-version","text":"Just in case, here is the final version of the chat server code we have built: {include:file:examples/guides/getting_started/03_simple_chat_server.rb}","title":"Step six: final version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#step-seven-future-directions-and-some-closing-thoughts","text":"The chat server is just about 150 lines of Ruby including empty lines and comments, yet it has a few features most of chat server examples never add. We did not, however, implement many other features that popular IRC clients like Colloquy have: Chat moderation Multiple rooms Connection timeout detection How would one go about implementing them? We thought it is worth discussing what else EventMachine has to offer and what ecosystem projects one can use to build a really feature-rich Web-based IRC chat client. With multiple rooms it's more or less straightforward, just add one more hash and a bunch of commands and use the information about which rooms participant is in when you are delivering messages. There is nothing in EventMachine itself that can make the job much easier for developer. To implement chat moderation feature you may want to do a few things: Work with client IP addresses. Maybe we want to consider everyone who connects from certain IPs a moderator. Access persistent data about usernames of moderators and their credentials. Does EventMachine have anything to offer here? It does. To obtain peer IP address, take a look at {EventMachine::Connection#get_peername}. The name of this method is a little bit misleading and originates from low-level socket programming APIs.","title":"Step seven: future directions and some closing thoughts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#a-whirlwind-tour-of-the-eventmachine-ecosystem","text":"To work with data stores you can use several database drivers that ship with EventMachine itself, however, quite often there are some 3rd party projects in the EventMachine ecosystem that have more features, are faster or just better maintained. So we figured it will be helpful to provide a few pointers to some of those projects: For MySQL, check out em-mysql project. For PostgreSQL, have a look at Mike Perham's EventMachine-based PostgreSQL driver . For Redis, there is a young but already popular em-hiredis library that combines EventMachine's non-blocking I/O with extreme performance of the official Redis C client, hiredis . For MongoDB, see em-mongo For Cassandra, Mike Perham added transport agnosticism feature to the cassandra gem . Riak and CouchDB talk HTTP so it's possible to use em-http-request . If you are aware of EventMachine-based non-blocking drivers for these databases, as well as for HBase, let us know on the EventMachine mailing list . Also, EventMachine supports TLS (aka SSL) and works well on JRuby and Windows. Learn more in our {file:docs/Ecosystem.md EventMachine ecosystem} and {file:docs/TLS.md TLS (aka SSL)} guides.","title":"A whirlwind tour of the EventMachine ecosystem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#connection-loss-detection","text":"Finally, connection loss detection. When our chat participant closes her laptop lid, how do we know that she is no longer active? The answer is, when EventMachine detects TCP connectin closure, it calls {EventMachine::Connection#unbind}. Version 1.0.beta3 and later also pass an optional argument to that method. The argument indicates what error (if any) caused the connection to be closed. Learn more in our {file:docs/ConnectionFailureAndRecovery.md Connection Failure and Recovery} guide.","title":"Connection loss detection"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#what-the-chat-server-example-doesnt-demonstrate","text":"This chat server also leaves out something production quality clients and servers must take care of: buffering. We intentionally did not include any buffering in our chat server example: it would only distract you from learning what you really came here to learn: how to use EventMachine to build blazing fast asynchronous networking programs quickly. However, {EventMachine::Connection#receive_data} does not offer any guarantees that you will be receiving \"whole messages\" all the time, largely because the underlying transport (UDP or TCP) does not offer such guarantees. Many protocols, for example, AMQP, mandate that large content chunks are split into smaller frames of certain size. This means that amq-client library, for instance, that has EventMachine-based driver, has to deal with figuring out when exactly we received \"the whole message\". To do so, it uses buffering and employs various checks to detect frame boundaries . So don't be deceived by the simplicity of this chat example : it intentionally leaves framing out, but real world protocols usually require it.","title":"What the Chat Server Example doesn't demonstrate"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#a-proxying-chat-client-example","text":"TBD","title":"A (Proxying) Chat Client Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#wrapping-up","text":"This tutorial ends here. Congratulations! You have learned quite a bit about EventMachine.","title":"Wrapping up"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#what-to-read-next","text":"The documentation is organized as a {file:docs/DocumentationGuidesIndex.md number of guides}, covering all kinds of topics. TBD","title":"What to read next"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/eventmachine-1.2.7/docs/GettingStarted/#tell-us-what-you-think","text":"Please take a moment and tell us what you think about this guide on the EventMachine mailing list or in the #eventmachine channel on irc.freenode.net: what was unclear? What wasn't covered? Maybe you don't like the guide style or the grammar and spelling are incorrect? Reader feedback is key to making documentation better.","title":"Tell us what you think!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/","text":"ExecJS ExecJS lets you run JavaScript code from Ruby. It automatically picks the best runtime available to evaluate your JavaScript program, then returns the result to you as a Ruby object. ExecJS supports these runtimes: therubyracer - Google V8 embedded within Ruby therubyrhino - Mozilla Rhino embedded within JRuby Duktape.rb - Duktape JavaScript interpreter Node.js Apple JavaScriptCore - Included with Mac OS X Microsoft Windows Script Host (JScript) Google V8 mini_racer - Google V8 embedded within Ruby A short example: require \"execjs\" ExecJS.eval \"'red yellow blue'.split(' ')\" # => [\"red\", \"yellow\", \"blue\"] A longer example, demonstrating how to invoke the CoffeeScript compiler: require \"execjs\" require \"open-uri\" source = open(\"http://coffeescript.org/extras/coffee-script.js\").read context = ExecJS.compile(source) context.call(\"CoffeeScript.compile\", \"square = (x) -> x * x\", bare: true) # => \"var square;\\nsquare = function(x) {\\n return x * x;\\n};\" Installation $ gem install execjs FAQ Why can't I use CommonJS require() inside ExecJS? ExecJS provides a lowest common denominator interface to any JavaScript runtime. Use ExecJS when it doesn't matter which JavaScript interpreter your code runs in. If you want to access the Node API, you should check another library like commonjs.rb designed to provide a consistent interface. Why can't I use setTimeout ? For similar reasons as modules, not all runtimes guarantee a full JavaScript event loop. So setTimeout , setInterval and other timers are not defined. Why can't I use ES5 features? Some runtimes like Node will implement many of the latest ES5 features. However older stock runtimes like JSC on OSX and JScript on Windows may not. You should only count on ES3 features being available. Prefer feature checking these APIs rather than hard coding support for specific runtimes. Can ExecJS be used to sandbox scripts? No, ExecJS shouldn't be used for any security related sandboxing. Since runtimes are automatically detected, each runtime has different sandboxing properties. You shouldn't use ExecJS.eval on any inputs you wouldn't feel comfortable Ruby eval() ing. Contributing to ExecJS ExecJS is work of hundreds of contributors. You're encouraged to submit pull requests, propose features and discuss issues. See CONTRIBUTING . License ExecJS is released under the MIT License .","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/#execjs","text":"ExecJS lets you run JavaScript code from Ruby. It automatically picks the best runtime available to evaluate your JavaScript program, then returns the result to you as a Ruby object. ExecJS supports these runtimes: therubyracer - Google V8 embedded within Ruby therubyrhino - Mozilla Rhino embedded within JRuby Duktape.rb - Duktape JavaScript interpreter Node.js Apple JavaScriptCore - Included with Mac OS X Microsoft Windows Script Host (JScript) Google V8 mini_racer - Google V8 embedded within Ruby A short example: require \"execjs\" ExecJS.eval \"'red yellow blue'.split(' ')\" # => [\"red\", \"yellow\", \"blue\"] A longer example, demonstrating how to invoke the CoffeeScript compiler: require \"execjs\" require \"open-uri\" source = open(\"http://coffeescript.org/extras/coffee-script.js\").read context = ExecJS.compile(source) context.call(\"CoffeeScript.compile\", \"square = (x) -> x * x\", bare: true) # => \"var square;\\nsquare = function(x) {\\n return x * x;\\n};\"","title":"ExecJS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/#installation","text":"$ gem install execjs","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/#faq","text":"Why can't I use CommonJS require() inside ExecJS? ExecJS provides a lowest common denominator interface to any JavaScript runtime. Use ExecJS when it doesn't matter which JavaScript interpreter your code runs in. If you want to access the Node API, you should check another library like commonjs.rb designed to provide a consistent interface. Why can't I use setTimeout ? For similar reasons as modules, not all runtimes guarantee a full JavaScript event loop. So setTimeout , setInterval and other timers are not defined. Why can't I use ES5 features? Some runtimes like Node will implement many of the latest ES5 features. However older stock runtimes like JSC on OSX and JScript on Windows may not. You should only count on ES3 features being available. Prefer feature checking these APIs rather than hard coding support for specific runtimes. Can ExecJS be used to sandbox scripts? No, ExecJS shouldn't be used for any security related sandboxing. Since runtimes are automatically detected, each runtime has different sandboxing properties. You shouldn't use ExecJS.eval on any inputs you wouldn't feel comfortable Ruby eval() ing.","title":"FAQ"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/#contributing-to-execjs","text":"ExecJS is work of hundreds of contributors. You're encouraged to submit pull requests, propose features and discuss issues. See CONTRIBUTING .","title":"Contributing to ExecJS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.7.0/#license","text":"ExecJS is released under the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/","text":"ExecJS ExecJS lets you run JavaScript code from Ruby. It automatically picks the best runtime available to evaluate your JavaScript program, then returns the result to you as a Ruby object. ExecJS supports these runtimes: therubyrhino - Mozilla Rhino embedded within JRuby Duktape.rb - Duktape JavaScript interpreter Node.js Apple JavaScriptCore - Included with Mac OS X Microsoft Windows Script Host (JScript) Google V8 mini_racer - Google V8 embedded within Ruby A short example: require \"execjs\" ExecJS.eval \"'red yellow blue'.split(' ')\" # => [\"red\", \"yellow\", \"blue\"] A longer example, demonstrating how to invoke the CoffeeScript compiler: require \"execjs\" require \"open-uri\" source = open(\"http://coffeescript.org/extras/coffee-script.js\").read context = ExecJS.compile(source) context.call(\"CoffeeScript.compile\", \"square = (x) -> x * x\", bare: true) # => \"var square;\\nsquare = function(x) {\\n return x * x;\\n};\" Installation $ gem install execjs FAQ Why can't I use CommonJS require() inside ExecJS? ExecJS provides a lowest common denominator interface to any JavaScript runtime. Use ExecJS when it doesn't matter which JavaScript interpreter your code runs in. If you want to access the Node API, you should check another library like commonjs.rb designed to provide a consistent interface. Why can't I use setTimeout ? For similar reasons as modules, not all runtimes guarantee a full JavaScript event loop. So setTimeout , setInterval and other timers are not defined. Why can't I use ES5 features? Some runtimes like Node will implement many of the latest ES5 features. However older stock runtimes like JSC on OSX and JScript on Windows may not. You should only count on ES3 features being available. Prefer feature checking these APIs rather than hard coding support for specific runtimes. Can ExecJS be used to sandbox scripts? No, ExecJS shouldn't be used for any security related sandboxing. Since runtimes are automatically detected, each runtime has different sandboxing properties. You shouldn't use ExecJS.eval on any inputs you wouldn't feel comfortable Ruby eval() ing. Contributing to ExecJS ExecJS is work of dozens of contributors. You're encouraged to submit pull requests, propose features and discuss issues. See CONTRIBUTING . License ExecJS is released under the MIT License .","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/#execjs","text":"ExecJS lets you run JavaScript code from Ruby. It automatically picks the best runtime available to evaluate your JavaScript program, then returns the result to you as a Ruby object. ExecJS supports these runtimes: therubyrhino - Mozilla Rhino embedded within JRuby Duktape.rb - Duktape JavaScript interpreter Node.js Apple JavaScriptCore - Included with Mac OS X Microsoft Windows Script Host (JScript) Google V8 mini_racer - Google V8 embedded within Ruby A short example: require \"execjs\" ExecJS.eval \"'red yellow blue'.split(' ')\" # => [\"red\", \"yellow\", \"blue\"] A longer example, demonstrating how to invoke the CoffeeScript compiler: require \"execjs\" require \"open-uri\" source = open(\"http://coffeescript.org/extras/coffee-script.js\").read context = ExecJS.compile(source) context.call(\"CoffeeScript.compile\", \"square = (x) -> x * x\", bare: true) # => \"var square;\\nsquare = function(x) {\\n return x * x;\\n};\"","title":"ExecJS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/#installation","text":"$ gem install execjs","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/#faq","text":"Why can't I use CommonJS require() inside ExecJS? ExecJS provides a lowest common denominator interface to any JavaScript runtime. Use ExecJS when it doesn't matter which JavaScript interpreter your code runs in. If you want to access the Node API, you should check another library like commonjs.rb designed to provide a consistent interface. Why can't I use setTimeout ? For similar reasons as modules, not all runtimes guarantee a full JavaScript event loop. So setTimeout , setInterval and other timers are not defined. Why can't I use ES5 features? Some runtimes like Node will implement many of the latest ES5 features. However older stock runtimes like JSC on OSX and JScript on Windows may not. You should only count on ES3 features being available. Prefer feature checking these APIs rather than hard coding support for specific runtimes. Can ExecJS be used to sandbox scripts? No, ExecJS shouldn't be used for any security related sandboxing. Since runtimes are automatically detected, each runtime has different sandboxing properties. You shouldn't use ExecJS.eval on any inputs you wouldn't feel comfortable Ruby eval() ing.","title":"FAQ"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/#contributing-to-execjs","text":"ExecJS is work of dozens of contributors. You're encouraged to submit pull requests, propose features and discuss issues. See CONTRIBUTING .","title":"Contributing to ExecJS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/execjs-2.8.1/#license","text":"ExecJS is released under the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/","text":"Faraday Faraday is an HTTP client lib that provides a common interface over many adapters (such as Net::HTTP) and embraces the concept of Rack middleware when processing the request/response cycle. Faraday supports these adapters: Net::HTTP (default) Net::HTTP::Persistent Excon Typhoeus Patron EventMachine HTTPClient It also includes a Rack adapter for hitting loaded Rack applications through Rack::Test, and a Test adapter for stubbing requests by hand. Usage conn = Faraday.new(:url => 'http://sushi.com') do |faraday| faraday.request :url_encoded # form-encode POST params faraday.response :logger # log requests to STDOUT faraday.adapter Faraday.default_adapter # make requests with Net::HTTP end ## GET ## response = conn.get '/nigiri/sake.json' # GET http://sushi.com/nigiri/sake.json response.body conn.get '/nigiri', { :name => 'Maguro' } # GET http://sushi.com/nigiri?name=Maguro conn.get do |req| # GET http://sushi.com/search?page=2&limit=100 req.url '/search', :page => 2 req.params['limit'] = 100 end ## POST ## conn.post '/nigiri', { :name => 'Maguro' } # POST \"name=maguro\" to http://sushi.com/nigiri # post payload as JSON instead of \"www-form-urlencoded\" encoding: conn.post do |req| req.url '/nigiri' req.headers['Content-Type'] = 'application/json' req.body = '{ \"name\": \"Unagi\" }' end ## Per-request options ## conn.get do |req| req.url '/search' req.options.timeout = 5 # open/read timeout in seconds req.options.open_timeout = 2 # connection open timeout in seconds end If you don't need to set up anything, you can roll with just the default middleware stack and default adapter (see Faraday::RackBuilder#initialize ): response = Faraday.get 'http://sushi.com/nigiri/sake.json' Changing how parameters are serialized Sometimes you need to send the same URL parameter multiple times with different values. This requires manually setting the parameter encoder and can be done on either per-connection or per-request basis. # per-connection setting conn = Faraday.new :params_encoder => Faraday::FlatParamsEncoder conn.get do |req| # per-request setting: # req.options.params_encoder = my_encoder req.params['roll'] = ['california', 'philadelphia'] end # GET 'http://sushi.com?roll=california&roll=philadelphia' The value of Faraday params_encoder can be any object that responds to: encode(hash) #=> String decode(string) #=> Hash The encoder will affect both how query strings are processed and how POST bodies get serialized. The default encoder is Faraday::NestedParamsEncoder. Advanced middleware usage The order in which middleware is stacked is important. Like with Rack, the first middleware on the list wraps all others, while the last middleware is the innermost one, so that must be the adapter. Faraday.new(...) do |conn| # POST/PUT params encoders: conn.request :multipart conn.request :url_encoded conn.adapter :net_http end This request middleware setup affects POST/PUT requests in the following way: Request::Multipart checks for files in the payload, otherwise leaves everything untouched; Request::UrlEncoded encodes as \"application/x-www-form-urlencoded\" if not already encoded or of another type Swapping middleware means giving the other priority. Specifying the \"Content-Type\" for the request is explicitly stating which middleware should process it. Examples: # uploading a file: payload[:profile_pic] = Faraday::UploadIO.new('/path/to/avatar.jpg', 'image/jpeg') # \"Multipart\" middleware detects files and encodes with \"multipart/form-data\": conn.put '/profile', payload Writing middleware Middleware are classes that implement a call instance method. They hook into the request/response cycle. def call(request_env) # do something with the request # request_env[:request_headers].merge!(...) @app.call(request_env).on_complete do |response_env| # do something with the response # response_env[:response_headers].merge!(...) end end It's important to do all processing of the response only in the on_complete block. This enables middleware to work in parallel mode where requests are asynchronous. The env is a hash with symbol keys that contains info about the request and, later, response. Some keys are: # request phase :method - :get, :post, ... :url - URI for the current request; also contains GET parameters :body - POST parameters for :post/:put requests :request_headers # response phase :status - HTTP response status code, such as 200 :body - the response body :response_headers Using Faraday for testing # It's possible to define stubbed request outside a test adapter block. stubs = Faraday::Adapter::Test::Stubs.new do |stub| stub.get('/tamago') { |env| [200, {}, 'egg'] } end # You can pass stubbed request to the test adapter or define them in a block # or a combination of the two. test = Faraday.new do |builder| builder.adapter :test, stubs do |stub| stub.get('/ebi') { |env| [ 200, {}, 'shrimp' ]} end end # It's also possible to stub additional requests after the connection has # been initialized. This is useful for testing. stubs.get('/uni') { |env| [ 200, {}, 'urchin' ]} resp = test.get '/tamago' resp.body # => 'egg' resp = test.get '/ebi' resp.body # => 'shrimp' resp = test.get '/uni' resp.body # => 'urchin' resp = test.get '/else' #=> raises \"no such stub\" error # If you like, you can treat your stubs as mocks by verifying that all of # the stubbed calls were made. NOTE that this feature is still fairly # experimental: It will not verify the order or count of any stub, only that # it was called once during the course of the test. stubs.verify_stubbed_calls TODO support streaming requests/responses better stubbing API Supported Ruby versions This library aims to support and is tested against the following Ruby implementations: Ruby 1.8.7+ JRuby 1.7+ Rubinius 2+ If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, however support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped. Copyright Copyright (c) 2009-2013 Rick Olson , Zack Hobson. See LICENSE for details.","title":"Faraday"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#faraday","text":"Faraday is an HTTP client lib that provides a common interface over many adapters (such as Net::HTTP) and embraces the concept of Rack middleware when processing the request/response cycle. Faraday supports these adapters: Net::HTTP (default) Net::HTTP::Persistent Excon Typhoeus Patron EventMachine HTTPClient It also includes a Rack adapter for hitting loaded Rack applications through Rack::Test, and a Test adapter for stubbing requests by hand.","title":"Faraday"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#usage","text":"conn = Faraday.new(:url => 'http://sushi.com') do |faraday| faraday.request :url_encoded # form-encode POST params faraday.response :logger # log requests to STDOUT faraday.adapter Faraday.default_adapter # make requests with Net::HTTP end ## GET ## response = conn.get '/nigiri/sake.json' # GET http://sushi.com/nigiri/sake.json response.body conn.get '/nigiri', { :name => 'Maguro' } # GET http://sushi.com/nigiri?name=Maguro conn.get do |req| # GET http://sushi.com/search?page=2&limit=100 req.url '/search', :page => 2 req.params['limit'] = 100 end ## POST ## conn.post '/nigiri', { :name => 'Maguro' } # POST \"name=maguro\" to http://sushi.com/nigiri # post payload as JSON instead of \"www-form-urlencoded\" encoding: conn.post do |req| req.url '/nigiri' req.headers['Content-Type'] = 'application/json' req.body = '{ \"name\": \"Unagi\" }' end ## Per-request options ## conn.get do |req| req.url '/search' req.options.timeout = 5 # open/read timeout in seconds req.options.open_timeout = 2 # connection open timeout in seconds end If you don't need to set up anything, you can roll with just the default middleware stack and default adapter (see Faraday::RackBuilder#initialize ): response = Faraday.get 'http://sushi.com/nigiri/sake.json'","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#changing-how-parameters-are-serialized","text":"Sometimes you need to send the same URL parameter multiple times with different values. This requires manually setting the parameter encoder and can be done on either per-connection or per-request basis. # per-connection setting conn = Faraday.new :params_encoder => Faraday::FlatParamsEncoder conn.get do |req| # per-request setting: # req.options.params_encoder = my_encoder req.params['roll'] = ['california', 'philadelphia'] end # GET 'http://sushi.com?roll=california&roll=philadelphia' The value of Faraday params_encoder can be any object that responds to: encode(hash) #=> String decode(string) #=> Hash The encoder will affect both how query strings are processed and how POST bodies get serialized. The default encoder is Faraday::NestedParamsEncoder.","title":"Changing how parameters are serialized"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#advanced-middleware-usage","text":"The order in which middleware is stacked is important. Like with Rack, the first middleware on the list wraps all others, while the last middleware is the innermost one, so that must be the adapter. Faraday.new(...) do |conn| # POST/PUT params encoders: conn.request :multipart conn.request :url_encoded conn.adapter :net_http end This request middleware setup affects POST/PUT requests in the following way: Request::Multipart checks for files in the payload, otherwise leaves everything untouched; Request::UrlEncoded encodes as \"application/x-www-form-urlencoded\" if not already encoded or of another type Swapping middleware means giving the other priority. Specifying the \"Content-Type\" for the request is explicitly stating which middleware should process it. Examples: # uploading a file: payload[:profile_pic] = Faraday::UploadIO.new('/path/to/avatar.jpg', 'image/jpeg') # \"Multipart\" middleware detects files and encodes with \"multipart/form-data\": conn.put '/profile', payload","title":"Advanced middleware usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#writing-middleware","text":"Middleware are classes that implement a call instance method. They hook into the request/response cycle. def call(request_env) # do something with the request # request_env[:request_headers].merge!(...) @app.call(request_env).on_complete do |response_env| # do something with the response # response_env[:response_headers].merge!(...) end end It's important to do all processing of the response only in the on_complete block. This enables middleware to work in parallel mode where requests are asynchronous. The env is a hash with symbol keys that contains info about the request and, later, response. Some keys are: # request phase :method - :get, :post, ... :url - URI for the current request; also contains GET parameters :body - POST parameters for :post/:put requests :request_headers # response phase :status - HTTP response status code, such as 200 :body - the response body :response_headers","title":"Writing middleware"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#using-faraday-for-testing","text":"# It's possible to define stubbed request outside a test adapter block. stubs = Faraday::Adapter::Test::Stubs.new do |stub| stub.get('/tamago') { |env| [200, {}, 'egg'] } end # You can pass stubbed request to the test adapter or define them in a block # or a combination of the two. test = Faraday.new do |builder| builder.adapter :test, stubs do |stub| stub.get('/ebi') { |env| [ 200, {}, 'shrimp' ]} end end # It's also possible to stub additional requests after the connection has # been initialized. This is useful for testing. stubs.get('/uni') { |env| [ 200, {}, 'urchin' ]} resp = test.get '/tamago' resp.body # => 'egg' resp = test.get '/ebi' resp.body # => 'shrimp' resp = test.get '/uni' resp.body # => 'urchin' resp = test.get '/else' #=> raises \"no such stub\" error # If you like, you can treat your stubs as mocks by verifying that all of # the stubbed calls were made. NOTE that this feature is still fairly # experimental: It will not verify the order or count of any stub, only that # it was called once during the course of the test. stubs.verify_stubbed_calls","title":"Using Faraday for testing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#todo","text":"support streaming requests/responses better stubbing API","title":"TODO"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#supported-ruby-versions","text":"This library aims to support and is tested against the following Ruby implementations: Ruby 1.8.7+ JRuby 1.7+ Rubinius 2+ If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, however support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.","title":"Supported Ruby versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/#copyright","text":"Copyright (c) 2009-2013 Rick Olson , Zack Hobson. See LICENSE for details.","title":"Copyright"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-0.9.2/LICENSE/","text":"Copyright (c) 2009-2015 Rick Olson, Zack Hobson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/","text":"Faraday is an HTTP client library that provides a common interface over many adapters (such as Net::HTTP) and embraces the concept of Rack middleware when processing the request/response cycle. Getting Started The best starting point is the Faraday Website , with its introduction and explanation. Need more details? See the Faraday API Documentation to see how it works internally. Supported Ruby versions This library aims to support and is tested against the following Ruby implementations: Ruby 2.4+ If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations and versions, however support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped. Contribute Do you want to contribute to Faraday? Open the issues page and check for the help wanted label! But before you start coding, please read our Contributing Guide Copyright \u00a9 2009 - 2020, the Faraday Team . Website and branding design by Elena Lo Piccolo .","title":"[![Faraday](./docs/assets/img/repo-card-slim.png)][website]"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/#_1","text":"Faraday is an HTTP client library that provides a common interface over many adapters (such as Net::HTTP) and embraces the concept of Rack middleware when processing the request/response cycle.","title":""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/#getting-started","text":"The best starting point is the Faraday Website , with its introduction and explanation. Need more details? See the Faraday API Documentation to see how it works internally.","title":"Getting Started"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/#supported-ruby-versions","text":"This library aims to support and is tested against the following Ruby implementations: Ruby 2.4+ If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations and versions, however support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.","title":"Supported Ruby versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/#contribute","text":"Do you want to contribute to Faraday? Open the issues page and check for the help wanted label! But before you start coding, please read our Contributing Guide","title":"Contribute"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/#copyright","text":"\u00a9 2009 - 2020, the Faraday Team . Website and branding design by Elena Lo Piccolo .","title":"Copyright"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/","text":"Faraday Changelog v1.3.0 (2020-12-31) Highlights Faraday v1.3.0 is the first release to officially support Ruby 3.0 in the CI pipeline \ud83c\udf89 \ud83c\udf7e! This is also the first release with a previously \"included\" adapter (Net::HTTP) being isolated into a separate gem \ud83c\udf8a! The new adapter is added to Faraday as a dependency for now, so that means full backwards-compatibility, but just to be safe be careful when upgrading! This is a huge step towards are Faraday v2.0 objective of pushing adapters and middleware into separate gems. Many thanks to the Faraday Team, @JanDintel and everyone who attended the ROSS Conf remote event Features Improves consistency with Faraday::Error and Faraday::RaiseError (#1229, @qsona, @iMacTia) Fixes Don't assign to global ::Timer (#1227, @bpo) Documentation CHANGELOG: add releases after 1.0 (#1225, @olleolleolle) Improves retry middleware documentation. (#1228, @iMacTia) Misc Move out Net::HTTP adapter (#1222, @JanDintel, @iMacTia) Adds Ruby 3.0 to CI Matrix (#1226, @iMacTia) v1.2.0 (2020-12-23) Features Introduces on_request and on_complete methods in Faraday::Middleware . (#1194, @iMacTia) Fixes Require 'date' to avoid retry exception (#1206, @rustygeldmacher) Fix rdebug recursion issue (#1205, @native-api) Update call to em_http_ssl_patch (#1202, @kylekeesling) EmHttp adapter: drop superfluous loaded? check (#1213, @olleolleolle) Avoid 1 use of keyword hackery (#1211, @grosser) Fix #1219 Net::HTTP still uses env proxy (#1221, @iMacTia) Documentation Add comment in gemspec to explain exposure of examples and spec folders. (#1192, @iMacTia) Adapters, how to create them (#1193, @olleolleolle) Update documentation on using the logger (#1196, @tijmenb) Adjust the retry documentation and spec to align with implementation (#1198, @nbeyer) Misc Test against ruby head (#1208, @grosser) v1.1.0 (2020-10-17) Features Makes parameters sorting configurable (#1162 @wishdev) Introduces flat_encode option for multipart adapter. (#1163 @iMacTia) Include request info in exceptions raised by RaiseError Middleware (#1181 @SandroDamilano) Fixes Avoid last arg as keyword param warning when building user middleware on Ruby 2.7 (#1153 @dgholz) Limits net-http-persistent version to < 4.0 (#1156 @iMacTia) Update typhoeus to new stable version ( 1.4 ) (#1159 @AlexWayfer) Properly fix test failure with Rack 2.1+. (#1171 @voxik) Documentation Improves documentation on how to contribute to the site by using Docker. (#1175 @iMacTia) Remove retry_change_requests from documentation (#1185 @stim371) Misc Link from GitHub Actions badge to CI workflow (#1141 @olleolleolle) Return tests of Test adapter (#1147 @AlexWayfer) Add 1.0 release to wording in CONTRIBUTING (#1155 @olleolleolle) Fix linting bumping Rubocop to 0.90.0 (#1182 @iMacTia) Drop git ls-files in gemspec (#1183 @utkarsh2102) Upgrade CI to ruby/setup-ruby (#1187 @gogainda) v1.0.1 (2020-03-29) Fixes Use Net::HTTP#start(&block) to ensure closed TCP connections (#1117) Fully qualify constants to be checked (#1122) Allows parse method to be private/protected in response middleware (#1123) Encode Spaces in Query Strings as '%20' Instead of '+' (#1125) Limits rack to v2.0.x (#1127) Adapter Registry reads also use mutex (#1136) Documentation Retry middleware documentation fix (#1109) Docs(retry): precise usage of retry-after (#1111) README: Link the logo to the website (#1112) Website: add search bar (#1116) Fix request/response mix-up in docs text (#1132) v1.0 Features: Add #trace support to Faraday::Connection #861 (@technoweenie) Add the log formatter that is easy to override and safe to inherit #889 (@prikha) Support standalone adapters #941 (@iMacTia) Introduce Faraday::ConflictError for 409 response code #979 (@lucasmoreno) Add support for setting read_timeout option separately #1003 (@springerigor) Refactor and cleanup timeout settings across adapters #1022 (@technoweenie) Create ParamPart class to allow multipart posts with JSON content and file upload at the same time #1017 (@jeremy-israel) Copy UploadIO const -> FilePart for consistency with ParamPart #1018, #1021 (@technoweenie) Implement streaming responses in the Excon adapter #1026 (@technoweenie) Add default implementation of Middleware#close . #1069 (@ioquatix) Add Adapter#close so that derived classes can call super. #1091 (@ioquatix) Add log_level option to logger default formatter #1079 (@amrrbakry) Fix empty array for FlatParamsEncoder {key: []} -> \"key=\" #1084 (@mrexox) Bugs: Explicitly require date for DateTime library in Retry middleware #844 (@nickpresta) Refactor Adapter as final endpoints #846 (@iMacTia) Separate Request and Response bodies in Faraday::Env #847 (@iMacTia) Implement Faraday::Connection#options to make HTTP requests with the OPTIONS verb. #857 (@technoweenie) Multipart: Drop Ruby 1.8 String behavior compat #892 (@olleolleolle) Fix Ruby warnings in Faraday::Options.memoized #962 (@technoweenie) Allow setting min/max SSL version for a Net::HTTP::Persistent connection #972, #973 (@bdewater, @olleolleolle) Fix instances of frozen empty string literals #1040 (@BobbyMcWho) remove temp_proxy and improve proxy tests #1063 (@technoweenie) improve error initializer consistency #1095 (@technoweenie) Misc: Convert minitest suite to RSpec #832 (@iMacTia, with help from @gaynetdinov, @Insti, @technoweenie) Major effort to update code to RuboCop standards. #854 (@olleolleolle, @iMacTia, @technoweenie, @htwroclau, @jherdman, @Drenmi, @Insti) Rubocop #1044, #1047 (@BobbyMcWho, @olleolleolle) Documentation tweaks (@adsteel, @Hubro, @iMacTia, @olleolleolle, @technoweenie) Update license year #981 (@Kevin-Kawai) Configure Jekyll plugin jekyll-remote-theme to support Docker usage #999 (@Lewiscowles1986) Fix Ruby 2.7 warnings #1009 (@tenderlove) Cleanup adapter connections #1023 (@technoweenie) Describe clearing cached stubs #1045 (@viraptor) Add project metadata to the gemspec #1046 (@orien) v0.17.3 Fixes: Reverts changes in error classes hierarchy. #1092 (@iMacTia) Fix Ruby 1.9 syntax errors and improve Error class testing #1094 (@BanzaiMan, @mrexox, @technoweenie) Misc: Stops using &Proc.new for block forwarding. #1083 (@olleolleolle) Update CI to test against ruby 2.0-2.7 #1087, #1099 (@iMacTia, @olleolleolle, @technoweenie) require FARADAY_DEPRECATE=warn to show Faraday v1.0 deprecation warnings #1098 (@technoweenie) v0.17.1 Final release before Faraday v1.0, with important fixes for Ruby 2.7. Fixes: RaiseError response middleware raises exception if HTTP client returns a nil status. #1042 (@jonnyom, @BobbyMcWho) Misc: Fix Ruby 2.7 warnings (#1009) Add Faraday::Deprecate to warn about upcoming v1.0 changes. (#1054, #1059, #1076, #1077) Add release notes up to current in CHANGELOG.md (#1066) Port minimal rspec suite from main branch to run backported tests. (#1058) v0.17.0 This release is the same as v0.15.4. It was pushed to cover up releases v0.16.0-v0.16.2. v0.15.4 Expose pool_size as a option for the NetHttpPersistent adapter (#834) v0.15.3 Make Faraday::Request serialisable with Marshal. (#803) Add DEFAULT_EXCEPTIONS constant to Request::Retry (#814) Add support for Ruby 2.6 Net::HTTP write_timeout (#824) v0.15.2 Prevents Net::HTTP adapters to retry request internally by setting max_retries to 0 if available (Ruby 2.5+). (#799) Fixes NestedParamsEncoder handling of empty array values (#801) v0.15.1 NetHttpPersistent adapter better reuse of SSL connections (#793) Refactor: inline cached_connection (#797) Logger middleware: use $stdout instead of STDOUT (#794) Fix: do not memoize/reuse Patron session (#796) Also in this release: Allow setting min/max ssl version for Net::HTTP (#792) Allow setting min/max ssl version for Excon (#795) v0.15.0 Features: Added retry block option to retry middleware. (#770) Retry middleware improvements (honour Retry-After header, retry statuses) (#773) Improve response logger middleware output (#784) Fixes: Remove unused class error (#767) Fix minor typo in README (#760) Reuse persistent connections when using net-http-persistent (#778) Fix Retry middleware documentation (#781) Returns the http response when giving up on retrying by status (#783) v0.14.0 Features: Allow overriding env proxy #754 (@iMacTia) Remove legacy Typhoeus adapter #715 (@olleolleolle) External Typhoeus Adapter Compatibility #748 (@iMacTia) Warn about missing adapter when making a request #743 (@antstorm) Faraday::Adapter::Test stubs now support entire urls (with host) #741 (@erik-escobedo) Fixes: If proxy is manually provided, this takes priority over find_proxy #724 (@iMacTia) Fixes the behaviour for Excon's open_timeout (not setting write_timeout anymore) #731 (@apachelogger) Handle all connection timeout messages in Patron #687 (@stayhero) v0.13.1 Fixes an incompatibility with Addressable::URI being used as uri_parser v0.13.0 Features: Dynamically reloads the proxy when performing a request on an absolute domain (#701) Adapter support for Net::HTTP::Persistent v3.0.0 (#619) Fixes: Prefer #hostname over #host. (#714) Fixes an edge-case issue with response headers parsing (missing HTTP header) (#719) v0.12.2 Parse headers from aggregated proxy requests/responses (#681) Guard against invalid middleware configuration with warning (#685) Do not use :insecure option by default in Patron (#691) Fixes an issue with HTTPClient not raising a Faraday::ConnectionFailed (#702) Fixes YAML serialization/deserialization for Faraday::Utils::Headers (#690) Fixes an issue with Options having a nil value (#694) Fixes an issue with Faraday.default_connection not using Faraday.default_connection_options (#698) Fixes an issue with Options.merge! and Faraday instrumentation middleware (#710) v0.12.1 Fix an issue with Patron tests failing on jruby Fix an issue with new rewind_files feature that was causing an exception when the body was not an Hash Expose wrapped_exception in all client errors Add Authentication Section to the ReadMe v0.12.0.1 Hotfix release to address an issue with TravisCI deploy on Rubygems v0.12.0 Features: Proxy feature now relies on Ruby URI::Generic#find_proxy and can use no_proxy ENV variable (not compatible with ruby < 2.0) Adds support for context request option to pass arbitrary information to middlewares Fixes: Fix an issue with options that was causing new options to override defaults ones unexpectedly Rewind UploadIO s on retry to fix a compatibility issue Make multipart boundary unique Improvements in README.md v0.11.0 Features: Add filter method to Logger middleware Add support for Ruby2.4 and Minitest 6 Introduce block syntax to customise the adapter Fixes: Fix an issue that was allowing to override default_connection_options from a connection instance Fix a bug that was causing newline escape characters (\"\\n\") to be used when building the Authorization header v0.10.1 Fix an issue with HTTPClient adapter that was causing the SSL to be reset on every request Rescue IOError instead of specific subclass Faraday::Utils::Headers can now be successfully serialised in YAML Handle default_connection_options set with hash v0.10.0 Breaking changes: - Drop support for Ruby 1.8 Features: - Include wrapped exception/reponse in ClientErrors - Add response.reason_phrase - Provide option to selectively skip logging request/response headers - Add regex support for pattern matching in test adapter Fixes: - Add Faraday.respond_to? to find methods managed by method_missing - em-http: request.host instead of connection.host should be taken for SSL validations - Allow default_connection_options to be merged when options are passed as url parameter - Improve splitting key-value pairs in raw HTTP headers v0.9.2 Adapters: - Enable gzip compression for httpclient - Fixes default certificate store for httpclient not having default paths. - Make excon adapter compatible with 0.44 excon version - Add compatibility with Patron 0.4.20 - Determine default port numbers in Net::HTTP adapters (Addressable compatibility) - em-http: wrap \"connection closed by server\" as ConnectionFailed type - Wrap Errno::ETIMEDOUT in Faraday::Error::TimeoutError Utils: - Add Rack-compatible support for parsing a[][b]=c nested queries - Encode nil values in queries different than empty strings. Before: a= ; now: a . - Have Faraday::Utils::Headers#replace clear internal key cache - Dup the internal key cache when a Headers hash is copied Env and middleware: - Ensure env stored on middleware response has reference to the response - Ensure that Response properties are initialized during on_complete (VCR compatibility) - Copy request options in Faraday::Connection#dup - Env custom members should be copied by Env.from(env) - Honour per-request request.options.params_encoder - Fix interval_randomness data type for Retry middleware - Add maximum interval option for Retry middleware v0.9.1 Refactor Net:HTTP adapter so that with_net_http_connection can be overridden to allow pooled connections. (@Ben-M) Add configurable methods that bypass retry_if in the Retry request middleware. (@mike-bourgeous) v0.9.0 Add HTTPClient adapter (@hakanensari) Improve Retry handler (@mislav) Remove autoloading by default (@technoweenie) Improve internal docs (@technoweenie, @mislav) Respect user/password in http proxy string (@mislav) Adapter options are structs. Reinforces consistent options across adapters (@technoweenie) Stop stripping trailing / off base URLs in a Faraday::Connection. (@technoweenie) Add a configurable URI parser. (@technoweenie) Remove need to manually autoload when using the authorization header helpers on Faraday::Connection . (@technoweenie) Faraday::Adapter::Test respects the Faraday::RequestOptions#params_encoder option. (@technoweenie)","title":"Faraday Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#faraday-changelog","text":"","title":"Faraday Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v130-2020-12-31","text":"","title":"v1.3.0 (2020-12-31)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#highlights","text":"Faraday v1.3.0 is the first release to officially support Ruby 3.0 in the CI pipeline \ud83c\udf89 \ud83c\udf7e! This is also the first release with a previously \"included\" adapter (Net::HTTP) being isolated into a separate gem \ud83c\udf8a! The new adapter is added to Faraday as a dependency for now, so that means full backwards-compatibility, but just to be safe be careful when upgrading! This is a huge step towards are Faraday v2.0 objective of pushing adapters and middleware into separate gems. Many thanks to the Faraday Team, @JanDintel and everyone who attended the ROSS Conf remote event","title":"Highlights"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#features","text":"Improves consistency with Faraday::Error and Faraday::RaiseError (#1229, @qsona, @iMacTia)","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#fixes","text":"Don't assign to global ::Timer (#1227, @bpo)","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#documentation","text":"CHANGELOG: add releases after 1.0 (#1225, @olleolleolle) Improves retry middleware documentation. (#1228, @iMacTia)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#misc","text":"Move out Net::HTTP adapter (#1222, @JanDintel, @iMacTia) Adds Ruby 3.0 to CI Matrix (#1226, @iMacTia)","title":"Misc"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v120-2020-12-23","text":"","title":"v1.2.0 (2020-12-23)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#features_1","text":"Introduces on_request and on_complete methods in Faraday::Middleware . (#1194, @iMacTia)","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#fixes_1","text":"Require 'date' to avoid retry exception (#1206, @rustygeldmacher) Fix rdebug recursion issue (#1205, @native-api) Update call to em_http_ssl_patch (#1202, @kylekeesling) EmHttp adapter: drop superfluous loaded? check (#1213, @olleolleolle) Avoid 1 use of keyword hackery (#1211, @grosser) Fix #1219 Net::HTTP still uses env proxy (#1221, @iMacTia)","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#documentation_1","text":"Add comment in gemspec to explain exposure of examples and spec folders. (#1192, @iMacTia) Adapters, how to create them (#1193, @olleolleolle) Update documentation on using the logger (#1196, @tijmenb) Adjust the retry documentation and spec to align with implementation (#1198, @nbeyer)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#misc_1","text":"Test against ruby head (#1208, @grosser)","title":"Misc"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v110-2020-10-17","text":"","title":"v1.1.0 (2020-10-17)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#features_2","text":"Makes parameters sorting configurable (#1162 @wishdev) Introduces flat_encode option for multipart adapter. (#1163 @iMacTia) Include request info in exceptions raised by RaiseError Middleware (#1181 @SandroDamilano)","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#fixes_2","text":"Avoid last arg as keyword param warning when building user middleware on Ruby 2.7 (#1153 @dgholz) Limits net-http-persistent version to < 4.0 (#1156 @iMacTia) Update typhoeus to new stable version ( 1.4 ) (#1159 @AlexWayfer) Properly fix test failure with Rack 2.1+. (#1171 @voxik)","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#documentation_2","text":"Improves documentation on how to contribute to the site by using Docker. (#1175 @iMacTia) Remove retry_change_requests from documentation (#1185 @stim371)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#misc_2","text":"Link from GitHub Actions badge to CI workflow (#1141 @olleolleolle) Return tests of Test adapter (#1147 @AlexWayfer) Add 1.0 release to wording in CONTRIBUTING (#1155 @olleolleolle) Fix linting bumping Rubocop to 0.90.0 (#1182 @iMacTia) Drop git ls-files in gemspec (#1183 @utkarsh2102) Upgrade CI to ruby/setup-ruby (#1187 @gogainda)","title":"Misc"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v101-2020-03-29","text":"","title":"v1.0.1 (2020-03-29)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#fixes_3","text":"Use Net::HTTP#start(&block) to ensure closed TCP connections (#1117) Fully qualify constants to be checked (#1122) Allows parse method to be private/protected in response middleware (#1123) Encode Spaces in Query Strings as '%20' Instead of '+' (#1125) Limits rack to v2.0.x (#1127) Adapter Registry reads also use mutex (#1136)","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#documentation_3","text":"Retry middleware documentation fix (#1109) Docs(retry): precise usage of retry-after (#1111) README: Link the logo to the website (#1112) Website: add search bar (#1116) Fix request/response mix-up in docs text (#1132)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v10","text":"Features: Add #trace support to Faraday::Connection #861 (@technoweenie) Add the log formatter that is easy to override and safe to inherit #889 (@prikha) Support standalone adapters #941 (@iMacTia) Introduce Faraday::ConflictError for 409 response code #979 (@lucasmoreno) Add support for setting read_timeout option separately #1003 (@springerigor) Refactor and cleanup timeout settings across adapters #1022 (@technoweenie) Create ParamPart class to allow multipart posts with JSON content and file upload at the same time #1017 (@jeremy-israel) Copy UploadIO const -> FilePart for consistency with ParamPart #1018, #1021 (@technoweenie) Implement streaming responses in the Excon adapter #1026 (@technoweenie) Add default implementation of Middleware#close . #1069 (@ioquatix) Add Adapter#close so that derived classes can call super. #1091 (@ioquatix) Add log_level option to logger default formatter #1079 (@amrrbakry) Fix empty array for FlatParamsEncoder {key: []} -> \"key=\" #1084 (@mrexox) Bugs: Explicitly require date for DateTime library in Retry middleware #844 (@nickpresta) Refactor Adapter as final endpoints #846 (@iMacTia) Separate Request and Response bodies in Faraday::Env #847 (@iMacTia) Implement Faraday::Connection#options to make HTTP requests with the OPTIONS verb. #857 (@technoweenie) Multipart: Drop Ruby 1.8 String behavior compat #892 (@olleolleolle) Fix Ruby warnings in Faraday::Options.memoized #962 (@technoweenie) Allow setting min/max SSL version for a Net::HTTP::Persistent connection #972, #973 (@bdewater, @olleolleolle) Fix instances of frozen empty string literals #1040 (@BobbyMcWho) remove temp_proxy and improve proxy tests #1063 (@technoweenie) improve error initializer consistency #1095 (@technoweenie) Misc: Convert minitest suite to RSpec #832 (@iMacTia, with help from @gaynetdinov, @Insti, @technoweenie) Major effort to update code to RuboCop standards. #854 (@olleolleolle, @iMacTia, @technoweenie, @htwroclau, @jherdman, @Drenmi, @Insti) Rubocop #1044, #1047 (@BobbyMcWho, @olleolleolle) Documentation tweaks (@adsteel, @Hubro, @iMacTia, @olleolleolle, @technoweenie) Update license year #981 (@Kevin-Kawai) Configure Jekyll plugin jekyll-remote-theme to support Docker usage #999 (@Lewiscowles1986) Fix Ruby 2.7 warnings #1009 (@tenderlove) Cleanup adapter connections #1023 (@technoweenie) Describe clearing cached stubs #1045 (@viraptor) Add project metadata to the gemspec #1046 (@orien)","title":"v1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0173","text":"Fixes: Reverts changes in error classes hierarchy. #1092 (@iMacTia) Fix Ruby 1.9 syntax errors and improve Error class testing #1094 (@BanzaiMan, @mrexox, @technoweenie) Misc: Stops using &Proc.new for block forwarding. #1083 (@olleolleolle) Update CI to test against ruby 2.0-2.7 #1087, #1099 (@iMacTia, @olleolleolle, @technoweenie) require FARADAY_DEPRECATE=warn to show Faraday v1.0 deprecation warnings #1098 (@technoweenie)","title":"v0.17.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0171","text":"Final release before Faraday v1.0, with important fixes for Ruby 2.7. Fixes: RaiseError response middleware raises exception if HTTP client returns a nil status. #1042 (@jonnyom, @BobbyMcWho) Misc: Fix Ruby 2.7 warnings (#1009) Add Faraday::Deprecate to warn about upcoming v1.0 changes. (#1054, #1059, #1076, #1077) Add release notes up to current in CHANGELOG.md (#1066) Port minimal rspec suite from main branch to run backported tests. (#1058)","title":"v0.17.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0170","text":"This release is the same as v0.15.4. It was pushed to cover up releases v0.16.0-v0.16.2.","title":"v0.17.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0154","text":"Expose pool_size as a option for the NetHttpPersistent adapter (#834)","title":"v0.15.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0153","text":"Make Faraday::Request serialisable with Marshal. (#803) Add DEFAULT_EXCEPTIONS constant to Request::Retry (#814) Add support for Ruby 2.6 Net::HTTP write_timeout (#824)","title":"v0.15.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0152","text":"Prevents Net::HTTP adapters to retry request internally by setting max_retries to 0 if available (Ruby 2.5+). (#799) Fixes NestedParamsEncoder handling of empty array values (#801)","title":"v0.15.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0151","text":"NetHttpPersistent adapter better reuse of SSL connections (#793) Refactor: inline cached_connection (#797) Logger middleware: use $stdout instead of STDOUT (#794) Fix: do not memoize/reuse Patron session (#796) Also in this release: Allow setting min/max ssl version for Net::HTTP (#792) Allow setting min/max ssl version for Excon (#795)","title":"v0.15.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0150","text":"Features: Added retry block option to retry middleware. (#770) Retry middleware improvements (honour Retry-After header, retry statuses) (#773) Improve response logger middleware output (#784) Fixes: Remove unused class error (#767) Fix minor typo in README (#760) Reuse persistent connections when using net-http-persistent (#778) Fix Retry middleware documentation (#781) Returns the http response when giving up on retrying by status (#783)","title":"v0.15.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0140","text":"Features: Allow overriding env proxy #754 (@iMacTia) Remove legacy Typhoeus adapter #715 (@olleolleolle) External Typhoeus Adapter Compatibility #748 (@iMacTia) Warn about missing adapter when making a request #743 (@antstorm) Faraday::Adapter::Test stubs now support entire urls (with host) #741 (@erik-escobedo) Fixes: If proxy is manually provided, this takes priority over find_proxy #724 (@iMacTia) Fixes the behaviour for Excon's open_timeout (not setting write_timeout anymore) #731 (@apachelogger) Handle all connection timeout messages in Patron #687 (@stayhero)","title":"v0.14.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0131","text":"Fixes an incompatibility with Addressable::URI being used as uri_parser","title":"v0.13.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0130","text":"Features: Dynamically reloads the proxy when performing a request on an absolute domain (#701) Adapter support for Net::HTTP::Persistent v3.0.0 (#619) Fixes: Prefer #hostname over #host. (#714) Fixes an edge-case issue with response headers parsing (missing HTTP header) (#719)","title":"v0.13.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0122","text":"Parse headers from aggregated proxy requests/responses (#681) Guard against invalid middleware configuration with warning (#685) Do not use :insecure option by default in Patron (#691) Fixes an issue with HTTPClient not raising a Faraday::ConnectionFailed (#702) Fixes YAML serialization/deserialization for Faraday::Utils::Headers (#690) Fixes an issue with Options having a nil value (#694) Fixes an issue with Faraday.default_connection not using Faraday.default_connection_options (#698) Fixes an issue with Options.merge! and Faraday instrumentation middleware (#710)","title":"v0.12.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0121","text":"Fix an issue with Patron tests failing on jruby Fix an issue with new rewind_files feature that was causing an exception when the body was not an Hash Expose wrapped_exception in all client errors Add Authentication Section to the ReadMe","title":"v0.12.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v01201","text":"Hotfix release to address an issue with TravisCI deploy on Rubygems","title":"v0.12.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0120","text":"Features: Proxy feature now relies on Ruby URI::Generic#find_proxy and can use no_proxy ENV variable (not compatible with ruby < 2.0) Adds support for context request option to pass arbitrary information to middlewares Fixes: Fix an issue with options that was causing new options to override defaults ones unexpectedly Rewind UploadIO s on retry to fix a compatibility issue Make multipart boundary unique Improvements in README.md","title":"v0.12.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0110","text":"Features: Add filter method to Logger middleware Add support for Ruby2.4 and Minitest 6 Introduce block syntax to customise the adapter Fixes: Fix an issue that was allowing to override default_connection_options from a connection instance Fix a bug that was causing newline escape characters (\"\\n\") to be used when building the Authorization header","title":"v0.11.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0101","text":"Fix an issue with HTTPClient adapter that was causing the SSL to be reset on every request Rescue IOError instead of specific subclass Faraday::Utils::Headers can now be successfully serialised in YAML Handle default_connection_options set with hash","title":"v0.10.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v0100","text":"Breaking changes: - Drop support for Ruby 1.8 Features: - Include wrapped exception/reponse in ClientErrors - Add response.reason_phrase - Provide option to selectively skip logging request/response headers - Add regex support for pattern matching in test adapter Fixes: - Add Faraday.respond_to? to find methods managed by method_missing - em-http: request.host instead of connection.host should be taken for SSL validations - Allow default_connection_options to be merged when options are passed as url parameter - Improve splitting key-value pairs in raw HTTP headers","title":"v0.10.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v092","text":"Adapters: - Enable gzip compression for httpclient - Fixes default certificate store for httpclient not having default paths. - Make excon adapter compatible with 0.44 excon version - Add compatibility with Patron 0.4.20 - Determine default port numbers in Net::HTTP adapters (Addressable compatibility) - em-http: wrap \"connection closed by server\" as ConnectionFailed type - Wrap Errno::ETIMEDOUT in Faraday::Error::TimeoutError Utils: - Add Rack-compatible support for parsing a[][b]=c nested queries - Encode nil values in queries different than empty strings. Before: a= ; now: a . - Have Faraday::Utils::Headers#replace clear internal key cache - Dup the internal key cache when a Headers hash is copied Env and middleware: - Ensure env stored on middleware response has reference to the response - Ensure that Response properties are initialized during on_complete (VCR compatibility) - Copy request options in Faraday::Connection#dup - Env custom members should be copied by Env.from(env) - Honour per-request request.options.params_encoder - Fix interval_randomness data type for Retry middleware - Add maximum interval option for Retry middleware","title":"v0.9.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v091","text":"Refactor Net:HTTP adapter so that with_net_http_connection can be overridden to allow pooled connections. (@Ben-M) Add configurable methods that bypass retry_if in the Retry request middleware. (@mike-bourgeous)","title":"v0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/CHANGELOG/#v090","text":"Add HTTPClient adapter (@hakanensari) Improve Retry handler (@mislav) Remove autoloading by default (@technoweenie) Improve internal docs (@technoweenie, @mislav) Respect user/password in http proxy string (@mislav) Adapter options are structs. Reinforces consistent options across adapters (@technoweenie) Stop stripping trailing / off base URLs in a Faraday::Connection. (@technoweenie) Add a configurable URI parser. (@technoweenie) Remove need to manually autoload when using the authorization header helpers on Faraday::Connection . (@technoweenie) Faraday::Adapter::Test respects the Faraday::RequestOptions#params_encoder option. (@technoweenie)","title":"v0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-1.10.0/LICENSE/","text":"Copyright (c) 2009-2020 Rick Olson, Zack Hobson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/","text":"Faraday Em::Http adapter This gem is a Faraday adapter for the Em::Http::Request library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Em::Http::Request. Installation Add these lines to your application's Gemfile: gem 'em-http-request', '>= 1.1' gem 'faraday-em_http' And then execute: $ bundle install Or install them yourself as: $ gem install em-http-request -v '>= 1.1' $ gem install faraday-em_http Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:em_http) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Em::Http adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Em::Http adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#faraday-emhttp-adapter","text":"This gem is a Faraday adapter for the Em::Http::Request library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Em::Http::Request.","title":"Faraday Em::Http adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#installation","text":"Add these lines to your application's Gemfile: gem 'em-http-request', '>= 1.1' gem 'faraday-em_http' And then execute: $ bundle install Or install them yourself as: $ gem install em-http-request -v '>= 1.1' $ gem install faraday-em_http","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:em_http) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/#code-of-conduct","text":"Everyone interacting in the Faraday Em::Http adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_http-1.0.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/","text":"Faraday Em::Synchrony adapter This gem is a Faraday adapter for the Em::Synchrony library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Em::Synchrony. Installation Add these lines to your application's Gemfile: gem 'em-http-request', '>= 1.1' gem 'em-synchrony', '>= 1.0.3' gem 'faraday-em_http', '~> 1.0' gem 'faraday-em_synchrony' And then execute: $ bundle install Or install them yourself as: $ gem install em-http-request -v '>= 1.1' $ gem install em-synchrony -v '>= 1.0.3' $ gem install faraday-em_http -v '~> 1.0' $ gem install faraday-em_synchrony Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:em_synchrony) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Em::Synchrony adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Em::Synchrony adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#faraday-emsynchrony-adapter","text":"This gem is a Faraday adapter for the Em::Synchrony library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Em::Synchrony.","title":"Faraday Em::Synchrony adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#installation","text":"Add these lines to your application's Gemfile: gem 'em-http-request', '>= 1.1' gem 'em-synchrony', '>= 1.0.3' gem 'faraday-em_http', '~> 1.0' gem 'faraday-em_synchrony' And then execute: $ bundle install Or install them yourself as: $ gem install em-http-request -v '>= 1.1' $ gem install em-synchrony -v '>= 1.0.3' $ gem install faraday-em_http -v '~> 1.0' $ gem install faraday-em_synchrony","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:em_synchrony) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/#code-of-conduct","text":"Everyone interacting in the Faraday Em::Synchrony adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-em_synchrony-1.0.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/","text":"Faraday Excon adapter This gem is a Faraday adapter for the Excon library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Excon. Installation Add these lines to your application's Gemfile: gem 'excon', '>= 0.27.4' gem 'faraday-excon' And then execute: $ bundle install Or install them yourself as: $ gem install excon -v '>= 0.27.4' $ gem install faraday-excon Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:excon) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Excon adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Excon adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#faraday-excon-adapter","text":"This gem is a Faraday adapter for the Excon library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Excon.","title":"Faraday Excon adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#installation","text":"Add these lines to your application's Gemfile: gem 'excon', '>= 0.27.4' gem 'faraday-excon' And then execute: $ bundle install Or install them yourself as: $ gem install excon -v '>= 0.27.4' $ gem install faraday-excon","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:excon) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/#code-of-conduct","text":"Everyone interacting in the Faraday Excon adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-excon-1.1.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/","text":"Faraday HTTPClient adapter This gem is a Faraday adapter for the HTTPClient library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for HTTPClient. Installation Add these lines to your application's Gemfile: gem 'httpclient', '>= 2.2' gem 'faraday' gem 'faraday-httpclient' And then execute: $ bundle install Or install them yourself as: $ gem install httpclient -v '>= 2.2' $ gem install faraday faraday-httpclient Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:httpclient) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday HTTPClient adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday HTTPClient adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#faraday-httpclient-adapter","text":"This gem is a Faraday adapter for the HTTPClient library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for HTTPClient.","title":"Faraday HTTPClient adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#installation","text":"Add these lines to your application's Gemfile: gem 'httpclient', '>= 2.2' gem 'faraday' gem 'faraday-httpclient' And then execute: $ bundle install Or install them yourself as: $ gem install httpclient -v '>= 2.2' $ gem install faraday faraday-httpclient","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:httpclient) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/#code-of-conduct","text":"Everyone interacting in the Faraday HTTPClient adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-httpclient-1.0.1/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/","text":"Faraday Multipart The Multipart middleware converts a Faraday::Request#body Hash of key/value pairs into a multipart form request, but only under these conditions: The request's Content-Type is \"multipart/form-data\" Content-Type is unspecified, AND one of the values in the Body responds to #content_type . Faraday contains a couple helper classes for multipart values: Faraday::Multipart::FilePart wraps binary file data with a Content-Type. The file data can be specified with a String path to a local file, or an IO object. Faraday::Multipart::ParamPart wraps a String value with a Content-Type, and optionally a Content-ID. Installation Add this line to your application's Gemfile: gem 'faraday-multipart' And then execute: bundle install Or install it yourself as: gem install faraday-multipart Usage First of all, you'll need to add the multipart middleware to your Faraday connection: require 'faraday/multipart' conn = Faraday.new(...) do |f| f.request :multipart # ... end Payload can be a mix of POST data and multipart values. # regular POST form value payload = { string: 'value' } # filename for this value is File.basename(__FILE__) payload[:file] = Faraday::Multipart::FilePart.new(__FILE__, 'text/x-ruby') # specify filename because IO object doesn't know it payload[:file_with_name] = Faraday::Multipart::FilePart.new( File.open(__FILE__), 'text/x-ruby', File.basename(__FILE__) ) # Sets a custom Content-Disposition: # nil filename still defaults to File.basename(__FILE__) payload[:file_with_header] = Faraday::Multipart::FilePart.new( __FILE__, 'text/x-ruby', nil, 'Content-Disposition' => 'form-data; foo=1' ) # Upload raw json with content type payload[:raw_data] = Faraday::Multipart::ParamPart.new( { a: 1 }.to_json, 'application/json' ) # optionally sets Content-ID too payload[:raw_with_id] = Faraday::Multipart::ParamPart.new( { a: 1 }.to_json, 'application/json', 'foo-123' ) conn.post('/', payload) Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. To install this gem onto your local machine, run rake build . To release a new version, make a commit with a message such as \"Bumped to 0.0.2\" and then run rake release . See how it works here . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the MIT License .","title":"Faraday Multipart"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#faraday-multipart","text":"The Multipart middleware converts a Faraday::Request#body Hash of key/value pairs into a multipart form request, but only under these conditions: The request's Content-Type is \"multipart/form-data\" Content-Type is unspecified, AND one of the values in the Body responds to #content_type . Faraday contains a couple helper classes for multipart values: Faraday::Multipart::FilePart wraps binary file data with a Content-Type. The file data can be specified with a String path to a local file, or an IO object. Faraday::Multipart::ParamPart wraps a String value with a Content-Type, and optionally a Content-ID.","title":"Faraday Multipart"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#installation","text":"Add this line to your application's Gemfile: gem 'faraday-multipart' And then execute: bundle install Or install it yourself as: gem install faraday-multipart","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#usage","text":"First of all, you'll need to add the multipart middleware to your Faraday connection: require 'faraday/multipart' conn = Faraday.new(...) do |f| f.request :multipart # ... end Payload can be a mix of POST data and multipart values. # regular POST form value payload = { string: 'value' } # filename for this value is File.basename(__FILE__) payload[:file] = Faraday::Multipart::FilePart.new(__FILE__, 'text/x-ruby') # specify filename because IO object doesn't know it payload[:file_with_name] = Faraday::Multipart::FilePart.new( File.open(__FILE__), 'text/x-ruby', File.basename(__FILE__) ) # Sets a custom Content-Disposition: # nil filename still defaults to File.basename(__FILE__) payload[:file_with_header] = Faraday::Multipart::FilePart.new( __FILE__, 'text/x-ruby', nil, 'Content-Disposition' => 'form-data; foo=1' ) # Upload raw json with content type payload[:raw_data] = Faraday::Multipart::ParamPart.new( { a: 1 }.to_json, 'application/json' ) # optionally sets Content-ID too payload[:raw_with_id] = Faraday::Multipart::ParamPart.new( { a: 1 }.to_json, 'application/json', 'foo-123' ) conn.post('/', payload)","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. To install this gem onto your local machine, run rake build . To release a new version, make a commit with a message such as \"Bumped to 0.0.2\" and then run rake release . See how it works here .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/#license","text":"The gem is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/CHANGELOG/","text":"Changelog Unreleased Initial release.","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/CHANGELOG/#unreleased","text":"Initial release.","title":"Unreleased"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-multipart-1.0.3/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2022 The Faraday Team Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/","text":"Faraday Net::HTTP adapter This gem is a Faraday adapter for the Net::HTTP library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into it's own gem. This gem defines the adapter for Net::HTTP the HTTP library that's included into the standard library of Ruby. Installation Add this line to your application's Gemfile: gem 'faraday-net_http' And then execute: $ bundle install Or install it yourself as: $ gem install faraday-net_http Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:net_http) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Net::HTTP adapter project's codebases, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Net::HTTP adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#faraday-nethttp-adapter","text":"This gem is a Faraday adapter for the Net::HTTP library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into it's own gem. This gem defines the adapter for Net::HTTP the HTTP library that's included into the standard library of Ruby.","title":"Faraday Net::HTTP adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#installation","text":"Add this line to your application's Gemfile: gem 'faraday-net_http' And then execute: $ bundle install Or install it yourself as: $ gem install faraday-net_http","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:net_http) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/#code-of-conduct","text":"Everyone interacting in the Faraday Net::HTTP adapter project's codebases, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http-1.0.1/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/","text":"Faraday::NetHttpPersistent This gem is a Faraday adapter for the Net::HTTP::Persistent gem . Installation Add these lines to your application's Gemfile: gem 'faraday-net_http_persistent' gem 'net-http-persistent', '>= 3.1' And then execute: $ bundle Or install them yourself as: $ gem install net_http_persistent -v '>= 3.1' $ gem install faraday-net_http_persistent Usage Configure your Faraday connection to use this adapter instead of the default one: connection = Faraday.new(url, conn_options) do |conn| # Your other middleware goes here... conn.adapter :net_http_persistent end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run rake spec to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To install this gem onto your local machine, run bundle exec rake install . To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub at https://github.com/lostisland/faraday-net_http_persistent. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct. License The gem is available as open source under the terms of the MIT License . Code of Conduct This project is intended to be a safe, welcoming space for collaboration. Everyone interacting in the Faraday::Http project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday::NetHttpPersistent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#faradaynethttppersistent","text":"This gem is a Faraday adapter for the Net::HTTP::Persistent gem .","title":"Faraday::NetHttpPersistent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#installation","text":"Add these lines to your application's Gemfile: gem 'faraday-net_http_persistent' gem 'net-http-persistent', '>= 3.1' And then execute: $ bundle Or install them yourself as: $ gem install net_http_persistent -v '>= 3.1' $ gem install faraday-net_http_persistent","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#usage","text":"Configure your Faraday connection to use this adapter instead of the default one: connection = Faraday.new(url, conn_options) do |conn| # Your other middleware goes here... conn.adapter :net_http_persistent end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run rake spec to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To install this gem onto your local machine, run bundle exec rake install . To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub at https://github.com/lostisland/faraday-net_http_persistent. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#license","text":"The gem is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/#code-of-conduct","text":"This project is intended to be a safe, welcoming space for collaboration. Everyone interacting in the Faraday::Http project\u2019s codebases, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-net_http_persistent-1.2.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/","text":"Faraday Patron adapter This gem is a Faraday adapter for the Patron library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Patron. Installation Add these lines to your application's Gemfile: gem 'patron', '>= 2.2' gem 'faraday' gem 'faraday-patron' And then execute: $ bundle install Or install them yourself as: $ gem install patron -v '>= 2.2' $ gem install faraday faraday-patron Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:patron) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Patron adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Patron adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#faraday-patron-adapter","text":"This gem is a Faraday adapter for the Patron library. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for Patron.","title":"Faraday Patron adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#installation","text":"Add these lines to your application's Gemfile: gem 'patron', '>= 2.2' gem 'faraday' gem 'faraday-patron' And then execute: $ bundle install Or install them yourself as: $ gem install patron -v '>= 2.2' $ gem install faraday faraday-patron","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:patron) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/#code-of-conduct","text":"Everyone interacting in the Faraday Patron adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-patron-1.0.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/","text":"Faraday Rack adapter This gem is a Faraday adapter for a Rack app. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for a Rack app. Installation Add these lines to your application's Gemfile: gem 'rack' gem 'faraday' gem 'faraday-rack' And then execute: $ bundle install Or install them yourself as: $ gem install rack faraday faraday-rack Usage Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:rack) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website . Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the license . Code of Conduct Everyone interacting in the Faraday Rack adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Faraday Rack adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#faraday-rack-adapter","text":"This gem is a Faraday adapter for a Rack app. Faraday is an HTTP client library that provides a common interface over many adapters. Every adapter is defined into its own gem. This gem defines the adapter for a Rack app.","title":"Faraday Rack adapter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#installation","text":"Add these lines to your application's Gemfile: gem 'rack' gem 'faraday' gem 'faraday-rack' And then execute: $ bundle install Or install them yourself as: $ gem install rack faraday faraday-rack","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#usage","text":"Configure your Faraday connection to use this adapter like this: connection = Faraday.new(url, conn_options) do |conn| conn.adapter(:rack) end For more information on how to setup your Faraday connection and adapters usage, please refer to the Faraday Website .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. You can also run bin/console for an interactive prompt that will allow you to experiment. To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#license","text":"The gem is available as open source under the terms of the license .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/#code-of-conduct","text":"Everyone interacting in the Faraday Rack adapter project's codebase, issue trackers, chat rooms and mailing lists is expected to follow the code of conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-rack-1.0.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2020 Jan van der Pas Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/","text":"Faraday Retry The Retry middleware automatically retries requests that fail due to intermittent client or server errors (such as network hiccups). By default, it retries 2 times and handles only timeout exceptions. It can be configured with an arbitrary number of retries, a list of exceptions to handle, a retry interval, a percentage of randomness to add to the retry interval, and a backoff factor. The middleware can also handle the Retry-After header automatically when configured with the right status codes (see below for an example). Installation Add this line to your application's Gemfile: gem 'faraday-retry' And then execute: bundle install Or install it yourself as: gem install faraday-retry Usage This example will result in a first interval that is random between 0.05 and 0.075 and a second interval that is random between 0.1 and 0.125. require 'faraday' require 'faraday/retry' retry_options = { max: 2, interval: 0.05, interval_randomness: 0.5, backoff_factor: 2 } conn = Faraday.new(...) do |f| f.request :retry, retry_options #... end conn.get('/') Control when the middleware will retry requests By default, the Retry middleware will only retry idempotent methods and the most common network-related exceptions. You can change this behaviour by providing the right option when adding the middleware to your connection. Specify which methods will be retried You can provide a methods option with a list of HTTP methods. This will replace the default list of HTTP methods: delete , get , head , options , put . retry_options = { methods: %i[get post] } Specify which exceptions should trigger a retry You can provide an exceptions option with a list of exceptions that will replace the default list of network-related exceptions: Errno::ETIMEDOUT , Timeout::Error , Faraday::TimeoutError . This can be particularly useful when combined with the RaiseError middleware. retry_options = { exceptions: [Faraday::ResourceNotFound, Faraday::UnauthorizedError] } Specify on which response statuses to retry By default the Retry middleware will only retry the request if one of the expected exceptions arise. However, you can specify a list of HTTP statuses you'd like to be retried. When you do so, the middleware will check the response status code and will retry the request if included in the list. retry_options = { retry_statuses: [401, 409] } Automatically handle the Retry-After header Some APIs, like the Slack API , will inform you when you reach their API limits by replying with a response status code of 429 and a response header of Retry-After containing a time in seconds. You should then only retry querying after the amount of time provided by the Retry-After header, otherwise you won't get a response. You can automatically handle this and have Faraday pause and retry for the right amount of time by including the 429 status code in the retry statuses list: retry_options = { retry_statuses: [429] } Specify a custom retry logic You can also specify a custom retry logic with the retry_if option. This option accepts a block that will receive the env object and the exception raised and should decide if the code should retry still the action or not independent of the retry count. This would be useful if the exception produced is non-recoverable or if the the HTTP method called is not idempotent. NOTE: this option will only be used for methods that are not included in the methods option. If you want this to apply to all HTTP methods, pass methods: [] as an additional option. # Retries the request if response contains { success: false } retry_options = { retry_if: -> (env, _exc) { env.body[:success] == 'false' } } Call a block on every retry You can specify a block through the retry_block option that will be called before every retry. There are many different applications for this feature, spacing from instrumentation to monitoring. Request environment, middleware options, current number of retries and the exception is passed to the block as parameters. For example, you might want to keep track of the response statuses: response_statuses = [] retry_options = { retry_block: -> (env, options, retries, exc) { response_statuses << env.status } } Development After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. To install this gem onto your local machine, run rake build . To release a new version, make a commit with a message such as \"Bumped to 0.0.2\" and then run rake release . See how it works here . Contributing Bug reports and pull requests are welcome on GitHub . License The gem is available as open source under the terms of the MIT License .","title":"Faraday Retry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#faraday-retry","text":"The Retry middleware automatically retries requests that fail due to intermittent client or server errors (such as network hiccups). By default, it retries 2 times and handles only timeout exceptions. It can be configured with an arbitrary number of retries, a list of exceptions to handle, a retry interval, a percentage of randomness to add to the retry interval, and a backoff factor. The middleware can also handle the Retry-After header automatically when configured with the right status codes (see below for an example).","title":"Faraday Retry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#installation","text":"Add this line to your application's Gemfile: gem 'faraday-retry' And then execute: bundle install Or install it yourself as: gem install faraday-retry","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#usage","text":"This example will result in a first interval that is random between 0.05 and 0.075 and a second interval that is random between 0.1 and 0.125. require 'faraday' require 'faraday/retry' retry_options = { max: 2, interval: 0.05, interval_randomness: 0.5, backoff_factor: 2 } conn = Faraday.new(...) do |f| f.request :retry, retry_options #... end conn.get('/')","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#control-when-the-middleware-will-retry-requests","text":"By default, the Retry middleware will only retry idempotent methods and the most common network-related exceptions. You can change this behaviour by providing the right option when adding the middleware to your connection.","title":"Control when the middleware will retry requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#specify-which-methods-will-be-retried","text":"You can provide a methods option with a list of HTTP methods. This will replace the default list of HTTP methods: delete , get , head , options , put . retry_options = { methods: %i[get post] }","title":"Specify which methods will be retried"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#specify-which-exceptions-should-trigger-a-retry","text":"You can provide an exceptions option with a list of exceptions that will replace the default list of network-related exceptions: Errno::ETIMEDOUT , Timeout::Error , Faraday::TimeoutError . This can be particularly useful when combined with the RaiseError middleware. retry_options = { exceptions: [Faraday::ResourceNotFound, Faraday::UnauthorizedError] }","title":"Specify which exceptions should trigger a retry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#specify-on-which-response-statuses-to-retry","text":"By default the Retry middleware will only retry the request if one of the expected exceptions arise. However, you can specify a list of HTTP statuses you'd like to be retried. When you do so, the middleware will check the response status code and will retry the request if included in the list. retry_options = { retry_statuses: [401, 409] }","title":"Specify on which response statuses to retry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#automatically-handle-the-retry-after-header","text":"Some APIs, like the Slack API , will inform you when you reach their API limits by replying with a response status code of 429 and a response header of Retry-After containing a time in seconds. You should then only retry querying after the amount of time provided by the Retry-After header, otherwise you won't get a response. You can automatically handle this and have Faraday pause and retry for the right amount of time by including the 429 status code in the retry statuses list: retry_options = { retry_statuses: [429] }","title":"Automatically handle the Retry-After header"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#specify-a-custom-retry-logic","text":"You can also specify a custom retry logic with the retry_if option. This option accepts a block that will receive the env object and the exception raised and should decide if the code should retry still the action or not independent of the retry count. This would be useful if the exception produced is non-recoverable or if the the HTTP method called is not idempotent. NOTE: this option will only be used for methods that are not included in the methods option. If you want this to apply to all HTTP methods, pass methods: [] as an additional option. # Retries the request if response contains { success: false } retry_options = { retry_if: -> (env, _exc) { env.body[:success] == 'false' } }","title":"Specify a custom retry logic"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#call-a-block-on-every-retry","text":"You can specify a block through the retry_block option that will be called before every retry. There are many different applications for this feature, spacing from instrumentation to monitoring. Request environment, middleware options, current number of retries and the exception is passed to the block as parameters. For example, you might want to keep track of the response statuses: response_statuses = [] retry_options = { retry_block: -> (env, options, retries, exc) { response_statuses << env.status } }","title":"Call a block on every retry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#development","text":"After checking out the repo, run bin/setup to install dependencies. Then, run bin/test to run the tests. To install this gem onto your local machine, run rake build . To release a new version, make a commit with a message such as \"Bumped to 0.0.2\" and then run rake release . See how it works here .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#contributing","text":"Bug reports and pull requests are welcome on GitHub .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/#license","text":"The gem is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/CHANGELOG/","text":"Changelog v1.0 Initial release. This release consists of the same middleware that was previously bundled with Faraday but removed in Faraday v2.0, plus: Fixed Retry middleware retry_block is not called if retry will not happen due to max_interval , https://github.com/lostisland/faraday/pull/1350","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/CHANGELOG/#v10","text":"Initial release. This release consists of the same middleware that was previously bundled with Faraday but removed in Faraday v2.0, plus:","title":"v1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/CHANGELOG/#fixed","text":"Retry middleware retry_block is not called if retry will not happen due to max_interval , https://github.com/lostisland/faraday/pull/1350","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/faraday-retry-1.0.3/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2021 Mattia Giuffrida Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/","text":"Ruby-FFI https://github.com/ffi/ffi/wiki Description Ruby-FFI is a gem for programmatically loading dynamically-linked native libraries, binding functions within them, and calling those functions from Ruby code. Moreover, a Ruby-FFI extension works without changes on CRuby (MRI), JRuby, Rubinius and TruffleRuby. Discover why you should write your next extension using Ruby-FFI . Features Intuitive DSL Supports all C native types C structs (also nested), enums and global variables Callbacks from C to Ruby Automatic garbage collection of native memory Synopsis require 'ffi' module MyLib extend FFI::Library ffi_lib 'c' attach_function :puts, [ :string ], :int end MyLib.puts 'Hello, World using libc!' For less minimalistic and more examples you may look at: the samples/ folder the examples on the wiki the projects using FFI listed on the wiki: https://github.com/ffi/ffi/wiki/projects-using-ffi Requirements When installing the gem on CRuby (MRI), you will need: * A C compiler (e.g., Xcode on macOS, gcc or clang on everything else) Optionally (speeds up installation): * The libffi library and development headers - this is commonly in the libffi-dev or libffi-devel packages The ffi gem comes with a builtin libffi version, which is used, when the system libffi library is not available or too old. Use of the system libffi can be enforced by: gem install ffi -- --enable-system-libffi # to install the gem manually bundle config build.ffi --enable-system-libffi # for bundle install or prevented by --disable-system-libffi . On Linux systems running with PaX (Gentoo, Alpine, etc.), FFI may trigger mprotect errors. You may need to disable mprotect for ruby ( paxctl -m [/path/to/ruby] ) for the time being until a solution is found. On FreeBSD systems pkgconf must be installed for the gem to be able to compile using clang. Install either via packages pkg install pkgconf or from ports via devel/pkgconf . On JRuby and TruffleRuby, there are no requirements to install the FFI gem, and require 'ffi' works even without installing the gem (i.e., the gem is preinstalled on these implementations). Installation From rubygems: [sudo] gem install ffi From a Gemfile using git or GitHub gem 'ffi', github: 'ffi/ffi', submodules: true or from the git repository on github: git clone git://github.com/ffi/ffi.git cd ffi git submodule update --init --recursive bundle install rake install Install options: --enable-system-libffi : Force usage of system libffi --disable-system-libffi : Force usage of builtin libffi --enable-libffi-alloc : Force closure allocation by libffi --disable-libffi-alloc : Force closure allocation by builtin method License The ffi library is covered by the BSD license, also see the LICENSE file. The specs are covered by the same license as ruby/spec , the MIT license. Credits The following people have submitted code, bug reports, or otherwise contributed to the success of this project: Alban Peignier alban.peignier@free.fr Aman Gupta aman@tmm1.net Andrea Fazzi andrea.fazzi@alcacoop.it Andreas Niederl rico32@gmx.net Andrew Cholakian andrew@andrewvc.com Antonio Terceiro terceiro@softwarelivre.org Benoit Daloze eregontp@gmail.com Brian Candler B.Candler@pobox.com Brian D. Burns burns180@gmail.com Bryan Kearney bkearney@redhat.com Charlie Savage cfis@zerista.com Chikanaga Tomoyuki nagachika00@gmail.com Hongli Lai hongli@phusion.nl Ian MacLeod ian@nevir.net Jake Douglas jake@shiftedlabs.com Jean-Dominique Morani jdmorani@mac.com Jeremy Hinegardner jeremy@hinegardner.org Jes\u00fas Garc\u00eda S\u00e1ez blaxter@gmail.com Joe Khoobyar joe@ankhcraft.com Jurij Smakov jurij@wooyd.org KISHIMOTO, Makoto ksmakoto@dd.iij4u.or.jp Kim Burgestrand kim@burgestrand.se Lars Kanis kanis@comcard.de Luc Heinrich luc@honk-honk.com Luis Lavena luislavena@gmail.com Matijs van Zuijlen matijs@matijs.net Matthew King automatthew@gmail.com Mike Dalessio mike.dalessio@gmail.com NARUSE, Yui naruse@airemix.jp Park Heesob phasis@gmail.com Shin Yee shinyee@speedgocomputing.com Stephen Bannasch stephen.bannasch@gmail.com Suraj N. Kurapati sunaku@gmail.com Sylvain Daubert sylvain.daubert@laposte.net Victor Costan beoran@gmail.com ctide christide@christide.com emboss Martin.Bosslet@googlemail.com hobophobe unusualtears@gmail.com meh meh@paranoici.org postmodern postmodern.mod3@gmail.com wycats@gmail.com wycats@gmail.com Wayne Meissner wmeissner@gmail.com","title":"Ruby-FFI https://github.com/ffi/ffi/wiki [![Build Status](https://travis-ci.com/ffi/ffi.svg?branch=master)](https://travis-ci.com/ffi/ffi) [![Build status Windows](https://ci.appveyor.com/api/projects/status/r8wxn1sd4s794gg1/branch/master?svg=true)](https://ci.appveyor.com/project/larskanis/ffi-aofqa/branch/master)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#ruby-ffi-httpsgithubcomffiffiwiki","text":"","title":"Ruby-FFI https://github.com/ffi/ffi/wiki"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#description","text":"Ruby-FFI is a gem for programmatically loading dynamically-linked native libraries, binding functions within them, and calling those functions from Ruby code. Moreover, a Ruby-FFI extension works without changes on CRuby (MRI), JRuby, Rubinius and TruffleRuby. Discover why you should write your next extension using Ruby-FFI .","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#features","text":"Intuitive DSL Supports all C native types C structs (also nested), enums and global variables Callbacks from C to Ruby Automatic garbage collection of native memory","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#synopsis","text":"require 'ffi' module MyLib extend FFI::Library ffi_lib 'c' attach_function :puts, [ :string ], :int end MyLib.puts 'Hello, World using libc!' For less minimalistic and more examples you may look at: the samples/ folder the examples on the wiki the projects using FFI listed on the wiki: https://github.com/ffi/ffi/wiki/projects-using-ffi","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#requirements","text":"When installing the gem on CRuby (MRI), you will need: * A C compiler (e.g., Xcode on macOS, gcc or clang on everything else) Optionally (speeds up installation): * The libffi library and development headers - this is commonly in the libffi-dev or libffi-devel packages The ffi gem comes with a builtin libffi version, which is used, when the system libffi library is not available or too old. Use of the system libffi can be enforced by: gem install ffi -- --enable-system-libffi # to install the gem manually bundle config build.ffi --enable-system-libffi # for bundle install or prevented by --disable-system-libffi . On Linux systems running with PaX (Gentoo, Alpine, etc.), FFI may trigger mprotect errors. You may need to disable mprotect for ruby ( paxctl -m [/path/to/ruby] ) for the time being until a solution is found. On FreeBSD systems pkgconf must be installed for the gem to be able to compile using clang. Install either via packages pkg install pkgconf or from ports via devel/pkgconf . On JRuby and TruffleRuby, there are no requirements to install the FFI gem, and require 'ffi' works even without installing the gem (i.e., the gem is preinstalled on these implementations).","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#installation","text":"From rubygems: [sudo] gem install ffi From a Gemfile using git or GitHub gem 'ffi', github: 'ffi/ffi', submodules: true or from the git repository on github: git clone git://github.com/ffi/ffi.git cd ffi git submodule update --init --recursive bundle install rake install","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#install-options","text":"--enable-system-libffi : Force usage of system libffi --disable-system-libffi : Force usage of builtin libffi --enable-libffi-alloc : Force closure allocation by libffi --disable-libffi-alloc : Force closure allocation by builtin method","title":"Install options:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#license","text":"The ffi library is covered by the BSD license, also see the LICENSE file. The specs are covered by the same license as ruby/spec , the MIT license.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/#credits","text":"The following people have submitted code, bug reports, or otherwise contributed to the success of this project: Alban Peignier alban.peignier@free.fr Aman Gupta aman@tmm1.net Andrea Fazzi andrea.fazzi@alcacoop.it Andreas Niederl rico32@gmx.net Andrew Cholakian andrew@andrewvc.com Antonio Terceiro terceiro@softwarelivre.org Benoit Daloze eregontp@gmail.com Brian Candler B.Candler@pobox.com Brian D. Burns burns180@gmail.com Bryan Kearney bkearney@redhat.com Charlie Savage cfis@zerista.com Chikanaga Tomoyuki nagachika00@gmail.com Hongli Lai hongli@phusion.nl Ian MacLeod ian@nevir.net Jake Douglas jake@shiftedlabs.com Jean-Dominique Morani jdmorani@mac.com Jeremy Hinegardner jeremy@hinegardner.org Jes\u00fas Garc\u00eda S\u00e1ez blaxter@gmail.com Joe Khoobyar joe@ankhcraft.com Jurij Smakov jurij@wooyd.org KISHIMOTO, Makoto ksmakoto@dd.iij4u.or.jp Kim Burgestrand kim@burgestrand.se Lars Kanis kanis@comcard.de Luc Heinrich luc@honk-honk.com Luis Lavena luislavena@gmail.com Matijs van Zuijlen matijs@matijs.net Matthew King automatthew@gmail.com Mike Dalessio mike.dalessio@gmail.com NARUSE, Yui naruse@airemix.jp Park Heesob phasis@gmail.com Shin Yee shinyee@speedgocomputing.com Stephen Bannasch stephen.bannasch@gmail.com Suraj N. Kurapati sunaku@gmail.com Sylvain Daubert sylvain.daubert@laposte.net Victor Costan beoran@gmail.com ctide christide@christide.com emboss Martin.Bosslet@googlemail.com hobophobe unusualtears@gmail.com meh meh@paranoici.org postmodern postmodern.mod3@gmail.com wycats@gmail.com wycats@gmail.com Wayne Meissner wmeissner@gmail.com","title":"Credits"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/","text":"1.15.5 / 2022-01-10 Fixed: * Fix long double argument or return values on 32bit i686. #849 * FFI::ConstGenerator: avoid usage of the same binary file simultaneously. #929 Added: * Add Windows fat binary gem for Ruby-3.1 Removed: * Remove Windows fat binary gem for Ruby < 2.4 1.15.4 / 2021-09-01 Fixed: * Fix build for uClibc. #913 * Correct module lookup when including ffi-module gem. #912 Changed: * Use ruby code of the ffi gem in JRuby-9.2.20+. #915 1.15.3 / 2021-06-16 Fixed: * Fix temporary packaging issue with libffi. #904 1.15.2 / 2021-06-16 Added: * Add support for Windows MINGW-UCRT build. #903 * Add /opt/homebrew/lib/ to fallback search paths to improve homebrew support. #880 #882 Changed: * Regenerate types.conf for FreeBSD12 aarch64. #902 1.15.1 / 2021-05-22 Fixed: * Append -pthread to linker options. #893 * Use arm or aarch64 to identify Apple ARM CPU arch. #899 * Allow overriding gcc with the CC env var in const_generator.rb and struct_generator.rb . #897 1.15.0 / 2021-03-05 Fixed: * Fix MSVC build * Fix async callbacks in conjunction with fork(). #884 Added: * Allow to pass callbacks in varargs. #885 * Name the threads for FFI callback dispatcher and async thread calls for easier debugging. #883 The name can be retrieved by Thread.name and is shown by Thread.list.inspect etc. Even gdb shows the thread name on supported operating systems. * Add types.conf for powerpc64le-linux * Add types.conf for riscv64-linux * More release automation of ffi gems Changed: * Switch from rubygems-tasks to bundler/gem_helper Removed: * Remove unused VariadicInvoker#init 1.14.2 / 2020-12-21 Fixed: * Fix builtin libffi on newer Ubuntu caused by an outdated Makefile.in . #863 1.14.1 / 2020-12-19 Changed: * Revert changes to FFI::Pointer#write_string made in ffi-1.14.0. It breaks compatibilty in a way that can cause hard to find errors. #857 1.14.0 / 2020-12-18 Added: * Add types.conf for x86_64-msys, x86_64-haiku, aarch64-openbsd and aarch64-darwin (alias arm64-darwin) * Add method AbstractMemory#size_limit? . #829 * Add new extconf option --enable-libffi-alloc which is enabled per default on Apple M1 (arm64-darwin). Changed: * Do NULL pointer check only when array length > 0 . #305 * Raise an error on an unknown order argument. #830 * Change FFI::Pointer#write_string to terminate with a NUL byte like other string methods. #805 * Update bundled libffi to latest master. Removed: * Remove win32/stdint.h and stdbool.h because of copyright issue. #693 Fixed: * Fix possible UTF-8 load error in loader script interpretation. #792 * Fix segfault on non-array argument to #write_array_of_* * Fix memory leak in MethodHandle . #815 * Fix possible segfault in combination with fiddle or other libffi using gems . #835 * Fix possibility to use ffi ruby gem with JRuby-9.3 . #763 * Fix a GC issue, when a callback Proc is used on more than 2 callback signatures. #820 1.13.1 / 2020-06-09 Changed: * Revert use of ucrtbase.dll as default C library on Windows-MINGW. ucrtbase.dll is still used on MSWIN target. #790 * Test for ffi_prep_closure_loc() to make sure we can use this function. This fixes incorrect use of system libffi on MacOS Mojave (10.14). #787 * Update types.conf on x86_64-dragonflybsd 1.13.0 / 2020-06-01 Added: * Add TruffleRuby support. Almost all specs are running on TruffleRuby and succeed. #768 * Add ruby source files to the java gem. This allows to ship the Ruby library code per platform java gem and add it as a default gem to JRuby. #763 * Add FFI::Platform::LONG_DOUBLE_SIZE * Add bounds checks for writing to an inline char[] . #756 * Add long double as callback return value. #771 * Update type definitions and add types from stdint.h and stddef.h on i386-windows, x86_64-windows, x86_64-darwin, x86_64-linux, arm-linux, powerpc-linux. #749 * Add new type definitions for powerpc-openbsd and sparcv9-openbsd. #775, #778 Changed: * Raise required ruby version to >= 2.3. * Lots of cleanups and improvements in library, specs and benchmarks. * Fix a lot of compiler warnings at the C-extension * Fix several install issues on MacOS: * Look for libffi in SDK paths, since recent versions of macOS removed it from /usr/include . #757 * Fix error ld: library not found for -lgcc_s.10.4 * Don't built for i386 architecture as it is deprecated * Several fixes for MSVC build on Windows. #779 * Use ucrtbase.dll as default C library on Windows instead of old msvcrt.dll . #779 * Update builtin libffi to fix a Powerpc issue with parameters of type long * Allow unmodified sourcing of (the ruby code of) this gem in JRuby and TruffleRuby as a default gem. #747 * Improve check to detect if a module has a #find_type method suitable for FFI. This fixes compatibility with stdlib mkmf . #776 Removed: * Reject callback with :string return type at definition, because it didn't work so far and is not save to use. #751, #782 1.12.2 / 2020-02-01 Fix possible segfault at FFI::Struct#[] and []= after GC.compact . #742 1.12.1 / 2020-01-14 Added: * Add binary gem support for ruby-2.7 on Windows 1.12.0 / 2020-01-14 Added: * FFI::VERSION is defined as part of require 'ffi' now. It is no longer necessary to require 'ffi/version' . Changed: * Update libffi to latest master. Deprecated: * Overwriting struct layouts is now warned and will be disallowed in ffi-2.0. #734, #735 1.11.3 / 2019-11-25 Removed: * Remove support for tainted objects which cause deprecation warnings in ruby-2.7. #730 1.11.2 / 2019-11-11 Added: * Add DragonFlyBSD as a platform. #724 Changed: * Sort all types.conf files, so that files and changes are easier to compare. * Regenerated type conf for freebsd12 and x86_64-linux targets. #722 * Remove MACOSX_DEPLOYMENT_TARGET that was targeting very old version 10.4. #647 * Fix library name mangling for non glibc Linux/UNIX. #727 * Fix compiler warnings raised by ruby-2.7 * Update libffi to latest master. 1.11.1 / 2019-05-20 Changed: * Raise required ruby version to >=2.0. #699, #700 * Fix a possible linker error on ruby < 2.3 on Linux. 1.11.0 / 2019-05-17 This version was yanked on 2019-05-20 to fix an install issue on ruby-1.9.3. #700 Added: * Add ability to disable or force use of system libffi. #669 Use like gem inst ffi -- --enable-system-libffi . * Add ability to call FFI callbacks from outside of FFI call frame. #584 * Add proper documentation to FFI::Generator and ::Task * Add gemspec metadata. #696, #698 Changed: * Fix stdcall on Win32. #649, #669 * Fix load paths for FFI::Generator::Task * Fix FFI::Pointer#read_string(0) to return a binary String. #692 * Fix benchmark suite so that it runs on ruby-2.x * Move FFI::Platform::CPU from C to Ruby. #663 * Move FFI::StructByReference to Ruby. #681 * Move FFI::DataConverter to Ruby (#661) * Various cleanups and improvements of specs and benchmarks Removed: * Remove ruby-1.8 and 1.9 compatibility code. #683 * Remove unused spec files. #684 1.10.0 / 2019-01-06 Added: * Add /opt/local/lib/ to ffi's fallback library search path. #638 * Add binary gem support for ruby-2.6 on Windows * Add FreeBSD on AArch64 and ARM support. #644 * Add FFI::LastError.winapi_error on Windows native or Cygwin. #633 Changed: * Update to rake-compiler-dock-0.7.0 * Use 64-bit inodes on FreeBSD >= 12. #644 * Switch time_t and suseconds_t types to long on FreeBSD. #627 * Make register_t long_long on 64-bit FreeBSD. #644 * Fix Pointer#write_array_of_type #637 Removed: * Drop binary gem support for ruby-2.0 and 2.1 on Windows 1.9.25 / 2018-06-03 Changed: * Revert closures via libffi. This re-adds ClosurePool and fixes compat with SELinux enabled systems. #621 1.9.24 / 2018-06-02 Security Note: This update addresses vulnerability CVE-2018-1000201: DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String. Found by Matthew Bush. Added: * Added a CHANGELOG file * Add mips64(eb) support, and mips r6 support. (#601) Changed: * Update libffi to latest changes on master. * Don't search in hardcoded /usr paths on Windows. * Don't treat Symbol args different to Strings in ffi_lib. * Make sure size_t is defined in Thread.c. Fixes #609 1.9.23 / 2018-02-25 Changed: * Fix unnecessary rebuild of configure in darwin multi arch. Fixes #605 1.9.22 / 2018-02-22 Changed: * Update libffi to latest changes on master. * Update detection of system libffi to match new requirements. Fixes #617 * Prefer bundled libffi over system libffi on Mac OS. * Do closures via libffi. This removes ClosurePool and fixes compat with PaX. #540 * Use a more deterministic gem packaging. * Fix unnecessary update of autoconf files at gem install. 1.9.21 / 2018-02-06 Added: * Ruby-2.5 support by Windows binary gems. Fixes #598 * Add missing win64 types. * Added support for Bitmask. (#573) * Add support for MSYS2 (#572) and Sparc64 Linux. (#574) Changed: * Fix read_string to not throw an error on length 0. * Don't use absolute paths for sh and env. Fixes usage on Adroid #528 * Use Ruby implementation for which for better compat with Windows. Fixes #315 * Fix compatibility with PPC64LE platform. (#577) * Normalize sparc64 to sparcv9. (#575) Removed: * Drop Ruby 1.8.7 support (#480) 1.9.18 / 2017-03-03 Added: * Add compatibility with Ruby-2.4. Changed: * Add missing shlwapi.h include to fix Windows build. * Avoid undefined behaviour of LoadLibrary() on Windows. #553 1.9.17 / 2017-01-13","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1155-2022-01-10","text":"Fixed: * Fix long double argument or return values on 32bit i686. #849 * FFI::ConstGenerator: avoid usage of the same binary file simultaneously. #929 Added: * Add Windows fat binary gem for Ruby-3.1 Removed: * Remove Windows fat binary gem for Ruby < 2.4","title":"1.15.5 / 2022-01-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1154-2021-09-01","text":"Fixed: * Fix build for uClibc. #913 * Correct module lookup when including ffi-module gem. #912 Changed: * Use ruby code of the ffi gem in JRuby-9.2.20+. #915","title":"1.15.4 / 2021-09-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1153-2021-06-16","text":"Fixed: * Fix temporary packaging issue with libffi. #904","title":"1.15.3 / 2021-06-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1152-2021-06-16","text":"Added: * Add support for Windows MINGW-UCRT build. #903 * Add /opt/homebrew/lib/ to fallback search paths to improve homebrew support. #880 #882 Changed: * Regenerate types.conf for FreeBSD12 aarch64. #902","title":"1.15.2 / 2021-06-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1151-2021-05-22","text":"Fixed: * Append -pthread to linker options. #893 * Use arm or aarch64 to identify Apple ARM CPU arch. #899 * Allow overriding gcc with the CC env var in const_generator.rb and struct_generator.rb . #897","title":"1.15.1 / 2021-05-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1150-2021-03-05","text":"Fixed: * Fix MSVC build * Fix async callbacks in conjunction with fork(). #884 Added: * Allow to pass callbacks in varargs. #885 * Name the threads for FFI callback dispatcher and async thread calls for easier debugging. #883 The name can be retrieved by Thread.name and is shown by Thread.list.inspect etc. Even gdb shows the thread name on supported operating systems. * Add types.conf for powerpc64le-linux * Add types.conf for riscv64-linux * More release automation of ffi gems Changed: * Switch from rubygems-tasks to bundler/gem_helper Removed: * Remove unused VariadicInvoker#init","title":"1.15.0 / 2021-03-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1142-2020-12-21","text":"Fixed: * Fix builtin libffi on newer Ubuntu caused by an outdated Makefile.in . #863","title":"1.14.2 / 2020-12-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1141-2020-12-19","text":"Changed: * Revert changes to FFI::Pointer#write_string made in ffi-1.14.0. It breaks compatibilty in a way that can cause hard to find errors. #857","title":"1.14.1 / 2020-12-19"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1140-2020-12-18","text":"Added: * Add types.conf for x86_64-msys, x86_64-haiku, aarch64-openbsd and aarch64-darwin (alias arm64-darwin) * Add method AbstractMemory#size_limit? . #829 * Add new extconf option --enable-libffi-alloc which is enabled per default on Apple M1 (arm64-darwin). Changed: * Do NULL pointer check only when array length > 0 . #305 * Raise an error on an unknown order argument. #830 * Change FFI::Pointer#write_string to terminate with a NUL byte like other string methods. #805 * Update bundled libffi to latest master. Removed: * Remove win32/stdint.h and stdbool.h because of copyright issue. #693 Fixed: * Fix possible UTF-8 load error in loader script interpretation. #792 * Fix segfault on non-array argument to #write_array_of_* * Fix memory leak in MethodHandle . #815 * Fix possible segfault in combination with fiddle or other libffi using gems . #835 * Fix possibility to use ffi ruby gem with JRuby-9.3 . #763 * Fix a GC issue, when a callback Proc is used on more than 2 callback signatures. #820","title":"1.14.0 / 2020-12-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1131-2020-06-09","text":"Changed: * Revert use of ucrtbase.dll as default C library on Windows-MINGW. ucrtbase.dll is still used on MSWIN target. #790 * Test for ffi_prep_closure_loc() to make sure we can use this function. This fixes incorrect use of system libffi on MacOS Mojave (10.14). #787 * Update types.conf on x86_64-dragonflybsd","title":"1.13.1 / 2020-06-09"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1130-2020-06-01","text":"Added: * Add TruffleRuby support. Almost all specs are running on TruffleRuby and succeed. #768 * Add ruby source files to the java gem. This allows to ship the Ruby library code per platform java gem and add it as a default gem to JRuby. #763 * Add FFI::Platform::LONG_DOUBLE_SIZE * Add bounds checks for writing to an inline char[] . #756 * Add long double as callback return value. #771 * Update type definitions and add types from stdint.h and stddef.h on i386-windows, x86_64-windows, x86_64-darwin, x86_64-linux, arm-linux, powerpc-linux. #749 * Add new type definitions for powerpc-openbsd and sparcv9-openbsd. #775, #778 Changed: * Raise required ruby version to >= 2.3. * Lots of cleanups and improvements in library, specs and benchmarks. * Fix a lot of compiler warnings at the C-extension * Fix several install issues on MacOS: * Look for libffi in SDK paths, since recent versions of macOS removed it from /usr/include . #757 * Fix error ld: library not found for -lgcc_s.10.4 * Don't built for i386 architecture as it is deprecated * Several fixes for MSVC build on Windows. #779 * Use ucrtbase.dll as default C library on Windows instead of old msvcrt.dll . #779 * Update builtin libffi to fix a Powerpc issue with parameters of type long * Allow unmodified sourcing of (the ruby code of) this gem in JRuby and TruffleRuby as a default gem. #747 * Improve check to detect if a module has a #find_type method suitable for FFI. This fixes compatibility with stdlib mkmf . #776 Removed: * Reject callback with :string return type at definition, because it didn't work so far and is not save to use. #751, #782","title":"1.13.0 / 2020-06-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1122-2020-02-01","text":"Fix possible segfault at FFI::Struct#[] and []= after GC.compact . #742","title":"1.12.2 / 2020-02-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1121-2020-01-14","text":"Added: * Add binary gem support for ruby-2.7 on Windows","title":"1.12.1 / 2020-01-14"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1120-2020-01-14","text":"Added: * FFI::VERSION is defined as part of require 'ffi' now. It is no longer necessary to require 'ffi/version' . Changed: * Update libffi to latest master. Deprecated: * Overwriting struct layouts is now warned and will be disallowed in ffi-2.0. #734, #735","title":"1.12.0 / 2020-01-14"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1113-2019-11-25","text":"Removed: * Remove support for tainted objects which cause deprecation warnings in ruby-2.7. #730","title":"1.11.3 / 2019-11-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1112-2019-11-11","text":"Added: * Add DragonFlyBSD as a platform. #724 Changed: * Sort all types.conf files, so that files and changes are easier to compare. * Regenerated type conf for freebsd12 and x86_64-linux targets. #722 * Remove MACOSX_DEPLOYMENT_TARGET that was targeting very old version 10.4. #647 * Fix library name mangling for non glibc Linux/UNIX. #727 * Fix compiler warnings raised by ruby-2.7 * Update libffi to latest master.","title":"1.11.2 / 2019-11-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1111-2019-05-20","text":"Changed: * Raise required ruby version to >=2.0. #699, #700 * Fix a possible linker error on ruby < 2.3 on Linux.","title":"1.11.1 / 2019-05-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1110-2019-05-17","text":"This version was yanked on 2019-05-20 to fix an install issue on ruby-1.9.3. #700 Added: * Add ability to disable or force use of system libffi. #669 Use like gem inst ffi -- --enable-system-libffi . * Add ability to call FFI callbacks from outside of FFI call frame. #584 * Add proper documentation to FFI::Generator and ::Task * Add gemspec metadata. #696, #698 Changed: * Fix stdcall on Win32. #649, #669 * Fix load paths for FFI::Generator::Task * Fix FFI::Pointer#read_string(0) to return a binary String. #692 * Fix benchmark suite so that it runs on ruby-2.x * Move FFI::Platform::CPU from C to Ruby. #663 * Move FFI::StructByReference to Ruby. #681 * Move FFI::DataConverter to Ruby (#661) * Various cleanups and improvements of specs and benchmarks Removed: * Remove ruby-1.8 and 1.9 compatibility code. #683 * Remove unused spec files. #684","title":"1.11.0 / 2019-05-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1100-2019-01-06","text":"Added: * Add /opt/local/lib/ to ffi's fallback library search path. #638 * Add binary gem support for ruby-2.6 on Windows * Add FreeBSD on AArch64 and ARM support. #644 * Add FFI::LastError.winapi_error on Windows native or Cygwin. #633 Changed: * Update to rake-compiler-dock-0.7.0 * Use 64-bit inodes on FreeBSD >= 12. #644 * Switch time_t and suseconds_t types to long on FreeBSD. #627 * Make register_t long_long on 64-bit FreeBSD. #644 * Fix Pointer#write_array_of_type #637 Removed: * Drop binary gem support for ruby-2.0 and 2.1 on Windows","title":"1.10.0 / 2019-01-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1925-2018-06-03","text":"Changed: * Revert closures via libffi. This re-adds ClosurePool and fixes compat with SELinux enabled systems. #621","title":"1.9.25 / 2018-06-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1924-2018-06-02","text":"Security Note: This update addresses vulnerability CVE-2018-1000201: DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String. Found by Matthew Bush. Added: * Added a CHANGELOG file * Add mips64(eb) support, and mips r6 support. (#601) Changed: * Update libffi to latest changes on master. * Don't search in hardcoded /usr paths on Windows. * Don't treat Symbol args different to Strings in ffi_lib. * Make sure size_t is defined in Thread.c. Fixes #609","title":"1.9.24 / 2018-06-02"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1923-2018-02-25","text":"Changed: * Fix unnecessary rebuild of configure in darwin multi arch. Fixes #605","title":"1.9.23 / 2018-02-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1922-2018-02-22","text":"Changed: * Update libffi to latest changes on master. * Update detection of system libffi to match new requirements. Fixes #617 * Prefer bundled libffi over system libffi on Mac OS. * Do closures via libffi. This removes ClosurePool and fixes compat with PaX. #540 * Use a more deterministic gem packaging. * Fix unnecessary update of autoconf files at gem install.","title":"1.9.22 / 2018-02-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1921-2018-02-06","text":"Added: * Ruby-2.5 support by Windows binary gems. Fixes #598 * Add missing win64 types. * Added support for Bitmask. (#573) * Add support for MSYS2 (#572) and Sparc64 Linux. (#574) Changed: * Fix read_string to not throw an error on length 0. * Don't use absolute paths for sh and env. Fixes usage on Adroid #528 * Use Ruby implementation for which for better compat with Windows. Fixes #315 * Fix compatibility with PPC64LE platform. (#577) * Normalize sparc64 to sparcv9. (#575) Removed: * Drop Ruby 1.8.7 support (#480)","title":"1.9.21 / 2018-02-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1918-2017-03-03","text":"Added: * Add compatibility with Ruby-2.4. Changed: * Add missing shlwapi.h include to fix Windows build. * Avoid undefined behaviour of LoadLibrary() on Windows. #553","title":"1.9.18 / 2017-03-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/CHANGELOG/#1917-2017-01-13","text":"","title":"1.9.17 / 2017-01-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/","text":"Status libffi-3.4 was released on TBD. Check the libffi web page for updates: . What is libffi? Compilers for high level languages generate code that follow certain conventions. These conventions are necessary, in part, for separate compilation to work. One such convention is the \"calling convention\". The \"calling convention\" is essentially a set of assumptions made by the compiler about where function arguments will be found on entry to a function. A \"calling convention\" also specifies where the return value for a function is found. Some programs may not know at the time of compilation what arguments are to be passed to a function. For instance, an interpreter may be told at run-time about the number and types of arguments used to call a given function. Libffi can be used in such programs to provide a bridge from the interpreter program to compiled code. The libffi library provides a portable, high level programming interface to various calling conventions. This allows a programmer to call any function specified by a call interface description at run time. FFI stands for Foreign Function Interface. A foreign function interface is the popular name for the interface that allows code written in one language to call code written in another language. The libffi library really only provides the lowest, machine dependent layer of a fully featured foreign function interface. A layer must exist above libffi that handles type conversions for values passed between the two languages. Supported Platforms Libffi has been ported to many different platforms. At the time of release, the following basic configurations have been tested: Architecture Operating System Compiler AArch64 (ARM64) iOS Clang AArch64 Linux GCC AArch64 Windows MSVC Alpha Linux GCC Alpha Tru64 GCC ARC Linux GCC ARM Linux GCC ARM iOS GCC ARM Windows MSVC AVR32 Linux GCC Blackfin uClinux GCC CSKY Linux GCC HPPA HPUX GCC KVX Linux GCC IA-64 Linux GCC M68K FreeMiNT GCC M68K Linux GCC M68K RTEMS GCC M88K OpenBSD/mvme88k GCC Meta Linux GCC MicroBlaze Linux GCC MIPS IRIX GCC MIPS Linux GCC MIPS RTEMS GCC MIPS64 Linux GCC Moxie Bare metal GCC Nios II Linux GCC OpenRISC Linux GCC PowerPC 32-bit AIX IBM XL C PowerPC 64-bit AIX IBM XL C PowerPC AMIGA GCC PowerPC Linux GCC PowerPC Mac OSX GCC PowerPC FreeBSD GCC PowerPC 64-bit FreeBSD GCC PowerPC 64-bit Linux ELFv1 GCC PowerPC 64-bit Linux ELFv2 GCC RISC-V 32-bit Linux GCC RISC-V 64-bit Linux GCC S390 Linux GCC S390X Linux GCC SPARC Linux GCC SPARC Solaris GCC SPARC Solaris Oracle Solaris Studio C SPARC64 Linux GCC SPARC64 FreeBSD GCC SPARC64 Solaris Oracle Solaris Studio C TILE-Gx/TILEPro Linux GCC VAX OpenBSD/vax GCC X86 FreeBSD GCC X86 GNU HURD GCC X86 Interix GCC X86 kFreeBSD GCC X86 Linux GCC X86 OpenBSD GCC X86 OS/2 GCC X86 Solaris GCC X86 Solaris Oracle Solaris Studio C X86 Windows/Cygwin GCC X86 Windows/MingW GCC X86-64 FreeBSD GCC X86-64 Linux GCC X86-64 Linux/x32 GCC X86-64 OpenBSD GCC X86-64 Solaris Oracle Solaris Studio C X86-64 Windows/Cygwin GCC X86-64 Windows/MingW GCC X86-64 Mac OSX GCC Xtensa Linux GCC Please send additional platform test results to libffi-discuss@sourceware.org. Installing libffi First you must configure the distribution for your particular system. Go to the directory you wish to build libffi in and run the \"configure\" program found in the root directory of the libffi source distribution. Note that building libffi requires a C99 compatible compiler. If you're building libffi directly from git hosted sources, configure won't exist yet; run ./autogen.sh first. This will require that you install autoconf, automake and libtool. You may want to tell configure where to install the libffi library and header files. To do that, use the --prefix configure switch. Libffi will install under /usr/local by default. If you want to enable extra run-time debugging checks use the the --enable-debug configure switch. This is useful when your program dies mysteriously while using libffi. Another useful configure switch is --enable-purify-safety . Using this will add some extra code which will suppress certain warnings when you are using Purify with libffi. Only use this switch when using Purify, as it will slow down the library. If you don't want to build documentation, use the --disable-docs configure switch. It's also possible to build libffi on Windows platforms with Microsoft's Visual C++ compiler. In this case, use the msvcc.sh wrapper script during configuration like so: path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\" For 64-bit Windows builds, use CC=\"path/to/msvcc.sh -m64\" and CXX=\"path/to/msvcc.sh -m64\" . You may also need to specify --build appropriately. It is also possible to build libffi on Windows platforms with the LLVM project's clang-cl compiler, like below: path/to/configure CC=\"path/to/msvcc.sh -clang-cl\" CXX=\"path/to/msvcc.sh -clang-cl\" LD=link CPP=\"clang-cl -EP\" When building with MSVC under a MingW environment, you may need to remove the line in configure that sets 'fix_srcfile_path' to a 'cygpath' command. ('cygpath' is not present in MingW, and is not required when using MingW-style paths.) To build static library for ARM64 with MSVC using visual studio solution, msvc_build folder have aarch64/Ffi_staticLib.sln required header files in aarch64/aarch64_include/ SPARC Solaris builds require the use of the GNU assembler and linker. Point AS and LD environment variables at those tool prior to configuration. For iOS builds, the libffi.xcodeproj Xcode project is available. Configure has many other options. Use configure --help to see them all. Once configure has finished, type \"make\". Note that you must be using GNU make. You can ftp GNU make from ftp.gnu.org:/pub/gnu/make . To ensure that libffi is working as advertised, type \"make check\". This will require that you have DejaGNU installed. To install the library and header files, type make install . History See the git log for details at http://github.com/libffi/libffi. 3.4 TBD Add support for Alibaba's CSKY architecture. Add support for Intel Control-flow Enforcement Technology (CET). Add support for ARM Pointer Authentication (PA). Fix 32-bit PPC regression. Fix MIPS soft-float problem. 3.3 Nov-23-19 Add RISC-V support. New API in support of GO closures. Add IEEE754 binary128 long double support for 64-bit Power Default to Microsoft's 64 bit long double ABI with Visual C++. GNU compiler uses 80 bits (128 in memory) FFI_GNUW64 ABI. Add Windows on ARM64 (WOA) support. Add Windows 32-bit ARM support. Raw java (gcj) API deprecated. Add pre-built PDF documentation to source distribution. Many new test cases and bug fixes. 3.2.1 Nov-12-14 Build fix for non-iOS AArch64 targets. 3.2 Nov-11-14 Add C99 Complex Type support (currently only supported on s390). Add support for PASCAL and REGISTER calling conventions on x86 Windows/Linux. Add OpenRISC and Cygwin-64 support. Bug fixes. 3.1 May-19-14 Add AArch64 (ARM64) iOS support. Add Nios II support. Add m88k and DEC VAX support. Add support for stdcall, thiscall, and fastcall on non-Windows 32-bit x86 targets such as Linux. Various Android, MIPS N32, x86, FreeBSD and UltraSPARC IIi fixes. Make the testsuite more robust: eliminate several spurious failures, and respect the $CC and $CXX environment variables. Archive off the manually maintained ChangeLog in favor of git log. 3.0.13 Mar-17-13 Add Meta support. Add missing Moxie bits. Fix stack alignment bug on 32-bit x86. Build fix for m68000 targets. Build fix for soft-float Power targets. Fix the install dir location for some platforms when building with GCC (OS X, Solaris). Fix Cygwin regression. 3.0.12 Feb-11-13 Add Moxie support. Add AArch64 support. Add Blackfin support. Add TILE-Gx/TILEPro support. Add MicroBlaze support. Add Xtensa support. Add support for PaX enabled kernels with MPROTECT. Add support for native vendor compilers on Solaris and AIX. Work around LLVM/GCC interoperability issue on x86_64. 3.0.11 Apr-11-12 Lots of build fixes. Add support for variadic functions (ffi_prep_cif_var). Add Linux/x32 support. Add thiscall, fastcall and MSVC cdecl support on Windows. Add Amiga and newer MacOS support. Add m68k FreeMiNT support. Integration with iOS' xcode build tools. Fix Octeon and MC68881 support. Fix code pessimizations. 3.0.10 Aug-23-11 Add support for Apple's iOS. Add support for ARM VFP ABI. Add RTEMS support for MIPS and M68K. Fix instruction cache clearing problems on ARM and SPARC. Fix the N64 build on mips-sgi-irix6.5. Enable builds with Microsoft's compiler. Enable x86 builds with Oracle's Solaris compiler. Fix support for calling code compiled with Oracle's Sparc Solaris compiler. Testsuite fixes for Tru64 Unix. Additional platform support. 3.0.9 Dec-31-09 Add AVR32 and win64 ports. Add ARM softfp support. Many fixes for AIX, Solaris, HP-UX, *BSD. Several PowerPC and x86-64 bug fixes. Build DLL for windows. 3.0.8 Dec-19-08 Add *BSD, BeOS, and PA-Linux support. 3.0.7 Nov-11-08 Fix for ppc FreeBSD. (thanks to Andreas Tobler) 3.0.6 Jul-17-08 Fix for closures on sh. Mark the sh/sh64 stack as non-executable. (both thanks to Kaz Kojima) 3.0.5 Apr-3-08 Fix libffi.pc file. Fix #define ARM for IcedTea users. Fix x86 closure bug. 3.0.4 Feb-24-08 Fix x86 OpenBSD configury. 3.0.3 Feb-22-08 Enable x86 OpenBSD thanks to Thomas Heller, and x86-64 FreeBSD thanks to Bj\u00f6rn K\u00f6nig and Andreas Tobler. Clean up test instruction in README. 3.0.2 Feb-21-08 Improved x86 FreeBSD support. Thanks to Bj\u00f6rn K\u00f6nig. 3.0.1 Feb-15-08 Fix instruction cache flushing bug on MIPS. Thanks to David Daney. 3.0.0 Feb-15-08 Many changes, mostly thanks to the GCC project. Cygnus Solutions is now Red Hat. [10 years go by...] 1.20 Oct-5-98 Raffaele Sena produces ARM port. 1.19 Oct-5-98 Fixed x86 long double and long long return support. m68k bug fixes from Andreas Schwab. Patch for DU assembler compatibility for the Alpha from Richard Henderson. 1.18 Apr-17-98 Bug fixes and MIPS configuration changes. 1.17 Feb-24-98 Bug fixes and m68k port from Andreas Schwab. PowerPC port from Geoffrey Keating. Various bug x86, Sparc and MIPS bug fixes. 1.16 Feb-11-98 Richard Henderson produces Alpha port. 1.15 Dec-4-97 Fixed an n32 ABI bug. New libtool, auto* support. 1.14 May-13-97 libtool is now used to generate shared and static libraries. Fixed a minor portability problem reported by Russ McManus <mcmanr@eq.gs.com>. 1.13 Dec-2-96 Added --enable-purify-safety to keep Purify from complaining about certain low level code. Sparc fix for calling functions with < 6 args. Linux x86 a.out fix. 1.12 Nov-22-96 Added missing ffi_type_void, needed for supporting void return types. Fixed test case for non MIPS machines. Cygnus Support is now Cygnus Solutions. 1.11 Oct-30-96 Added notes about GNU make. 1.10 Oct-29-96 Added configuration fix for non GNU compilers. 1.09 Oct-29-96 Added --enable-debug configure switch. Clean-ups based on LCLint feedback. ffi_mips.h is always installed. Many configuration fixes. Fixed ffitest.c for sparc builds. 1.08 Oct-15-96 Fixed n32 problem. Many clean-ups. 1.07 Oct-14-96 Gordon Irlam rewrites v8.S again. Bug fixes. 1.06 Oct-14-96 Gordon Irlam improved the sparc port. 1.05 Oct-14-96 Interface changes based on feedback. 1.04 Oct-11-96 Sparc port complete (modulo struct passing bug). 1.03 Oct-10-96 Passing struct args, and returning struct values works for all architectures/calling conventions. Expanded tests. 1.02 Oct-9-96 Added SGI n32 support. Fixed bugs in both o32 and Linux support. Added \"make test\". 1.01 Oct-8-96 Fixed float passing bug in mips version. Restructured some of the code. Builds cleanly with SGI tools. 1.00 Oct-7-96 First release. No public announcement. Authors & Credits libffi was originally written by Anthony Green green@moxielogic.com . The developers of the GNU Compiler Collection project have made innumerable valuable contributions. See the ChangeLog file for details. Some of the ideas behind libffi were inspired by Gianni Mariani's free gencall library for Silicon Graphics machines. The closure mechanism was designed and implemented by Kresten Krab Thorup. Major processor architecture ports were contributed by the following developers: aarch64 Marcus Shawcroft, James Greenhalgh alpha Richard Henderson arc Hackers at Synopsis arm Raffaele Sena avr32 Bradley Smith blackfin Alexandre Keunecke I. de Mendonca cris Simon Posnjak, Hans-Peter Nilsson csky Ma Jun, Zhang Wenmeng frv Anthony Green ia64 Hans Boehm m32r Kazuhiro Inaoka m68k Andreas Schwab m88k Miod Vallat metag Hackers at Imagination Technologies microblaze Nathan Rossi mips Anthony Green, Casey Marshall mips64 David Daney moxie Anthony Green nios ii Sandra Loosemore openrisc Sebastian Macke pa Randolph Chung, Dave Anglin, Andreas Tobler powerpc Geoffrey Keating, Andreas Tobler, David Edelsohn, John Hornkvist powerpc64 Jakub Jelinek riscv Michael Knyszek, Andrew Waterman, Stef O'Rear s390 Gerhard Tonn, Ulrich Weigand sh Kaz Kojima sh64 Kaz Kojima sparc Anthony Green, Gordon Irlam tile-gx/tilepro Walter Lee vax Miod Vallat x86 Anthony Green, Jon Beniston x86-64 Bo Thorsen xtensa Chris Zankel Jesper Skov and Andrew Haley both did more than their fair share of stepping through the code and tracking down bugs. Thanks also to Tom Tromey for bug fixes, documentation and configuration help. Thanks to Jim Blandy, who provided some useful feedback on the libffi interface. Andreas Tobler has done a tremendous amount of work on the testsuite. Alex Oliva solved the executable page problem for SElinux. The list above is almost certainly incomplete and inaccurate. I'm happy to make corrections or additions upon request. If you have a problem, or have found a bug, please send a note to the author at green@moxielogic.com, or the project mailing list at libffi-discuss@sourceware.org.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#status","text":"libffi-3.4 was released on TBD. Check the libffi web page for updates: .","title":"Status"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#what-is-libffi","text":"Compilers for high level languages generate code that follow certain conventions. These conventions are necessary, in part, for separate compilation to work. One such convention is the \"calling convention\". The \"calling convention\" is essentially a set of assumptions made by the compiler about where function arguments will be found on entry to a function. A \"calling convention\" also specifies where the return value for a function is found. Some programs may not know at the time of compilation what arguments are to be passed to a function. For instance, an interpreter may be told at run-time about the number and types of arguments used to call a given function. Libffi can be used in such programs to provide a bridge from the interpreter program to compiled code. The libffi library provides a portable, high level programming interface to various calling conventions. This allows a programmer to call any function specified by a call interface description at run time. FFI stands for Foreign Function Interface. A foreign function interface is the popular name for the interface that allows code written in one language to call code written in another language. The libffi library really only provides the lowest, machine dependent layer of a fully featured foreign function interface. A layer must exist above libffi that handles type conversions for values passed between the two languages.","title":"What is libffi?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#supported-platforms","text":"Libffi has been ported to many different platforms. At the time of release, the following basic configurations have been tested: Architecture Operating System Compiler AArch64 (ARM64) iOS Clang AArch64 Linux GCC AArch64 Windows MSVC Alpha Linux GCC Alpha Tru64 GCC ARC Linux GCC ARM Linux GCC ARM iOS GCC ARM Windows MSVC AVR32 Linux GCC Blackfin uClinux GCC CSKY Linux GCC HPPA HPUX GCC KVX Linux GCC IA-64 Linux GCC M68K FreeMiNT GCC M68K Linux GCC M68K RTEMS GCC M88K OpenBSD/mvme88k GCC Meta Linux GCC MicroBlaze Linux GCC MIPS IRIX GCC MIPS Linux GCC MIPS RTEMS GCC MIPS64 Linux GCC Moxie Bare metal GCC Nios II Linux GCC OpenRISC Linux GCC PowerPC 32-bit AIX IBM XL C PowerPC 64-bit AIX IBM XL C PowerPC AMIGA GCC PowerPC Linux GCC PowerPC Mac OSX GCC PowerPC FreeBSD GCC PowerPC 64-bit FreeBSD GCC PowerPC 64-bit Linux ELFv1 GCC PowerPC 64-bit Linux ELFv2 GCC RISC-V 32-bit Linux GCC RISC-V 64-bit Linux GCC S390 Linux GCC S390X Linux GCC SPARC Linux GCC SPARC Solaris GCC SPARC Solaris Oracle Solaris Studio C SPARC64 Linux GCC SPARC64 FreeBSD GCC SPARC64 Solaris Oracle Solaris Studio C TILE-Gx/TILEPro Linux GCC VAX OpenBSD/vax GCC X86 FreeBSD GCC X86 GNU HURD GCC X86 Interix GCC X86 kFreeBSD GCC X86 Linux GCC X86 OpenBSD GCC X86 OS/2 GCC X86 Solaris GCC X86 Solaris Oracle Solaris Studio C X86 Windows/Cygwin GCC X86 Windows/MingW GCC X86-64 FreeBSD GCC X86-64 Linux GCC X86-64 Linux/x32 GCC X86-64 OpenBSD GCC X86-64 Solaris Oracle Solaris Studio C X86-64 Windows/Cygwin GCC X86-64 Windows/MingW GCC X86-64 Mac OSX GCC Xtensa Linux GCC Please send additional platform test results to libffi-discuss@sourceware.org.","title":"Supported Platforms"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#installing-libffi","text":"First you must configure the distribution for your particular system. Go to the directory you wish to build libffi in and run the \"configure\" program found in the root directory of the libffi source distribution. Note that building libffi requires a C99 compatible compiler. If you're building libffi directly from git hosted sources, configure won't exist yet; run ./autogen.sh first. This will require that you install autoconf, automake and libtool. You may want to tell configure where to install the libffi library and header files. To do that, use the --prefix configure switch. Libffi will install under /usr/local by default. If you want to enable extra run-time debugging checks use the the --enable-debug configure switch. This is useful when your program dies mysteriously while using libffi. Another useful configure switch is --enable-purify-safety . Using this will add some extra code which will suppress certain warnings when you are using Purify with libffi. Only use this switch when using Purify, as it will slow down the library. If you don't want to build documentation, use the --disable-docs configure switch. It's also possible to build libffi on Windows platforms with Microsoft's Visual C++ compiler. In this case, use the msvcc.sh wrapper script during configuration like so: path/to/configure CC=path/to/msvcc.sh CXX=path/to/msvcc.sh LD=link CPP=\"cl -nologo -EP\" CPPFLAGS=\"-DFFI_BUILDING_DLL\" For 64-bit Windows builds, use CC=\"path/to/msvcc.sh -m64\" and CXX=\"path/to/msvcc.sh -m64\" . You may also need to specify --build appropriately. It is also possible to build libffi on Windows platforms with the LLVM project's clang-cl compiler, like below: path/to/configure CC=\"path/to/msvcc.sh -clang-cl\" CXX=\"path/to/msvcc.sh -clang-cl\" LD=link CPP=\"clang-cl -EP\" When building with MSVC under a MingW environment, you may need to remove the line in configure that sets 'fix_srcfile_path' to a 'cygpath' command. ('cygpath' is not present in MingW, and is not required when using MingW-style paths.) To build static library for ARM64 with MSVC using visual studio solution, msvc_build folder have aarch64/Ffi_staticLib.sln required header files in aarch64/aarch64_include/ SPARC Solaris builds require the use of the GNU assembler and linker. Point AS and LD environment variables at those tool prior to configuration. For iOS builds, the libffi.xcodeproj Xcode project is available. Configure has many other options. Use configure --help to see them all. Once configure has finished, type \"make\". Note that you must be using GNU make. You can ftp GNU make from ftp.gnu.org:/pub/gnu/make . To ensure that libffi is working as advertised, type \"make check\". This will require that you have DejaGNU installed. To install the library and header files, type make install .","title":"Installing libffi"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#history","text":"See the git log for details at http://github.com/libffi/libffi. 3.4 TBD Add support for Alibaba's CSKY architecture. Add support for Intel Control-flow Enforcement Technology (CET). Add support for ARM Pointer Authentication (PA). Fix 32-bit PPC regression. Fix MIPS soft-float problem. 3.3 Nov-23-19 Add RISC-V support. New API in support of GO closures. Add IEEE754 binary128 long double support for 64-bit Power Default to Microsoft's 64 bit long double ABI with Visual C++. GNU compiler uses 80 bits (128 in memory) FFI_GNUW64 ABI. Add Windows on ARM64 (WOA) support. Add Windows 32-bit ARM support. Raw java (gcj) API deprecated. Add pre-built PDF documentation to source distribution. Many new test cases and bug fixes. 3.2.1 Nov-12-14 Build fix for non-iOS AArch64 targets. 3.2 Nov-11-14 Add C99 Complex Type support (currently only supported on s390). Add support for PASCAL and REGISTER calling conventions on x86 Windows/Linux. Add OpenRISC and Cygwin-64 support. Bug fixes. 3.1 May-19-14 Add AArch64 (ARM64) iOS support. Add Nios II support. Add m88k and DEC VAX support. Add support for stdcall, thiscall, and fastcall on non-Windows 32-bit x86 targets such as Linux. Various Android, MIPS N32, x86, FreeBSD and UltraSPARC IIi fixes. Make the testsuite more robust: eliminate several spurious failures, and respect the $CC and $CXX environment variables. Archive off the manually maintained ChangeLog in favor of git log. 3.0.13 Mar-17-13 Add Meta support. Add missing Moxie bits. Fix stack alignment bug on 32-bit x86. Build fix for m68000 targets. Build fix for soft-float Power targets. Fix the install dir location for some platforms when building with GCC (OS X, Solaris). Fix Cygwin regression. 3.0.12 Feb-11-13 Add Moxie support. Add AArch64 support. Add Blackfin support. Add TILE-Gx/TILEPro support. Add MicroBlaze support. Add Xtensa support. Add support for PaX enabled kernels with MPROTECT. Add support for native vendor compilers on Solaris and AIX. Work around LLVM/GCC interoperability issue on x86_64. 3.0.11 Apr-11-12 Lots of build fixes. Add support for variadic functions (ffi_prep_cif_var). Add Linux/x32 support. Add thiscall, fastcall and MSVC cdecl support on Windows. Add Amiga and newer MacOS support. Add m68k FreeMiNT support. Integration with iOS' xcode build tools. Fix Octeon and MC68881 support. Fix code pessimizations. 3.0.10 Aug-23-11 Add support for Apple's iOS. Add support for ARM VFP ABI. Add RTEMS support for MIPS and M68K. Fix instruction cache clearing problems on ARM and SPARC. Fix the N64 build on mips-sgi-irix6.5. Enable builds with Microsoft's compiler. Enable x86 builds with Oracle's Solaris compiler. Fix support for calling code compiled with Oracle's Sparc Solaris compiler. Testsuite fixes for Tru64 Unix. Additional platform support. 3.0.9 Dec-31-09 Add AVR32 and win64 ports. Add ARM softfp support. Many fixes for AIX, Solaris, HP-UX, *BSD. Several PowerPC and x86-64 bug fixes. Build DLL for windows. 3.0.8 Dec-19-08 Add *BSD, BeOS, and PA-Linux support. 3.0.7 Nov-11-08 Fix for ppc FreeBSD. (thanks to Andreas Tobler) 3.0.6 Jul-17-08 Fix for closures on sh. Mark the sh/sh64 stack as non-executable. (both thanks to Kaz Kojima) 3.0.5 Apr-3-08 Fix libffi.pc file. Fix #define ARM for IcedTea users. Fix x86 closure bug. 3.0.4 Feb-24-08 Fix x86 OpenBSD configury. 3.0.3 Feb-22-08 Enable x86 OpenBSD thanks to Thomas Heller, and x86-64 FreeBSD thanks to Bj\u00f6rn K\u00f6nig and Andreas Tobler. Clean up test instruction in README. 3.0.2 Feb-21-08 Improved x86 FreeBSD support. Thanks to Bj\u00f6rn K\u00f6nig. 3.0.1 Feb-15-08 Fix instruction cache flushing bug on MIPS. Thanks to David Daney. 3.0.0 Feb-15-08 Many changes, mostly thanks to the GCC project. Cygnus Solutions is now Red Hat. [10 years go by...] 1.20 Oct-5-98 Raffaele Sena produces ARM port. 1.19 Oct-5-98 Fixed x86 long double and long long return support. m68k bug fixes from Andreas Schwab. Patch for DU assembler compatibility for the Alpha from Richard Henderson. 1.18 Apr-17-98 Bug fixes and MIPS configuration changes. 1.17 Feb-24-98 Bug fixes and m68k port from Andreas Schwab. PowerPC port from Geoffrey Keating. Various bug x86, Sparc and MIPS bug fixes. 1.16 Feb-11-98 Richard Henderson produces Alpha port. 1.15 Dec-4-97 Fixed an n32 ABI bug. New libtool, auto* support. 1.14 May-13-97 libtool is now used to generate shared and static libraries. Fixed a minor portability problem reported by Russ McManus <mcmanr@eq.gs.com>. 1.13 Dec-2-96 Added --enable-purify-safety to keep Purify from complaining about certain low level code. Sparc fix for calling functions with < 6 args. Linux x86 a.out fix. 1.12 Nov-22-96 Added missing ffi_type_void, needed for supporting void return types. Fixed test case for non MIPS machines. Cygnus Support is now Cygnus Solutions. 1.11 Oct-30-96 Added notes about GNU make. 1.10 Oct-29-96 Added configuration fix for non GNU compilers. 1.09 Oct-29-96 Added --enable-debug configure switch. Clean-ups based on LCLint feedback. ffi_mips.h is always installed. Many configuration fixes. Fixed ffitest.c for sparc builds. 1.08 Oct-15-96 Fixed n32 problem. Many clean-ups. 1.07 Oct-14-96 Gordon Irlam rewrites v8.S again. Bug fixes. 1.06 Oct-14-96 Gordon Irlam improved the sparc port. 1.05 Oct-14-96 Interface changes based on feedback. 1.04 Oct-11-96 Sparc port complete (modulo struct passing bug). 1.03 Oct-10-96 Passing struct args, and returning struct values works for all architectures/calling conventions. Expanded tests. 1.02 Oct-9-96 Added SGI n32 support. Fixed bugs in both o32 and Linux support. Added \"make test\". 1.01 Oct-8-96 Fixed float passing bug in mips version. Restructured some of the code. Builds cleanly with SGI tools. 1.00 Oct-7-96 First release. No public announcement.","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.15.5/ext/ffi_c/libffi/#authors-credits","text":"libffi was originally written by Anthony Green green@moxielogic.com . The developers of the GNU Compiler Collection project have made innumerable valuable contributions. See the ChangeLog file for details. Some of the ideas behind libffi were inspired by Gianni Mariani's free gencall library for Silicon Graphics machines. The closure mechanism was designed and implemented by Kresten Krab Thorup. Major processor architecture ports were contributed by the following developers: aarch64 Marcus Shawcroft, James Greenhalgh alpha Richard Henderson arc Hackers at Synopsis arm Raffaele Sena avr32 Bradley Smith blackfin Alexandre Keunecke I. de Mendonca cris Simon Posnjak, Hans-Peter Nilsson csky Ma Jun, Zhang Wenmeng frv Anthony Green ia64 Hans Boehm m32r Kazuhiro Inaoka m68k Andreas Schwab m88k Miod Vallat metag Hackers at Imagination Technologies microblaze Nathan Rossi mips Anthony Green, Casey Marshall mips64 David Daney moxie Anthony Green nios ii Sandra Loosemore openrisc Sebastian Macke pa Randolph Chung, Dave Anglin, Andreas Tobler powerpc Geoffrey Keating, Andreas Tobler, David Edelsohn, John Hornkvist powerpc64 Jakub Jelinek riscv Michael Knyszek, Andrew Waterman, Stef O'Rear s390 Gerhard Tonn, Ulrich Weigand sh Kaz Kojima sh64 Kaz Kojima sparc Anthony Green, Gordon Irlam tile-gx/tilepro Walter Lee vax Miod Vallat x86 Anthony Green, Jon Beniston x86-64 Bo Thorsen xtensa Chris Zankel Jesper Skov and Andrew Haley both did more than their fair share of stepping through the code and tracking down bugs. Thanks also to Tom Tromey for bug fixes, documentation and configuration help. Thanks to Jim Blandy, who provided some useful feedback on the libffi interface. Andreas Tobler has done a tremendous amount of work on the testsuite. Alex Oliva solved the executable page problem for SElinux. The list above is almost certainly incomplete and inaccurate. I'm happy to make corrections or additions upon request. If you have a problem, or have found a bug, please send a note to the author at green@moxielogic.com, or the project mailing list at libffi-discuss@sourceware.org.","title":"Authors &amp; Credits"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/","text":"ruby-ffi https://wiki.github.com/ffi/ffi Description Ruby-FFI is a ruby extension for programmatically loading dynamic libraries, binding functions within them, and calling those functions from Ruby code. Moreover, a Ruby-FFI extension works without changes on Ruby and JRuby. Discover why you should write your next extension using Ruby-FFI . Features/problems Intuitive DSL Supports all C native types C structs (also nested), enums and global variables Callbacks from C to ruby Automatic garbage collection of native memory Synopsis require 'ffi' module MyLib extend FFI::Library ffi_lib 'c' attach_function :puts, [ :string ], :int end MyLib.puts 'Hello, World using libc!' For less minimalistic and more sane examples you may look at: the samples/ folder the examples on the wiki the projects using FFI listed on this page (https://wiki.github.com/ffi/ffi/projects-using-ffi) Requirements You need a sane building environment in order to compile the extension. At a minimum, you will need: * A C compiler (e.g. Xcode on OSX, gcc on everything else) * libffi development library - this is commonly in the libffi-dev or libffi-devel Installation From rubygems: [sudo] gem install ffi or from the git repository on github: git clone git://github.com/ffi/ffi.git cd ffi rake gem:install License The ffi library is covered by the BSD license, also see the LICENSE file. The specs are shared with Rubyspec and are licensed by the same license as Rubyspec, see the LICENSE.SPECS file. Credits The following people have submitted code, bug reports, or otherwise contributed to the success of this project: Alban Peignier alban.peignier@free.fr Aman Gupta aman@tmm1.net Andrea Fazzi andrea.fazzi@alcacoop.it Andreas Niederl rico32@gmx.net Andrew Cholakian andrew@andrewvc.com Antonio Terceiro terceiro@softwarelivre.org Brian Candler B.Candler@pobox.com Brian D. Burns burns180@gmail.com Bryan Kearney bkearney@redhat.com Charlie Savage cfis@zerista.com Chikanaga Tomoyuki nagachika00@gmail.com Hongli Lai hongli@phusion.nl Ian MacLeod ian@nevir.net Jake Douglas jake@shiftedlabs.com Jean-Dominique Morani jdmorani@mac.com Jeremy Hinegardner jeremy@hinegardner.org Jes\u00fas Garc\u00eda S\u00e1ez blaxter@gmail.com Joe Khoobyar joe@ankhcraft.com Jurij Smakov jurij@wooyd.org KISHIMOTO, Makoto ksmakoto@dd.iij4u.or.jp Kim Burgestrand kim@burgestrand.se Lars Kanis kanis@comcard.de Luc Heinrich luc@honk-honk.com Luis Lavena luislavena@gmail.com Matijs van Zuijlen matijs@matijs.net Matthew King automatthew@gmail.com Mike Dalessio mike.dalessio@gmail.com NARUSE, Yui naruse@airemix.jp Park Heesob phasis@gmail.com Shin Yee shinyee@speedgocomputing.com Stephen Bannasch stephen.bannasch@gmail.com Suraj N. Kurapati sunaku@gmail.com Sylvain Daubert sylvain.daubert@laposte.net Victor Costan beoran@gmail.com ctide christide@christide.com emboss Martin.Bosslet@googlemail.com hobophobe unusualtears@gmail.com meh meh@paranoici.org postmodern postmodern.mod3@gmail.com wycats@gmail.com wycats@gmail.com Wayne Meissner wmeissner@gmail.com","title":"ruby-ffi https://wiki.github.com/ffi/ffi [![Build Status](https://travis-ci.org/ffi/ffi.png?branch=master)](https://travis-ci.org/ffi/ffi)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#ruby-ffi-httpswikigithubcomffiffi","text":"","title":"ruby-ffi https://wiki.github.com/ffi/ffi"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#description","text":"Ruby-FFI is a ruby extension for programmatically loading dynamic libraries, binding functions within them, and calling those functions from Ruby code. Moreover, a Ruby-FFI extension works without changes on Ruby and JRuby. Discover why you should write your next extension using Ruby-FFI .","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#featuresproblems","text":"Intuitive DSL Supports all C native types C structs (also nested), enums and global variables Callbacks from C to ruby Automatic garbage collection of native memory","title":"Features/problems"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#synopsis","text":"require 'ffi' module MyLib extend FFI::Library ffi_lib 'c' attach_function :puts, [ :string ], :int end MyLib.puts 'Hello, World using libc!' For less minimalistic and more sane examples you may look at: the samples/ folder the examples on the wiki the projects using FFI listed on this page (https://wiki.github.com/ffi/ffi/projects-using-ffi)","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#requirements","text":"You need a sane building environment in order to compile the extension. At a minimum, you will need: * A C compiler (e.g. Xcode on OSX, gcc on everything else) * libffi development library - this is commonly in the libffi-dev or libffi-devel","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#installation","text":"From rubygems: [sudo] gem install ffi or from the git repository on github: git clone git://github.com/ffi/ffi.git cd ffi rake gem:install","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#license","text":"The ffi library is covered by the BSD license, also see the LICENSE file. The specs are shared with Rubyspec and are licensed by the same license as Rubyspec, see the LICENSE.SPECS file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ffi-1.9.14/#credits","text":"The following people have submitted code, bug reports, or otherwise contributed to the success of this project: Alban Peignier alban.peignier@free.fr Aman Gupta aman@tmm1.net Andrea Fazzi andrea.fazzi@alcacoop.it Andreas Niederl rico32@gmx.net Andrew Cholakian andrew@andrewvc.com Antonio Terceiro terceiro@softwarelivre.org Brian Candler B.Candler@pobox.com Brian D. Burns burns180@gmail.com Bryan Kearney bkearney@redhat.com Charlie Savage cfis@zerista.com Chikanaga Tomoyuki nagachika00@gmail.com Hongli Lai hongli@phusion.nl Ian MacLeod ian@nevir.net Jake Douglas jake@shiftedlabs.com Jean-Dominique Morani jdmorani@mac.com Jeremy Hinegardner jeremy@hinegardner.org Jes\u00fas Garc\u00eda S\u00e1ez blaxter@gmail.com Joe Khoobyar joe@ankhcraft.com Jurij Smakov jurij@wooyd.org KISHIMOTO, Makoto ksmakoto@dd.iij4u.or.jp Kim Burgestrand kim@burgestrand.se Lars Kanis kanis@comcard.de Luc Heinrich luc@honk-honk.com Luis Lavena luislavena@gmail.com Matijs van Zuijlen matijs@matijs.net Matthew King automatthew@gmail.com Mike Dalessio mike.dalessio@gmail.com NARUSE, Yui naruse@airemix.jp Park Heesob phasis@gmail.com Shin Yee shinyee@speedgocomputing.com Stephen Bannasch stephen.bannasch@gmail.com Suraj N. Kurapati sunaku@gmail.com Sylvain Daubert sylvain.daubert@laposte.net Victor Costan beoran@gmail.com ctide christide@christide.com emboss Martin.Bosslet@googlemail.com hobophobe unusualtears@gmail.com meh meh@paranoici.org postmodern postmodern.mod3@gmail.com wycats@gmail.com wycats@gmail.com Wayne Meissner wmeissner@gmail.com","title":"Credits"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/","text":"gemoji Emoji images and names. See the LICENSE for copyright information. Installation Add gemoji to your Gemfile. gem 'gemoji' Sync images Images can be copied to your public directory with rake emoji in your app. This is the recommended approach since the images will be available at a consistent location. This works best with cached formatted user content generated by tools like html-pipeline . # Rakefile load 'tasks/emoji.rake' $ rake emoji Assets Precompiling If you must, you can manually add all the images to your asset load path. # config/application.rb config.assets.paths << Emoji.images_path Then have them compiled to public on deploy. # config/application.rb config.assets.precompile << \"emoji/**/*.png\" WARNING Since there are a ton of images, just adding the path may slow down other lookups if you aren't using it. Compiling all the emojis on deploy will add overhead to your deploy if even the images haven't changed. Theres just so many more superfluous files to iterate over. Also, the urls will be fingerprinted which may not be ideal for referencing from cached content. Example Rails Helper This would allow emojifying content such as: it's raining :cat:s and :dog:s! See the Emoji cheat sheet for more examples. module EmojiHelper def emojify(content) h(content).to_str.gsub(/:([\\w+-]+):/) do |match| if emoji = Emoji.find_by_alias($1) %(<img alt=\"#$1\" src=\"#{asset_path(\"emoji/#{emoji.image_filename}\")}\" style=\"vertical-align:middle\" width=\"20\" height=\"20\" />) else match end end.html_safe if content.present? end end Unicode mapping Translate emoji names to unicode and vice versa. >> Emoji.find_by_alias(\"cat\").raw => \"\ud83d\udc31\" # Don't see a cat? That's U+1F431. >> Emoji.find_by_unicode(\"\\u{1f431}\").name => \"cat\" Adding new emoji You can add new emoji characters to the Emoji.all list: emoji = Emoji.create(\"music\") do |char| char.add_alias \"song\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end emoji.name #=> \"music\" emoji.raw #=> \"\u266b\" emoji.image_filename #=> \"unicode/266b.png\" # Creating custom emoji (no Unicode aliases): emoji = Emoji.create(\"music\") do |char| char.add_tag \"notes\" end emoji.custom? #=> true emoji.image_filename #=> \"music.png\" As you create new emoji, you must ensure that you also create and put the images they reference by their image_filename to your assets directory. For existing emojis, you can edit the list of aliases or add new tags in an edit block: emoji = Emoji.find_by_alias \"musical_note\" Emoji.edit_emoji(emoji) do |char| char.add_alias \"music\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end Emoji.find_by_alias \"music\" #=> emoji Emoji.find_by_unicode \"\\u{266b}\" #=> emoji","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/#gemoji","text":"Emoji images and names. See the LICENSE for copyright information.","title":"gemoji"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/#installation","text":"Add gemoji to your Gemfile. gem 'gemoji' Sync images Images can be copied to your public directory with rake emoji in your app. This is the recommended approach since the images will be available at a consistent location. This works best with cached formatted user content generated by tools like html-pipeline . # Rakefile load 'tasks/emoji.rake' $ rake emoji Assets Precompiling If you must, you can manually add all the images to your asset load path. # config/application.rb config.assets.paths << Emoji.images_path Then have them compiled to public on deploy. # config/application.rb config.assets.precompile << \"emoji/**/*.png\" WARNING Since there are a ton of images, just adding the path may slow down other lookups if you aren't using it. Compiling all the emojis on deploy will add overhead to your deploy if even the images haven't changed. Theres just so many more superfluous files to iterate over. Also, the urls will be fingerprinted which may not be ideal for referencing from cached content.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/#example-rails-helper","text":"This would allow emojifying content such as: it's raining :cat:s and :dog:s! See the Emoji cheat sheet for more examples. module EmojiHelper def emojify(content) h(content).to_str.gsub(/:([\\w+-]+):/) do |match| if emoji = Emoji.find_by_alias($1) %(<img alt=\"#$1\" src=\"#{asset_path(\"emoji/#{emoji.image_filename}\")}\" style=\"vertical-align:middle\" width=\"20\" height=\"20\" />) else match end end.html_safe if content.present? end end","title":"Example Rails Helper"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/#unicode-mapping","text":"Translate emoji names to unicode and vice versa. >> Emoji.find_by_alias(\"cat\").raw => \"\ud83d\udc31\" # Don't see a cat? That's U+1F431. >> Emoji.find_by_unicode(\"\\u{1f431}\").name => \"cat\"","title":"Unicode mapping"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-2.1.0/#adding-new-emoji","text":"You can add new emoji characters to the Emoji.all list: emoji = Emoji.create(\"music\") do |char| char.add_alias \"song\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end emoji.name #=> \"music\" emoji.raw #=> \"\u266b\" emoji.image_filename #=> \"unicode/266b.png\" # Creating custom emoji (no Unicode aliases): emoji = Emoji.create(\"music\") do |char| char.add_tag \"notes\" end emoji.custom? #=> true emoji.image_filename #=> \"music.png\" As you create new emoji, you must ensure that you also create and put the images they reference by their image_filename to your assets directory. For existing emojis, you can edit the list of aliases or add new tags in an edit block: emoji = Emoji.find_by_alias \"musical_note\" Emoji.edit_emoji(emoji) do |char| char.add_alias \"music\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end Emoji.find_by_alias \"music\" #=> emoji Emoji.find_by_unicode \"\\u{266b}\" #=> emoji","title":"Adding new emoji"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/","text":"gemoji This library contains character information about native emoji, as well as image files for a few custom emoji. Installation Add gemoji to your Gemfile. gem 'gemoji' Extract images To obtain image files as fallbacks for browsers and OS's that don't support emoji, run the gemoji extract command on macOS Sierra or later : bundle exec gemoji extract public/images/emoji This will extract images into filenames such as: public/images/emoji/octocat.png public/images/emoji/unicode/1f9c0.png (the :cheese: emoji) Example Rails Helper This would allow emojifying content such as: it's raining :cat:s and :dog:s! See the Emoji cheat sheet for more examples. module EmojiHelper def emojify(content) h(content).to_str.gsub(/:([\\w+-]+):/) do |match| if emoji = Emoji.find_by_alias($1) %(<img alt=\"#$1\" src=\"#{image_path(\"emoji/#{emoji.image_filename}\")}\" style=\"vertical-align:middle\" width=\"20\" height=\"20\" />) else match end end.html_safe if content.present? end end Unicode mapping Translate emoji names to unicode and vice versa. >> Emoji.find_by_alias(\"cat\").raw => \"\ud83d\udc31\" # Don't see a cat? That's U+1F431. >> Emoji.find_by_unicode(\"\\u{1f431}\").name => \"cat\" Adding new emoji You can add new emoji characters to the Emoji.all list: emoji = Emoji.create(\"music\") do |char| char.add_alias \"song\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end emoji.name #=> \"music\" emoji.raw #=> \"\u266b\" emoji.image_filename #=> \"unicode/266b.png\" # Creating custom emoji (no Unicode aliases): emoji = Emoji.create(\"music\") do |char| char.add_tag \"notes\" end emoji.custom? #=> true emoji.image_filename #=> \"music.png\" As you create new emoji, you must ensure that you also create and put the images they reference by their image_filename to your assets directory. You can customize image_filename with: emoji = Emoji.create(\"music\") do |char| char.image_filename = \"subdirectory/my_emoji.gif\" end For existing emojis, you can edit the list of aliases or add new tags in an edit block: emoji = Emoji.find_by_alias \"musical_note\" Emoji.edit_emoji(emoji) do |char| char.add_alias \"music\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end Emoji.find_by_alias \"music\" #=> emoji Emoji.find_by_unicode \"\\u{266b}\" #=> emoji","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#gemoji","text":"This library contains character information about native emoji, as well as image files for a few custom emoji.","title":"gemoji"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#installation","text":"Add gemoji to your Gemfile. gem 'gemoji'","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#extract-images","text":"To obtain image files as fallbacks for browsers and OS's that don't support emoji, run the gemoji extract command on macOS Sierra or later : bundle exec gemoji extract public/images/emoji This will extract images into filenames such as: public/images/emoji/octocat.png public/images/emoji/unicode/1f9c0.png (the :cheese: emoji)","title":"Extract images"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#example-rails-helper","text":"This would allow emojifying content such as: it's raining :cat:s and :dog:s! See the Emoji cheat sheet for more examples. module EmojiHelper def emojify(content) h(content).to_str.gsub(/:([\\w+-]+):/) do |match| if emoji = Emoji.find_by_alias($1) %(<img alt=\"#$1\" src=\"#{image_path(\"emoji/#{emoji.image_filename}\")}\" style=\"vertical-align:middle\" width=\"20\" height=\"20\" />) else match end end.html_safe if content.present? end end","title":"Example Rails Helper"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#unicode-mapping","text":"Translate emoji names to unicode and vice versa. >> Emoji.find_by_alias(\"cat\").raw => \"\ud83d\udc31\" # Don't see a cat? That's U+1F431. >> Emoji.find_by_unicode(\"\\u{1f431}\").name => \"cat\"","title":"Unicode mapping"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/gemoji-3.0.1/#adding-new-emoji","text":"You can add new emoji characters to the Emoji.all list: emoji = Emoji.create(\"music\") do |char| char.add_alias \"song\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end emoji.name #=> \"music\" emoji.raw #=> \"\u266b\" emoji.image_filename #=> \"unicode/266b.png\" # Creating custom emoji (no Unicode aliases): emoji = Emoji.create(\"music\") do |char| char.add_tag \"notes\" end emoji.custom? #=> true emoji.image_filename #=> \"music.png\" As you create new emoji, you must ensure that you also create and put the images they reference by their image_filename to your assets directory. You can customize image_filename with: emoji = Emoji.create(\"music\") do |char| char.image_filename = \"subdirectory/my_emoji.gif\" end For existing emojis, you can edit the list of aliases or add new tags in an edit block: emoji = Emoji.find_by_alias \"musical_note\" Emoji.edit_emoji(emoji) do |char| char.add_alias \"music\" char.add_unicode_alias \"\\u{266b}\" char.add_tag \"notes\" end Emoji.find_by_alias \"music\" #=> emoji Emoji.find_by_unicode \"\\u{266b}\" #=> emoji","title":"Adding new emoji"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/","text":"GitHub Pages Health Check Checks your GitHub Pages site for common DNS configuration issues Installation gem install github-pages-health-check Usage Basic Usage > check = GitHubPages::HealthCheck::Site.new(\"choosealicense.com\") => #<GitHubPages::HealthCheck::Site @domain=\"choosealicense.com\" valid?=true> > check.valid? => true An invalid domain > check = GitHubPages::HealthCheck::Site.new(\"foo.github.com\") > check.valid? => false > check.valid! raises GitHubPages::HealthCheck::Errors::InvalidCNAMEError Retrieving specific checks > check.domain.should_be_a_record? => true > check.domain.a_record? => true Getting checks in bulk > check.to_hash => { :cloudflare_ip?=>false, :old_ip_address?=>false, :a_record?=>true, :cname_record?=>false, :valid_domain?=>true, :apex_domain?=>true, :should_be_a_record?=>true, :pointed_to_github_user_domain?=>false, :pointed_to_github_pages_ip?=>false, :pages_domain?=>false, :valid?=>true } > check.to_json => \"{\\\"cloudflare_ip?\\\":false,\\\"old_ip_address?\\\":false,\\\"a_record?\\\":true,\\\"cname_record?\\\":false,\\\"valid_domain?\\\":true,\\\"apex_domain?\\\":true,\\\"should_be_a_record?\\\":true,\\\"pointed_to_github_user_domain?\\\":false,\\\"pointed_to_github_pages_ip?\\\":false,\\\"pages_domain?\\\":false,\\\"valid?\\\":true}\" Getting the reason a domain is invalid > check = GitHubPages::HealthCheck::Site.new \"developer.facebook.com\" > check.valid? => false > check.reason => #<GitHubPages::HealthCheck::InvalidCNAME> > check.reason.message => \"CNAME does not point to GitHub Pages\" Repository checks Repository checks require a personal access or OAuth token with repo or scope. This can be passed as the second argument to the Site or Repository constructors like so: check = GitHubPages::HealthCheck::Site.new \"github/pages-health-check\", access_token: \"1234 You can also set OCTOKIT_ACCESS_TOKEN as an environmental variable, or via a .env file in your working directory.","title":"GitHub Pages Health Check"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#github-pages-health-check","text":"Checks your GitHub Pages site for common DNS configuration issues","title":"GitHub Pages Health Check"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#installation","text":"gem install github-pages-health-check","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#basic-usage","text":"> check = GitHubPages::HealthCheck::Site.new(\"choosealicense.com\") => #<GitHubPages::HealthCheck::Site @domain=\"choosealicense.com\" valid?=true> > check.valid? => true","title":"Basic Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#an-invalid-domain","text":"> check = GitHubPages::HealthCheck::Site.new(\"foo.github.com\") > check.valid? => false > check.valid! raises GitHubPages::HealthCheck::Errors::InvalidCNAMEError","title":"An invalid domain"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#retrieving-specific-checks","text":"> check.domain.should_be_a_record? => true > check.domain.a_record? => true","title":"Retrieving specific checks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#getting-checks-in-bulk","text":"> check.to_hash => { :cloudflare_ip?=>false, :old_ip_address?=>false, :a_record?=>true, :cname_record?=>false, :valid_domain?=>true, :apex_domain?=>true, :should_be_a_record?=>true, :pointed_to_github_user_domain?=>false, :pointed_to_github_pages_ip?=>false, :pages_domain?=>false, :valid?=>true } > check.to_json => \"{\\\"cloudflare_ip?\\\":false,\\\"old_ip_address?\\\":false,\\\"a_record?\\\":true,\\\"cname_record?\\\":false,\\\"valid_domain?\\\":true,\\\"apex_domain?\\\":true,\\\"should_be_a_record?\\\":true,\\\"pointed_to_github_user_domain?\\\":false,\\\"pointed_to_github_pages_ip?\\\":false,\\\"pages_domain?\\\":false,\\\"valid?\\\":true}\"","title":"Getting checks in bulk"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#getting-the-reason-a-domain-is-invalid","text":"> check = GitHubPages::HealthCheck::Site.new \"developer.facebook.com\" > check.valid? => false > check.reason => #<GitHubPages::HealthCheck::InvalidCNAME> > check.reason.message => \"CNAME does not point to GitHub Pages\"","title":"Getting the reason a domain is invalid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/#repository-checks","text":"Repository checks require a personal access or OAuth token with repo or scope. This can be passed as the second argument to the Site or Repository constructors like so: check = GitHubPages::HealthCheck::Site.new \"github/pages-health-check\", access_token: \"1234 You can also set OCTOKIT_ACCESS_TOKEN as an environmental variable, or via a .env file in your working directory.","title":"Repository checks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.1.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2014 GitHub, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/","text":"GitHub Pages Health Check Checks your GitHub Pages site for common DNS configuration issues Installation gem install github-pages-health-check Usage Basic Usage > check = GitHubPages::HealthCheck::Site.new(\"choosealicense.com\") => #<GitHubPages::HealthCheck::Site @domain=\"choosealicense.com\" valid?=true> > check.valid? => true An invalid domain > check = GitHubPages::HealthCheck::Site.new(\"foo.github.com\") > check.valid? => false > check.valid! raises GitHubPages::HealthCheck::Errors::InvalidCNAMEError Retrieving specific checks > check.domain.should_be_a_record? => true > check.domain.a_record? => true Getting checks in bulk > check.to_hash => { :cloudflare_ip?=>false, :old_ip_address?=>false, :a_record?=>true, :cname_record?=>false, :valid_domain?=>true, :apex_domain?=>true, :should_be_a_record?=>true, :pointed_to_github_user_domain?=>false, :pointed_to_github_pages_ip?=>false, :pages_domain?=>false, :valid?=>true } > check.to_json => \"{\\\"cloudflare_ip?\\\":false,\\\"old_ip_address?\\\":false,\\\"a_record?\\\":true,\\\"cname_record?\\\":false,\\\"valid_domain?\\\":true,\\\"apex_domain?\\\":true,\\\"should_be_a_record?\\\":true,\\\"pointed_to_github_user_domain?\\\":false,\\\"pointed_to_github_pages_ip?\\\":false,\\\"pages_domain?\\\":false,\\\"valid?\\\":true}\" Getting the reason a domain is invalid > check = GitHubPages::HealthCheck::Site.new \"developer.facebook.com\" > check.valid? => false > check.reason => #<GitHubPages::HealthCheck::InvalidCNAME> > check.reason.message => \"CNAME does not point to GitHub Pages\" Repository checks Repository checks require a personal access or OAuth token with repo or scope. This can be passed as the second argument to the Site or Repository constructors like so: check = GitHubPages::HealthCheck::Site.new \"github/pages-health-check\", access_token: \"1234 You can also set OCTOKIT_ACCESS_TOKEN as an environmental variable, or via a .env file in your working directory. Command Line ./script/check pages.github.com host: pages.github.com uri: https://pages.github.com/ nameservers: :default dns_resolves?: true proxied?: false cloudflare_ip?: false fastly_ip?: false old_ip_address?: false a_record?: false cname_record?: true mx_records_present?: false valid_domain?: true apex_domain?: false should_be_a_record?: false cname_to_github_user_domain?: true cname_to_pages_dot_github_dot_com?: false cname_to_fastly?: false pointed_to_github_pages_ip?: false non_github_pages_ip_present?: false pages_domain?: true served_by_pages?: true valid?: true reason: https?: true enforces_https?: true https_error: https_eligible?: true caa_error: dns_zone_soa?: false dns_zone_ns?: false","title":"GitHub Pages Health Check"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#github-pages-health-check","text":"Checks your GitHub Pages site for common DNS configuration issues","title":"GitHub Pages Health Check"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#installation","text":"gem install github-pages-health-check","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#basic-usage","text":"> check = GitHubPages::HealthCheck::Site.new(\"choosealicense.com\") => #<GitHubPages::HealthCheck::Site @domain=\"choosealicense.com\" valid?=true> > check.valid? => true","title":"Basic Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#an-invalid-domain","text":"> check = GitHubPages::HealthCheck::Site.new(\"foo.github.com\") > check.valid? => false > check.valid! raises GitHubPages::HealthCheck::Errors::InvalidCNAMEError","title":"An invalid domain"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#retrieving-specific-checks","text":"> check.domain.should_be_a_record? => true > check.domain.a_record? => true","title":"Retrieving specific checks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#getting-checks-in-bulk","text":"> check.to_hash => { :cloudflare_ip?=>false, :old_ip_address?=>false, :a_record?=>true, :cname_record?=>false, :valid_domain?=>true, :apex_domain?=>true, :should_be_a_record?=>true, :pointed_to_github_user_domain?=>false, :pointed_to_github_pages_ip?=>false, :pages_domain?=>false, :valid?=>true } > check.to_json => \"{\\\"cloudflare_ip?\\\":false,\\\"old_ip_address?\\\":false,\\\"a_record?\\\":true,\\\"cname_record?\\\":false,\\\"valid_domain?\\\":true,\\\"apex_domain?\\\":true,\\\"should_be_a_record?\\\":true,\\\"pointed_to_github_user_domain?\\\":false,\\\"pointed_to_github_pages_ip?\\\":false,\\\"pages_domain?\\\":false,\\\"valid?\\\":true}\"","title":"Getting checks in bulk"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#getting-the-reason-a-domain-is-invalid","text":"> check = GitHubPages::HealthCheck::Site.new \"developer.facebook.com\" > check.valid? => false > check.reason => #<GitHubPages::HealthCheck::InvalidCNAME> > check.reason.message => \"CNAME does not point to GitHub Pages\"","title":"Getting the reason a domain is invalid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#repository-checks","text":"Repository checks require a personal access or OAuth token with repo or scope. This can be passed as the second argument to the Site or Repository constructors like so: check = GitHubPages::HealthCheck::Site.new \"github/pages-health-check\", access_token: \"1234 You can also set OCTOKIT_ACCESS_TOKEN as an environmental variable, or via a .env file in your working directory.","title":"Repository checks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/#command-line","text":"./script/check pages.github.com host: pages.github.com uri: https://pages.github.com/ nameservers: :default dns_resolves?: true proxied?: false cloudflare_ip?: false fastly_ip?: false old_ip_address?: false a_record?: false cname_record?: true mx_records_present?: false valid_domain?: true apex_domain?: false should_be_a_record?: false cname_to_github_user_domain?: true cname_to_pages_dot_github_dot_com?: false cname_to_fastly?: false pointed_to_github_pages_ip?: false non_github_pages_ip_present?: false pages_domain?: true served_by_pages?: true valid?: true reason: https?: true enforces_https?: true https_error: https_eligible?: true caa_error: dns_zone_soa?: false dns_zone_ns?: false","title":"Command Line"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/github-pages-health-check-1.17.9/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2014 - 2017 GitHub, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/","text":"HTML::Pipeline HTML processing filters and utilities. This module includes a small framework for defining DOM based content filters and applying them to user provided content. This project was started at GitHub . While GitHub still uses a similar design and pattern for rendering content, this gem should be considered standalone and independent from GitHub. Installation Usage Examples Filters Dependencies Documentation Extending 3rd Party Extensions Instrumenting Contributing Contributors Releasing A New Version Installation Add this line to your application's Gemfile: gem 'html-pipeline' And then execute: $ bundle Or install it by yourself as: $ gem install html-pipeline Usage This library provides a handful of chainable HTML filters to transform user content into markup. A filter takes an HTML string or Nokogiri::HTML::DocumentFragment , optionally manipulates it, and then outputs the result. For example, to transform Markdown source into Markdown HTML: require 'html/pipeline' filter = HTML::Pipeline::MarkdownFilter.new(\"Hi **world**!\") filter.call Filters can be combined into a pipeline which causes each filter to hand its output to the next filter's input. So if you wanted to have content be filtered through Markdown and be syntax highlighted, you can create the following pipeline: pipeline = HTML::Pipeline.new [ HTML::Pipeline::MarkdownFilter, HTML::Pipeline::SyntaxHighlightFilter ] result = pipeline.call <<-CODE This is *great*: some_code(:first) CODE result[:output].to_s Prints: <p>This is <em>great</em>:</p> <pre><code>some_code(:first) </code></pre> To generate CSS for HTML formatted code, use the Rouge CSS Theme #css method. rouge is a dependency of the SyntaxHighlightFilter . Some filters take an optional context and/or result hash. These are used to pass around arguments and metadata between filters in a pipeline. For example, if you don't want to use GitHub formatted Markdown, you can pass an option in the context hash: filter = HTML::Pipeline::MarkdownFilter.new(\"Hi **world**!\", :gfm => false) filter.call Examples We define different pipelines for different parts of our app. Here are a few paraphrased snippets to get you started: # The context hash is how you pass options between different filters. # See individual filter source for explanation of options. context = { :asset_root => \"http://your-domain.com/where/your/images/live/icons\", :base_url => \"http://your-domain.com\" } # Pipeline providing sanitization and image hijacking but no mention # related features. SimplePipeline = Pipeline.new [ SanitizationFilter, TableOfContentsFilter, # add 'name' anchors to all headers and generate toc list CamoFilter, ImageMaxWidthFilter, SyntaxHighlightFilter, EmojiFilter, AutolinkFilter ], context # Pipeline used for user provided content on the web MarkdownPipeline = Pipeline.new [ MarkdownFilter, SanitizationFilter, CamoFilter, ImageMaxWidthFilter, HttpsFilter, MentionFilter, EmojiFilter, SyntaxHighlightFilter ], context.merge(:gfm => true) # enable github formatted markdown # Define a pipeline based on another pipeline's filters NonGFMMarkdownPipeline = Pipeline.new(MarkdownPipeline.filters, context.merge(:gfm => false)) # Pipelines aren't limited to the web. You can use them for email # processing also. HtmlEmailPipeline = Pipeline.new [ PlainTextInputFilter, ImageMaxWidthFilter ], {} # Just emoji. EmojiPipeline = Pipeline.new [ PlainTextInputFilter, EmojiFilter ], context Filters MentionFilter - replace @user mentions with links TeamMentionFilter - replace @org/team mentions with links AbsoluteSourceFilter - replace relative image urls with fully qualified versions AutolinkFilter - auto_linking urls in HTML CamoFilter - replace http image urls with camo-fied https versions EmailReplyFilter - util filter for working with emails EmojiFilter - everyone loves emoji ! HttpsFilter - HTML Filter for replacing http github urls with https versions. ImageMaxWidthFilter - link to full size image for large images MarkdownFilter - convert markdown to html PlainTextInputFilter - html escape text and wrap the result in a div SanitizationFilter - allow sanitize user markup SyntaxHighlightFilter - code syntax highlighter TextileFilter - convert textile to html TableOfContentsFilter - anchor headings with name attributes and generate Table of Contents html unordered list linking headings Dependencies Filter gem dependencies are not bundled; you must bundle the filter's gem dependencies. The below list details filters with dependencies. For example, SyntaxHighlightFilter uses rouge to detect and highlight languages. For example, to use the SyntaxHighlightFilter , add the following to your Gemfile: gem 'rouge' AutolinkFilter - rinku EmailReplyFilter - escape_utils , email_reply_parser EmojiFilter - gemoji MarkdownFilter - commonmarker PlainTextInputFilter - escape_utils SanitizationFilter - sanitize SyntaxHighlightFilter - rouge TableOfContentsFilter - escape_utils TextileFilter - RedCloth Note: See Gemfile :test block for version requirements. Documentation Full reference documentation can be found here . Extending To write a custom filter, you need a class with a call method that inherits from HTML::Pipeline::Filter . For example this filter adds a base url to images that are root relative: require 'uri' class RootRelativeFilter < HTML::Pipeline::Filter def call doc.search(\"img\").each do |img| next if img['src'].nil? src = img['src'].strip if src.start_with? '/' img[\"src\"] = URI.join(context[:base_url], src).to_s end end doc end end Now this filter can be used in a pipeline: Pipeline.new [ RootRelativeFilter ], { :base_url => 'http://somehost.com' } 3rd Party Extensions If you have an idea for a filter, propose it as an issue first. This allows us discuss whether the filter is a common enough use case to belong in this gem, or should be built as an external gem. Here are some extensions people have built: html-pipeline-asciidoc_filter jekyll-html-pipeline nanoc-html-pipeline html-pipeline-bitly html-pipeline-cite tilt-html-pipeline html-pipeline-wiki-link' - WikiMedia-style wiki links task_list - GitHub flavor Markdown Task List html-pipeline-nico_link - An HTML::Pipeline filter for niconico description links html-pipeline-gitlab - This gem implements various filters for html-pipeline used by GitLab html-pipeline-youtube - An HTML::Pipeline filter for YouTube links html-pipeline-flickr - An HTML::Pipeline filter for Flickr links html-pipeline-vimeo - An HTML::Pipeline filter for Vimeo links html-pipeline-hashtag - An HTML::Pipeline filter for hashtags html-pipeline-linkify_github - An HTML::Pipeline filter to autolink GitHub urls html-pipeline-redcarpet_filter - Render Markdown source text into Markdown HTML using Redcarpet html-pipeline-typogruby_filter - Add Typogruby text filters to your HTML::Pipeline korgi - HTML::Pipeline filters for links to Rails resources Instrumenting Filters and Pipelines can be set up to be instrumented when called. The pipeline must be setup with an ActiveSupport::Notifications compatible service object and a name. New pipeline objects will default to the HTML::Pipeline.default_instrumentation_service object. # the AS::Notifications-compatible service object service = ActiveSupport::Notifications # instrument a specific pipeline pipeline = HTML::Pipeline.new [MarkdownFilter], context pipeline.setup_instrumentation \"MarkdownPipeline\", service # or set default instrumentation service for all new pipelines HTML::Pipeline.default_instrumentation_service = service pipeline = HTML::Pipeline.new [MarkdownFilter], context pipeline.setup_instrumentation \"MarkdownPipeline\" Filters are instrumented when they are run through the pipeline. A call_filter.html_pipeline event is published once the filter finishes. The payload should include the filter name. Each filter will trigger its own instrumentation call. service.subscribe \"call_filter.html_pipeline\" do |event, start, ending, transaction_id, payload| payload[:pipeline] #=> \"MarkdownPipeline\", set with `setup_instrumentation` payload[:filter] #=> \"MarkdownFilter\" payload[:context] #=> context Hash payload[:result] #=> instance of result class payload[:result][:output] #=> output HTML String or Nokogiri::DocumentFragment end The full pipeline is also instrumented: service.subscribe \"call_pipeline.html_pipeline\" do |event, start, ending, transaction_id, payload| payload[:pipeline] #=> \"MarkdownPipeline\", set with `setup_instrumentation` payload[:filters] #=> [\"MarkdownFilter\"] payload[:doc] #=> HTML String or Nokogiri::DocumentFragment payload[:context] #=> context Hash payload[:result] #=> instance of result class payload[:result][:output] #=> output HTML String or Nokogiri::DocumentFragment end FAQ 1. Why doesn't my pipeline work when there's no root element in the document? To make a pipeline work on a plain text document, put the PlainTextInputFilter at the beginning of your pipeline. This will wrap the content in a div so the filters have a root element to work with. If you're passing in an HTML fragment, but it doesn't have a root element, you can wrap the content in a div yourself. For example: EmojiPipeline = Pipeline.new [ PlainTextInputFilter, # <- Wraps input in a div and escapes html tags EmojiFilter ], context plain_text = \"Gutentag! :wave:\" EmojiPipeline.call(plain_text) html_fragment = \"This is outside of an html element, but <strong>this isn't. :+1:</strong>\" EmojiPipeline.call(\"<div>#{html_fragment}</div>\") # <- Wrap your own html fragments to avoid escaping 2. How do I customize an allowlist for SanitizationFilter s? SanitizationFilter::ALLOWLIST is the default allowlist used if no :allowlist argument is given in the context. The default is a good starting template for you to add additional elements. You can either modify the constant's value, or re-define your own constant and pass that in via the context. Contributing Please review the Contributing Guide . Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request To see what has changed in recent versions, see the CHANGELOG . Contributors Thanks to all of these contributors . Project is a member of the OSS Manifesto . The current maintainer is @gjtorikian Releasing A New Version This section is for gem maintainers to cut a new version of the gem. create a new branch named release-x.y.z where x.y.z follows semver update lib/html/pipeline/version.rb to next version number X.X.X update CHANGELOG.md. Prepare a draft with script/changelog push branch and create a new pull request after tests are green, merge to master on the master branch, run script/release","title":"HTML::Pipeline [![Build Status](https://travis-ci.org/jch/html-pipeline.svg?branch=master)](https://travis-ci.org/jch/html-pipeline)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#htmlpipeline","text":"HTML processing filters and utilities. This module includes a small framework for defining DOM based content filters and applying them to user provided content. This project was started at GitHub . While GitHub still uses a similar design and pattern for rendering content, this gem should be considered standalone and independent from GitHub. Installation Usage Examples Filters Dependencies Documentation Extending 3rd Party Extensions Instrumenting Contributing Contributors Releasing A New Version","title":"HTML::Pipeline"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#installation","text":"Add this line to your application's Gemfile: gem 'html-pipeline' And then execute: $ bundle Or install it by yourself as: $ gem install html-pipeline","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#usage","text":"This library provides a handful of chainable HTML filters to transform user content into markup. A filter takes an HTML string or Nokogiri::HTML::DocumentFragment , optionally manipulates it, and then outputs the result. For example, to transform Markdown source into Markdown HTML: require 'html/pipeline' filter = HTML::Pipeline::MarkdownFilter.new(\"Hi **world**!\") filter.call Filters can be combined into a pipeline which causes each filter to hand its output to the next filter's input. So if you wanted to have content be filtered through Markdown and be syntax highlighted, you can create the following pipeline: pipeline = HTML::Pipeline.new [ HTML::Pipeline::MarkdownFilter, HTML::Pipeline::SyntaxHighlightFilter ] result = pipeline.call <<-CODE This is *great*: some_code(:first) CODE result[:output].to_s Prints: <p>This is <em>great</em>:</p> <pre><code>some_code(:first) </code></pre> To generate CSS for HTML formatted code, use the Rouge CSS Theme #css method. rouge is a dependency of the SyntaxHighlightFilter . Some filters take an optional context and/or result hash. These are used to pass around arguments and metadata between filters in a pipeline. For example, if you don't want to use GitHub formatted Markdown, you can pass an option in the context hash: filter = HTML::Pipeline::MarkdownFilter.new(\"Hi **world**!\", :gfm => false) filter.call","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#examples","text":"We define different pipelines for different parts of our app. Here are a few paraphrased snippets to get you started: # The context hash is how you pass options between different filters. # See individual filter source for explanation of options. context = { :asset_root => \"http://your-domain.com/where/your/images/live/icons\", :base_url => \"http://your-domain.com\" } # Pipeline providing sanitization and image hijacking but no mention # related features. SimplePipeline = Pipeline.new [ SanitizationFilter, TableOfContentsFilter, # add 'name' anchors to all headers and generate toc list CamoFilter, ImageMaxWidthFilter, SyntaxHighlightFilter, EmojiFilter, AutolinkFilter ], context # Pipeline used for user provided content on the web MarkdownPipeline = Pipeline.new [ MarkdownFilter, SanitizationFilter, CamoFilter, ImageMaxWidthFilter, HttpsFilter, MentionFilter, EmojiFilter, SyntaxHighlightFilter ], context.merge(:gfm => true) # enable github formatted markdown # Define a pipeline based on another pipeline's filters NonGFMMarkdownPipeline = Pipeline.new(MarkdownPipeline.filters, context.merge(:gfm => false)) # Pipelines aren't limited to the web. You can use them for email # processing also. HtmlEmailPipeline = Pipeline.new [ PlainTextInputFilter, ImageMaxWidthFilter ], {} # Just emoji. EmojiPipeline = Pipeline.new [ PlainTextInputFilter, EmojiFilter ], context","title":"Examples"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#filters","text":"MentionFilter - replace @user mentions with links TeamMentionFilter - replace @org/team mentions with links AbsoluteSourceFilter - replace relative image urls with fully qualified versions AutolinkFilter - auto_linking urls in HTML CamoFilter - replace http image urls with camo-fied https versions EmailReplyFilter - util filter for working with emails EmojiFilter - everyone loves emoji ! HttpsFilter - HTML Filter for replacing http github urls with https versions. ImageMaxWidthFilter - link to full size image for large images MarkdownFilter - convert markdown to html PlainTextInputFilter - html escape text and wrap the result in a div SanitizationFilter - allow sanitize user markup SyntaxHighlightFilter - code syntax highlighter TextileFilter - convert textile to html TableOfContentsFilter - anchor headings with name attributes and generate Table of Contents html unordered list linking headings","title":"Filters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#dependencies","text":"Filter gem dependencies are not bundled; you must bundle the filter's gem dependencies. The below list details filters with dependencies. For example, SyntaxHighlightFilter uses rouge to detect and highlight languages. For example, to use the SyntaxHighlightFilter , add the following to your Gemfile: gem 'rouge' AutolinkFilter - rinku EmailReplyFilter - escape_utils , email_reply_parser EmojiFilter - gemoji MarkdownFilter - commonmarker PlainTextInputFilter - escape_utils SanitizationFilter - sanitize SyntaxHighlightFilter - rouge TableOfContentsFilter - escape_utils TextileFilter - RedCloth Note: See Gemfile :test block for version requirements.","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#documentation","text":"Full reference documentation can be found here .","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#extending","text":"To write a custom filter, you need a class with a call method that inherits from HTML::Pipeline::Filter . For example this filter adds a base url to images that are root relative: require 'uri' class RootRelativeFilter < HTML::Pipeline::Filter def call doc.search(\"img\").each do |img| next if img['src'].nil? src = img['src'].strip if src.start_with? '/' img[\"src\"] = URI.join(context[:base_url], src).to_s end end doc end end Now this filter can be used in a pipeline: Pipeline.new [ RootRelativeFilter ], { :base_url => 'http://somehost.com' }","title":"Extending"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#3rd-party-extensions","text":"If you have an idea for a filter, propose it as an issue first. This allows us discuss whether the filter is a common enough use case to belong in this gem, or should be built as an external gem. Here are some extensions people have built: html-pipeline-asciidoc_filter jekyll-html-pipeline nanoc-html-pipeline html-pipeline-bitly html-pipeline-cite tilt-html-pipeline html-pipeline-wiki-link' - WikiMedia-style wiki links task_list - GitHub flavor Markdown Task List html-pipeline-nico_link - An HTML::Pipeline filter for niconico description links html-pipeline-gitlab - This gem implements various filters for html-pipeline used by GitLab html-pipeline-youtube - An HTML::Pipeline filter for YouTube links html-pipeline-flickr - An HTML::Pipeline filter for Flickr links html-pipeline-vimeo - An HTML::Pipeline filter for Vimeo links html-pipeline-hashtag - An HTML::Pipeline filter for hashtags html-pipeline-linkify_github - An HTML::Pipeline filter to autolink GitHub urls html-pipeline-redcarpet_filter - Render Markdown source text into Markdown HTML using Redcarpet html-pipeline-typogruby_filter - Add Typogruby text filters to your HTML::Pipeline korgi - HTML::Pipeline filters for links to Rails resources","title":"3rd Party Extensions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#instrumenting","text":"Filters and Pipelines can be set up to be instrumented when called. The pipeline must be setup with an ActiveSupport::Notifications compatible service object and a name. New pipeline objects will default to the HTML::Pipeline.default_instrumentation_service object. # the AS::Notifications-compatible service object service = ActiveSupport::Notifications # instrument a specific pipeline pipeline = HTML::Pipeline.new [MarkdownFilter], context pipeline.setup_instrumentation \"MarkdownPipeline\", service # or set default instrumentation service for all new pipelines HTML::Pipeline.default_instrumentation_service = service pipeline = HTML::Pipeline.new [MarkdownFilter], context pipeline.setup_instrumentation \"MarkdownPipeline\" Filters are instrumented when they are run through the pipeline. A call_filter.html_pipeline event is published once the filter finishes. The payload should include the filter name. Each filter will trigger its own instrumentation call. service.subscribe \"call_filter.html_pipeline\" do |event, start, ending, transaction_id, payload| payload[:pipeline] #=> \"MarkdownPipeline\", set with `setup_instrumentation` payload[:filter] #=> \"MarkdownFilter\" payload[:context] #=> context Hash payload[:result] #=> instance of result class payload[:result][:output] #=> output HTML String or Nokogiri::DocumentFragment end The full pipeline is also instrumented: service.subscribe \"call_pipeline.html_pipeline\" do |event, start, ending, transaction_id, payload| payload[:pipeline] #=> \"MarkdownPipeline\", set with `setup_instrumentation` payload[:filters] #=> [\"MarkdownFilter\"] payload[:doc] #=> HTML String or Nokogiri::DocumentFragment payload[:context] #=> context Hash payload[:result] #=> instance of result class payload[:result][:output] #=> output HTML String or Nokogiri::DocumentFragment end","title":"Instrumenting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#faq","text":"","title":"FAQ"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#1-why-doesnt-my-pipeline-work-when-theres-no-root-element-in-the-document","text":"To make a pipeline work on a plain text document, put the PlainTextInputFilter at the beginning of your pipeline. This will wrap the content in a div so the filters have a root element to work with. If you're passing in an HTML fragment, but it doesn't have a root element, you can wrap the content in a div yourself. For example: EmojiPipeline = Pipeline.new [ PlainTextInputFilter, # <- Wraps input in a div and escapes html tags EmojiFilter ], context plain_text = \"Gutentag! :wave:\" EmojiPipeline.call(plain_text) html_fragment = \"This is outside of an html element, but <strong>this isn't. :+1:</strong>\" EmojiPipeline.call(\"<div>#{html_fragment}</div>\") # <- Wrap your own html fragments to avoid escaping","title":"1. Why doesn't my pipeline work when there's no root element in the document?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#2-how-do-i-customize-an-allowlist-for-sanitizationfilters","text":"SanitizationFilter::ALLOWLIST is the default allowlist used if no :allowlist argument is given in the context. The default is a good starting template for you to add additional elements. You can either modify the constant's value, or re-define your own constant and pass that in via the context.","title":"2. How do I customize an allowlist for SanitizationFilters?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#contributing","text":"Please review the Contributing Guide . Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request To see what has changed in recent versions, see the CHANGELOG .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#contributors","text":"Thanks to all of these contributors . Project is a member of the OSS Manifesto . The current maintainer is @gjtorikian","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/#releasing-a-new-version","text":"This section is for gem maintainers to cut a new version of the gem. create a new branch named release-x.y.z where x.y.z follows semver update lib/html/pipeline/version.rb to next version number X.X.X update CHANGELOG.md. Prepare a draft with script/changelog push branch and create a new pull request after tests are green, merge to master on the master branch, run script/release","title":"Releasing A New Version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/","text":"CHANGELOG 2.12.3 Bug fix in SyntaxHighlightFilter #325 2.12.2 Allow unsafe option for Custom Renderer of MarkdownFilter #322 Test with minitest-focus 2.12.1 Allow Custom Renderer for MarkdownFilter #318 Test against more Rails versions 2.12.0 Team mention filter #314 2.11.1 Avoid YARD warning: Unknown tag @mention #309 Freeze string literals in Ruby 2.3 and beyond #313 2.11.0 Test against Ruby 2.4 #310 CamoFilter: use String#unpack to hexencode URLs #256 2.10.0 Add XMPP URI #307 Stop testing against Ruby 2.2 2.9.2 Whitelist various inline semantic/formatting tags #306 2.9.1 Render irc and ircs URLs #191 2.9.0 Fix one more missing freeze #300 Adds UNSAFE option to CommonMarker usage where needed #304 2.8.4 Freeze all elements in HTML::Pipeline::SanitizationFilter #299 2.8.3 Whitelist some accessibility properties #298 2.8.2 Update ruby-sanitize (fixes CVE-2018-3740) 2.8.1 Fix XSS vulnerability on table of content generation #296 2.8.0 Ensure <pre> nodes are not removed after syntax highlighting #295 2.7.2 Apply mention filter & emoji filter on node text #290 Disable processing @mentions in <script> tag #292 Update dependencies #291 2.7.1 Output underlying load error when wrapping #284 2.7.0 Let users set the common marker extensions #279 2.6.0 Switch from github-markdown to CommonMark #274 Fixed a few warnings 2.5.0 Ruby 2.4 support. Backwards compatible, but bumped minor version so projects can choose to lock at older version #268 2.4.2 Make EmojiFilter generated img tag HTML attributes configurable #258 2.4.1 Regression in EmailReplyPipeline: unfiltered content is being omitted #253 2.4.0 Optionally filter email addresses #247 2.3.0 Add option to pass in an anchor icon, instead of using octicons #244 2.2.4 Use entire namespace so MissingDependencyError constant is resolved #243 2.2.3 raise MissingDependencyError instead of aborting on missing dependency #241 Fix typo #239 Test against Ruby 2.3.0 on Travis CI #238 use travis containers #237 2.2.2 Fix for calling mention_link_filter with only one argument #230 Add html-pipeline-linkify_github to 3rd Party Extensions in README #228 2.2.1 Soften Nokogiri dependency to versions \">= 1.4\" #208 2.2.0 Only allow cite attribute on blockquote and restrict schemes #223 2.1.0 Whitelist schemes for longdesc #221 Extract emoji image tag generation to own method #195 Update README.md #211 Add ImageFilter for image url to img tag conversion #207 2.0 New Implement new EmojiFilter context option: ignored_ancestor_tags to accept more ignored tags. #170 @JuanitoFatas Add GitHub flavor Markdown Task List extension #162 @simeonwillbanks @mention allow for custom regex to identify usernames. #157 @brittballard EmojiFilter now requires gemoji ~> 2. #159 @jch Changes Restrict nokogiri to >= 1.4, <= 1.6.5 #176 @simeonwillbanks MentionFilter#link_to_mentioned_user: Replace String introspection with Regexp match #172 @simeonwillbanks Whitelist summary and details element. #171 @JuanitoFatas Support ~login for MentionFilter. #167 @JuanitoFatas Revert \"Search for text nodes on DocumentFragments without root tags\" #158 @jch Drop support for ruby ree, 1.9.2, 1.9.3 #156 @jch Skip EmojiFilter in <tt> tags #147 @moskvax Use Linguist lexers #153 @pchaigno Constrain Active Support >= 2, < 5 #180 @jch 1.11.0 Search for text nodes on DocumentFragments without root tags #146 Razer6 Don't filter @mentions in <style> tags #145 jch Prefer http_url in HttpsFilter. base_url still works. #142 bkeepers Remove duplicate check in EmojiFilter #141 Razer6 1.10.0 Anchor TOCFilter with id's instead of name's #140 bkeepers Add details to sanitization whitelist #139 tansaku Fix README spelling #137 Razer6 Remove ActiveSupport try dependency #132 simeonwillbanks 1.9.0 Generalize https filter with :base_url #124 #131 rymohr Clean up gemspec dependencies #130 mislav EmojiFilter compatibility with gemoji v2 #129 mislav Now using Minitest #126 simeonwillbanks 1.8.0 Add custom path support for EmojiFilter #122 bradly Reorganize README and add table of contents #118 simeonwillbanks 1.7.0 SanitizationFilter whitelists and elements #120 charliesome ruby 2.1.1 support #119 simeonwillbanks 1.6.0 Doc update for syntax highlighting #108 simeonwillbanks Add missing dependency for EmailReplyFilter #110 foca Fix deprecation warning for Digest::Digest #103 chrishunt 1.5.0 More flexible whitelist configuration for SanitizationFilter #98 aroben 1.4.0 Fix CamoFilter double entity encoding. #101 josh 1.3.0 1.2.0 didn't actually include the following changes. Yanked that release. CamoFilter now camos https images. #96 josh 1.1.0 escape emoji filenames in urls #92 jayroh 1.0.0 To upgrade to this release, you will need to include separate gems for each of the filters. See this section of the README for details. filter dependencies are no longer included #80 from simeonwillbanks/simple-dependency-management Add link_attr option to Autolink filter #89 from excid3/master Add ActiveSupport back in as dependency for xml-mini #85 from mojavelinux/xml-mini 0.3.1 Guard against nil node replacement in SyntaxHighlightFilter #84 jbarnette 0.3.0 Add support for manually specified default language in SyntaxHighlightFilter #81 jbarnette 0.2.1 Moves ActiveSupport as a development dependency #79 0.2.0 Fix README typo #74 tricknotes TableOfContentsFilter generates list of sections #75 simeonwillbanks 0.1.0 I realized I wasn't properly following semver for interface changes and new features. Starting from this release, semver will be followed. Whitelist table section elements in sanitization filter #55 mojavelinux Update readme typo #57 envygeeks TOC unicode characters and anchor names for Ruby > 1.9 #64 jakedouglas/non_english_anchors Add :skip_tags option for AutolinkFilter #65 pengwynn Fix CI dependency issues #67 jch Fix ignored test and add Ruby 2.0 to CI. #71, #72 tricknotes 0.0.14 Remove unused can_access_repo? method jch 0.0.13 Update icon class name (only affects TOC pipeline) cameronmcefee #52 0.0.12 add additional payload information for instrumentation mtodd #46 generate and link to gem docs in README 0.0.11 add instrumentation support. readme cleanup mtodd #45 0.0.10 add bin/html-pipeline util indirect #44 add result[:mentioned_usernames] for MentionFilter fachen #42 0.0.9 bump escape_utils ~> 0.3, github-linguist ~> 2.6.2 brianmario #41 remove nokogiri monkey patch for ruby >= 1.9 defunkt #40 0.0.8 raise LoadError instead of printing to stderr if linguist is missing. gjtorikian #36 0.0.7 optionally require github-linguist chrislloyd #33 0.0.6 don't mutate markdown strings: jakedouglas #32 0.0.5 fix li xss vulnerability in sanitization filter: vmg #31 gemspec cleanup: nbibler #23, jbarnette #24 doc updates: jch #16, pborreli #17, wickedshimmy #18, benubois #19, blackerby #21 loosen gemoji dependency: josh #15 0.0.4 initial public release","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#changelog","text":"","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2123","text":"Bug fix in SyntaxHighlightFilter #325","title":"2.12.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2122","text":"Allow unsafe option for Custom Renderer of MarkdownFilter #322 Test with minitest-focus","title":"2.12.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2121","text":"Allow Custom Renderer for MarkdownFilter #318 Test against more Rails versions","title":"2.12.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2120","text":"Team mention filter #314","title":"2.12.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2111","text":"Avoid YARD warning: Unknown tag @mention #309 Freeze string literals in Ruby 2.3 and beyond #313","title":"2.11.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2110","text":"Test against Ruby 2.4 #310 CamoFilter: use String#unpack to hexencode URLs #256","title":"2.11.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#2100","text":"Add XMPP URI #307 Stop testing against Ruby 2.2","title":"2.10.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#292","text":"Whitelist various inline semantic/formatting tags #306","title":"2.9.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#291","text":"Render irc and ircs URLs #191","title":"2.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#290","text":"Fix one more missing freeze #300 Adds UNSAFE option to CommonMarker usage where needed #304","title":"2.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#284","text":"Freeze all elements in HTML::Pipeline::SanitizationFilter #299","title":"2.8.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#283","text":"Whitelist some accessibility properties #298","title":"2.8.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#282","text":"Update ruby-sanitize (fixes CVE-2018-3740)","title":"2.8.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#281","text":"Fix XSS vulnerability on table of content generation #296","title":"2.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#280","text":"Ensure <pre> nodes are not removed after syntax highlighting #295","title":"2.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#272","text":"Apply mention filter & emoji filter on node text #290 Disable processing @mentions in <script> tag #292 Update dependencies #291","title":"2.7.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#271","text":"Output underlying load error when wrapping #284","title":"2.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#270","text":"Let users set the common marker extensions #279","title":"2.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#260","text":"Switch from github-markdown to CommonMark #274 Fixed a few warnings","title":"2.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#250","text":"Ruby 2.4 support. Backwards compatible, but bumped minor version so projects can choose to lock at older version #268","title":"2.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#242","text":"Make EmojiFilter generated img tag HTML attributes configurable #258","title":"2.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#241","text":"Regression in EmailReplyPipeline: unfiltered content is being omitted #253","title":"2.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#240","text":"Optionally filter email addresses #247","title":"2.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#230","text":"Add option to pass in an anchor icon, instead of using octicons #244","title":"2.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#224","text":"Use entire namespace so MissingDependencyError constant is resolved #243","title":"2.2.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#223","text":"raise MissingDependencyError instead of aborting on missing dependency #241 Fix typo #239 Test against Ruby 2.3.0 on Travis CI #238 use travis containers #237","title":"2.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#222","text":"Fix for calling mention_link_filter with only one argument #230 Add html-pipeline-linkify_github to 3rd Party Extensions in README #228","title":"2.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#221","text":"Soften Nokogiri dependency to versions \">= 1.4\" #208","title":"2.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#220","text":"Only allow cite attribute on blockquote and restrict schemes #223","title":"2.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#210","text":"Whitelist schemes for longdesc #221 Extract emoji image tag generation to own method #195 Update README.md #211 Add ImageFilter for image url to img tag conversion #207","title":"2.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#20","text":"New Implement new EmojiFilter context option: ignored_ancestor_tags to accept more ignored tags. #170 @JuanitoFatas Add GitHub flavor Markdown Task List extension #162 @simeonwillbanks @mention allow for custom regex to identify usernames. #157 @brittballard EmojiFilter now requires gemoji ~> 2. #159 @jch Changes Restrict nokogiri to >= 1.4, <= 1.6.5 #176 @simeonwillbanks MentionFilter#link_to_mentioned_user: Replace String introspection with Regexp match #172 @simeonwillbanks Whitelist summary and details element. #171 @JuanitoFatas Support ~login for MentionFilter. #167 @JuanitoFatas Revert \"Search for text nodes on DocumentFragments without root tags\" #158 @jch Drop support for ruby ree, 1.9.2, 1.9.3 #156 @jch Skip EmojiFilter in <tt> tags #147 @moskvax Use Linguist lexers #153 @pchaigno Constrain Active Support >= 2, < 5 #180 @jch","title":"2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#1110","text":"Search for text nodes on DocumentFragments without root tags #146 Razer6 Don't filter @mentions in <style> tags #145 jch Prefer http_url in HttpsFilter. base_url still works. #142 bkeepers Remove duplicate check in EmojiFilter #141 Razer6","title":"1.11.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#1100","text":"Anchor TOCFilter with id's instead of name's #140 bkeepers Add details to sanitization whitelist #139 tansaku Fix README spelling #137 Razer6 Remove ActiveSupport try dependency #132 simeonwillbanks","title":"1.10.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#190","text":"Generalize https filter with :base_url #124 #131 rymohr Clean up gemspec dependencies #130 mislav EmojiFilter compatibility with gemoji v2 #129 mislav Now using Minitest #126 simeonwillbanks","title":"1.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#180","text":"Add custom path support for EmojiFilter #122 bradly Reorganize README and add table of contents #118 simeonwillbanks","title":"1.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#170","text":"SanitizationFilter whitelists and elements #120 charliesome ruby 2.1.1 support #119 simeonwillbanks","title":"1.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#160","text":"Doc update for syntax highlighting #108 simeonwillbanks Add missing dependency for EmailReplyFilter #110 foca Fix deprecation warning for Digest::Digest #103 chrishunt","title":"1.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#150","text":"More flexible whitelist configuration for SanitizationFilter #98 aroben","title":"1.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#140","text":"Fix CamoFilter double entity encoding. #101 josh","title":"1.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#130","text":"1.2.0 didn't actually include the following changes. Yanked that release. CamoFilter now camos https images. #96 josh","title":"1.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#110","text":"escape emoji filenames in urls #92 jayroh","title":"1.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#100","text":"To upgrade to this release, you will need to include separate gems for each of the filters. See this section of the README for details. filter dependencies are no longer included #80 from simeonwillbanks/simple-dependency-management Add link_attr option to Autolink filter #89 from excid3/master Add ActiveSupport back in as dependency for xml-mini #85 from mojavelinux/xml-mini","title":"1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#031","text":"Guard against nil node replacement in SyntaxHighlightFilter #84 jbarnette","title":"0.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#030","text":"Add support for manually specified default language in SyntaxHighlightFilter #81 jbarnette","title":"0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#021","text":"Moves ActiveSupport as a development dependency #79","title":"0.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#020","text":"Fix README typo #74 tricknotes TableOfContentsFilter generates list of sections #75 simeonwillbanks","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#010","text":"I realized I wasn't properly following semver for interface changes and new features. Starting from this release, semver will be followed. Whitelist table section elements in sanitization filter #55 mojavelinux Update readme typo #57 envygeeks TOC unicode characters and anchor names for Ruby > 1.9 #64 jakedouglas/non_english_anchors Add :skip_tags option for AutolinkFilter #65 pengwynn Fix CI dependency issues #67 jch Fix ignored test and add Ruby 2.0 to CI. #71, #72 tricknotes","title":"0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#0014","text":"Remove unused can_access_repo? method jch","title":"0.0.14"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#0013","text":"Update icon class name (only affects TOC pipeline) cameronmcefee #52","title":"0.0.13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#0012","text":"add additional payload information for instrumentation mtodd #46 generate and link to gem docs in README","title":"0.0.12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#0011","text":"add instrumentation support. readme cleanup mtodd #45","title":"0.0.11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#0010","text":"add bin/html-pipeline util indirect #44 add result[:mentioned_usernames] for MentionFilter fachen #42","title":"0.0.10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#009","text":"bump escape_utils ~> 0.3, github-linguist ~> 2.6.2 brianmario #41 remove nokogiri monkey patch for ruby >= 1.9 defunkt #40","title":"0.0.9"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#008","text":"raise LoadError instead of printing to stderr if linguist is missing. gjtorikian #36","title":"0.0.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#007","text":"optionally require github-linguist chrislloyd #33","title":"0.0.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#006","text":"don't mutate markdown strings: jakedouglas #32","title":"0.0.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#005","text":"fix li xss vulnerability in sanitization filter: vmg #31 gemspec cleanup: nbibler #23, jbarnette #24 doc updates: jch #16, pborreli #17, wickedshimmy #18, benubois #19, blackerby #21 loosen gemoji dependency: josh #15","title":"0.0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CHANGELOG/#004","text":"initial public release","title":"0.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CONTRIBUTING/","text":"Contributing Thanks for using and improving HTML::Pipeline ! Submitting a New Issue Sending a Pull Request Submitting a New Issue If there's an idea you'd like to propose, or a design change, feel free to file a new issue. If you have an implementation question or believe you've found a bug, please provide as many details as possible: Input document Output HTML document the exact HTML::Pipeline code you are using output of the following from your project ruby -v bundle exec nokogiri -v Sending a Pull Request Pull requests are always welcome! Check out the project's issues list for ideas on what could be improved. Before sending, please add tests and ensure the test suite passes. Running the Tests To run the full suite: bundle exec rake To run a specific test file: bundle exec ruby -Itest test/html/pipeline_test.rb To run a specific test: bundle exec ruby -Itest test/html/pipeline/markdown_filter_test.rb -n test_disabling_gfm To run the full suite with all supported rubies in bash: rubies=(ree-1.8.7-2011.03 1.9.2-p290 1.9.3-p429 2.0.0-p247) for r in ${rubies[*]} do rbenv local $r # switch to your version manager of choice bundle install bundle exec rake done","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CONTRIBUTING/#contributing","text":"Thanks for using and improving HTML::Pipeline ! Submitting a New Issue Sending a Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CONTRIBUTING/#submitting-a-new-issue","text":"If there's an idea you'd like to propose, or a design change, feel free to file a new issue. If you have an implementation question or believe you've found a bug, please provide as many details as possible: Input document Output HTML document the exact HTML::Pipeline code you are using output of the following from your project ruby -v bundle exec nokogiri -v","title":"Submitting a New Issue"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CONTRIBUTING/#sending-a-pull-request","text":"Pull requests are always welcome! Check out the project's issues list for ideas on what could be improved. Before sending, please add tests and ensure the test suite passes.","title":"Sending a Pull Request"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/html-pipeline-2.14.1/CONTRIBUTING/#running-the-tests","text":"To run the full suite: bundle exec rake To run a specific test file: bundle exec ruby -Itest test/html/pipeline_test.rb To run a specific test: bundle exec ruby -Itest test/html/pipeline/markdown_filter_test.rb -n test_disabling_gfm To run the full suite with all supported rubies in bash: rubies=(ree-1.8.7-2011.03 1.9.2-p290 1.9.3-p429 2.0.0-p247) for r in ${rubies[*]} do rbenv local $r # switch to your version manager of choice bundle install bundle exec rake done","title":"Running the Tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/","text":"http_parser.rb A simple callback-based HTTP request/response parser for writing http servers, clients and proxies. This gem is built on top of joyent/http-parser and its java port http-parser/http-parser.java . Supported Platforms This gem aims to work on all major Ruby platforms, including: MRI 1.8, 1.9 and 2.0; should work on MRI 2.4+ Rubinius JRuby win32 Usage require \"http/parser\" parser = Http::Parser.new parser.on_headers_complete = proc do p parser.http_version p parser.http_method # for requests p parser.request_url p parser.status_code # for responses p parser.headers end parser.on_body = proc do |chunk| # One chunk of the body p chunk end parser.on_message_complete = proc do |env| # Headers and body is all parsed puts \"Done!\" end Feed raw data from the socket to the parser parser << raw_data Advanced Usage Accept callbacks on an object module MyHttpConnection def connection_completed @parser = Http::Parser.new(self) end def receive_data(data) @parser << data end def on_message_begin @headers = nil @body = '' end def on_headers_complete(headers) @headers = headers end def on_body(chunk) @body << chunk end def on_message_complete p [@headers, @body] end end Stop parsing after headers parser = Http::Parser.new parser.on_headers_complete = proc{ :stop } offset = parser << request_data body = request_data[offset..-1]","title":"http_parser.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#http_parserrb","text":"A simple callback-based HTTP request/response parser for writing http servers, clients and proxies. This gem is built on top of joyent/http-parser and its java port http-parser/http-parser.java .","title":"http_parser.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#supported-platforms","text":"This gem aims to work on all major Ruby platforms, including: MRI 1.8, 1.9 and 2.0; should work on MRI 2.4+ Rubinius JRuby win32","title":"Supported Platforms"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#usage","text":"require \"http/parser\" parser = Http::Parser.new parser.on_headers_complete = proc do p parser.http_version p parser.http_method # for requests p parser.request_url p parser.status_code # for responses p parser.headers end parser.on_body = proc do |chunk| # One chunk of the body p chunk end parser.on_message_complete = proc do |env| # Headers and body is all parsed puts \"Done!\" end","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#feed-raw-data-from-the-socket-to-the-parser","text":"parser << raw_data","title":"Feed raw data from the socket to the parser"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#advanced-usage","text":"","title":"Advanced Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#accept-callbacks-on-an-object","text":"module MyHttpConnection def connection_completed @parser = Http::Parser.new(self) end def receive_data(data) @parser << data end def on_message_begin @headers = nil @body = '' end def on_headers_complete(headers) @headers = headers end def on_body(chunk) @body << chunk end def on_message_complete p [@headers, @body] end end","title":"Accept callbacks on an object"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/#stop-parsing-after-headers","text":"parser = Http::Parser.new parser.on_headers_complete = proc{ :stop } offset = parser << request_data body = request_data[offset..-1]","title":"Stop parsing after headers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/","text":"HTTP Parser This is a parser for HTTP messages written in C. It parses both requests and responses. The parser is designed to be used in performance HTTP applications. It does not make any syscalls nor allocations, it does not buffer data, it can be interrupted at anytime. Depending on your architecture, it only requires about 40 bytes of data per message stream (in a web server that is per connection). Features: No dependencies Handles persistent streams (keep-alive). Decodes chunked encoding. Upgrade support Defends against buffer overflow attacks. The parser extracts the following information from HTTP messages: Header fields and values Content-Length Request method Response status code Transfer-Encoding HTTP version Request URL Message body Usage One http_parser object is used per TCP connection. Initialize the struct using http_parser_init() and set the callbacks. That might look something like this for a request parser: http_parser_settings settings; settings.on_url = my_url_callback; settings.on_header_field = my_header_field_callback; /* ... */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); parser->data = my_socket; When data is received on the socket execute the parser and check for errors. size_t len = 80*1024, nparsed; char buf[len]; ssize_t recved; recved = recv(fd, buf, len, 0); if (recved < 0) { /* Handle error. */ } /* Start up / continue the parser. * Note we pass recved==0 to signal that EOF has been received. */ nparsed = http_parser_execute(parser, &settings, buf, recved); if (parser->upgrade) { /* handle new protocol */ } else if (nparsed != recved) { /* Handle error. Usually just close the connection. */ } http_parser needs to know where the end of the stream is. For example, sometimes servers send responses without Content-Length and expect the client to consume input (for the body) until EOF. To tell http_parser about EOF, give 0 as the fourth parameter to http_parser_execute() . Callbacks and errors can still be encountered during an EOF, so one must still be prepared to receive them. Scalar valued message information such as status_code , method , and the HTTP version are stored in the parser structure. This data is only temporally stored in http_parser and gets reset on each new message. If this information is needed later, copy it out of the structure during the headers_complete callback. The parser decodes the transfer-encoding for both requests and responses transparently. That is, a chunked encoding is decoded before being sent to the on_body callback. The Special Problem of Upgrade http_parser supports upgrading the connection to a different protocol. An increasingly common example of this is the WebSocket protocol which sends a request like GET /demo HTTP/1.1 Upgrade: WebSocket Connection: Upgrade Host: example.com Origin: http://example.com WebSocket-Protocol: sample followed by non-HTTP data. (See RFC6455 for more information the WebSocket protocol.) To support this, the parser will treat this as a normal HTTP message without a body, issuing both on_headers_complete and on_message_complete callbacks. However http_parser_execute() will stop parsing at the end of the headers and return. The user is expected to check if parser->upgrade has been set to 1 after http_parser_execute() returns. Non-HTTP data begins at the buffer supplied offset by the return value of http_parser_execute() . Callbacks During the http_parser_execute() call, the callbacks set in http_parser_settings will be executed. The parser maintains state and never looks behind, so buffering the data is not necessary. If you need to save certain data for later usage, you can do that from the callbacks. There are two types of callbacks: notification typedef int (*http_cb) (http_parser*); Callbacks: on_message_begin, on_headers_complete, on_message_complete. data typedef int (*http_data_cb) (http_parser*, const char *at, size_t length); Callbacks: (requests only) on_url, (common) on_header_field, on_header_value, on_body; Callbacks must return 0 on success. Returning a non-zero value indicates error to the parser, making it exit immediately. For cases where it is necessary to pass local information to/from a callback, the http_parser object's data field can be used. An example of such a case is when using threads to handle a socket connection, parse a request, and then give a response over that socket. By instantiation of a thread-local struct containing relevant data (e.g. accepted socket, allocated memory for callbacks to write into, etc), a parser's callbacks are able to communicate data between the scope of the thread and the scope of the callback in a threadsafe manner. This allows http_parser to be used in multi-threaded contexts. Example: typedef struct { socket_t sock; void* buffer; int buf_len; } custom_data_t; int my_url_callback(http_parser* parser, const char *at, size_t length) { /* access to thread local custom_data_t struct. Use this access save parsed data for later use into thread local buffer, or communicate over socket */ parser->data; ... return 0; } ... void http_parser_thread(socket_t sock) { int nparsed = 0; /* allocate memory for user data */ custom_data_t *my_data = malloc(sizeof(custom_data_t)); /* some information for use by callbacks. * achieves thread -> callback information flow */ my_data->sock = sock; /* instantiate a thread-local parser */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); /* initialise parser */ /* this custom data reference is accessible through the reference to the parser supplied to callback functions */ parser->data = my_data; http_parser_settings settings; /* set up callbacks */ settings.on_url = my_url_callback; /* execute parser */ nparsed = http_parser_execute(parser, &settings, buf, recved); ... /* parsed information copied from callback. can now perform action on data copied into thread-local memory from callbacks. achieves callback -> thread information flow */ my_data->buffer; ... } In case you parse HTTP message in chunks (i.e. read() request line from socket, parse, read half headers, parse, etc) your data callbacks may be called more than once. http_parser guarantees that data pointer is only valid for the lifetime of callback. You can also read() into a heap allocated buffer to avoid copying memory around if this fits your application. Reading headers may be a tricky task if you read/parse headers partially. Basically, you need to remember whether last header callback was field or value and apply the following logic: (on_header_field and on_header_value shortened to on_h_*) ------------------------ ------------ -------------------------------------------- | State (prev. callback) | Callback | Description/action | ------------------------ ------------ -------------------------------------------- | nothing (first call) | on_h_field | Allocate new buffer and copy callback data | | | | into it | ------------------------ ------------ -------------------------------------------- | value | on_h_field | New header started. | | | | Copy current name,value buffers to headers | | | | list and allocate new buffer for new name | ------------------------ ------------ -------------------------------------------- | field | on_h_field | Previous name continues. Reallocate name | | | | buffer and append callback data to it | ------------------------ ------------ -------------------------------------------- | field | on_h_value | Value for current header started. Allocate | | | | new buffer and copy callback data to it | ------------------------ ------------ -------------------------------------------- | value | on_h_value | Value continues. Reallocate value buffer | | | | and append callback data to it | ------------------------ ------------ -------------------------------------------- Parsing URLs A simplistic zero-copy URL parser is provided as http_parser_parse_url() . Users of this library may wish to use it to parse URLs constructed from consecutive on_url callbacks. See examples of reading in headers: partial example in C from http-parser tests in C from Node library in Javascript","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/#http-parser","text":"This is a parser for HTTP messages written in C. It parses both requests and responses. The parser is designed to be used in performance HTTP applications. It does not make any syscalls nor allocations, it does not buffer data, it can be interrupted at anytime. Depending on your architecture, it only requires about 40 bytes of data per message stream (in a web server that is per connection). Features: No dependencies Handles persistent streams (keep-alive). Decodes chunked encoding. Upgrade support Defends against buffer overflow attacks. The parser extracts the following information from HTTP messages: Header fields and values Content-Length Request method Response status code Transfer-Encoding HTTP version Request URL Message body","title":"HTTP Parser"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/#usage","text":"One http_parser object is used per TCP connection. Initialize the struct using http_parser_init() and set the callbacks. That might look something like this for a request parser: http_parser_settings settings; settings.on_url = my_url_callback; settings.on_header_field = my_header_field_callback; /* ... */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); parser->data = my_socket; When data is received on the socket execute the parser and check for errors. size_t len = 80*1024, nparsed; char buf[len]; ssize_t recved; recved = recv(fd, buf, len, 0); if (recved < 0) { /* Handle error. */ } /* Start up / continue the parser. * Note we pass recved==0 to signal that EOF has been received. */ nparsed = http_parser_execute(parser, &settings, buf, recved); if (parser->upgrade) { /* handle new protocol */ } else if (nparsed != recved) { /* Handle error. Usually just close the connection. */ } http_parser needs to know where the end of the stream is. For example, sometimes servers send responses without Content-Length and expect the client to consume input (for the body) until EOF. To tell http_parser about EOF, give 0 as the fourth parameter to http_parser_execute() . Callbacks and errors can still be encountered during an EOF, so one must still be prepared to receive them. Scalar valued message information such as status_code , method , and the HTTP version are stored in the parser structure. This data is only temporally stored in http_parser and gets reset on each new message. If this information is needed later, copy it out of the structure during the headers_complete callback. The parser decodes the transfer-encoding for both requests and responses transparently. That is, a chunked encoding is decoded before being sent to the on_body callback.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/#the-special-problem-of-upgrade","text":"http_parser supports upgrading the connection to a different protocol. An increasingly common example of this is the WebSocket protocol which sends a request like GET /demo HTTP/1.1 Upgrade: WebSocket Connection: Upgrade Host: example.com Origin: http://example.com WebSocket-Protocol: sample followed by non-HTTP data. (See RFC6455 for more information the WebSocket protocol.) To support this, the parser will treat this as a normal HTTP message without a body, issuing both on_headers_complete and on_message_complete callbacks. However http_parser_execute() will stop parsing at the end of the headers and return. The user is expected to check if parser->upgrade has been set to 1 after http_parser_execute() returns. Non-HTTP data begins at the buffer supplied offset by the return value of http_parser_execute() .","title":"The Special Problem of Upgrade"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/#callbacks","text":"During the http_parser_execute() call, the callbacks set in http_parser_settings will be executed. The parser maintains state and never looks behind, so buffering the data is not necessary. If you need to save certain data for later usage, you can do that from the callbacks. There are two types of callbacks: notification typedef int (*http_cb) (http_parser*); Callbacks: on_message_begin, on_headers_complete, on_message_complete. data typedef int (*http_data_cb) (http_parser*, const char *at, size_t length); Callbacks: (requests only) on_url, (common) on_header_field, on_header_value, on_body; Callbacks must return 0 on success. Returning a non-zero value indicates error to the parser, making it exit immediately. For cases where it is necessary to pass local information to/from a callback, the http_parser object's data field can be used. An example of such a case is when using threads to handle a socket connection, parse a request, and then give a response over that socket. By instantiation of a thread-local struct containing relevant data (e.g. accepted socket, allocated memory for callbacks to write into, etc), a parser's callbacks are able to communicate data between the scope of the thread and the scope of the callback in a threadsafe manner. This allows http_parser to be used in multi-threaded contexts. Example: typedef struct { socket_t sock; void* buffer; int buf_len; } custom_data_t; int my_url_callback(http_parser* parser, const char *at, size_t length) { /* access to thread local custom_data_t struct. Use this access save parsed data for later use into thread local buffer, or communicate over socket */ parser->data; ... return 0; } ... void http_parser_thread(socket_t sock) { int nparsed = 0; /* allocate memory for user data */ custom_data_t *my_data = malloc(sizeof(custom_data_t)); /* some information for use by callbacks. * achieves thread -> callback information flow */ my_data->sock = sock; /* instantiate a thread-local parser */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); /* initialise parser */ /* this custom data reference is accessible through the reference to the parser supplied to callback functions */ parser->data = my_data; http_parser_settings settings; /* set up callbacks */ settings.on_url = my_url_callback; /* execute parser */ nparsed = http_parser_execute(parser, &settings, buf, recved); ... /* parsed information copied from callback. can now perform action on data copied into thread-local memory from callbacks. achieves callback -> thread information flow */ my_data->buffer; ... } In case you parse HTTP message in chunks (i.e. read() request line from socket, parse, read half headers, parse, etc) your data callbacks may be called more than once. http_parser guarantees that data pointer is only valid for the lifetime of callback. You can also read() into a heap allocated buffer to avoid copying memory around if this fits your application. Reading headers may be a tricky task if you read/parse headers partially. Basically, you need to remember whether last header callback was field or value and apply the following logic: (on_header_field and on_header_value shortened to on_h_*) ------------------------ ------------ -------------------------------------------- | State (prev. callback) | Callback | Description/action | ------------------------ ------------ -------------------------------------------- | nothing (first call) | on_h_field | Allocate new buffer and copy callback data | | | | into it | ------------------------ ------------ -------------------------------------------- | value | on_h_field | New header started. | | | | Copy current name,value buffers to headers | | | | list and allocate new buffer for new name | ------------------------ ------------ -------------------------------------------- | field | on_h_field | Previous name continues. Reallocate name | | | | buffer and append callback data to it | ------------------------ ------------ -------------------------------------------- | field | on_h_value | Value for current header started. Allocate | | | | new buffer and copy callback data to it | ------------------------ ------------ -------------------------------------------- | value | on_h_value | Value continues. Reallocate value buffer | | | | and append callback data to it | ------------------------ ------------ --------------------------------------------","title":"Callbacks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser/#parsing-urls","text":"A simplistic zero-copy URL parser is provided as http_parser_parse_url() . Users of this library may wish to use it to parse URLs constructed from consecutive on_url callbacks. See examples of reading in headers: partial example in C from http-parser tests in C from Node library in Javascript","title":"Parsing URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/","text":"HTTP Parser This is a parser for HTTP written in Java, based quite heavily on the Ryan Dahl's C Version: http-parser available here: http://github.com/ry/http-parser It parses both requests and responses. The parser is designed to be used in performance HTTP applications. Features: No dependencies (probably won't be able to keep it up) Handles persistent streams (keep-alive). Decodes chunked encoding. Upgrade support The parser extracts the following information from HTTP messages: Header fields and values Content-Length Request method Response status code Transfer-Encoding HTTP version Request URL Message body Building use ant compile|test|jar Usage TODO: in the present form, usage of the Java version of the parser shouldn't be too difficult to figure out for someone familiar with the C version. More documentation will follow shortly, in case you're looking for an easy to use http library, this lib is probably not what you are looking for anyway ... All text after this paragraph (and most of the text above it) are from the original C version of the README and are currently only here for reference. In case you encounter any difficulties, find bugs, need help or have suggestions, feel free to contact me at (tim.becker@kuriositaet.de). One http_parser object is used per TCP connection. Initialize the struct using http_parser_init() and set the callbacks. That might look something like this for a request parser: http_parser_settings settings; settings.on_path = my_path_callback; settings.on_header_field = my_header_field_callback; /* ... */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); parser->data = my_socket; When data is received on the socket execute the parser and check for errors. size_t len = 80*1024, nparsed; char buf[len]; ssize_t recved; recved = recv(fd, buf, len, 0); if (recved < 0) { /* Handle error. */ } /* Start up / continue the parser. * Note we pass recved==0 to signal that EOF has been recieved. */ nparsed = http_parser_execute(parser, &settings, buf, recved); if (parser->upgrade) { /* handle new protocol */ } else if (nparsed != recved) { /* Handle error. Usually just close the connection. */ } HTTP needs to know where the end of the stream is. For example, sometimes servers send responses without Content-Length and expect the client to consume input (for the body) until EOF. To tell http_parser about EOF, give 0 as the forth parameter to http_parser_execute() . Callbacks and errors can still be encountered during an EOF, so one must still be prepared to receive them. Scalar valued message information such as status_code , method , and the HTTP version are stored in the parser structure. This data is only temporally stored in http_parser and gets reset on each new message. If this information is needed later, copy it out of the structure during the headers_complete callback. The parser decodes the transfer-encoding for both requests and responses transparently. That is, a chunked encoding is decoded before being sent to the on_body callback. The Special Problem of Upgrade HTTP supports upgrading the connection to a different protocol. An increasingly common example of this is the Web Socket protocol which sends a request like GET /demo HTTP/1.1 Upgrade: WebSocket Connection: Upgrade Host: example.com Origin: http://example.com WebSocket-Protocol: sample followed by non-HTTP data. (See http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75 for more information the Web Socket protocol.) To support this, the parser will treat this as a normal HTTP message without a body. Issuing both on_headers_complete and on_message_complete callbacks. However http_parser_execute() will stop parsing at the end of the headers and return. The user is expected to check if parser->upgrade has been set to 1 after http_parser_execute() returns. Non-HTTP data begins at the buffer supplied offset by the return value of http_parser_execute() . Callbacks During the http_parser_execute() call, the callbacks set in http_parser_settings will be executed. The parser maintains state and never looks behind, so buffering the data is not necessary. If you need to save certain data for later usage, you can do that from the callbacks. There are two types of callbacks: notification typedef int (*http_cb) (http_parser*); Callbacks: on_message_begin, on_headers_complete, on_message_complete. data typedef int (*http_data_cb) (http_parser*, const char *at, size_t length); Callbacks: (requests only) on_uri, (common) on_header_field, on_header_value, on_body; Callbacks must return 0 on success. Returning a non-zero value indicates error to the parser, making it exit immediately. In case you parse HTTP message in chunks (i.e. read() request line from socket, parse, read half headers, parse, etc) your data callbacks may be called more than once. Http-parser guarantees that data pointer is only valid for the lifetime of callback. You can also read() into a heap allocated buffer to avoid copying memory around if this fits your application. Reading headers may be a tricky task if you read/parse headers partially. Basically, you need to remember whether last header callback was field or value and apply following logic: (on_header_field and on_header_value shortened to on_h_*) ------------------------ ------------ -------------------------------------------- | State (prev. callback) | Callback | Description/action | ------------------------ ------------ -------------------------------------------- | nothing (first call) | on_h_field | Allocate new buffer and copy callback data | | | | into it | ------------------------ ------------ -------------------------------------------- | value | on_h_field | New header started. | | | | Copy current name,value buffers to headers | | | | list and allocate new buffer for new name | ------------------------ ------------ -------------------------------------------- | field | on_h_field | Previous name continues. Reallocate name | | | | buffer and append callback data to it | ------------------------ ------------ -------------------------------------------- | field | on_h_value | Value for current header started. Allocate | | | | new buffer and copy callback data to it | ------------------------ ------------ -------------------------------------------- | value | on_h_value | Value continues. Reallocate value buffer | | | | and append callback data to it | ------------------------ ------------ --------------------------------------------","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/#http-parser","text":"This is a parser for HTTP written in Java, based quite heavily on the Ryan Dahl's C Version: http-parser available here: http://github.com/ry/http-parser It parses both requests and responses. The parser is designed to be used in performance HTTP applications. Features: No dependencies (probably won't be able to keep it up) Handles persistent streams (keep-alive). Decodes chunked encoding. Upgrade support The parser extracts the following information from HTTP messages: Header fields and values Content-Length Request method Response status code Transfer-Encoding HTTP version Request URL Message body","title":"HTTP Parser"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/#building","text":"use ant compile|test|jar","title":"Building"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/#usage","text":"TODO: in the present form, usage of the Java version of the parser shouldn't be too difficult to figure out for someone familiar with the C version. More documentation will follow shortly, in case you're looking for an easy to use http library, this lib is probably not what you are looking for anyway ... All text after this paragraph (and most of the text above it) are from the original C version of the README and are currently only here for reference. In case you encounter any difficulties, find bugs, need help or have suggestions, feel free to contact me at (tim.becker@kuriositaet.de). One http_parser object is used per TCP connection. Initialize the struct using http_parser_init() and set the callbacks. That might look something like this for a request parser: http_parser_settings settings; settings.on_path = my_path_callback; settings.on_header_field = my_header_field_callback; /* ... */ http_parser *parser = malloc(sizeof(http_parser)); http_parser_init(parser, HTTP_REQUEST); parser->data = my_socket; When data is received on the socket execute the parser and check for errors. size_t len = 80*1024, nparsed; char buf[len]; ssize_t recved; recved = recv(fd, buf, len, 0); if (recved < 0) { /* Handle error. */ } /* Start up / continue the parser. * Note we pass recved==0 to signal that EOF has been recieved. */ nparsed = http_parser_execute(parser, &settings, buf, recved); if (parser->upgrade) { /* handle new protocol */ } else if (nparsed != recved) { /* Handle error. Usually just close the connection. */ } HTTP needs to know where the end of the stream is. For example, sometimes servers send responses without Content-Length and expect the client to consume input (for the body) until EOF. To tell http_parser about EOF, give 0 as the forth parameter to http_parser_execute() . Callbacks and errors can still be encountered during an EOF, so one must still be prepared to receive them. Scalar valued message information such as status_code , method , and the HTTP version are stored in the parser structure. This data is only temporally stored in http_parser and gets reset on each new message. If this information is needed later, copy it out of the structure during the headers_complete callback. The parser decodes the transfer-encoding for both requests and responses transparently. That is, a chunked encoding is decoded before being sent to the on_body callback.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/#the-special-problem-of-upgrade","text":"HTTP supports upgrading the connection to a different protocol. An increasingly common example of this is the Web Socket protocol which sends a request like GET /demo HTTP/1.1 Upgrade: WebSocket Connection: Upgrade Host: example.com Origin: http://example.com WebSocket-Protocol: sample followed by non-HTTP data. (See http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75 for more information the Web Socket protocol.) To support this, the parser will treat this as a normal HTTP message without a body. Issuing both on_headers_complete and on_message_complete callbacks. However http_parser_execute() will stop parsing at the end of the headers and return. The user is expected to check if parser->upgrade has been set to 1 after http_parser_execute() returns. Non-HTTP data begins at the buffer supplied offset by the return value of http_parser_execute() .","title":"The Special Problem of Upgrade"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/http_parser.rb-0.8.0/ext/ruby_http_parser/vendor/http-parser-java/#callbacks","text":"During the http_parser_execute() call, the callbacks set in http_parser_settings will be executed. The parser maintains state and never looks behind, so buffering the data is not necessary. If you need to save certain data for later usage, you can do that from the callbacks. There are two types of callbacks: notification typedef int (*http_cb) (http_parser*); Callbacks: on_message_begin, on_headers_complete, on_message_complete. data typedef int (*http_data_cb) (http_parser*, const char *at, size_t length); Callbacks: (requests only) on_uri, (common) on_header_field, on_header_value, on_body; Callbacks must return 0 on success. Returning a non-zero value indicates error to the parser, making it exit immediately. In case you parse HTTP message in chunks (i.e. read() request line from socket, parse, read half headers, parse, etc) your data callbacks may be called more than once. Http-parser guarantees that data pointer is only valid for the lifetime of callback. You can also read() into a heap allocated buffer to avoid copying memory around if this fits your application. Reading headers may be a tricky task if you read/parse headers partially. Basically, you need to remember whether last header callback was field or value and apply following logic: (on_header_field and on_header_value shortened to on_h_*) ------------------------ ------------ -------------------------------------------- | State (prev. callback) | Callback | Description/action | ------------------------ ------------ -------------------------------------------- | nothing (first call) | on_h_field | Allocate new buffer and copy callback data | | | | into it | ------------------------ ------------ -------------------------------------------- | value | on_h_field | New header started. | | | | Copy current name,value buffers to headers | | | | list and allocate new buffer for new name | ------------------------ ------------ -------------------------------------------- | field | on_h_field | Previous name continues. Reallocate name | | | | buffer and append callback data to it | ------------------------ ------------ -------------------------------------------- | field | on_h_value | Value for current header started. Allocate | | | | new buffer and copy callback data to it | ------------------------ ------------ -------------------------------------------- | value | on_h_value | Value continues. Reallocate value buffer | | | | and append callback data to it | ------------------------ ------------ --------------------------------------------","title":"Callbacks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/","text":"Ruby I18n Ruby Internationalization and localization solution. Features: translation and localization interpolation of values to translations (Ruby 1.9 compatible syntax) pluralization (CLDR compatible) customizable transliteration to ASCII flexible defaults bulk lookup lambdas as translation data custom key/scope separator custom exception handlers extensible architecture with a swappable backend Pluggable features: Cache Pluralization: lambda pluralizers stored as translation data Locale fallbacks, RFC4647 compliant (optionally: RFC4646 locale validation) Gettext support Translation metadata Alternative backends: Chain ActiveRecord (optionally: ActiveRecord::Missing and ActiveRecord::StoreProcs) KeyValue (uses active_support/json and cannot store procs) For more information and lots of resources see: http://ruby-i18n.org/wiki Installation gem install i18n Tests You can run tests both with rake test or just rake run any test file directly, e.g. ruby -Ilib:test test/api/simple_test.rb You can run all tests against all Gemfiles with ruby test/run_all.rb The structure of the test suite is a bit unusual as it uses modules to reuse particular tests in different test cases. The reason for this is that we need to enforce the I18n API across various combinations of extensions. E.g. the Simple backend alone needs to support the same API as any combination of feature and/or optimization modules included to the Simple backend. We test this by reusing the same API defition (implemented as test methods) in test cases with different setups. You can find the test cases that enforce the API in test/api. And you can find the API definition test methods in test/api/tests. All other test cases (e.g. as defined in test/backend, test/core_ext) etc. follow the usual test setup and should be easy to grok. Authors Sven Fuchs Joshua Harvey Stephan Soller Saimon Moore Matt Aimonetti Contributors https://github.com/svenfuchs/i18n/graphs/contributors License MIT License. See the included MIT-LICENSE file.","title":"Ruby I18n"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#ruby-i18n","text":"Ruby Internationalization and localization solution. Features: translation and localization interpolation of values to translations (Ruby 1.9 compatible syntax) pluralization (CLDR compatible) customizable transliteration to ASCII flexible defaults bulk lookup lambdas as translation data custom key/scope separator custom exception handlers extensible architecture with a swappable backend Pluggable features: Cache Pluralization: lambda pluralizers stored as translation data Locale fallbacks, RFC4647 compliant (optionally: RFC4646 locale validation) Gettext support Translation metadata Alternative backends: Chain ActiveRecord (optionally: ActiveRecord::Missing and ActiveRecord::StoreProcs) KeyValue (uses active_support/json and cannot store procs) For more information and lots of resources see: http://ruby-i18n.org/wiki","title":"Ruby I18n"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#installation","text":"gem install i18n","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#tests","text":"You can run tests both with rake test or just rake run any test file directly, e.g. ruby -Ilib:test test/api/simple_test.rb You can run all tests against all Gemfiles with ruby test/run_all.rb The structure of the test suite is a bit unusual as it uses modules to reuse particular tests in different test cases. The reason for this is that we need to enforce the I18n API across various combinations of extensions. E.g. the Simple backend alone needs to support the same API as any combination of feature and/or optimization modules included to the Simple backend. We test this by reusing the same API defition (implemented as test methods) in test cases with different setups. You can find the test cases that enforce the API in test/api. And you can find the API definition test methods in test/api/tests. All other test cases (e.g. as defined in test/backend, test/core_ext) etc. follow the usual test setup and should be easy to grok.","title":"Tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#authors","text":"Sven Fuchs Joshua Harvey Stephan Soller Saimon Moore Matt Aimonetti","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#contributors","text":"https://github.com/svenfuchs/i18n/graphs/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.7.0/#license","text":"MIT License. See the included MIT-LICENSE file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/","text":"Ruby I18n Ruby Internationalization and localization solution. See the Rails Guide for an example of its usage. (Note: This library can be used independently from Rails.) Features: translation and localization interpolation of values to translations (Ruby 1.9 compatible syntax) pluralization (CLDR compatible) customizable transliteration to ASCII flexible defaults bulk lookup lambdas as translation data custom key/scope separator custom exception handlers extensible architecture with a swappable backend Pluggable features: Cache Pluralization: lambda pluralizers stored as translation data Locale fallbacks, RFC4647 compliant (optionally: RFC4646 locale validation) Gettext support Translation metadata Alternative backends: Chain ActiveRecord (optionally: ActiveRecord::Missing and ActiveRecord::StoreProcs) KeyValue (uses active_support/json and cannot store procs) For more information and lots of resources see the 'Resources' page on the wiki . Installation gem install i18n Tests You can run tests both with rake test or just rake run any test file directly, e.g. ruby -Ilib:test test/api/simple_test.rb You can run all tests against all Gemfiles with ruby test/run_all.rb The structure of the test suite is a bit unusual as it uses modules to reuse particular tests in different test cases. The reason for this is that we need to enforce the I18n API across various combinations of extensions. E.g. the Simple backend alone needs to support the same API as any combination of feature and/or optimization modules included to the Simple backend. We test this by reusing the same API defition (implemented as test methods) in test cases with different setups. You can find the test cases that enforce the API in test/api. And you can find the API definition test methods in test/api/tests. All other test cases (e.g. as defined in test/backend, test/core_ext) etc. follow the usual test setup and should be easy to grok. Authors Sven Fuchs Joshua Harvey Stephan Soller Saimon Moore Matt Aimonetti Contributors https://github.com/svenfuchs/i18n/graphs/contributors License MIT License. See the included MIT-LICENSE file.","title":"Ruby I18n"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#ruby-i18n","text":"Ruby Internationalization and localization solution. See the Rails Guide for an example of its usage. (Note: This library can be used independently from Rails.) Features: translation and localization interpolation of values to translations (Ruby 1.9 compatible syntax) pluralization (CLDR compatible) customizable transliteration to ASCII flexible defaults bulk lookup lambdas as translation data custom key/scope separator custom exception handlers extensible architecture with a swappable backend Pluggable features: Cache Pluralization: lambda pluralizers stored as translation data Locale fallbacks, RFC4647 compliant (optionally: RFC4646 locale validation) Gettext support Translation metadata Alternative backends: Chain ActiveRecord (optionally: ActiveRecord::Missing and ActiveRecord::StoreProcs) KeyValue (uses active_support/json and cannot store procs) For more information and lots of resources see the 'Resources' page on the wiki .","title":"Ruby I18n"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#installation","text":"gem install i18n","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#tests","text":"You can run tests both with rake test or just rake run any test file directly, e.g. ruby -Ilib:test test/api/simple_test.rb You can run all tests against all Gemfiles with ruby test/run_all.rb The structure of the test suite is a bit unusual as it uses modules to reuse particular tests in different test cases. The reason for this is that we need to enforce the I18n API across various combinations of extensions. E.g. the Simple backend alone needs to support the same API as any combination of feature and/or optimization modules included to the Simple backend. We test this by reusing the same API defition (implemented as test methods) in test cases with different setups. You can find the test cases that enforce the API in test/api. And you can find the API definition test methods in test/api/tests. All other test cases (e.g. as defined in test/backend, test/core_ext) etc. follow the usual test setup and should be easy to grok.","title":"Tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#authors","text":"Sven Fuchs Joshua Harvey Stephan Soller Saimon Moore Matt Aimonetti","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#contributors","text":"https://github.com/svenfuchs/i18n/graphs/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/i18n-0.9.5/#license","text":"MIT License. See the included MIT-LICENSE file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/","text":"Jekyll Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages , which you can use to host sites right from your GitHub repositories. Philosophy Jekyll does what you tell it to do \u2014 no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content. Having trouble with OS X El Capitan? See: http://jekyllrb.com/docs/troubleshooting/#jekyll-amp-mac-os-x-1011 Getting Started Install the gem Read up about its Usage and Configuration Take a gander at some existing Sites Fork and Contribute your own modifications Have questions? Check out our official forum community Jekyll Talk or #jekyll on irc.freenode.net Code of Conduct In order to have a more open and welcoming community, Jekyll adheres to a code of conduct adapted from the Ruby on Rails code of conduct. Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let a maintainer (@parkr, @envygeeks, or @mattr-) know and we will address it as soon as possible. Diving In Migrate from your previous system Learn how the YAML Front Matter works Put information on your site with Variables Customize the Permalinks your posts are generated with Use the built-in Liquid Extensions to make your life easier Use custom Plugins to generate content specific to your site License See LICENSE .","title":"[Jekyll](http://jekyllrb.com/)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#jekyll","text":"Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages , which you can use to host sites right from your GitHub repositories.","title":"Jekyll"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#philosophy","text":"Jekyll does what you tell it to do \u2014 no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content.","title":"Philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#having-trouble-with-os-x-el-capitan","text":"See: http://jekyllrb.com/docs/troubleshooting/#jekyll-amp-mac-os-x-1011","title":"Having trouble with OS X El Capitan?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#getting-started","text":"Install the gem Read up about its Usage and Configuration Take a gander at some existing Sites Fork and Contribute your own modifications Have questions? Check out our official forum community Jekyll Talk or #jekyll on irc.freenode.net","title":"Getting Started"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#code-of-conduct","text":"In order to have a more open and welcoming community, Jekyll adheres to a code of conduct adapted from the Ruby on Rails code of conduct. Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let a maintainer (@parkr, @envygeeks, or @mattr-) know and we will address it as soon as possible.","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#diving-in","text":"Migrate from your previous system Learn how the YAML Front Matter works Put information on your site with Variables Customize the Permalinks your posts are generated with Use the built-in Liquid Extensions to make your life easier Use custom Plugins to generate content specific to your site","title":"Diving In"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/#license","text":"See LICENSE .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.1.6/lib/site_template/about/","text":"This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com You can find the source code for the Jekyll new theme at: {% include icon-github.html username=\"jglovier\" %} / jekyll-new You can find the source code for Jekyll at {% include icon-github.html username=\"jekyll\" %} / jekyll","title":"About"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/","text":"Jekyll Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages , which you can use to host sites right from your GitHub repositories. Philosophy Jekyll does what you tell it to do \u2014 no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content. See: https://jekyllrb.com/philosophy Having trouble? See: https://jekyllrb.com/docs/troubleshooting/ Getting Started Install the gem Read up about its Usage and Configuration Take a gander at some existing Sites Fork and Contribute your own modifications Have questions? Check out our official forum community Jekyll Talk or #jekyll on irc.freenode.net Code of Conduct In order to have a more open and welcoming community, Jekyll adheres to a code of conduct adapted from the Ruby on Rails code of conduct. Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our core team members Olivia , Pat , Matt or Parker know and we will address it as soon as possible. Diving In Migrate from your previous system Learn how the YAML Front Matter works Put information on your site with Variables Customize the Permalinks your posts are generated with Use the built-in Liquid Extensions to make your life easier Use custom Plugins to generate content specific to your site License See the LICENSE file.","title":"[Jekyll](https://jekyllrb.com/)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#jekyll","text":"Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages , which you can use to host sites right from your GitHub repositories.","title":"Jekyll"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#philosophy","text":"Jekyll does what you tell it to do \u2014 no more, no less. It doesn't try to outsmart users by making bold assumptions, nor does it burden them with needless complexity and configuration. Put simply, Jekyll gets out of your way and allows you to concentrate on what truly matters: your content. See: https://jekyllrb.com/philosophy","title":"Philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#having-trouble","text":"See: https://jekyllrb.com/docs/troubleshooting/","title":"Having trouble?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#getting-started","text":"Install the gem Read up about its Usage and Configuration Take a gander at some existing Sites Fork and Contribute your own modifications Have questions? Check out our official forum community Jekyll Talk or #jekyll on irc.freenode.net","title":"Getting Started"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#code-of-conduct","text":"In order to have a more open and welcoming community, Jekyll adheres to a code of conduct adapted from the Ruby on Rails code of conduct. Please adhere to this code of conduct in any interactions you have in the Jekyll community. It is strictly enforced on all official Jekyll repositories, websites, and resources. If you encounter someone violating these terms, please let one of our core team members Olivia , Pat , Matt or Parker know and we will address it as soon as possible.","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#diving-in","text":"Migrate from your previous system Learn how the YAML Front Matter works Put information on your site with Variables Customize the Permalinks your posts are generated with Use the built-in Liquid Extensions to make your life easier Use custom Plugins to generate content specific to your site","title":"Diving In"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/#license","text":"See the LICENSE file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/lib/site_template/","text":"","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/lib/site_template/about/","text":"This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at jekyllrb.com You can find the source code for Minima at GitHub: jekyll / minima You can find the source code for Jekyll at GitHub: jekyll / jekyll","title":"About"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-3.9.2/lib/theme_template/example/_post/","text":"Eos eu docendi tractatos sapientem, brute option menandri in vix, quando vivendo accommodare te ius. Nec melius fastidii constituam id, viderer theophrastus ad sit, hinc semper periculis cum id. Noluisse postulant assentior est in, no choro sadipscing repudiandae vix. Vis in euismod delenit dignissim. Ex quod nostrum sit, suas decore animal id ius, nobis solet detracto quo te. {% comment %} Might you have an include in your theme? Why not try it here! {% include my-themes-great-include.html %} {% endcomment %} No laudem altera adolescens has, volumus lucilius eum no. Eam ei nulla audiam efficiantur. Suas affert per no, ei tale nibh sea. Sea ne magna harum, in denique scriptorem sea, cetero alienum tibique ei eos. Labores persequeris referrentur eos ei.","title":" post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/","text":"Jekyll Avatar A Jekyll plugin for rendering GitHub avatars Jekyll Avatar makes it easy to add GitHub avatars to your Jekyll site by specifying a username. If performance is a concern, Jekyll Avatar is deeply integrated with the GitHub avatar API, ensuring avatars are cached and load in parallel. It even automatically upgrades users to Retina images, when supported. Installation Add the following to your site's Gemfile : gem 'jekyll-avatar' And add the following to your site's _config.yml file: plugins: - jekyll-avatar Note: If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . Usage Simply add the following, anywhere you'd like a user's avatar to appear: {% avatar [USERNAME] %} With [USERNAME] being the user's GitHub username: {% avatar hubot %} That will output: <img class=\"avatar avatar-small\" src=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=40\" alt=\"hubot\" srcset=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=40 1x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=80 2x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=120 3x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=160 4x\" width=\"40\" height=\"40\" /> Customizing You can customize the size of the resulting avatar by passing the size argument: {% avatar hubot size=50 %} That will output: <img class=\"avatar\" src=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=50\" alt=\"hubot\" srcset=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=50 1x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=100 2x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=150 3x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=200 4x\" width=\"50\" height=\"50\" /> Passing the username as variable You can also pass the username as a variable, like this: {% assign user=\"hubot\" %} {% avatar {{ username }} %} Or, if the variable is someplace a bit more complex, like a loop: {% assign employees = \"alice|bob\" | split:\"|\" %} {% for employee in employees %} {% avatar user=employee %} {% endfor %} Lazy loading images For pages showing a large number of avatars, you may want to load the images lazily. {% avatar hubot lazy=true %} This will set the data-src and data-srcset attributes on the <img> tag, which is compatible with many lazy load JavaScript plugins, such as: https://www.andreaverlicchi.eu/lazyload/ https://appelsiini.net/projects/lazyload/ Using with GitHub Enterprise To use Jekyll Avatars with GitHub Enterprise, you must set the PAGES_AVATARS_URL environmental variable. This should be the full URL to the avatars subdomain or subpath. For example: With subdomain isolation: PAGES_AVATARS_URL=\"https://avatars.github.example.com\" Without subdomain isolation: PAGES_AVATARS_URL=\"https://github.example.com/avatars\"","title":"Jekyll Avatar"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#jekyll-avatar","text":"A Jekyll plugin for rendering GitHub avatars Jekyll Avatar makes it easy to add GitHub avatars to your Jekyll site by specifying a username. If performance is a concern, Jekyll Avatar is deeply integrated with the GitHub avatar API, ensuring avatars are cached and load in parallel. It even automatically upgrades users to Retina images, when supported.","title":"Jekyll Avatar"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#installation","text":"Add the following to your site's Gemfile : gem 'jekyll-avatar' And add the following to your site's _config.yml file: plugins: - jekyll-avatar Note: If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins .","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#usage","text":"Simply add the following, anywhere you'd like a user's avatar to appear: {% avatar [USERNAME] %} With [USERNAME] being the user's GitHub username: {% avatar hubot %} That will output: <img class=\"avatar avatar-small\" src=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=40\" alt=\"hubot\" srcset=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=40 1x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=80 2x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=120 3x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=160 4x\" width=\"40\" height=\"40\" />","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#customizing","text":"You can customize the size of the resulting avatar by passing the size argument: {% avatar hubot size=50 %} That will output: <img class=\"avatar\" src=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=50\" alt=\"hubot\" srcset=\"https://avatars3.githubusercontent.com/hubot?v=3&amp;s=50 1x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=100 2x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=150 3x, https://avatars3.githubusercontent.com/hubot?v=3&amp;s=200 4x\" width=\"50\" height=\"50\" />","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#passing-the-username-as-variable","text":"You can also pass the username as a variable, like this: {% assign user=\"hubot\" %} {% avatar {{ username }} %} Or, if the variable is someplace a bit more complex, like a loop: {% assign employees = \"alice|bob\" | split:\"|\" %} {% for employee in employees %} {% avatar user=employee %} {% endfor %}","title":"Passing the username as variable"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#lazy-loading-images","text":"For pages showing a large number of avatars, you may want to load the images lazily. {% avatar hubot lazy=true %} This will set the data-src and data-srcset attributes on the <img> tag, which is compatible with many lazy load JavaScript plugins, such as: https://www.andreaverlicchi.eu/lazyload/ https://appelsiini.net/projects/lazyload/","title":"Lazy loading images"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/#using-with-github-enterprise","text":"To use Jekyll Avatars with GitHub Enterprise, you must set the PAGES_AVATARS_URL environmental variable. This should be the full URL to the avatars subdomain or subpath. For example: With subdomain isolation: PAGES_AVATARS_URL=\"https://avatars.github.example.com\" Without subdomain isolation: PAGES_AVATARS_URL=\"https://github.example.com/avatars\"","title":"Using with GitHub Enterprise"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/","text":"Contributor Covenant Code of Conduct Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation. Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at ben@balter.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. Attribution This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Contributor Covenant Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#contributor-covenant-code-of-conduct","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#our-pledge","text":"In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.","title":"Our Pledge"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#our-standards","text":"Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others' private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting","title":"Our Standards"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#our-responsibilities","text":"Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.","title":"Our Responsibilities"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#scope","text":"This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.","title":"Scope"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#enforcement","text":"Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at ben@balter.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.","title":"Enforcement"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CODE_OF_CONDUCT/#attribution","text":"This Code of Conduct is adapted from the Contributor Covenant , version 1.4, available at http://contributor-covenant.org/version/1/4","title":"Attribution"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/","text":"Contributing to Jekyll Avatar Hi there! We're thrilled that you'd like to contribute to Jekyll Avatar. Your help is essential for keeping it great. Jekyll Avatar is an open source project supported by the efforts of an entire community and built one contribution at a time by users like you. We'd love for you to get involved. Whatever your level of skill or however much time you can give, your contribution is greatly appreciated. There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests, helping other users by commenting on issues, or writing code which can be incorporated into Jekyll Avatar itself. Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests. How to report a bug Think you found a bug? Please check the list of open issues to see if your bug has already been reported. If it hasn't please submit a new issue . Here are a few tips for writing great bug reports: Describe the specific problem (e.g., \"widget doesn't turn clockwise\" versus \"getting an error\") Include the steps to reproduce the bug, what you expected to happen, and what happened instead Check that you are using the latest version of the project and its dependencies Include what version of the project your using, as well as any relevant dependencies Only include one bug per issue. If you have discovered two bugs, please file two issues Include screenshots or screencasts whenever possible Even if you don't know how to fix the bug, including a failing test may help others track it down If you find a security vulnerability, do not open an issue. Please email ben@balter.com instead. How to suggest a feature or enhancement If you find yourself wishing for a feature that doesn't exist in Jekyll Avatar, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that Jekyll Avatar has today have been added because our users saw the need. Feature requests are welcome. But take a moment to find out whether your idea fits with the scope and goals of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible, including describing the problem you're trying to solve. Open an issue which describes the feature you would like to see, why you want it, how it should work, etc. Your first contribution We'd love for you to contribute to the project. Unsure where to begin contributing to Jekyll Avatar? You can start by looking through these \"good first issue\" and \"help wanted\" issues: Good first issues - issues which should only require a few lines of code and a test or two Help wanted issues - issues which may be a bit more involved, but are specifically seeking community contributions p.s. Feel free to ask for help; everyone is a beginner at first :smiley_cat: How to propose changes Here's a few general guidelines for proposing changes: If you are changing any user-facing functionality, please be sure to update the documentation If you are adding a new behavior or changing an existing behavior, please be sure to update the corresponding test(s) Each pull request should implement one feature or bug fix. If you want to add or fix more than one thing, submit more than one pull request Do not commit changes to files that are irrelevant to your feature or bug fix Don't bump the version number in your pull request (it will be bumped prior to release) Write a good commit message At a high level, the process for proposing changes is: Fork and clone the project Configure and install the dependencies: script/bootstrap Make sure the tests pass on your machine: script/cibuild Create a descriptively named branch: git checkout -b my-branch-name Make your change, add tests and documentation, and make sure the tests still pass Push to your fork and submit a pull request describing your change Pat your self on the back and wait for your pull request to be reviewed and merged Interesting in submitting your first Pull Request? It's easy! You can learn how from this free series How to Contribute to an Open Source Project on GitHub Bootstrapping your local development environment script/bootstrap Running tests script/cibuild Code of conduct This project is governed by the Contributor Covenant Code of Conduct . By participating, you are expected to uphold this code. Additional Resources Contributing to Open Source on GitHub Using Pull Requests GitHub Help","title":"Contributing to Jekyll Avatar"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#contributing-to-jekyll-avatar","text":"Hi there! We're thrilled that you'd like to contribute to Jekyll Avatar. Your help is essential for keeping it great. Jekyll Avatar is an open source project supported by the efforts of an entire community and built one contribution at a time by users like you. We'd love for you to get involved. Whatever your level of skill or however much time you can give, your contribution is greatly appreciated. There are many ways to contribute, from writing tutorials or blog posts, improving the documentation, submitting bug reports and feature requests, helping other users by commenting on issues, or writing code which can be incorporated into Jekyll Avatar itself. Following these guidelines helps to communicate that you respect the time of the developers managing and developing this open source project. In return, they should reciprocate that respect in addressing your issue, assessing changes, and helping you finalize your pull requests.","title":"Contributing to Jekyll Avatar"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#how-to-report-a-bug","text":"Think you found a bug? Please check the list of open issues to see if your bug has already been reported. If it hasn't please submit a new issue . Here are a few tips for writing great bug reports: Describe the specific problem (e.g., \"widget doesn't turn clockwise\" versus \"getting an error\") Include the steps to reproduce the bug, what you expected to happen, and what happened instead Check that you are using the latest version of the project and its dependencies Include what version of the project your using, as well as any relevant dependencies Only include one bug per issue. If you have discovered two bugs, please file two issues Include screenshots or screencasts whenever possible Even if you don't know how to fix the bug, including a failing test may help others track it down If you find a security vulnerability, do not open an issue. Please email ben@balter.com instead.","title":"How to report a bug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#how-to-suggest-a-feature-or-enhancement","text":"If you find yourself wishing for a feature that doesn't exist in Jekyll Avatar, you are probably not alone. There are bound to be others out there with similar needs. Many of the features that Jekyll Avatar has today have been added because our users saw the need. Feature requests are welcome. But take a moment to find out whether your idea fits with the scope and goals of the project. It's up to you to make a strong case to convince the project's developers of the merits of this feature. Please provide as much detail and context as possible, including describing the problem you're trying to solve. Open an issue which describes the feature you would like to see, why you want it, how it should work, etc.","title":"How to suggest a feature or enhancement"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#your-first-contribution","text":"We'd love for you to contribute to the project. Unsure where to begin contributing to Jekyll Avatar? You can start by looking through these \"good first issue\" and \"help wanted\" issues: Good first issues - issues which should only require a few lines of code and a test or two Help wanted issues - issues which may be a bit more involved, but are specifically seeking community contributions p.s. Feel free to ask for help; everyone is a beginner at first :smiley_cat:","title":"Your first contribution"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#how-to-propose-changes","text":"Here's a few general guidelines for proposing changes: If you are changing any user-facing functionality, please be sure to update the documentation If you are adding a new behavior or changing an existing behavior, please be sure to update the corresponding test(s) Each pull request should implement one feature or bug fix. If you want to add or fix more than one thing, submit more than one pull request Do not commit changes to files that are irrelevant to your feature or bug fix Don't bump the version number in your pull request (it will be bumped prior to release) Write a good commit message At a high level, the process for proposing changes is: Fork and clone the project Configure and install the dependencies: script/bootstrap Make sure the tests pass on your machine: script/cibuild Create a descriptively named branch: git checkout -b my-branch-name Make your change, add tests and documentation, and make sure the tests still pass Push to your fork and submit a pull request describing your change Pat your self on the back and wait for your pull request to be reviewed and merged Interesting in submitting your first Pull Request? It's easy! You can learn how from this free series How to Contribute to an Open Source Project on GitHub","title":"How to propose changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#bootstrapping-your-local-development-environment","text":"script/bootstrap","title":"Bootstrapping your local development environment"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#running-tests","text":"script/cibuild","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#code-of-conduct","text":"This project is governed by the Contributor Covenant Code of Conduct . By participating, you are expected to uphold this code.","title":"Code of conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/CONTRIBUTING/#additional-resources","text":"Contributing to Open Source on GitHub Using Pull Requests GitHub Help","title":"Additional Resources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/SECURITY/","text":"Security Policy To report a security vulnerability, please email ben@balter.com .","title":"Security Policy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-avatar-0.7.0/docs/SECURITY/#security-policy","text":"To report a security vulnerability, please email ben@balter.com .","title":"Security Policy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/","text":"1.4.0 / 2022-01-30 Minor Enhancements Require at least commonmarker-0.22 (#44) Highlight fenced code-block contents with Rouge (#29) Bug Fixes Refactor away extra abstractions (#53) Development Fixes DRY begin-rescue-end block with a private helper (#28) Fix failing CI builds (#33) Remove gemspec dependency on Jekyll (#34) Test rendering with invalid configuration (#27) Refactor to improve readability (#37) Set up Continuous Integration via GH Actions (#46) Clean up gemspec (#47) Add workflow to release gem via GH Actions (#54) Documentation Update README to link to commonmarker (#38) 1.3.1 / 2019-03-25 Bug Fixes Re-introduce Ruby 2.3 support and test Jekyll 3.7+ (#32) 1.3.0 / 2019-03-22 Development Fixes Allow Jekyll v4 (still alpha) Drop Ruby < 2.4 chore(deps): rubocop-jekyll 0.3.0 (#25) Target Ruby 2.4 (#30) 1.2.0 / 2018-03-29 Minor Enhancements Allow render options (#4) Only set options once (#17) Development Fixes Test plugin on Windows (#13) Allow options passed to Rubocop (#15) Add tests (#16) Test against Ruby 2.5 (#18) Version with class (#19)","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#140-2022-01-30","text":"","title":"1.4.0 / 2022-01-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#minor-enhancements","text":"Require at least commonmarker-0.22 (#44) Highlight fenced code-block contents with Rouge (#29)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#bug-fixes","text":"Refactor away extra abstractions (#53)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#development-fixes","text":"DRY begin-rescue-end block with a private helper (#28) Fix failing CI builds (#33) Remove gemspec dependency on Jekyll (#34) Test rendering with invalid configuration (#27) Refactor to improve readability (#37) Set up Continuous Integration via GH Actions (#46) Clean up gemspec (#47) Add workflow to release gem via GH Actions (#54)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#documentation","text":"Update README to link to commonmarker (#38)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#131-2019-03-25","text":"","title":"1.3.1 / 2019-03-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#bug-fixes_1","text":"Re-introduce Ruby 2.3 support and test Jekyll 3.7+ (#32)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#130-2019-03-22","text":"","title":"1.3.0 / 2019-03-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#development-fixes_1","text":"Allow Jekyll v4 (still alpha) Drop Ruby < 2.4 chore(deps): rubocop-jekyll 0.3.0 (#25) Target Ruby 2.4 (#30)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#120-2018-03-29","text":"","title":"1.2.0 / 2018-03-29"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#minor-enhancements_1","text":"Allow render options (#4) Only set options once (#17)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/History/#development-fixes_2","text":"Test plugin on Windows (#13) Allow options passed to Rubocop (#15) Add tests (#16) Test against Ruby 2.5 (#18) Version with class (#19)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/Readme/","text":"jekyll-commonmark CommonMark Markdown converter for Jekyll Jekyll Markdown converter that uses libcmark-gfm (via commonmarker ). As a result, it is faster than Kramdown. GitHub Pages supports CommonMark through https://github.com/github/jekyll-commonmark-ghpages Installation Add the following to your Gemfile group :jekyll_plugins do gem 'jekyll-commonmark' end and modify your _config.yml to use CommonMark as your Markdown converter markdown: CommonMark Configuration To specify extensions and options for use in converting Markdown to HTML, supply options to the Markdown converter: commonmark: options: [\"SMART\", \"FOOTNOTES\"] extensions: [\"strikethrough\", \"autolink\", \"table\"]","title":"jekyll-commonmark"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/Readme/#jekyll-commonmark","text":"CommonMark Markdown converter for Jekyll Jekyll Markdown converter that uses libcmark-gfm (via commonmarker ). As a result, it is faster than Kramdown. GitHub Pages supports CommonMark through https://github.com/github/jekyll-commonmark-ghpages","title":"jekyll-commonmark"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/Readme/#installation","text":"Add the following to your Gemfile group :jekyll_plugins do gem 'jekyll-commonmark' end and modify your _config.yml to use CommonMark as your Markdown converter markdown: CommonMark","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-1.4.0/Readme/#configuration","text":"To specify extensions and options for use in converting Markdown to HTML, supply options to the Markdown converter: commonmark: options: [\"SMART\", \"FOOTNOTES\"] extensions: [\"strikethrough\", \"autolink\", \"table\"]","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-ghpages-0.2.0/","text":"jekyll-commonmark-ghpages GitHub Flavored Markdown converter for Jekyll, based on jekyll-commonmark Jekyll Markdown converter that uses libcmark-gfm , GitHub's fork of cmark , the reference parser for CommonMark, with some additions to ensure compatibility with existing Kramdown-based sites. Installation Add the following to your Gemfile : group :jekyll_plugins do gem 'jekyll-commonmark-ghpages' end and modify your _config.yml to use CommonMarkGhPages as your Markdown converter: markdown: CommonMarkGhPages This processor is currently in testing for use in GitHub Pages. To specify extensions and options for use in converting Markdown to HTML, supply options to the Markdown converter: commonmark: options: [\"UNSAFE\", \"SMART\", \"FOOTNOTES\"] extensions: [\"strikethrough\", \"autolink\", \"table\", \"tagfilter\"] \u26a0 The UNSAFE option is required for HTML rendering.","title":"jekyll-commonmark-ghpages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-ghpages-0.2.0/#jekyll-commonmark-ghpages","text":"GitHub Flavored Markdown converter for Jekyll, based on jekyll-commonmark Jekyll Markdown converter that uses libcmark-gfm , GitHub's fork of cmark , the reference parser for CommonMark, with some additions to ensure compatibility with existing Kramdown-based sites.","title":"jekyll-commonmark-ghpages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-commonmark-ghpages-0.2.0/#installation","text":"Add the following to your Gemfile : group :jekyll_plugins do gem 'jekyll-commonmark-ghpages' end and modify your _config.yml to use CommonMarkGhPages as your Markdown converter: markdown: CommonMarkGhPages This processor is currently in testing for use in GitHub Pages. To specify extensions and options for use in converting Markdown to HTML, supply options to the Markdown converter: commonmark: options: [\"UNSAFE\", \"SMART\", \"FOOTNOTES\"] extensions: [\"strikethrough\", \"autolink\", \"table\", \"tagfilter\"] \u26a0 The UNSAFE option is required for HTML rendering.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/","text":"Jekyll Feed plugin A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts Installation Add this line to your site's Gemfile: gem 'jekyll-feed' And then add this line to your site's _config.yml : plugins: - jekyll-feed :warning: If you are using Jekyll < 3.5.0 use the gems key instead of plugins . Usage The plugin will automatically generate an Atom feed at /feed.xml . Optional configuration options The plugin will automatically use any of the following configuration variables, if they are present in your site's _config.yml file. title or name - The title of the site, e.g., \"My awesome site\" description - A longer description of what your site is about, e.g., \"Where I blog about Jekyll and other awesome things\" url - The URL to your site, e.g., https://example.com . If none is provided, the plugin will try to use site.github.url . author - Global author information (see below) Already have a feed path? Do you already have an existing feed someplace other than /feed.xml , but are on a host like GitHub Pages that doesn't support machine-friendly redirects? If you simply swap out jekyll-feed for your existing template, your existing subscribers won't continue to get updates. Instead, you can specify a non-default path via your site's config. feed: path: atom.xml To note, you shouldn't have to do this unless you already have a feed you're using, and you can't or wish not to redirect existing subscribers. Optional front matter The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter: date title excerpt id category tags Additionally, the plugin will use the following values, if present in a post's YAML front matter: image - URL of an image that is representative of the post (can also be passed as image.path ) author - The author of the post, e.g., \"Dr. Jekyll\". If none is given, feed readers will look to the feed author as defined in _config.yml . Like the feed author, this can also be an object or a reference to an author in _data/authors.yml (see below). Author information TL;DR: In most cases, put author: [your name] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter Meta tags The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place {% feed_meta %} someplace in your template's <head> section, to output the necessary metadata. SmartyPants The plugin uses Jekyll's smartify filter for processing the site title and post titles. This will translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a title. Jekyll's smartify filter uses kramdown as a processor. Accordingly, if you do not want \"smart\" typographic punctuation, disabling them in kramdown in your _config.yml will disable them in your feed. For example: yml kramdown: smart_quotes: apos,apos,quot,quot typographic_symbols: {hellip: ...} Custom styling Want to style what your feed looks like in the browser? When a XSLT Styleheet file named feed.xslt.xml exists at the root of your repository, a link to this stylesheet is added to the generated feed. Why Atom, and not RSS? Great question. In short, Atom is a better format. Think of it like RSS 3.0. For more information, see this discussion on why we chose Atom over RSS 2.0 . Categories Jekyll Feed can generate feeds for each category. Simply define which categories you'd like feeds for in your config: feed: categories: - news - updates Posts limit By default the plugin limits the number of posts in the feed to 10. Simply define a new limit in your config: feed: posts_limit: 20 Collections Jekyll Feed can generate feeds for collections other than the Posts collection. This works best for chronological collections (e.g., collections with dates in the filenames). Simply define which collections you'd like feeds for in your config: feed: collections: - changes By default, collection feeds will be outputted to /feed/<COLLECTION>.xml . If you'd like to customize the output path, specify a collection's custom path as follows: feed: collections: changes: path: \"/changes.xml\" Finally, collections can also have category feeds which are outputted as /feed/<COLLECTION>/<CATEGORY>.xml . Specify categories like so: feed: collections: changes: path: \"/changes.xml\" categories: - news - updates Excerpt Only flag Optional flag excerpt_only allows you to exclude post content from the Atom feed. Default value is false for backward compatibility. When in config.yml is true than all posts in feed will be without <content> tags. feed: excerpt_only: true The same flag can be used directly in post file. It will be disable <content> tag for selected post. Settings in post file has higher priority than in config file. Tags To automatically generate feeds for each tag you apply to your posts you can add a tags setting to your config: feed: tags: true If there are tags you don't want included in this auto generation you can exclude them feed: tags: except: - tag-to-exclude - another-tag If you wish to change the location of these auto generated feeds ( /feed/by_tag/<TAG>.xml by default) you can provide an alternative folder for them to live in. feed: tags: path: \"alternative/path/for/tags/feeds/\" If you only want to generate feeds for a few tags you can also set this. feed: tags: only: - tag-to-include - another-tag Note that if you include a tag that is excluded a feed will not be generated for it. Contributing Fork it (https://github.com/jekyll/jekyll-feed/fork) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Jekyll Feed plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#jekyll-feed-plugin","text":"A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts","title":"Jekyll Feed plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#installation","text":"Add this line to your site's Gemfile: gem 'jekyll-feed' And then add this line to your site's _config.yml : plugins: - jekyll-feed :warning: If you are using Jekyll < 3.5.0 use the gems key instead of plugins .","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#usage","text":"The plugin will automatically generate an Atom feed at /feed.xml .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#optional-configuration-options","text":"The plugin will automatically use any of the following configuration variables, if they are present in your site's _config.yml file. title or name - The title of the site, e.g., \"My awesome site\" description - A longer description of what your site is about, e.g., \"Where I blog about Jekyll and other awesome things\" url - The URL to your site, e.g., https://example.com . If none is provided, the plugin will try to use site.github.url . author - Global author information (see below)","title":"Optional configuration options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#already-have-a-feed-path","text":"Do you already have an existing feed someplace other than /feed.xml , but are on a host like GitHub Pages that doesn't support machine-friendly redirects? If you simply swap out jekyll-feed for your existing template, your existing subscribers won't continue to get updates. Instead, you can specify a non-default path via your site's config. feed: path: atom.xml To note, you shouldn't have to do this unless you already have a feed you're using, and you can't or wish not to redirect existing subscribers.","title":"Already have a feed path?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#optional-front-matter","text":"The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter: date title excerpt id category tags Additionally, the plugin will use the following values, if present in a post's YAML front matter: image - URL of an image that is representative of the post (can also be passed as image.path ) author - The author of the post, e.g., \"Dr. Jekyll\". If none is given, feed readers will look to the feed author as defined in _config.yml . Like the feed author, this can also be an object or a reference to an author in _data/authors.yml (see below).","title":"Optional front matter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#author-information","text":"TL;DR: In most cases, put author: [your name] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter","title":"Author information"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#meta-tags","text":"The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place {% feed_meta %} someplace in your template's <head> section, to output the necessary metadata.","title":"Meta tags"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#smartypants","text":"The plugin uses Jekyll's smartify filter for processing the site title and post titles. This will translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a title. Jekyll's smartify filter uses kramdown as a processor. Accordingly, if you do not want \"smart\" typographic punctuation, disabling them in kramdown in your _config.yml will disable them in your feed. For example: yml kramdown: smart_quotes: apos,apos,quot,quot typographic_symbols: {hellip: ...}","title":"SmartyPants"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#custom-styling","text":"Want to style what your feed looks like in the browser? When a XSLT Styleheet file named feed.xslt.xml exists at the root of your repository, a link to this stylesheet is added to the generated feed.","title":"Custom styling"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#why-atom-and-not-rss","text":"Great question. In short, Atom is a better format. Think of it like RSS 3.0. For more information, see this discussion on why we chose Atom over RSS 2.0 .","title":"Why Atom, and not RSS?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#categories","text":"Jekyll Feed can generate feeds for each category. Simply define which categories you'd like feeds for in your config: feed: categories: - news - updates","title":"Categories"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#posts-limit","text":"By default the plugin limits the number of posts in the feed to 10. Simply define a new limit in your config: feed: posts_limit: 20","title":"Posts limit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#collections","text":"Jekyll Feed can generate feeds for collections other than the Posts collection. This works best for chronological collections (e.g., collections with dates in the filenames). Simply define which collections you'd like feeds for in your config: feed: collections: - changes By default, collection feeds will be outputted to /feed/<COLLECTION>.xml . If you'd like to customize the output path, specify a collection's custom path as follows: feed: collections: changes: path: \"/changes.xml\" Finally, collections can also have category feeds which are outputted as /feed/<COLLECTION>/<CATEGORY>.xml . Specify categories like so: feed: collections: changes: path: \"/changes.xml\" categories: - news - updates","title":"Collections"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#excerpt-only-flag","text":"Optional flag excerpt_only allows you to exclude post content from the Atom feed. Default value is false for backward compatibility. When in config.yml is true than all posts in feed will be without <content> tags. feed: excerpt_only: true The same flag can be used directly in post file. It will be disable <content> tag for selected post. Settings in post file has higher priority than in config file.","title":"Excerpt Only flag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#tags","text":"To automatically generate feeds for each tag you apply to your posts you can add a tags setting to your config: feed: tags: true If there are tags you don't want included in this auto generation you can exclude them feed: tags: except: - tag-to-exclude - another-tag If you wish to change the location of these auto generated feeds ( /feed/by_tag/<TAG>.xml by default) you can provide an alternative folder for them to live in. feed: tags: path: \"alternative/path/for/tags/feeds/\" If you only want to generate feeds for a few tags you can also set this. feed: tags: only: - tag-to-include - another-tag Note that if you include a tag that is excluded a feed will not be generated for it.","title":"Tags"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/#contributing","text":"Fork it (https://github.com/jekyll/jekyll-feed/fork) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/","text":"HEAD 0.15.1 / 2020-10-04 Bug Fixes MetaTag: when encoding for XML special characters, handle non-string objects (#326) 0.15.0 / 2020-07-10 Minor Enhancements Add support for drafts (#316) 0.14.0 / 2020-06-24 Minor Enhancements add support for categories (#153) (#233) add support for tags (#264) Make posts limit configurable (#314) XML escape the title field of feed_meta (#306) Bug Fixes Fix feed link when post title contains HTML (#305) Development Fixes Use Dir to list source files (#309) Require Ruby >=2.4.0 (#307) 0.13.0 / 2019-11-13 Minor Enhancements Excerpt only flag (#287) Add media:content tag (#290) Development Fixes test: use categories in post (#249) 0.12.1 / 2019-03-23 Bug Fixes Re-introduce Ruby 2.3 support and test Jekyll 3.7+ (#272) 0.12.0 / 2019-03-21 Allow Jekyll v4 (still alpha) Development Fixes style: fix offenses in specs (#248) dev: update CI and style settings (#258) Enable testing for Windows platform (#265) 0.11.0 / 2018-09-09 Development Fixes Require Ruby 2.3 (#222) Refactor to remove redundant calls and variables (#240) Minor Enhancements Categories and collections (#228) Remove check for older version of Jekyll (#234) 0.10.0 / 2018-06-04 Bug Fixes Escape image URL (#209) Development Fixes Rubocop 0.55 (#223) Bump Rubocop (#230) Minor Enhancements Support Typhoeus 1.0 (#232) 0.9.3 / 2018-02-04 Define path with __dir (#187) Bump Ruby for Travis (#188) Documentation Fix: Add note about using plugins instead of gems key (#197) Add documentation for disabling smartify filter (#205) Use https in more places. (#165) Development Fixes Rubocop: Target Ruby 2.2 (#195) Test feeds that have a site.lang (#164) Test against Ruby 2.5 (#201) Minor Enhancements fix template for posts with post.lang defined (#168) 0.9.3 / 2017-03-28 0.9.1 / 2017-02-17 Minor Enhancements Update feed.xml (#162) 0.9.0 / 2017-02-16 Minor Enhancements Use absolute_url to generate the feed_meta url (#150) Make feed stylesheet optional (#149) Use new normalize_whitespace filter (#143) Feed entries must contain (#152) Remove trailing slash from feed ID (#159) Development Fixes Simplify minify regular expression (#141) Namespace as JekyllFeed (#151) rubocop -a (#160) Bug Fixes Filter out drafts before limit (#154) 0.8.0 / 2016-10-06 Use filters to clean up Liquid template (#134) Minor Enhancements Don't set @site.config[\"time\"] on feed generation (#138) pedantry Appease Rubocop (#139) 0.7.2 / 2016-10-06 Support image.path when post.image is an object (#137) 0.7.1 / 2016-09-26 Assign url_base before first usage (#133) 0.7.0 / 2016-09-06 Use type=\"html\" to skirt around double escaping problem (#127) 0.6.0 / 2016-07-08 Cleanup post_author logic (#113) Add XML stylesheet example with XSLT (#119) DRY up and add more doc (#120) Use smartify filter (#117) 0.5.1 / 2016-04-18 Fix mangling of whitespace when site.lang is set (#110) 0.5.0 / 2016-04-13 Consolidate regexps for stripping whitespace (#82) Only test against Jekyll 3 (#99) Think about how i18n might work (#75) Find author by reference (#106) Drop support for Jekyll 2 (#105) Add support for post image (#104) Minor Enhancements Use Module#method_defined? (#83) Use site.title for meta tag if available (#100) Development Fixes Do not require jekyll-last-modified-at in tests (#87) Add Rubocop (#81) Correct typo in tests (#102) Simplify testing feed_meta tag (#101) Quiet known warnings in tests (#103) 0.4.0 / 2015-12-30 Feed uses site.title , or site.name if title doesn't exist (#72) Replace newlines with spaces in title and summary elements (#67) Properly render post content with Jekyll (#73)","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#head","text":"","title":"HEAD"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0151-2020-10-04","text":"","title":"0.15.1 / 2020-10-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#bug-fixes","text":"MetaTag: when encoding for XML special characters, handle non-string objects (#326)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0150-2020-07-10","text":"","title":"0.15.0 / 2020-07-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements","text":"Add support for drafts (#316)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0140-2020-06-24","text":"","title":"0.14.0 / 2020-06-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_1","text":"add support for categories (#153) (#233) add support for tags (#264) Make posts limit configurable (#314) XML escape the title field of feed_meta (#306)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#bug-fixes_1","text":"Fix feed link when post title contains HTML (#305)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes","text":"Use Dir to list source files (#309) Require Ruby >=2.4.0 (#307)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0130-2019-11-13","text":"","title":"0.13.0 / 2019-11-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_2","text":"Excerpt only flag (#287) Add media:content tag (#290)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_1","text":"test: use categories in post (#249)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0121-2019-03-23","text":"","title":"0.12.1 / 2019-03-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#bug-fixes_2","text":"Re-introduce Ruby 2.3 support and test Jekyll 3.7+ (#272)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0120-2019-03-21","text":"Allow Jekyll v4 (still alpha)","title":"0.12.0 / 2019-03-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_2","text":"style: fix offenses in specs (#248) dev: update CI and style settings (#258) Enable testing for Windows platform (#265)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0110-2018-09-09","text":"","title":"0.11.0 / 2018-09-09"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_3","text":"Require Ruby 2.3 (#222) Refactor to remove redundant calls and variables (#240)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_3","text":"Categories and collections (#228) Remove check for older version of Jekyll (#234)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#0100-2018-06-04","text":"","title":"0.10.0 / 2018-06-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#bug-fixes_3","text":"Escape image URL (#209)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_4","text":"Rubocop 0.55 (#223) Bump Rubocop (#230)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_4","text":"Support Typhoeus 1.0 (#232)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#093-2018-02-04","text":"Define path with __dir (#187) Bump Ruby for Travis (#188)","title":"0.9.3 / 2018-02-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#documentation","text":"Fix: Add note about using plugins instead of gems key (#197) Add documentation for disabling smartify filter (#205) Use https in more places. (#165)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_5","text":"Rubocop: Target Ruby 2.2 (#195) Test feeds that have a site.lang (#164) Test against Ruby 2.5 (#201)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_5","text":"fix template for posts with post.lang defined (#168)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#093-2017-03-28","text":"","title":"0.9.3 / 2017-03-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#091-2017-02-17","text":"","title":"0.9.1 / 2017-02-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_6","text":"Update feed.xml (#162)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#090-2017-02-16","text":"","title":"0.9.0 / 2017-02-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_7","text":"Use absolute_url to generate the feed_meta url (#150) Make feed stylesheet optional (#149) Use new normalize_whitespace filter (#143) Feed entries must contain (#152) Remove trailing slash from feed ID (#159)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_6","text":"Simplify minify regular expression (#141) Namespace as JekyllFeed (#151) rubocop -a (#160)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#bug-fixes_4","text":"Filter out drafts before limit (#154)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#080-2016-10-06","text":"Use filters to clean up Liquid template (#134)","title":"0.8.0 / 2016-10-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_8","text":"Don't set @site.config[\"time\"] on feed generation (#138)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#pedantry","text":"Appease Rubocop (#139)","title":"pedantry"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#072-2016-10-06","text":"Support image.path when post.image is an object (#137)","title":"0.7.2 / 2016-10-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#071-2016-09-26","text":"Assign url_base before first usage (#133)","title":"0.7.1 / 2016-09-26"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#070-2016-09-06","text":"Use type=\"html\" to skirt around double escaping problem (#127)","title":"0.7.0 / 2016-09-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#060-2016-07-08","text":"Cleanup post_author logic (#113) Add XML stylesheet example with XSLT (#119) DRY up and add more doc (#120) Use smartify filter (#117)","title":"0.6.0 / 2016-07-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#051-2016-04-18","text":"Fix mangling of whitespace when site.lang is set (#110)","title":"0.5.1 / 2016-04-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#050-2016-04-13","text":"Consolidate regexps for stripping whitespace (#82) Only test against Jekyll 3 (#99) Think about how i18n might work (#75) Find author by reference (#106) Drop support for Jekyll 2 (#105) Add support for post image (#104)","title":"0.5.0 / 2016-04-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#minor-enhancements_9","text":"Use Module#method_defined? (#83) Use site.title for meta tag if available (#100)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#development-fixes_7","text":"Do not require jekyll-last-modified-at in tests (#87) Add Rubocop (#81) Correct typo in tests (#102) Simplify testing feed_meta tag (#101) Quiet known warnings in tests (#103)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.15.1/History/#040-2015-12-30","text":"Feed uses site.title , or site.name if title doesn't exist (#72) Replace newlines with spaces in title and summary elements (#67) Properly render post content with Jekyll (#73)","title":"0.4.0 / 2015-12-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/","text":"Jekyll Feed plugin A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts Installation Add this line to your site's Gemfile: gem 'jekyll-feed' And then add this line to your site's _config.yml : gems: - jekyll-feed Usage The plugin will automatically generate an Atom feed at /feed.xml . Optional configuration options The plugin will automatically use any of the following configuration variables, if they are present in your site's _config.yml file. title or name - The title of the site, e.g., \"My awesome site\" description - A longer description of what your site is about, e.g., \"Where I blog about Jekyll and other awesome things\" url - The URL to your site, e.g., http://example.com . If none is provided, the plugin will try to use site.github.url . author - Global author information (see below) Already have a feed path? Do you already have an existing feed someplace other than /feed.xml , but are on a host like GitHub Pages that doesn't support machine-friendly redirects? If you simply swap out jekyll-feed for your existing template, your existing subscribers won't continue to get updates. Instead, you can specify a non-default path via your site's config. feed: path: atom.xml To note, you shouldn't have to do this unless you already have a feed you're using, and you can't or wish not to redirect existing subscribers. Optional front matter The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter: date title excerpt id category tags Additionally, the plugin will use the following values, if present in a post's YAML front matter: author - The author of the post, e.g., \"Dr. Jekyll\". If none is given, feed readers will look to the feed author as defined in _config.yml . Like the feed author, this can also be an object or a reference to an author in _data/authors.yml (see below). Author information TL;DR: In most cases, put author: [your name] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter image - URL of an image that is representative of the post. Meta tags The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place {% feed_meta %} someplace in your template's <head> section, to output the necessary metadata. Why Atom, and not RSS? Great question. In short, Atom is a better format. Think of it like RSS 3.0. For more information, see this discussion on why we chose Atom over RSS 2.0 . Contributing Fork it (https://github.com/jekyll/jekyll-feed/fork) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Jekyll Feed plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#jekyll-feed-plugin","text":"A Jekyll plugin to generate an Atom (RSS-like) feed of your Jekyll posts","title":"Jekyll Feed plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#installation","text":"Add this line to your site's Gemfile: gem 'jekyll-feed' And then add this line to your site's _config.yml : gems: - jekyll-feed","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#usage","text":"The plugin will automatically generate an Atom feed at /feed.xml .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#optional-configuration-options","text":"The plugin will automatically use any of the following configuration variables, if they are present in your site's _config.yml file. title or name - The title of the site, e.g., \"My awesome site\" description - A longer description of what your site is about, e.g., \"Where I blog about Jekyll and other awesome things\" url - The URL to your site, e.g., http://example.com . If none is provided, the plugin will try to use site.github.url . author - Global author information (see below)","title":"Optional configuration options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#already-have-a-feed-path","text":"Do you already have an existing feed someplace other than /feed.xml , but are on a host like GitHub Pages that doesn't support machine-friendly redirects? If you simply swap out jekyll-feed for your existing template, your existing subscribers won't continue to get updates. Instead, you can specify a non-default path via your site's config. feed: path: atom.xml To note, you shouldn't have to do this unless you already have a feed you're using, and you can't or wish not to redirect existing subscribers.","title":"Already have a feed path?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#optional-front-matter","text":"The plugin will use the following post metadata, automatically generated by Jekyll, which you can override via a post's YAML front matter: date title excerpt id category tags Additionally, the plugin will use the following values, if present in a post's YAML front matter: author - The author of the post, e.g., \"Dr. Jekyll\". If none is given, feed readers will look to the feed author as defined in _config.yml . Like the feed author, this can also be an object or a reference to an author in _data/authors.yml (see below).","title":"Optional front matter"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#author-information","text":"TL;DR: In most cases, put author: [your name] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter image - URL of an image that is representative of the post.","title":"Author information"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#meta-tags","text":"The plugin exposes a helper tag to expose the appropriate meta tags to support automated discovery of your feed. Simply place {% feed_meta %} someplace in your template's <head> section, to output the necessary metadata.","title":"Meta tags"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#why-atom-and-not-rss","text":"Great question. In short, Atom is a better format. Think of it like RSS 3.0. For more information, see this discussion on why we chose Atom over RSS 2.0 .","title":"Why Atom, and not RSS?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/#contributing","text":"Fork it (https://github.com/jekyll/jekyll-feed/fork) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/","text":"0.5.1 / 2016-04-18 Fix mangling of whitespace when site.lang is set (#110) 0.5.0 / 2016-04-13 Consolidate regexps for stripping whitespace (#82) Only test against Jekyll 3 (#99) Think about how i18n might work (#75) Find author by reference (#106) Drop support for Jekyll 2 (#105) Add support for post image (#104) Minor Enhancements Use Module#method_defined? (#83) Use site.title for meta tag if available (#100) Development Fixes Do not require jekyll-last-modified-at in tests (#87) Add Rubocop (#81) Correct typo in tests (#102) Simplify testing feed_meta tag (#101) Quiet known warnings in tests (#103) 0.4.0 / 2015-12-30 Feed uses site.title , or site.name if title doesn't exist (#72) Replace newlines with spaces in title and summary elements (#67) Properly render post content with Jekyll (#73)","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/#051-2016-04-18","text":"Fix mangling of whitespace when site.lang is set (#110)","title":"0.5.1 / 2016-04-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/#050-2016-04-13","text":"Consolidate regexps for stripping whitespace (#82) Only test against Jekyll 3 (#99) Think about how i18n might work (#75) Find author by reference (#106) Drop support for Jekyll 2 (#105) Add support for post image (#104)","title":"0.5.0 / 2016-04-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/#minor-enhancements","text":"Use Module#method_defined? (#83) Use site.title for meta tag if available (#100)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/#development-fixes","text":"Do not require jekyll-last-modified-at in tests (#87) Add Rubocop (#81) Correct typo in tests (#102) Simplify testing feed_meta tag (#101) Quiet known warnings in tests (#103)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/History/#040-2015-12-30","text":"Feed uses site.title , or site.name if title doesn't exist (#72) Replace newlines with spaces in title and summary elements (#67) Properly render post content with Jekyll (#73)","title":"0.4.0 / 2015-12-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_drafts/2015-01-12-a-draft/","text":"--- This is a draft.","title":"2015 01 12 a draft"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_drafts/2015-01-12-a-draft/#-","text":"This is a draft.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2013-12-12-dec-the-second/","text":"December the twelfth, actually.","title":"December the twelfth, actually."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2013-12-12-dec-the-second/#december-the-twelfth-actually","text":"","title":"December the twelfth, actually."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2014-03-02-march-the-second/","text":"March the second!","title":"2014 03 02 march the second"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2014-03-04-march-the-fourth/","tags":["\"/><VADER>"],"text":"March the fourth!","title":"2014 03 04 march the fourth"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-01-18-jekyll-last-modified-at/","text":"Please don't modify this file. It's modified time is important.","title":"2015 01 18 jekyll last modified at"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-02-12-strip-newlines/","text":"","title":"The plugin will properly strip newlines."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-05-12-liquid/","text":"--- {% capture liquidstring %} Liquid is not rendered. {% endcapture %} {{ liquidstring | replace:'not ','' }}","title":"2015 05 12 liquid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-05-12-liquid/#-","text":"{% capture liquidstring %} Liquid is not rendered. {% endcapture %} {{ liquidstring | replace:'not ','' }}","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-05-18-author-detail/","text":"December the twelfth, actually.","title":"December the twelfth, actually."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-feed-0.5.1/spec/fixtures/_posts/2015-05-18-author-detail/#december-the-twelfth-actually","text":"","title":"December the twelfth, actually."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/","text":"Jekyll::Gist Liquid tag for displaying GitHub Gists in Jekyll sites: {% gist %} . Installation Add this line to your application's Gemfile: gem 'jekyll-gist' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-gist Finally, add the following to your site's _config.yml : gems: - jekyll-gist Usage Use the tag as follows in your Jekyll pages, posts and collections: {% gist parkr/c08ee0f2726fd0e3909d %} This will create the associated script tag: <script src=\"https://gist.github.com/parkr/c08ee0f2726fd0e3909d.js\"> </script> You may optionally specify a filename after the gist_id : {% gist parkr/c08ee0f2726fd0e3909d test.md %} This will produce the correct URL to show just the specified file in your post rather than the entire Gist. Pro-tip : If you provide a personal access token with Gist scope, as the environmental variable JEKYLL_GITHUB_TOKEN , Jekyll Gist will use the Gist API to speed up site generation. Disabling noscript support By default, Jekyll Gist will make an HTTP call per Gist to retrieve the raw content of the Gist. This information is used to propagate noscript tags for search engines and browsers without Javascript support. If you'd like to disable this feature, for example, to speed up builds locally, simply add the following to your site's _config.yml : gist: noscript: false Contributing Fork it ( https://github.com/jekyll/jekyll-gist/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Jekyll::Gist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/#jekyllgist","text":"Liquid tag for displaying GitHub Gists in Jekyll sites: {% gist %} .","title":"Jekyll::Gist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/#installation","text":"Add this line to your application's Gemfile: gem 'jekyll-gist' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-gist Finally, add the following to your site's _config.yml : gems: - jekyll-gist","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/#usage","text":"Use the tag as follows in your Jekyll pages, posts and collections: {% gist parkr/c08ee0f2726fd0e3909d %} This will create the associated script tag: <script src=\"https://gist.github.com/parkr/c08ee0f2726fd0e3909d.js\"> </script> You may optionally specify a filename after the gist_id : {% gist parkr/c08ee0f2726fd0e3909d test.md %} This will produce the correct URL to show just the specified file in your post rather than the entire Gist. Pro-tip : If you provide a personal access token with Gist scope, as the environmental variable JEKYLL_GITHUB_TOKEN , Jekyll Gist will use the Gist API to speed up site generation.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/#disabling-noscript-support","text":"By default, Jekyll Gist will make an HTTP call per Gist to retrieve the raw content of the Gist. This information is used to propagate noscript tags for search engines and browsers without Javascript support. If you'd like to disable this feature, for example, to speed up builds locally, simply add the following to your site's _config.yml : gist: noscript: false","title":"Disabling noscript support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/#contributing","text":"Fork it ( https://github.com/jekyll/jekyll-gist/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/","text":"1.4.0 / 2015-12-01 Allow noscript fallback to be disabled (#29) Use Octokit to fetch Gist content when passed JEKYLL_GITHUB_TOKEN in env(#28) 1.3.5 / 2015-10-23 Fix encoding error for noscript code (#23) Test against Jekyll 3, 2, and the github-pages gem (#19) 1.3.4 / 2015-08-28 Catch TimeoutError to further support 1.9.3 (#16) 1.3.3 / 2015-08-20 Fix gemspec to allow Ruby 1.9.3 (relates to #14) 1.3.2 / 2016-08-19 Re-add support for Ruby 1.9.3. Fixes #11 for 1.9.3 (#14) Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11) 1.3.1 / 2015-08-16 (yanked) Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11) 1.3.0 / 2015-08-05 Added an noscript fallback for browsers without JavaScript enabled. (#7) 1.2.1 / 2015-03-22 Use has_key? (#6) 1.2.0 / 2015-03-21 Minor Enhancements Allow variables as parameters (#4) Development Fixes Fix RSpec deprecation warning (#5) 1.1.0 / 2014-06-18 Minor Enhancements Update regex to allow for new sha-ish ids in Gist. (#1) 1.0.0 / 2014-06-01 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#140-2015-12-01","text":"Allow noscript fallback to be disabled (#29) Use Octokit to fetch Gist content when passed JEKYLL_GITHUB_TOKEN in env(#28)","title":"1.4.0 / 2015-12-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#135-2015-10-23","text":"Fix encoding error for noscript code (#23) Test against Jekyll 3, 2, and the github-pages gem (#19)","title":"1.3.5 / 2015-10-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#134-2015-08-28","text":"Catch TimeoutError to further support 1.9.3 (#16)","title":"1.3.4 / 2015-08-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#133-2015-08-20","text":"Fix gemspec to allow Ruby 1.9.3 (relates to #14)","title":"1.3.3 / 2015-08-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#132-2016-08-19","text":"Re-add support for Ruby 1.9.3. Fixes #11 for 1.9.3 (#14) Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11)","title":"1.3.2 / 2016-08-19"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#131-2015-08-16-yanked","text":"Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11)","title":"1.3.1 / 2015-08-16 (yanked)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#130-2015-08-05","text":"Added an noscript fallback for browsers without JavaScript enabled. (#7)","title":"1.3.0 / 2015-08-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#121-2015-03-22","text":"Use has_key? (#6)","title":"1.2.1 / 2015-03-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#120-2015-03-21","text":"","title":"1.2.0 / 2015-03-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#minor-enhancements","text":"Allow variables as parameters (#4)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#development-fixes","text":"Fix RSpec deprecation warning (#5)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#110-2014-06-18","text":"","title":"1.1.0 / 2014-06-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#minor-enhancements_1","text":"Update regex to allow for new sha-ish ids in Gist. (#1)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.4.0/History/#100-2014-06-01","text":"Birthday!","title":"1.0.0 / 2014-06-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/","text":"Jekyll::Gist Liquid tag for displaying GitHub Gists in Jekyll sites: {% gist %} . Installation Add this line to your application's Gemfile: $ gem 'jekyll-gist' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-gist Then add the following to your site's _config.yml : plugins: - jekyll-gist \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . Usage Use the tag as follows in your Jekyll pages, posts and collections: {% gist c08ee0f2726fd0e3909d %} This will create the associated script tag: <script src=\"https://gist.github.com/parkr/c08ee0f2726fd0e3909d.js\"> </script> You may optionally specify a filename after the gist_id : {% gist c08ee0f2726fd0e3909d test.md %} This will produce the correct URL to show just the specified file in your post rather than the entire Gist. Pro-tip : If you provide a personal access token with Gist scope, as the environmental variable JEKYLL_GITHUB_TOKEN , Jekyll Gist will use the Gist API to speed up site generation. Disabling noscript support By default, Jekyll Gist will make an HTTP call per Gist to retrieve the raw content of the Gist. This information is used to propagate noscript tags for search engines and browsers without Javascript support. If you'd like to disable this feature, for example, to speed up builds locally, add the following to your site's _config.yml : gist: noscript: false Contributing Fork it ( https://github.com/jekyll/jekyll-gist/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Jekyll::Gist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/#jekyllgist","text":"Liquid tag for displaying GitHub Gists in Jekyll sites: {% gist %} .","title":"Jekyll::Gist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/#installation","text":"Add this line to your application's Gemfile: $ gem 'jekyll-gist' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-gist Then add the following to your site's _config.yml : plugins: - jekyll-gist \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins .","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/#usage","text":"Use the tag as follows in your Jekyll pages, posts and collections: {% gist c08ee0f2726fd0e3909d %} This will create the associated script tag: <script src=\"https://gist.github.com/parkr/c08ee0f2726fd0e3909d.js\"> </script> You may optionally specify a filename after the gist_id : {% gist c08ee0f2726fd0e3909d test.md %} This will produce the correct URL to show just the specified file in your post rather than the entire Gist. Pro-tip : If you provide a personal access token with Gist scope, as the environmental variable JEKYLL_GITHUB_TOKEN , Jekyll Gist will use the Gist API to speed up site generation.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/#disabling-noscript-support","text":"By default, Jekyll Gist will make an HTTP call per Gist to retrieve the raw content of the Gist. This information is used to propagate noscript tags for search engines and browsers without Javascript support. If you'd like to disable this feature, for example, to speed up builds locally, add the following to your site's _config.yml : gist: noscript: false","title":"Disabling noscript support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/#contributing","text":"Fork it ( https://github.com/jekyll/jekyll-gist/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create a new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/","text":"HEAD Documentation replace 'plugins' key in config with 'gems' (#46) Docs: Remove username in gist (#54) Development Fixes Remove testing for Jekyll 2.x Requires Ruby > 2.1 Add release script Inherit Jekyll's rubocop config for consistency (#48) define path with dir (#47) 1.4.1 / 2017-06-21 Don't ask .empty? until it's a String. (#38) rename Liquid 4 has_key? to key? to add compatibility for liquid 4 (#41) Test against Ruby 2.1 to 2.4 (#45) 1.4.0 / 2015-12-01 Allow noscript fallback to be disabled (#29) Use Octokit to fetch Gist content when passed JEKYLL_GITHUB_TOKEN in env(#28) 1.3.5 / 2015-10-23 Fix encoding error for noscript code (#23) Test against Jekyll 3, 2, and the github-pages gem (#19) 1.3.4 / 2015-08-28 Catch TimeoutError to further support 1.9.3 (#16) 1.3.3 / 2015-08-20 Fix gemspec to allow Ruby 1.9.3 (relates to #14) 1.3.2 / 2016-08-19 Re-add support for Ruby 1.9.3. Fixes #11 for 1.9.3 (#14) Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11) 1.3.1 / 2015-08-16 Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11) 1.3.0 / 2015-08-05 Added an noscript fallback for browsers without JavaScript enabled. (#7) 1.2.1 / 2015-03-22 Use has_key? (#6) 1.2.0 / 2015-03-21 Minor Enhancements Allow variables as parameters (#4) Development Fixes Fix RSpec deprecation warning (#5) 1.1.0 / 2014-06-18 Minor Enhancements Update regex to allow for new sha-ish ids in Gist. (#1) 1.0.0 / 2014-06-01 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#head","text":"","title":"HEAD"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#documentation","text":"replace 'plugins' key in config with 'gems' (#46) Docs: Remove username in gist (#54)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#development-fixes","text":"Remove testing for Jekyll 2.x Requires Ruby > 2.1 Add release script Inherit Jekyll's rubocop config for consistency (#48) define path with dir (#47)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#141-2017-06-21","text":"Don't ask .empty? until it's a String. (#38) rename Liquid 4 has_key? to key? to add compatibility for liquid 4 (#41) Test against Ruby 2.1 to 2.4 (#45)","title":"1.4.1 / 2017-06-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#140-2015-12-01","text":"Allow noscript fallback to be disabled (#29) Use Octokit to fetch Gist content when passed JEKYLL_GITHUB_TOKEN in env(#28)","title":"1.4.0 / 2015-12-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#135-2015-10-23","text":"Fix encoding error for noscript code (#23) Test against Jekyll 3, 2, and the github-pages gem (#19)","title":"1.3.5 / 2015-10-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#134-2015-08-28","text":"Catch TimeoutError to further support 1.9.3 (#16)","title":"1.3.4 / 2015-08-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#133-2015-08-20","text":"Fix gemspec to allow Ruby 1.9.3 (relates to #14)","title":"1.3.3 / 2015-08-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#132-2016-08-19","text":"Re-add support for Ruby 1.9.3. Fixes #11 for 1.9.3 (#14) Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11)","title":"1.3.2 / 2016-08-19"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#131-2015-08-16","text":"Replaced OpenURI with Net::HTTP and introduced timeout of 3 seconds (#11)","title":"1.3.1 / 2015-08-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#130-2015-08-05","text":"Added an noscript fallback for browsers without JavaScript enabled. (#7)","title":"1.3.0 / 2015-08-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#121-2015-03-22","text":"Use has_key? (#6)","title":"1.2.1 / 2015-03-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#120-2015-03-21","text":"","title":"1.2.0 / 2015-03-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#minor-enhancements","text":"Allow variables as parameters (#4)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#development-fixes_1","text":"Fix RSpec deprecation warning (#5)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#110-2014-06-18","text":"","title":"1.1.0 / 2014-06-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#minor-enhancements_1","text":"Update regex to allow for new sha-ish ids in Gist. (#1)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-gist-1.5.0/History/#100-2014-06-01","text":"Birthday!","title":"1.0.0 / 2014-06-01"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/","text":"Jekyll::Paginate Default pagination generator for Jekyll. Installation Add this line to your application's Gemfile: gem 'jekyll-paginate' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-paginate Usage Once the gem is installed on your system, Jekyll will auto-require it. Just set the following configuration Contributing Fork it ( http://github.com/jekyll/jekyll-paginate/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Jekyll::Paginate"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/#jekyllpaginate","text":"Default pagination generator for Jekyll.","title":"Jekyll::Paginate"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/#installation","text":"Add this line to your application's Gemfile: gem 'jekyll-paginate' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-paginate","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/#usage","text":"Once the gem is installed on your system, Jekyll will auto-require it. Just set the following configuration","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/#contributing","text":"Fork it ( http://github.com/jekyll/jekyll-paginate/fork ) Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/History/","text":"1.1.0 / 2014-10-14 Minor Enhancements Filter out posts that have hidden: true in front matter (#13) Development Fixes Fix tests for rspec 3. (#9)","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/History/#110-2014-10-14","text":"","title":"1.1.0 / 2014-10-14"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/History/#minor-enhancements","text":"Filter out posts that have hidden: true in front matter (#13)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-paginate-1.1.0/History/#development-fixes","text":"Fix tests for rspec 3. (#9)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/","text":"JekyllRedirectFrom Give your Jekyll posts and pages multiple URLs. When importing your posts and pages from, say, Tumblr, it's annoying and impractical to create new pages in the proper subdirectories so they, e.g. /post/123456789/my-slug-that-is-often-incompl , redirect to the new post URL. Instead of dealing with maintaining those pages for redirection, let jekyll-redirect-from handle it for you. How it Works Redirects are performed by serving an HTML file with an HTTP-REFRESH meta tag which points to your destination. No .htaccess file, nginx conf, xml file, or anything else will be generated. It simply creates HTML files. Installation Add this line to your application's Gemfile: gem 'jekyll-redirect-from' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-redirect-from Once it's installed into your evironment, add it to your _config.yml : gems: - jekyll-redirect-from If you're using Jekyll in safe mode to mimic GitHub Pages, make sure to add jekyll-redirect-from to your whitelist: whitelist: - jekyll-redirect-from Then run jekyll <cmd> --safe like normal. Usage The object of this gem is to allow an author to specify multiple URLs for a page, such that the alternative URLs redirect to the new Jekyll URL. To use it, simply add the array to the YAML front-matter of your page or post: title: My amazing post redirect_from: - /post/123456789/ - /post/123456789/my-amazing-post/ Redirects including a trailing slash will generate a corresponding subdirectory containing an index.html , while redirects without a trailing slash will generate a corresponding filename without an extension, and without a subdirectory. For example... redirect_from: - /post/123456789/my-amazing-post ...will generate the following page in the destination: /post/123456789/my-amazing-post While... redirect_from: - /post/123456789/my-amazing-post/ ...will generate the following page in the destination: /post/123456789/my-amazing-post/index.html These pages will contain an HTTP-REFRESH meta tag which redirect to your URL. You can also specify just one url like this: title: My other awesome post redirect_from: /post/123456798/ Prefix If site.baseurl is set, its value is used as a prefix for the redirect url automatically. This is useful for scenarios where a site isn't available from the domain root, so the redirects point to the correct path. Note : If you are hosting your Jekyll site on GitHub Pages , the prefix is set to the pages domain name i.e. http://example.github.io/project or a custom CNAME . Redirect To Sometimes, you may want to redirect a site page to a totally different website. This plugin also supports that with the redirect_to key: title: My amazing post redirect_to: - http://www.github.com If you have multiple redirect_to s set, only the first one will be respected. Note : Using redirect_to or redirect_from with collections will only work with files which are output to HTML, such as .md , .textile , .html etc. Contributing Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"JekyllRedirectFrom"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#jekyllredirectfrom","text":"Give your Jekyll posts and pages multiple URLs. When importing your posts and pages from, say, Tumblr, it's annoying and impractical to create new pages in the proper subdirectories so they, e.g. /post/123456789/my-slug-that-is-often-incompl , redirect to the new post URL. Instead of dealing with maintaining those pages for redirection, let jekyll-redirect-from handle it for you.","title":"JekyllRedirectFrom"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#how-it-works","text":"Redirects are performed by serving an HTML file with an HTTP-REFRESH meta tag which points to your destination. No .htaccess file, nginx conf, xml file, or anything else will be generated. It simply creates HTML files.","title":"How it Works"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#installation","text":"Add this line to your application's Gemfile: gem 'jekyll-redirect-from' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-redirect-from Once it's installed into your evironment, add it to your _config.yml : gems: - jekyll-redirect-from If you're using Jekyll in safe mode to mimic GitHub Pages, make sure to add jekyll-redirect-from to your whitelist: whitelist: - jekyll-redirect-from Then run jekyll <cmd> --safe like normal.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#usage","text":"The object of this gem is to allow an author to specify multiple URLs for a page, such that the alternative URLs redirect to the new Jekyll URL. To use it, simply add the array to the YAML front-matter of your page or post: title: My amazing post redirect_from: - /post/123456789/ - /post/123456789/my-amazing-post/ Redirects including a trailing slash will generate a corresponding subdirectory containing an index.html , while redirects without a trailing slash will generate a corresponding filename without an extension, and without a subdirectory. For example... redirect_from: - /post/123456789/my-amazing-post ...will generate the following page in the destination: /post/123456789/my-amazing-post While... redirect_from: - /post/123456789/my-amazing-post/ ...will generate the following page in the destination: /post/123456789/my-amazing-post/index.html These pages will contain an HTTP-REFRESH meta tag which redirect to your URL. You can also specify just one url like this: title: My other awesome post redirect_from: /post/123456798/","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#prefix","text":"If site.baseurl is set, its value is used as a prefix for the redirect url automatically. This is useful for scenarios where a site isn't available from the domain root, so the redirects point to the correct path. Note : If you are hosting your Jekyll site on GitHub Pages , the prefix is set to the pages domain name i.e. http://example.github.io/project or a custom CNAME .","title":"Prefix"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#redirect-to","text":"Sometimes, you may want to redirect a site page to a totally different website. This plugin also supports that with the redirect_to key: title: My amazing post redirect_to: - http://www.github.com If you have multiple redirect_to s set, only the first one will be respected. Note : Using redirect_to or redirect_from with collections will only work with files which are output to HTML, such as .md , .textile , .html etc.","title":"Redirect To"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/#contributing","text":"Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/","text":"0.11.0 / 2016-07-06 Redirect page should not have any layout (#106) Include absolute path in canonical url (#109) Add tag and language (#100) Ensure redirect_to links produce an HTML file. (#111) 0.10.0 / 2016-03-16 Ensure output extension is assigned (#96) 0.9.1 / 2015-12-11 Enforce double-quote strings to pass htmlhint (#83) Stringify all values coming from site.github (#89) 0.9.0 / 2015-10-28 Support Jekyll 3 stable (#76) Test against Jekyll 3, 2, and GitHub Pages (#72) 0.8.0 / 2015-05-20 Exclude redirect pages from sitemap (#69) 0.7.0 / 2015-03-16 Remove spaces in redirect page (#62) Only parse through documents/pages/posts (#56) Simplified has_alt_urls? and has_redirect_to_url? conditions (#52) Add support for Jekyll 3. (#59) 0.6.2 / 2014-09-12 Fixed error where redirect_to Document s were not being output properly (#46) 0.6.1 / 2014-09-08 Fixed error when the site.github config key is not a Hash (#43) 0.6.0 / 2014-08-22 Support redirecting to/from collection documents (#40) 0.5.0 / 2014-08-10 Minor Enhancements Support redirect_to property (#32) Automatically prefix redirects with the baseurl or GitHub URL. (#26) Bug Fixes Remove unnecessary Array#flatten (#34) Development Fixes Use be_truthy instead of be_true . (#33) 0.4.0 / 2014-05-06 Major Enhancements Upgrade to Jekyll 2.0 (#27) Minor Enhancements Shorten resulting HTML to make redirects quicker (#20) Development Fixes Use SVG Travis badge in README (#21) 0.3.1 / 2014-01-22 Bug Fixes Add safe true to the Jekyll::Generator so it can be run in safe mode (#12) 0.3.0 / 2014-01-15 Major Enhancements redirect_from items are now proper permalinks rooted in site source (#8) Development Fixes Add forgotten s to gems in README.md (#7) 0.2.0 / 2014-01-04 Minor Enhancements Allow user to set one or many redirect_from URLs Rename from jekyll-alt-urls to jekyll-redirect-from (props to @benbalter) Namespace now its own module: JekyllRedirectFrom (#3) Development Fixes Add history file Add specs (#3) Add TravisCI badge (#4) 0.1.0 / 2013-12-15 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#0110-2016-07-06","text":"Redirect page should not have any layout (#106) Include absolute path in canonical url (#109) Add tag and language (#100) Ensure redirect_to links produce an HTML file. (#111)","title":"0.11.0 / 2016-07-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#0100-2016-03-16","text":"Ensure output extension is assigned (#96)","title":"0.10.0 / 2016-03-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#091-2015-12-11","text":"Enforce double-quote strings to pass htmlhint (#83) Stringify all values coming from site.github (#89)","title":"0.9.1 / 2015-12-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#090-2015-10-28","text":"Support Jekyll 3 stable (#76) Test against Jekyll 3, 2, and GitHub Pages (#72)","title":"0.9.0 / 2015-10-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#080-2015-05-20","text":"Exclude redirect pages from sitemap (#69)","title":"0.8.0 / 2015-05-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#070-2015-03-16","text":"Remove spaces in redirect page (#62) Only parse through documents/pages/posts (#56) Simplified has_alt_urls? and has_redirect_to_url? conditions (#52) Add support for Jekyll 3. (#59)","title":"0.7.0 / 2015-03-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#062-2014-09-12","text":"Fixed error where redirect_to Document s were not being output properly (#46)","title":"0.6.2 / 2014-09-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#061-2014-09-08","text":"Fixed error when the site.github config key is not a Hash (#43)","title":"0.6.1 / 2014-09-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#060-2014-08-22","text":"Support redirecting to/from collection documents (#40)","title":"0.6.0 / 2014-08-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#050-2014-08-10","text":"","title":"0.5.0 / 2014-08-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#minor-enhancements","text":"Support redirect_to property (#32) Automatically prefix redirects with the baseurl or GitHub URL. (#26)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#bug-fixes","text":"Remove unnecessary Array#flatten (#34)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#development-fixes","text":"Use be_truthy instead of be_true . (#33)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#040-2014-05-06","text":"","title":"0.4.0 / 2014-05-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#major-enhancements","text":"Upgrade to Jekyll 2.0 (#27)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#minor-enhancements_1","text":"Shorten resulting HTML to make redirects quicker (#20)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#development-fixes_1","text":"Use SVG Travis badge in README (#21)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#031-2014-01-22","text":"","title":"0.3.1 / 2014-01-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#bug-fixes_1","text":"Add safe true to the Jekyll::Generator so it can be run in safe mode (#12)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#030-2014-01-15","text":"","title":"0.3.0 / 2014-01-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#major-enhancements_1","text":"redirect_from items are now proper permalinks rooted in site source (#8)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#development-fixes_2","text":"Add forgotten s to gems in README.md (#7)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#020-2014-01-04","text":"","title":"0.2.0 / 2014-01-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#minor-enhancements_2","text":"Allow user to set one or many redirect_from URLs Rename from jekyll-alt-urls to jekyll-redirect-from (props to @benbalter) Namespace now its own module: JekyllRedirectFrom (#3)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#development-fixes_3","text":"Add history file Add specs (#3) Add TravisCI badge (#4)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/History/#010-2013-12-15","text":"Birthday!","title":"0.1.0 / 2013-12-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/multiple_redirect_tos/","text":"Lots of redirect to urls.","title":"I have lots of redirect to urls"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/multiple_redirect_urls/","text":"Lots of redirect urls","title":"I have lots of redirect urls"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/one_redirect_to/","text":"Redirecting elsewhere.","title":"I am going somewhere else."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/one_redirect_url/","text":"One redirect url","title":"I only have one redirect url."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/_articles/redirect-me-plz/","text":"Yay.","title":"Please redirect me, sir."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/_authors/kansaichris/","text":"Hi.","title":"Kansaichris"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/_posts/2014-01-03-redirect-me-plz/","text":"Yay.","title":"Please redirect me, sir."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.11.0/spec/fixtures/tags/how%20we%20work/","text":"","title":"How we work"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/","text":"JekyllRedirectFrom Give your Jekyll posts and pages multiple URLs. When importing your posts and pages from, say, Tumblr, it's annoying and impractical to create new pages in the proper subdirectories so they, e.g. /post/123456789/my-slug-that-is-often-incompl , redirect to the new post URL. Instead of dealing with maintaining those pages for redirection, let jekyll-redirect-from handle it for you. How it Works Redirects are performed by serving an HTML file with an HTTP-REFRESH meta tag which points to your destination. No .htaccess file, nginx conf, xml file, or anything else will be generated. It simply creates HTML files. Installation Add this line to your application's Gemfile: gem 'jekyll-redirect-from' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-redirect-from Once it's installed into your evironment, add it to your _config.yml : plugins: - jekyll-redirect-from \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . If you're using Jekyll in safe mode to mimic GitHub Pages, make sure to add jekyll-redirect-from to your whitelist: whitelist: - jekyll-redirect-from Then run jekyll <cmd> --safe like normal. Usage The object of this gem is to allow an author to specify multiple URLs for a page, such that the alternative URLs redirect to the new Jekyll URL. To use it, simply add the array to the YAML front-matter of your page or post: title: My amazing post redirect_from: - /post/123456789/ - /post/123456789/my-amazing-post/ Redirects including a trailing slash will generate a corresponding subdirectory containing an index.html , while redirects without a trailing slash will generate a corresponding filename without an extension, and without a subdirectory. For example... redirect_from: - /post/123456789/my-amazing-post ...will generate the following page in the destination: /post/123456789/my-amazing-post While... redirect_from: - /post/123456789/my-amazing-post/ ...will generate the following page in the destination: /post/123456789/my-amazing-post/index.html These pages will contain an HTTP-REFRESH meta tag which redirect to your URL. You can also specify just one url like this: title: My other awesome post redirect_from: /post/123456798/ Prefix If site.url is set, its value, together with site.baseurl , is used as a prefix for the redirect url automatically. This is useful for scenarios where a site isn't available from the domain root, so the redirects point to the correct path. If site.url is not set, only site.baseurl is used, if set. Note : If you are hosting your Jekyll site on GitHub Pages , and site.url is not set, the prefix is set to the pages domain name i.e. http://example.github.io/project or a custom CNAME. Redirect To Sometimes, you may want to redirect a site page to a totally different website. This plugin also supports that with the redirect_to key: title: My amazing post redirect_to: http://www.github.com Note : Using redirect_to or redirect_from with collections will only work with files which are output to HTML, such as .md , .textile , .html etc. Customizing the redirect template If you want to customize the redirect template, you can. Simply create a layout in your site's _layouts directory called redirect.html . Your layout will get the following variables: page.redirect.from - the relative path to the redirect page page.redirect.to - the absolute URL (where available) to the target page Configuration You can configure this plugin in _config.yml by adding to the redirect_from key. Disabling redirects.json By default, a file called redirects.json , which can be used for automated testing or to implement server-side redirects, will be included in the output. To exclude it from the output, set the json key to false : redirect_from: json: false Contributing Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"JekyllRedirectFrom"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#jekyllredirectfrom","text":"Give your Jekyll posts and pages multiple URLs. When importing your posts and pages from, say, Tumblr, it's annoying and impractical to create new pages in the proper subdirectories so they, e.g. /post/123456789/my-slug-that-is-often-incompl , redirect to the new post URL. Instead of dealing with maintaining those pages for redirection, let jekyll-redirect-from handle it for you.","title":"JekyllRedirectFrom"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#how-it-works","text":"Redirects are performed by serving an HTML file with an HTTP-REFRESH meta tag which points to your destination. No .htaccess file, nginx conf, xml file, or anything else will be generated. It simply creates HTML files.","title":"How it Works"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#installation","text":"Add this line to your application's Gemfile: gem 'jekyll-redirect-from' And then execute: $ bundle Or install it yourself as: $ gem install jekyll-redirect-from Once it's installed into your evironment, add it to your _config.yml : plugins: - jekyll-redirect-from \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . If you're using Jekyll in safe mode to mimic GitHub Pages, make sure to add jekyll-redirect-from to your whitelist: whitelist: - jekyll-redirect-from Then run jekyll <cmd> --safe like normal.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#usage","text":"The object of this gem is to allow an author to specify multiple URLs for a page, such that the alternative URLs redirect to the new Jekyll URL. To use it, simply add the array to the YAML front-matter of your page or post: title: My amazing post redirect_from: - /post/123456789/ - /post/123456789/my-amazing-post/ Redirects including a trailing slash will generate a corresponding subdirectory containing an index.html , while redirects without a trailing slash will generate a corresponding filename without an extension, and without a subdirectory. For example... redirect_from: - /post/123456789/my-amazing-post ...will generate the following page in the destination: /post/123456789/my-amazing-post While... redirect_from: - /post/123456789/my-amazing-post/ ...will generate the following page in the destination: /post/123456789/my-amazing-post/index.html These pages will contain an HTTP-REFRESH meta tag which redirect to your URL. You can also specify just one url like this: title: My other awesome post redirect_from: /post/123456798/","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#prefix","text":"If site.url is set, its value, together with site.baseurl , is used as a prefix for the redirect url automatically. This is useful for scenarios where a site isn't available from the domain root, so the redirects point to the correct path. If site.url is not set, only site.baseurl is used, if set. Note : If you are hosting your Jekyll site on GitHub Pages , and site.url is not set, the prefix is set to the pages domain name i.e. http://example.github.io/project or a custom CNAME.","title":"Prefix"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#redirect-to","text":"Sometimes, you may want to redirect a site page to a totally different website. This plugin also supports that with the redirect_to key: title: My amazing post redirect_to: http://www.github.com Note : Using redirect_to or redirect_from with collections will only work with files which are output to HTML, such as .md , .textile , .html etc.","title":"Redirect To"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#customizing-the-redirect-template","text":"If you want to customize the redirect template, you can. Simply create a layout in your site's _layouts directory called redirect.html . Your layout will get the following variables: page.redirect.from - the relative path to the redirect page page.redirect.to - the absolute URL (where available) to the target page","title":"Customizing the redirect template"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#configuration","text":"You can configure this plugin in _config.yml by adding to the redirect_from key.","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#disabling-redirectsjson","text":"By default, a file called redirects.json , which can be used for automated testing or to implement server-side redirects, will be included in the output. To exclude it from the output, set the json key to false : redirect_from: json: false","title":"Disabling redirects.json"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/#contributing","text":"Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/","text":"0.16.0 / 2020-01-26 Minor Enhancements Allows generation of redirects.json to be disabled (#207) Allow redirects from and for subclasses of page and document (#204) Bug Fixes Use Hash#key? instead of Hash#keys.any? (#201) Development Fixes Target Ruby 2.4 Stop testing with backwards-compatible site config (#211) Documentation Simplifies YAML for redirect_to (#185) 0.15.0 / 2019-03-23 Development Fixes chore(deps): rubocop-jekyll 0.3 (#187) Bug Fixes Allow testing and using with Jekyll 4.x (#196) 0.14.0 / 2018-06-29 Minor Enhancements Run javascript at first to avoid splash (#158) Development Fixes Use Rubocop 0.57 Target Ruby 2.3 Test against Ruby 2.5 (#173) 0.13.0 / 2017-12-03 Test against same version of Ruby that GitHub Pages uses (#132) Development Fixes Rubocop (#141) Fix tests for jekyll 3.5.x (#160) Rubocop: autocorrect (#165) Minor Enhancements HTML encode ellipsis (#142) Added no-index to template (#152) Define path with dir (#161) Major Enhancements Create redirects.json file (#147) Documentation Update README.md (#167) 0.12.1 / 2017-01-12 Development Fixes Stop testing Ruby 1.9 (#133) Minor Enhancements Use send to monkey patch to support Ruby < 2.2.0 (#136) set page.output to empty string instead of nil (#137) 0.12.0 / 2017-01-02 Major Enhancements Support for custom redirect templates Use Jekyll's absolute_url filter to generate canonical URLs (now respecting baseurl ) Rely more heavily on Jekyll's native Page, permalink, and extension handling logic Minor Enhancementse redirect_to Pages should not have a layout. (#115) Require Jekyll >= 3.3 Development Enhancements Push redirect logic to the redirect page model (#131) Add Rubocop and enforce Jekyll coding standards Tests no longer build and write the entire site between each example Removed all the is_* ? and has_* ? helpers from the generator 0.11.0 / 2016-07-06 Redirect page should not have any layout (#106) Include absolute path in canonical url (#109) Add tag and language (#100) Ensure redirect_to links produce an HTML file. (#111) 0.10.0 / 2016-03-16 Ensure output extension is assigned (#96) 0.9.1 / 2015-12-11 Enforce double-quote strings to pass htmlhint (#83) Stringify all values coming from site.github (#89) 0.9.0 / 2015-10-28 Support Jekyll 3 stable (#76) Test against Jekyll 3, 2, and GitHub Pages (#72) 0.8.0 / 2015-05-20 Exclude redirect pages from sitemap (#69) 0.7.0 / 2015-03-16 Remove spaces in redirect page (#62) Only parse through documents/pages/posts (#56) Simplified has_alt_urls? and has_redirect_to_url? conditions (#52) Add support for Jekyll 3. (#59) 0.6.2 / 2014-09-12 Fixed error where redirect_to Document s were not being output properly (#46) 0.6.1 / 2014-09-08 Fixed error when the site.github config key is not a Hash (#43) 0.6.0 / 2014-08-22 Support redirecting to/from collection documents (#40) 0.5.0 / 2014-08-10 Minor Enhancements Support redirect_to property (#32) Automatically prefix redirects with the baseurl or GitHub URL. (#26) Bug Fixes Remove unnecessary Array#flatten (#34) Development Fixes Use be_truthy instead of be_true . (#33) 0.4.0 / 2014-05-06 Major Enhancements Upgrade to Jekyll 2.0 (#27) Minor Enhancements Shorten resulting HTML to make redirects quicker (#20) Development Fixes Use SVG Travis badge in README (#21) 0.3.1 / 2014-01-22 Bug Fixes Add safe true to the Jekyll::Generator so it can be run in safe mode (#12) 0.3.0 / 2014-01-15 Major Enhancements redirect_from items are now proper permalinks rooted in site source (#8) Development Fixes Add forgotten s to gems in README.md (#7) 0.2.0 / 2014-01-04 Minor Enhancements Allow user to set one or many redirect_from URLs Rename from jekyll-alt-urls to jekyll-redirect-from (props to @benbalter) Namespace now its own module: JekyllRedirectFrom (#3) Development Fixes Add history file Add specs (#3) Add TravisCI badge (#4) 0.1.0 / 2013-12-15 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0160-2020-01-26","text":"","title":"0.16.0 / 2020-01-26"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements","text":"Allows generation of redirects.json to be disabled (#207) Allow redirects from and for subclasses of page and document (#204)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#bug-fixes","text":"Use Hash#key? instead of Hash#keys.any? (#201)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes","text":"Target Ruby 2.4 Stop testing with backwards-compatible site config (#211)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#documentation","text":"Simplifies YAML for redirect_to (#185)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0150-2019-03-23","text":"","title":"0.15.0 / 2019-03-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_1","text":"chore(deps): rubocop-jekyll 0.3 (#187)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#bug-fixes_1","text":"Allow testing and using with Jekyll 4.x (#196)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0140-2018-06-29","text":"","title":"0.14.0 / 2018-06-29"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_1","text":"Run javascript at first to avoid splash (#158)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_2","text":"Use Rubocop 0.57 Target Ruby 2.3 Test against Ruby 2.5 (#173)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0130-2017-12-03","text":"Test against same version of Ruby that GitHub Pages uses (#132)","title":"0.13.0 / 2017-12-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_3","text":"Rubocop (#141) Fix tests for jekyll 3.5.x (#160) Rubocop: autocorrect (#165)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_2","text":"HTML encode ellipsis (#142) Added no-index to template (#152) Define path with dir (#161)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#major-enhancements","text":"Create redirects.json file (#147)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#documentation_1","text":"Update README.md (#167)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0121-2017-01-12","text":"","title":"0.12.1 / 2017-01-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_4","text":"Stop testing Ruby 1.9 (#133)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_3","text":"Use send to monkey patch to support Ruby < 2.2.0 (#136) set page.output to empty string instead of nil (#137)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0120-2017-01-02","text":"","title":"0.12.0 / 2017-01-02"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#major-enhancements_1","text":"Support for custom redirect templates Use Jekyll's absolute_url filter to generate canonical URLs (now respecting baseurl ) Rely more heavily on Jekyll's native Page, permalink, and extension handling logic","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancementse","text":"redirect_to Pages should not have a layout. (#115) Require Jekyll >= 3.3","title":"Minor Enhancementse"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-enhancements","text":"Push redirect logic to the redirect page model (#131) Add Rubocop and enforce Jekyll coding standards Tests no longer build and write the entire site between each example Removed all the is_* ? and has_* ? helpers from the generator","title":"Development Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0110-2016-07-06","text":"Redirect page should not have any layout (#106) Include absolute path in canonical url (#109) Add tag and language (#100) Ensure redirect_to links produce an HTML file. (#111)","title":"0.11.0 / 2016-07-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#0100-2016-03-16","text":"Ensure output extension is assigned (#96)","title":"0.10.0 / 2016-03-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#091-2015-12-11","text":"Enforce double-quote strings to pass htmlhint (#83) Stringify all values coming from site.github (#89)","title":"0.9.1 / 2015-12-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#090-2015-10-28","text":"Support Jekyll 3 stable (#76) Test against Jekyll 3, 2, and GitHub Pages (#72)","title":"0.9.0 / 2015-10-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#080-2015-05-20","text":"Exclude redirect pages from sitemap (#69)","title":"0.8.0 / 2015-05-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#070-2015-03-16","text":"Remove spaces in redirect page (#62) Only parse through documents/pages/posts (#56) Simplified has_alt_urls? and has_redirect_to_url? conditions (#52) Add support for Jekyll 3. (#59)","title":"0.7.0 / 2015-03-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#062-2014-09-12","text":"Fixed error where redirect_to Document s were not being output properly (#46)","title":"0.6.2 / 2014-09-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#061-2014-09-08","text":"Fixed error when the site.github config key is not a Hash (#43)","title":"0.6.1 / 2014-09-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#060-2014-08-22","text":"Support redirecting to/from collection documents (#40)","title":"0.6.0 / 2014-08-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#050-2014-08-10","text":"","title":"0.5.0 / 2014-08-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_4","text":"Support redirect_to property (#32) Automatically prefix redirects with the baseurl or GitHub URL. (#26)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#bug-fixes_2","text":"Remove unnecessary Array#flatten (#34)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_5","text":"Use be_truthy instead of be_true . (#33)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#040-2014-05-06","text":"","title":"0.4.0 / 2014-05-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#major-enhancements_2","text":"Upgrade to Jekyll 2.0 (#27)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_5","text":"Shorten resulting HTML to make redirects quicker (#20)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_6","text":"Use SVG Travis badge in README (#21)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#031-2014-01-22","text":"","title":"0.3.1 / 2014-01-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#bug-fixes_3","text":"Add safe true to the Jekyll::Generator so it can be run in safe mode (#12)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#030-2014-01-15","text":"","title":"0.3.0 / 2014-01-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#major-enhancements_3","text":"redirect_from items are now proper permalinks rooted in site source (#8)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_7","text":"Add forgotten s to gems in README.md (#7)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#020-2014-01-04","text":"","title":"0.2.0 / 2014-01-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#minor-enhancements_6","text":"Allow user to set one or many redirect_from URLs Rename from jekyll-alt-urls to jekyll-redirect-from (props to @benbalter) Namespace now its own module: JekyllRedirectFrom (#3)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#development-fixes_8","text":"Add history file Add specs (#3) Add TravisCI badge (#4)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/History/#010-2013-12-15","text":"Birthday!","title":"0.1.0 / 2013-12-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/multiple_redirect_froms/","text":"Lots of redirect urls","title":"I have lots of redirect urls"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/multiple_redirect_tos/","text":"Lots of redirect to urls.","title":"I have lots of redirect to urls"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/one_redirect_from/","text":"One redirect url","title":"I only have one redirect path"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/one_redirect_to_path/","text":"Redirecting elsewhere.","title":"I am going somewhere external"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/one_redirect_to_url/","text":"Redirecting elsewhere.","title":"I am going somewhere external"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/_articles/redirect-me-plz/","text":"Yay.","title":"Please redirect me, sir."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/_authors/kansaichris/","text":"Hi.","title":"Kansaichris"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/_posts/2014-01-03-redirect-me-plz/","text":"Yay.","title":"Please redirect me, sir."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-redirect-from-0.16.0/spec/fixtures/tags/how%20we%20work/","text":"","title":"How we work"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/","text":"Jekyll SEO Tag A Jekyll plugin to add metadata tags for search engines and social networks to better index and display your site's content. What it does Jekyll SEO Tag adds the following meta tags to your site: Pages title (with site title appended when available) Page description Canonical URL Next and previous URLs on paginated pages JSON-LD Site and post metadata for richer indexing Open graph title, description, site title, and URL (for Facebook, LinkedIn, etc.) Twitter summary card metadata While you could theoretically add the necessary metadata tags yourself, Jekyll SEO Tag provides a battle-tested template of crowdsourced best-practices. What it doesn't do Jekyll SEO tag is designed to output machine-readable metadata for search engines and social networks to index and display. If you're looking for something to analyze your Jekyll site's structure and content (e.g., more traditional SEO optimization), take a look at The Jekyll SEO Gem . Jekyll SEO tag isn't designed to accommodate every possible use case. It should work for most site out of the box and without a laundry list of configuration options that serve only to confuse most users. Installation Add the following to your site's Gemfile : ruby gem 'jekyll-seo-tag' Add the following to your site's _config.yml : yml gems: - jekyll-seo-tag Add the following right before </head> in your site's template(s): liquid {% seo %} Usage The SEO tag will respect any of the following if included in your site's _config.yml (and simply not include them if they're not defined): title - Your site's title (e.g., Ben's awesome site, The GitHub Blog, etc.) description - A short description (e.g., A blog dedicated to reviewing cat gifs) url - The full URL to your site. Note: site.github.url will be used by default. author - global author information (see below) twitter:username - The site's Twitter handle. You'll want to describe it like so: yml twitter: username: benbalter facebook - The following properties are available: facebook:app_id - a Facebook app ID for Facebook insights facebook:publisher - a Facebook page URL or ID of the publishing entity facebook:admins - a Facebook user ID for domain insights linked to a personal account You'll want to describe one or more like so: yml facebook: app_id: 1234 publisher: 1234 admins: 1234 logo - URL to a site-wide logo (e.g., /assets/your-company-logo.png ) social - For specifying social profiles . The following properties are available: name - If the user or organization name differs from the site's name links - An array of links to social media profiles. google_site_verification for verifying ownership via Google webmaster tools The SEO tag will respect the following YAML front matter if included in a post, page, or document: title - The title of the post, page, or document description - A short description of the page's content image - URL to an image associated with the post, page, or document (e.g., /assets/page-pic.jpg ) author - Page-, post-, or document-specific author information (see below) Advanced usage Jekyll SEO Tag is designed to implement SEO best practices by default and to be the right fit for most sites right out of the box. If for some reason, you need more control over the output, read on: Disabling <title> output If for some reason, you don't want the plugin to output <title> tags on each page, simply invoke the plugin within your template like so: {% seo title=false %} Author information Author information is used to propagate the creator field of Twitter summary cards. This is should be an author-specific, not site-wide Twitter handle (the site-wide username be stored as site.twitter.username ). TL;DR: In most cases, put author: [your Twitter handle] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey this author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed, as Twitter supports only one author. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter Customizing JSON-LD output The following options can be set for any particular page. While the default options are meant to serve most users in the most common circumstances, there may be situations where more precise control is necessary. seo name - If the name of the thing that the page represents is different from the page title. (i.e.: \"Frank's Caf\u00e9\" vs \"Welcome to Frank's Caf\u00e9\") type - The type of things that the page represents. This must be a Schema.org type , and will probably usually be something like BlogPosting , NewsArticle , Person , Organization , etc. links - An array of other URLs that represent the same thing that this page represents. For instance, Jane's bio page might include links to Jane's GitHub and Twitter profiles. Customizing image output For most users, setting image: [path-to-image] on a per-page basis should be enough. If you need more control over how images are represented, the image property can also be an object, with the following options: path - The relative path to the image. Same as image: [path-to-image] twitter - The relative path to a Twitter-specific image. facebook - The relative path to a Facebook-specific image. height - The height of the Facebook ( og:image ) image width - The width of the Facebook ( og:image ) image You can use any of the above, optional properties, like so: image: twitter: /img/twitter.png facebook: /img/facebook.png height: 100 width: 100 SmartyPants Titles Titles will be processed using Jekyll's smartify filter . This will use SmartyPants to translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a page title.","title":"Jekyll SEO Tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#jekyll-seo-tag","text":"A Jekyll plugin to add metadata tags for search engines and social networks to better index and display your site's content.","title":"Jekyll SEO Tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#what-it-does","text":"Jekyll SEO Tag adds the following meta tags to your site: Pages title (with site title appended when available) Page description Canonical URL Next and previous URLs on paginated pages JSON-LD Site and post metadata for richer indexing Open graph title, description, site title, and URL (for Facebook, LinkedIn, etc.) Twitter summary card metadata While you could theoretically add the necessary metadata tags yourself, Jekyll SEO Tag provides a battle-tested template of crowdsourced best-practices.","title":"What it does"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#what-it-doesnt-do","text":"Jekyll SEO tag is designed to output machine-readable metadata for search engines and social networks to index and display. If you're looking for something to analyze your Jekyll site's structure and content (e.g., more traditional SEO optimization), take a look at The Jekyll SEO Gem . Jekyll SEO tag isn't designed to accommodate every possible use case. It should work for most site out of the box and without a laundry list of configuration options that serve only to confuse most users.","title":"What it doesn't do"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#installation","text":"Add the following to your site's Gemfile : ruby gem 'jekyll-seo-tag' Add the following to your site's _config.yml : yml gems: - jekyll-seo-tag Add the following right before </head> in your site's template(s): liquid {% seo %}","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#usage","text":"The SEO tag will respect any of the following if included in your site's _config.yml (and simply not include them if they're not defined): title - Your site's title (e.g., Ben's awesome site, The GitHub Blog, etc.) description - A short description (e.g., A blog dedicated to reviewing cat gifs) url - The full URL to your site. Note: site.github.url will be used by default. author - global author information (see below) twitter:username - The site's Twitter handle. You'll want to describe it like so: yml twitter: username: benbalter facebook - The following properties are available: facebook:app_id - a Facebook app ID for Facebook insights facebook:publisher - a Facebook page URL or ID of the publishing entity facebook:admins - a Facebook user ID for domain insights linked to a personal account You'll want to describe one or more like so: yml facebook: app_id: 1234 publisher: 1234 admins: 1234 logo - URL to a site-wide logo (e.g., /assets/your-company-logo.png ) social - For specifying social profiles . The following properties are available: name - If the user or organization name differs from the site's name links - An array of links to social media profiles. google_site_verification for verifying ownership via Google webmaster tools The SEO tag will respect the following YAML front matter if included in a post, page, or document: title - The title of the post, page, or document description - A short description of the page's content image - URL to an image associated with the post, page, or document (e.g., /assets/page-pic.jpg ) author - Page-, post-, or document-specific author information (see below)","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#advanced-usage","text":"Jekyll SEO Tag is designed to implement SEO best practices by default and to be the right fit for most sites right out of the box. If for some reason, you need more control over the output, read on:","title":"Advanced usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#disabling-title-output","text":"If for some reason, you don't want the plugin to output <title> tags on each page, simply invoke the plugin within your template like so: {% seo title=false %}","title":"Disabling &lt;title&gt; output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#author-information","text":"Author information is used to propagate the creator field of Twitter summary cards. This is should be an author-specific, not site-wide Twitter handle (the site-wide username be stored as site.twitter.username ). TL;DR: In most cases, put author: [your Twitter handle] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey this author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed, as Twitter supports only one author. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter","title":"Author information"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#customizing-json-ld-output","text":"The following options can be set for any particular page. While the default options are meant to serve most users in the most common circumstances, there may be situations where more precise control is necessary. seo name - If the name of the thing that the page represents is different from the page title. (i.e.: \"Frank's Caf\u00e9\" vs \"Welcome to Frank's Caf\u00e9\") type - The type of things that the page represents. This must be a Schema.org type , and will probably usually be something like BlogPosting , NewsArticle , Person , Organization , etc. links - An array of other URLs that represent the same thing that this page represents. For instance, Jane's bio page might include links to Jane's GitHub and Twitter profiles.","title":"Customizing JSON-LD output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#customizing-image-output","text":"For most users, setting image: [path-to-image] on a per-page basis should be enough. If you need more control over how images are represented, the image property can also be an object, with the following options: path - The relative path to the image. Same as image: [path-to-image] twitter - The relative path to a Twitter-specific image. facebook - The relative path to a Facebook-specific image. height - The height of the Facebook ( og:image ) image width - The width of the Facebook ( og:image ) image You can use any of the above, optional properties, like so: image: twitter: /img/twitter.png facebook: /img/facebook.png height: 100 width: 100","title":"Customizing image output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.0.0/#smartypants-titles","text":"Titles will be processed using Jekyll's smartify filter . This will use SmartyPants to translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a page title.","title":"SmartyPants Titles"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/","text":"2.8.0 / 2022-02-04 Minor Enhancements Allow to set type for author (#427) Allow setting author.url (#453) Implement Facebook domain verification (#455) Add og:image:alt and twitter:image:alt (#438) Sort JSON-LD data by key (#458) Bug Fixes Set the default og:type to 'website' (#391) Template: Remove double new line (#454) Development Fixes Fix typo in source code comment (#449) Set up Continuous Integration via GH Actions (#450) Bump RuboCop to v1.18.x (#452) Add workflow to release gem via GH Actions 2.7.1 / 2020-10-18 Development Fixes refactor: mutate site payload instead of duplicating it (#419) 2.7.0 / 2020-10-18 Minor Enhancements Change pagination message with seo_paginator_message option (#324) Make Twitter Summary Card without having Twitter account (#284) Prefer site.tagline to site.description for page title (#356) Render og:locale meta only when defined explicitly (#388) Bug Fixes Ensure a single leading @ for twitter usernames (#367) Development Fixes chore(deps): require Ruby > 2.4.0 EOL test: fix locale specs that use the fallback locale (#360) refactor: Replace read-only empty hash with private constant (#418) refactor: Mutate hash literals instead of duplicating them (#417) refactor: Reduce allocations of instance-agnostic objects (#376) refactor: Memoize #author_hash in SeoTag::AuthorDrop (#342) refactor: simplify conditional in SeoTag::Drop#date_modified (#343) chore(ci): profile seo-tag plugin on a third-party repository (#414) chore(ci): Jekyll v4.0 (#372) chore(ci): test against current stable Ruby 2.5 and 2.7 (#385) style: align with latest jekyll-rubocop (#382) fix: Travis builds for Jekyll 3.x (#415) Documentation Structured Data Testing Tool is deprecated (#409) Rename Google webmaster tools to Google Search Console (#403) Improve documentation on plugin usage (#399) remove Google+ from example snippet (#358) HTTPS link to https://ogp.me/ (#359) HTTPS links to schema.org (#350) use example.com for example URL (#351) 2.6.1 / 2019-05-17 Development Fixes Test against Jekyll 4.x (#336) 2.6.0 / 2019-03-16 Minor Enhancements Twitter Image and Title (#330) Bug Fixes Do not cache the drop payload for SeoTag (#306) Update url of schema website (#296) Development Fixes Relax version constraint on Bundler (#325) chore(ci): Add Ruby 2.6, drop Ruby 2.3 (#326) chore (ci): remove deprecated sudo: false in .travis.yml (#333) Lint Ruby code with rubocop-jekyll gem (#302) chore(deps): bump rubocop-jekyll to v0.4 (#320) chore(deps): bump rubocop-jekyll to v0.3 (#316) Correct RuboCop offenses in spec files (#319) Documentation Rectify error in Usage documentation (#328) 2.5.0 / 2018-05-18 Docs: Prevent GitHub Pages from processing Liquid raw tag (#276) Documentation Use gems config key for Jekyll < 3.5.0 (#255) docs/usage - replace \"below\" with correct link (#280) Development Fixes Test against Ruby 2.5 (#260) add tests for twitter.card types (#289) Target Ruby 2.3 and Rubocop 0.56.0 (#292) Minor Enhancements Add webmaster_verifications for baidu (#263) Include page number in title (#250) Configure default Twitter summary card type (V2) (#225) 2.4.0 / 2017-12-04 Minor Add meta generator (#236) Consistently use self-closing tags (#246) Strip null values from JSON-LD hash (#249) Documentation Avoid deprecation warning when building docs (#243) Development Fixes Test against latest Rubies (#242) Use Nokigiri on CI (#181) 2.3.0 Minor Enhancements Use canonical_url specified in page if present #211 Fix for image.path causing an invalid url error #228 Ensure site.data.authors is properly formatted before attempting to retrieve author meta #227 Convert author, image, and JSON-LD to dedicated drops #229 Cache parsed template #231 Define path with __dir__ #232 Documentation gems: is deprecated in current Jekyll version of github-pages #230 2.2.3 Guard against the author's Twitter handle being Nil when stripping @'s #203 Guard against empty title or description strings #206 2.2.2 Minor Enhancements Guard against arrays in subhashes #197 Guard against invalid or missing URLs #199 Development fixes Remove dynamic GitHub Pages logic from Gemfile #194 2.2.1 Convert template logic to a Liquid Drop (significant performance improvement) (#184) Fix for JSON-LD validation warning for images missing required properties (#183) 2.2.0 Major Enhancements Add author meta (#103) Add og:locale support #166 Add support for Bing and Yandex webmaster tools. Closes #147 (#148) Add SEO author and date modified to validate JSON-LD output (#151) Minor Enhancements Use | for title separator (#162) Use og:image for twitter image (#174) Development Fixes Style fixes (#170, #157, #149) Test against latest version of Jekyll (#171) Bump dev dependencies (#172) Remove Rake dependency (#180) 2.1.0 Major Enhancement Use new URL filters (#123) Minor Enhancements Wraps logo image json data in a publisher property (#133) Fix duplicated escape_once (#93) Simplify minify regex (#125) Don't mangle text with newlines #126 Documentation Add front matter default example for image (#132) Fix tiny typo (#106) add example usage of social profiles (#139) Development Inherit Jekyll's rubocop config for consistency (#109) Correct spelling in .travis.yml (#112)","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#280-2022-02-04","text":"","title":"2.8.0 / 2022-02-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements","text":"Allow to set type for author (#427) Allow setting author.url (#453) Implement Facebook domain verification (#455) Add og:image:alt and twitter:image:alt (#438) Sort JSON-LD data by key (#458)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#bug-fixes","text":"Set the default og:type to 'website' (#391) Template: Remove double new line (#454)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes","text":"Fix typo in source code comment (#449) Set up Continuous Integration via GH Actions (#450) Bump RuboCop to v1.18.x (#452) Add workflow to release gem via GH Actions","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#271-2020-10-18","text":"","title":"2.7.1 / 2020-10-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_1","text":"refactor: mutate site payload instead of duplicating it (#419)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#270-2020-10-18","text":"","title":"2.7.0 / 2020-10-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_1","text":"Change pagination message with seo_paginator_message option (#324) Make Twitter Summary Card without having Twitter account (#284) Prefer site.tagline to site.description for page title (#356) Render og:locale meta only when defined explicitly (#388)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#bug-fixes_1","text":"Ensure a single leading @ for twitter usernames (#367)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_2","text":"chore(deps): require Ruby > 2.4.0 EOL test: fix locale specs that use the fallback locale (#360) refactor: Replace read-only empty hash with private constant (#418) refactor: Mutate hash literals instead of duplicating them (#417) refactor: Reduce allocations of instance-agnostic objects (#376) refactor: Memoize #author_hash in SeoTag::AuthorDrop (#342) refactor: simplify conditional in SeoTag::Drop#date_modified (#343) chore(ci): profile seo-tag plugin on a third-party repository (#414) chore(ci): Jekyll v4.0 (#372) chore(ci): test against current stable Ruby 2.5 and 2.7 (#385) style: align with latest jekyll-rubocop (#382) fix: Travis builds for Jekyll 3.x (#415)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation","text":"Structured Data Testing Tool is deprecated (#409) Rename Google webmaster tools to Google Search Console (#403) Improve documentation on plugin usage (#399) remove Google+ from example snippet (#358) HTTPS link to https://ogp.me/ (#359) HTTPS links to schema.org (#350) use example.com for example URL (#351)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#261-2019-05-17","text":"","title":"2.6.1 / 2019-05-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_3","text":"Test against Jekyll 4.x (#336)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#260-2019-03-16","text":"","title":"2.6.0 / 2019-03-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_2","text":"Twitter Image and Title (#330)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#bug-fixes_2","text":"Do not cache the drop payload for SeoTag (#306) Update url of schema website (#296)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_4","text":"Relax version constraint on Bundler (#325) chore(ci): Add Ruby 2.6, drop Ruby 2.3 (#326) chore (ci): remove deprecated sudo: false in .travis.yml (#333) Lint Ruby code with rubocop-jekyll gem (#302) chore(deps): bump rubocop-jekyll to v0.4 (#320) chore(deps): bump rubocop-jekyll to v0.3 (#316) Correct RuboCop offenses in spec files (#319)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation_1","text":"Rectify error in Usage documentation (#328)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#250-2018-05-18","text":"Docs: Prevent GitHub Pages from processing Liquid raw tag (#276)","title":"2.5.0 / 2018-05-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation_2","text":"Use gems config key for Jekyll < 3.5.0 (#255) docs/usage - replace \"below\" with correct link (#280)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_5","text":"Test against Ruby 2.5 (#260) add tests for twitter.card types (#289) Target Ruby 2.3 and Rubocop 0.56.0 (#292)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_3","text":"Add webmaster_verifications for baidu (#263) Include page number in title (#250) Configure default Twitter summary card type (V2) (#225)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#240-2017-12-04","text":"","title":"2.4.0 / 2017-12-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor","text":"Add meta generator (#236) Consistently use self-closing tags (#246) Strip null values from JSON-LD hash (#249)","title":"Minor"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation_3","text":"Avoid deprecation warning when building docs (#243)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_6","text":"Test against latest Rubies (#242) Use Nokigiri on CI (#181)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#230","text":"","title":"2.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_4","text":"Use canonical_url specified in page if present #211 Fix for image.path causing an invalid url error #228 Ensure site.data.authors is properly formatted before attempting to retrieve author meta #227 Convert author, image, and JSON-LD to dedicated drops #229 Cache parsed template #231 Define path with __dir__ #232","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation_4","text":"gems: is deprecated in current Jekyll version of github-pages #230","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#223","text":"Guard against the author's Twitter handle being Nil when stripping @'s #203 Guard against empty title or description strings #206","title":"2.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#222","text":"","title":"2.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_5","text":"Guard against arrays in subhashes #197 Guard against invalid or missing URLs #199","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_7","text":"Remove dynamic GitHub Pages logic from Gemfile #194","title":"Development fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#221","text":"Convert template logic to a Liquid Drop (significant performance improvement) (#184) Fix for JSON-LD validation warning for images missing required properties (#183)","title":"2.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#220","text":"","title":"2.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#major-enhancements","text":"Add author meta (#103) Add og:locale support #166 Add support for Bing and Yandex webmaster tools. Closes #147 (#148) Add SEO author and date modified to validate JSON-LD output (#151)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_6","text":"Use | for title separator (#162) Use og:image for twitter image (#174)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development-fixes_8","text":"Style fixes (#170, #157, #149) Test against latest version of Jekyll (#171) Bump dev dependencies (#172) Remove Rake dependency (#180)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#210","text":"","title":"2.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#major-enhancement","text":"Use new URL filters (#123)","title":"Major Enhancement"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#minor-enhancements_7","text":"Wraps logo image json data in a publisher property (#133) Fix duplicated escape_once (#93) Simplify minify regex (#125) Don't mangle text with newlines #126","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#documentation_5","text":"Add front matter default example for image (#132) Fix tiny typo (#106) add example usage of social profiles (#139)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/History/#development","text":"Inherit Jekyll's rubocop config for consistency (#109) Correct spelling in .travis.yml (#112)","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/","text":"About Jekyll SEO Tag A Jekyll plugin to add metadata tags for search engines and social networks to better index and display your site's content. What it does Jekyll SEO Tag adds the following meta tags to your site: Page title, with site title or description appended Page description Canonical URL Next and previous URLs on paginated pages JSON-LD Site and post metadata for richer indexing Open Graph title, description, site title, and URL (for Facebook, LinkedIn, etc.) Twitter Summary Card metadata While you could theoretically add the necessary metadata tags yourself, Jekyll SEO Tag provides a battle-tested template of crowdsourced best-practices. What it doesn't do Jekyll SEO tag is designed to output machine-readable metadata for search engines and social networks to index and display. If you're looking for something to analyze your Jekyll site's structure and content (e.g., more traditional SEO optimization), take a look at The Jekyll SEO Gem . Jekyll SEO tag isn't designed to accommodate every possible use case. It should work for most site out of the box and without a laundry list of configuration options that serve only to confuse most users. Documentation For more information, see: Installation Usage Advanced usage","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/#about-jekyll-seo-tag","text":"A Jekyll plugin to add metadata tags for search engines and social networks to better index and display your site's content.","title":"About Jekyll SEO Tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/#what-it-does","text":"Jekyll SEO Tag adds the following meta tags to your site: Page title, with site title or description appended Page description Canonical URL Next and previous URLs on paginated pages JSON-LD Site and post metadata for richer indexing Open Graph title, description, site title, and URL (for Facebook, LinkedIn, etc.) Twitter Summary Card metadata While you could theoretically add the necessary metadata tags yourself, Jekyll SEO Tag provides a battle-tested template of crowdsourced best-practices.","title":"What it does"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/#what-it-doesnt-do","text":"Jekyll SEO tag is designed to output machine-readable metadata for search engines and social networks to index and display. If you're looking for something to analyze your Jekyll site's structure and content (e.g., more traditional SEO optimization), take a look at The Jekyll SEO Gem . Jekyll SEO tag isn't designed to accommodate every possible use case. It should work for most site out of the box and without a laundry list of configuration options that serve only to confuse most users.","title":"What it doesn't do"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/#documentation","text":"For more information, see: Installation Usage Advanced usage","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/","text":"Advanced usage Jekyll SEO Tag is designed to implement SEO best practices by default and to be the right fit for most sites right out of the box. If for some reason, you need more control over the output, read on: Disabling <title> output If for some reason, you don't want the plugin to output <title> tags on each page, simply invoke the plugin within your template like so: {% seo title=false %} Author information Author information is used to propagate the creator field of Twitter summary cards. This should be an author-specific, not site-wide Twitter handle (the site-wide username be stored as site.twitter.username ). TL;DR: In most cases, put author: [your Twitter handle] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey this author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed, as Twitter supports only one author. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter Setting author url Starting from August 6, 2021 Google recommends to set the author.url property. This property helps Google to disambiguate the correct author of the article. You can set it the same way as the other author properties. For example, you can put it in an author object, in the site's _config.yml , e.g.: yml author: name: My Name url: https://example.com/ Customizing JSON-LD output The following options can be set for any particular page. While the default options are meant to serve most users in the most common circumstances, there may be situations where more precise control is necessary. seo name - If the name of the thing that the page represents is different from the page title. (i.e.: \"Frank's Caf\u00e9\" vs \"Welcome to Frank's Caf\u00e9\") type - The type of things that the page represents. This must be a Schema.org type , and will probably usually be something like BlogPosting , NewsArticle , Person , Organization , etc. links - An array of other URLs that represent the same thing that this page represents. For instance, Jane's bio page might include links to Jane's GitHub and Twitter profiles. date_modified - Manually specify the dateModified field in the JSON-LD output to override Jekyll's own dateModified . This field will take first priority for the dateModified JSON-LD output. This is useful when the file timestamp does not match the true time that the content was modified. A user may also install Last Modified At which will offer an alternative way of providing for the dateModified field. Customizing image output For most users, setting image: [path-to-image] on a per-page basis should be enough. If you need more control over how images are represented, the image property can also be an object, with the following options: path - The relative path to the image. Same as image: [path-to-image] height - The height of the Open Graph ( og:image ) image width - The width of the Open Graph ( og:image ) image alt - The alternative image text for Open Graph ( og:image:alt ) and Twitter ( twitter:image:alt ) You can use any of the above, optional properties, like so: image: path: /img/twitter.png height: 100 width: 100 alt: Twitter Logo Setting a default image You can define a default image using Front Matter defaults , to provide a default Twitter Card or OGP image to all of your posts and pages. Here is a very basic example, that you are encouraged to adapt to your needs: defaults: - scope: path: \"\" values: image: /assets/images/default-card.png SmartyPants Titles Titles will be processed using Jekyll's smartify filter . This will use SmartyPants to translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a page title. Setting customized Canonical URL You can set custom Canonical URL for a page by specifying canonical_url option in page front matter. E.g., you have the following in the page's front matter: layout: post title: Title of Your Post canonical_url: 'https://github.com/jekyll/jekyll-seo-tag/' Which will generate canonical_url with specified link in canonical_url. <link rel=\"canonical\" href=\"https://github.com/jekyll/jekyll-seo-tag/\" /> If no canonical_url option was specified, then uses page url for generating canonical_url. E.g., you have not specified canonical_url in front matter: layout: post title: Title of Your Post Which will generate following canonical_url: <link rel=\"canonical\" href=\"https://example.com/title-of-your-post\" /> Customizing title modifier for paginated pages You can override the default title modifier for paginated pages from Page %{current} of %{total} for to a string of your choice by setting a seo_paginator_message key in your _config.yml . For example: seo_paginator_message: \"%<current>s / %<total>s | \" While the value can be any string text, we recommend using a Ruby string-template containing the variables current and total similar to the example above, to incorporate the current page-number and total number of paginated pages in the title.","title":"Advanced usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#advanced-usage","text":"Jekyll SEO Tag is designed to implement SEO best practices by default and to be the right fit for most sites right out of the box. If for some reason, you need more control over the output, read on:","title":"Advanced usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#disabling-title-output","text":"If for some reason, you don't want the plugin to output <title> tags on each page, simply invoke the plugin within your template like so: {% seo title=false %}","title":"Disabling &lt;title&gt; output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#author-information","text":"Author information is used to propagate the creator field of Twitter summary cards. This should be an author-specific, not site-wide Twitter handle (the site-wide username be stored as site.twitter.username ). TL;DR: In most cases, put author: [your Twitter handle] in the document's front matter, for sites with multiple authors. If you need something more complicated, read on. There are several ways to convey this author-specific information. Author information is found in the following order of priority: An author object, in the documents's front matter, e.g.: yml author: twitter: benbalter An author object, in the site's _config.yml , e.g.: yml author: twitter: benbalter site.data.authors[author] , if an author is specified in the document's front matter, and a corresponding key exists in site.data.authors . E.g., you have the following in the document's front matter: yml author: benbalter And you have the following in _data/authors.yml : ```yml benbalter: picture: /img/benbalter.png twitter: jekyllrb potus: picture: /img/potus.png twitter: whitehouse ``` In the above example, the author benbalter 's Twitter handle will be resolved to @jekyllrb . This allows you to centralize author information in a single _data/authors file for site with many authors that require more than just the author's username. Pro-tip: If authors is present in the document's front matter as an array (and author is not), the plugin will use the first author listed, as Twitter supports only one author. An author in the document's front matter (the simplest way), e.g.: yml author: benbalter An author in the site's _config.yml , e.g.: yml author: benbalter","title":"Author information"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#setting-author-url","text":"Starting from August 6, 2021 Google recommends to set the author.url property. This property helps Google to disambiguate the correct author of the article. You can set it the same way as the other author properties. For example, you can put it in an author object, in the site's _config.yml , e.g.: yml author: name: My Name url: https://example.com/","title":"Setting author url"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#customizing-json-ld-output","text":"The following options can be set for any particular page. While the default options are meant to serve most users in the most common circumstances, there may be situations where more precise control is necessary. seo name - If the name of the thing that the page represents is different from the page title. (i.e.: \"Frank's Caf\u00e9\" vs \"Welcome to Frank's Caf\u00e9\") type - The type of things that the page represents. This must be a Schema.org type , and will probably usually be something like BlogPosting , NewsArticle , Person , Organization , etc. links - An array of other URLs that represent the same thing that this page represents. For instance, Jane's bio page might include links to Jane's GitHub and Twitter profiles. date_modified - Manually specify the dateModified field in the JSON-LD output to override Jekyll's own dateModified . This field will take first priority for the dateModified JSON-LD output. This is useful when the file timestamp does not match the true time that the content was modified. A user may also install Last Modified At which will offer an alternative way of providing for the dateModified field.","title":"Customizing JSON-LD output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#customizing-image-output","text":"For most users, setting image: [path-to-image] on a per-page basis should be enough. If you need more control over how images are represented, the image property can also be an object, with the following options: path - The relative path to the image. Same as image: [path-to-image] height - The height of the Open Graph ( og:image ) image width - The width of the Open Graph ( og:image ) image alt - The alternative image text for Open Graph ( og:image:alt ) and Twitter ( twitter:image:alt ) You can use any of the above, optional properties, like so: image: path: /img/twitter.png height: 100 width: 100 alt: Twitter Logo","title":"Customizing image output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#setting-a-default-image","text":"You can define a default image using Front Matter defaults , to provide a default Twitter Card or OGP image to all of your posts and pages. Here is a very basic example, that you are encouraged to adapt to your needs: defaults: - scope: path: \"\" values: image: /assets/images/default-card.png","title":"Setting a default image"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#smartypants-titles","text":"Titles will be processed using Jekyll's smartify filter . This will use SmartyPants to translate plain ASCII punctuation into \"smart\" typographic punctuation. This will not render or strip any Markdown you may be using in a page title.","title":"SmartyPants Titles"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#setting-customized-canonical-url","text":"You can set custom Canonical URL for a page by specifying canonical_url option in page front matter. E.g., you have the following in the page's front matter: layout: post title: Title of Your Post canonical_url: 'https://github.com/jekyll/jekyll-seo-tag/' Which will generate canonical_url with specified link in canonical_url. <link rel=\"canonical\" href=\"https://github.com/jekyll/jekyll-seo-tag/\" /> If no canonical_url option was specified, then uses page url for generating canonical_url. E.g., you have not specified canonical_url in front matter: layout: post title: Title of Your Post Which will generate following canonical_url: <link rel=\"canonical\" href=\"https://example.com/title-of-your-post\" />","title":"Setting customized Canonical URL"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/advanced-usage/#customizing-title-modifier-for-paginated-pages","text":"You can override the default title modifier for paginated pages from Page %{current} of %{total} for to a string of your choice by setting a seo_paginator_message key in your _config.yml . For example: seo_paginator_message: \"%<current>s / %<total>s | \" While the value can be any string text, we recommend using a Ruby string-template containing the variables current and total similar to the example above, to incorporate the current page-number and total number of paginated pages in the title.","title":"Customizing title modifier for paginated pages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/installation/","text":"Installing Jekyll SEO Tag Add the following to your site's Gemfile : ruby gem 'jekyll-seo-tag' Add the following to your site's _config.yml : yml plugins: - jekyll-seo-tag If you are using a Jekyll version less than 3.5.0 , use the gems key instead of plugins . Add the following right before </head> in your site's template(s): liquid {% seo %}","title":"Installing Jekyll SEO Tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/installation/#installing-jekyll-seo-tag","text":"Add the following to your site's Gemfile : ruby gem 'jekyll-seo-tag' Add the following to your site's _config.yml : yml plugins: - jekyll-seo-tag If you are using a Jekyll version less than 3.5.0 , use the gems key instead of plugins . Add the following right before </head> in your site's template(s): liquid {% seo %}","title":"Installing Jekyll SEO Tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/usage/","text":"Usage The SEO tag will respect any of the following if included in your site's _config.yml (and simply not include them if they're not defined): title - Your site's title (e.g., Ben's Awesome Site , The GitHub Blog , etc.), used as part of the title tag like Home | Ben's Awesome Site . tagline - A short description (e.g., A blog dedicated to reviewing cat gifs ), used as part of the title tag like Ben's Awesome Site | A blog dedicated to reviewing cat gifs instead of Ben's Awesome Site | Long description about a blog dedicated to reviewing cat gifs that would be used when page.title is not defined. description - A longer description used for the description meta tag. Also used as fallback for pages that don't provide their own description , and also as part of the page's title tag if neither page.title nor site.tagline has been defined. url - The full URL to your site. Note: site.github.url will be used by default. author - global author information (see Advanced usage ) twitter - The following properties are available: twitter:card - The site's default card type twitter:username - The site's Twitter handle. You'll want to describe them like so: yml twitter: username: benbalter card: summary * facebook - The following properties are available: * facebook:app_id - a Facebook app ID for Facebook insights * facebook:publisher - a Facebook page URL or ID of the publishing entity * facebook:admins - a Facebook user ID for domain insights linked to a personal account You'll want to describe one or more like so: yml facebook: app_id: 1234 publisher: 1234 admins: 1234 * logo - URL to a site-wide logo (e.g., /assets/your-company-logo.png ) - If you would like the \"publisher\" property to be present, you must add this field to your site's configuration, during the validation of the structured data by Google Search Console, if the logo field is not validated, you will find errors inherent to the publisher in the Rich Results Testing Tool * social - For specifying social profiles . The following properties are available: * name - If the user or organization name differs from the site's name * links - An array of links to social media profiles. yml social: name: Ben Balter links: - https://twitter.com/BenBalter - https://www.facebook.com/ben.balter - https://www.linkedin.com/in/BenBalter - https://github.com/benbalter - https://keybase.io/benbalter * google_site_verification for verifying ownership via Google Search Console * Alternatively, verify ownership with several services at once using the following format: yml webmaster_verifications: google: 1234 bing: 1234 alexa: 1234 yandex: 1234 baidu: 1234 facebook: 1234 * locale - The locale these tags are marked up in. Of the format language_TERRITORY . Default is en_US . Takes priority over existing config key lang . The SEO tag will respect the following YAML front matter if included in a post, page, or document: title - The title of the post, page, or document description - A short description of the page's content image - URL to an image associated with the post, page, or document (e.g., /assets/page-pic.jpg ) author - Page-, post-, or document-specific author information (see Advanced usage ) locale - Page-, post-, or document-specific locale information. Takes priority over existing front matter attribute lang . Note: Front matter defaults can be used for any of the above values as described in advanced usage with an image example.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-seo-tag-2.8.0/docs/usage/#usage","text":"The SEO tag will respect any of the following if included in your site's _config.yml (and simply not include them if they're not defined): title - Your site's title (e.g., Ben's Awesome Site , The GitHub Blog , etc.), used as part of the title tag like Home | Ben's Awesome Site . tagline - A short description (e.g., A blog dedicated to reviewing cat gifs ), used as part of the title tag like Ben's Awesome Site | A blog dedicated to reviewing cat gifs instead of Ben's Awesome Site | Long description about a blog dedicated to reviewing cat gifs that would be used when page.title is not defined. description - A longer description used for the description meta tag. Also used as fallback for pages that don't provide their own description , and also as part of the page's title tag if neither page.title nor site.tagline has been defined. url - The full URL to your site. Note: site.github.url will be used by default. author - global author information (see Advanced usage ) twitter - The following properties are available: twitter:card - The site's default card type twitter:username - The site's Twitter handle. You'll want to describe them like so: yml twitter: username: benbalter card: summary * facebook - The following properties are available: * facebook:app_id - a Facebook app ID for Facebook insights * facebook:publisher - a Facebook page URL or ID of the publishing entity * facebook:admins - a Facebook user ID for domain insights linked to a personal account You'll want to describe one or more like so: yml facebook: app_id: 1234 publisher: 1234 admins: 1234 * logo - URL to a site-wide logo (e.g., /assets/your-company-logo.png ) - If you would like the \"publisher\" property to be present, you must add this field to your site's configuration, during the validation of the structured data by Google Search Console, if the logo field is not validated, you will find errors inherent to the publisher in the Rich Results Testing Tool * social - For specifying social profiles . The following properties are available: * name - If the user or organization name differs from the site's name * links - An array of links to social media profiles. yml social: name: Ben Balter links: - https://twitter.com/BenBalter - https://www.facebook.com/ben.balter - https://www.linkedin.com/in/BenBalter - https://github.com/benbalter - https://keybase.io/benbalter * google_site_verification for verifying ownership via Google Search Console * Alternatively, verify ownership with several services at once using the following format: yml webmaster_verifications: google: 1234 bing: 1234 alexa: 1234 yandex: 1234 baidu: 1234 facebook: 1234 * locale - The locale these tags are marked up in. Of the format language_TERRITORY . Default is en_US . Takes priority over existing config key lang . The SEO tag will respect the following YAML front matter if included in a post, page, or document: title - The title of the post, page, or document description - A short description of the page's content image - URL to an image associated with the post, page, or document (e.g., /assets/page-pic.jpg ) author - Page-, post-, or document-specific author information (see Advanced usage ) locale - Page-, post-, or document-specific locale information. Takes priority over existing front matter attribute lang . Note: Front matter defaults can be used for any of the above values as described in advanced usage with an image example.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/","text":"Jekyll Sitemap Generator Plugin Jekyll plugin to silently generate a sitemaps.org compliant sitemap for your Jekyll site Usage Add gem 'jekyll-sitemap' to your site's Gemfile and run bundle Add the following to your site's _config.yml : gems: - jekyll-sitemap If all gem plugins have the same priority , they will be executed in the order they are required, generally. Thus, if you have other plugins which generate content and store that content in site.pages , site.posts , or site.collections , be sure to require jekyll-sitemap either after those other gems if you want the sitemap to include the generated content, or before those other gems if you don't want the sitemap to include the generated content from the gems. (Programming is hard .) Exclusions If you would like to exclude specific pages/posts from the sitemap set the sitemap flag to false in the front matter for the page/post. sitemap: false Developing locally Use script/bootstrap to bootstrap your local development environment. Use script/console to load a local IRB console with the Gem. Testing script/bootstrap script/cibuild Contributing Fork the project Create a descriptively named feature branch Add your feature Submit a pull request Issues If the sitemap.xml doesn't generate in the _site folder, ensure _config.yml doesn't have safe: true . That prevents all plugins from working. If the sitemap.xml doesn't generate in the _site folder, ensure that you don't have a sitemap generator plugin in your _plugin folder.","title":"Jekyll Sitemap Generator Plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#jekyll-sitemap-generator-plugin","text":"Jekyll plugin to silently generate a sitemaps.org compliant sitemap for your Jekyll site","title":"Jekyll Sitemap Generator Plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#usage","text":"Add gem 'jekyll-sitemap' to your site's Gemfile and run bundle Add the following to your site's _config.yml : gems: - jekyll-sitemap If all gem plugins have the same priority , they will be executed in the order they are required, generally. Thus, if you have other plugins which generate content and store that content in site.pages , site.posts , or site.collections , be sure to require jekyll-sitemap either after those other gems if you want the sitemap to include the generated content, or before those other gems if you don't want the sitemap to include the generated content from the gems. (Programming is hard .)","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#exclusions","text":"If you would like to exclude specific pages/posts from the sitemap set the sitemap flag to false in the front matter for the page/post. sitemap: false","title":"Exclusions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#developing-locally","text":"Use script/bootstrap to bootstrap your local development environment. Use script/console to load a local IRB console with the Gem.","title":"Developing locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#testing","text":"script/bootstrap script/cibuild","title":"Testing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#contributing","text":"Fork the project Create a descriptively named feature branch Add your feature Submit a pull request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/#issues","text":"If the sitemap.xml doesn't generate in the _site folder, ensure _config.yml doesn't have safe: true . That prevents all plugins from working. If the sitemap.xml doesn't generate in the _site folder, ensure that you don't have a sitemap generator plugin in your _plugin folder.","title":"Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/","text":"0.10.0 / 2016-01-05 URI encode sitemap URLs (#85) Do not include 'posts' collection twice (#92) Fix GitHub Pages tests to test just the Jekyll version (#87) Allow HTML files to end with .xhtml or .htm (#93) Simplify whitespace regex for stripping whitespace (#96) 0.9.0 / 2015-09-21 Test against Jekyll 2, 3, and the GitHub Pages version. (#83) 0.8.1 / 2015-03-11 Do not assume all pages have changed (#35) Remove duplicated range from regex (#73) 0.8.0 / 2015-02-03 Call each page page in pages loop in sitemap.xml for clarity (#64) Remove changefreq (#34) Remove priority (#33) Don't strip 'index.html' when there is more to filename (#68) 0.7.0 / 2014-12-07 Minor Enhancements Make site.baseurl support more robust (#59) Add site.baseurl to base site URL construction (#50) Development Fixes Remove unnecessary spaces and escaping in README (#58) 0.6.3 / 2014-11-11 Bug Fixes Be backwards-compatible when Site#in_source_dir and Site#in_dest_dir don't exist (#57) 0.6.2 / 2014-11-08 Bug Fixes Don't attempt to read the sitemap upon page creation. (#52) Use new secure methods to build source & dest paths. (#53) 0.6.1 / 2014-10-17 Minor Enhancements Strip excess whitespace (#40) Bug Fixes Add UTC offset to <lastmod> to handle non-UTC timezones (#49) Development Fixes Adding information about exclusion flag (#45) 0.6.0 / 2014-09-05 Minor Enhancements Include custom collections in the sitemap. (#30) Use post.last_modified_at for post <lastmod> if available (#37) 0.5.1 / 2014-07-31 Bug Fixes Explicitly set sitemap layout to nil to avoid warning (#32) 0.5.0 / 2014-06-02 Minor Enhancements Allow users to exclude a page/post from the sitemap (#11) 0.4.1 / 2014-05-10 Bug Fixes Force sitemap layout to be nil (#16) Correct seconds in timestamp for static files (#24) Development Fixes Upgrade to Rspec 3.0 and use be_truthy (#24) 0.4.0 / 2014-05-06 Major Enhancements Support Jekyll 2.0 (#12) 0.3.0 / 2014-05-05 Minor Enhancements Generate sitemap using html_pages (#10) Bug Fixes Remove stray sitemap.xsl from template (#8) Development Fixes Added travis (#6) Better timezone support (#7) 0.2.0 / 2014-03-24 Loosen Jekyll requirement (#4) 0.1.0 / 2014-03-15 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#0100-2016-01-05","text":"URI encode sitemap URLs (#85) Do not include 'posts' collection twice (#92) Fix GitHub Pages tests to test just the Jekyll version (#87) Allow HTML files to end with .xhtml or .htm (#93) Simplify whitespace regex for stripping whitespace (#96)","title":"0.10.0 / 2016-01-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#090-2015-09-21","text":"Test against Jekyll 2, 3, and the GitHub Pages version. (#83)","title":"0.9.0 / 2015-09-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#081-2015-03-11","text":"Do not assume all pages have changed (#35) Remove duplicated range from regex (#73)","title":"0.8.1 / 2015-03-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#080-2015-02-03","text":"Call each page page in pages loop in sitemap.xml for clarity (#64) Remove changefreq (#34) Remove priority (#33) Don't strip 'index.html' when there is more to filename (#68)","title":"0.8.0 / 2015-02-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#070-2014-12-07","text":"","title":"0.7.0 / 2014-12-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#minor-enhancements","text":"Make site.baseurl support more robust (#59) Add site.baseurl to base site URL construction (#50)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#development-fixes","text":"Remove unnecessary spaces and escaping in README (#58)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#063-2014-11-11","text":"","title":"0.6.3 / 2014-11-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes","text":"Be backwards-compatible when Site#in_source_dir and Site#in_dest_dir don't exist (#57)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#062-2014-11-08","text":"","title":"0.6.2 / 2014-11-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes_1","text":"Don't attempt to read the sitemap upon page creation. (#52) Use new secure methods to build source & dest paths. (#53)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#061-2014-10-17","text":"","title":"0.6.1 / 2014-10-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#minor-enhancements_1","text":"Strip excess whitespace (#40)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes_2","text":"Add UTC offset to <lastmod> to handle non-UTC timezones (#49)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#development-fixes_1","text":"Adding information about exclusion flag (#45)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#060-2014-09-05","text":"","title":"0.6.0 / 2014-09-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#minor-enhancements_2","text":"Include custom collections in the sitemap. (#30) Use post.last_modified_at for post <lastmod> if available (#37)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#051-2014-07-31","text":"","title":"0.5.1 / 2014-07-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes_3","text":"Explicitly set sitemap layout to nil to avoid warning (#32)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#050-2014-06-02","text":"","title":"0.5.0 / 2014-06-02"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#minor-enhancements_3","text":"Allow users to exclude a page/post from the sitemap (#11)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#041-2014-05-10","text":"","title":"0.4.1 / 2014-05-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes_4","text":"Force sitemap layout to be nil (#16) Correct seconds in timestamp for static files (#24)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#development-fixes_2","text":"Upgrade to Rspec 3.0 and use be_truthy (#24)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#040-2014-05-06","text":"","title":"0.4.0 / 2014-05-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#major-enhancements","text":"Support Jekyll 2.0 (#12)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#030-2014-05-05","text":"","title":"0.3.0 / 2014-05-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#minor-enhancements_4","text":"Generate sitemap using html_pages (#10)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#bug-fixes_5","text":"Remove stray sitemap.xsl from template (#8)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#development-fixes_3","text":"Added travis (#6) Better timezone support (#7)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#020-2014-03-24","text":"Loosen Jekyll requirement (#4)","title":"0.2.0 / 2014-03-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/History/#010-2014-03-15","text":"Birthday!","title":"0.1.0 / 2014-03-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2014 GitHub, inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/custom_permalink/","text":"Custom permalink","title":"Custom permalink"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/custom_permalink/#custom-permalink","text":"","title":"Custom permalink"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/custom_permalink_2/","text":"Unique html name","title":"Unique html name"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/custom_permalink_2/#unique-html-name","text":"","title":"Unique html name"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/this-has-non-standard-chars/","text":"URL contains characters that need to be URI encoded","title":"URL contains characters that need to be URI encoded"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_my_collection/this-has-non-standard-chars/#url-contains-characters-that-need-to-be-uri-encoded","text":"","title":"URL contains characters that need to be URI encoded"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2013-12-12-dec-the-second/","text":"--- December the twelfth, actually.","title":"2013 12 12 dec the second"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2013-12-12-dec-the-second/#-","text":"December the twelfth, actually.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2014-03-02-march-the-second/","text":"--- March the second!","title":"2014 03 02 march the second"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2014-03-02-march-the-second/#-","text":"March the second!","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2014-03-04-march-the-fourth/","text":"--- March the fourth!","title":"2014 03 04 march the fourth"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2014-03-04-march-the-fourth/#-","text":"March the fourth!","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2014-05-11-exclude-this-post/","text":"This post should not appear in the sitemap.","title":"2014 05 11 exclude this post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2015-01-18-jekyll-last-modified-at/","text":"--- Please don't modify this file. It's modified time is important.","title":"2015 01 18 jekyll last modified at"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-0.10.0/spec/fixtures/_posts/2015-01-18-jekyll-last-modified-at/#-","text":"Please don't modify this file. It's modified time is important.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/","text":"Jekyll Sitemap Generator Plugin Jekyll plugin to silently generate a sitemaps.org compliant sitemap for your Jekyll site Usage Add gem 'jekyll-sitemap' to your site's Gemfile and run bundle Add the following to your site's _config.yml : url: \"http://example.com\" # the base hostname & protocol for your site plugins: - jekyll-sitemap \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . If all gem plugins have the same priority , they will be executed in the order they are required, generally. Thus, if you have other plugins which generate content and store that content in site.pages , site.posts , or site.collections , be sure to require jekyll-sitemap either after those other gems if you want the sitemap to include the generated content, or before those other gems if you don't want the sitemap to include the generated content from the gems. (Programming is hard .) Because the sitemap is added to site.pages , you may have to modify any templates that iterate through all pages (for example, to build a menu of all of the site's content). Note on Use with GitHub Pages Gem The GitHub Pages gem ignores all plugins included in the Gemfile. If you only include jekyll-sitemap in the Gemfile without also including it in the _config.yml the plugin will not work . This can be confusing because the official Jekyll docs state that plugins can be included in either the Gemfile or _config.yml . When building a site that uses the GitHub Pages gem, follow the instructions above and ensure that jekyll-sitemap is listed in the plugins array in _config.yml . :warning: If you are using Jekyll < 3.5.0 use the gems key instead of plugins . <lastmod> tag The <lastmod> tag in the sitemap.xml will reflect by priority: The modified date of the file as reported by the filesystem if you have jekyll-last-modified-at plugin installed (not compatible with GitHub Pages auto building) A personalised date if you add the variable last_modified_at: with a date in the Front Matter The creation date of your post (corresponding to the post.date variable) Exclusions If you would like to exclude specific pages/posts from the sitemap set the sitemap flag to false in the front matter for the page/post. sitemap: false To exclude files from your sitemap. It can be achieved with configuration using Jekyll v3.7.2 and jekyll-sitemap v1.2.0 . Add a glob config to your _config.yml file. defaults: - scope: path: \"assets/**/*.pdf\" values: sitemap: false Override default development settings Follow these instructions on Jekyll's documentation . Developing locally Use script/bootstrap to bootstrap your local development environment. Use script/console to load a local IRB console with the Gem. Testing script/bootstrap script/cibuild Known Issues If the sitemap.xml doesn't generate in the _site folder, ensure _config.yml doesn't have safe: true . That prevents all plugins from working. If the sitemap.xml doesn't generate in the _site folder, ensure that you don't have a sitemap generator plugin in your _plugin folder. Contributing Fork the project Create a descriptively named feature branch Add your feature Submit a pull request","title":"Jekyll Sitemap Generator Plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#jekyll-sitemap-generator-plugin","text":"Jekyll plugin to silently generate a sitemaps.org compliant sitemap for your Jekyll site","title":"Jekyll Sitemap Generator Plugin"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#usage","text":"Add gem 'jekyll-sitemap' to your site's Gemfile and run bundle Add the following to your site's _config.yml : url: \"http://example.com\" # the base hostname & protocol for your site plugins: - jekyll-sitemap \ud83d\udca1 If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . If all gem plugins have the same priority , they will be executed in the order they are required, generally. Thus, if you have other plugins which generate content and store that content in site.pages , site.posts , or site.collections , be sure to require jekyll-sitemap either after those other gems if you want the sitemap to include the generated content, or before those other gems if you don't want the sitemap to include the generated content from the gems. (Programming is hard .) Because the sitemap is added to site.pages , you may have to modify any templates that iterate through all pages (for example, to build a menu of all of the site's content).","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#note-on-use-with-github-pages-gem","text":"The GitHub Pages gem ignores all plugins included in the Gemfile. If you only include jekyll-sitemap in the Gemfile without also including it in the _config.yml the plugin will not work . This can be confusing because the official Jekyll docs state that plugins can be included in either the Gemfile or _config.yml . When building a site that uses the GitHub Pages gem, follow the instructions above and ensure that jekyll-sitemap is listed in the plugins array in _config.yml . :warning: If you are using Jekyll < 3.5.0 use the gems key instead of plugins .","title":"Note on Use with GitHub Pages Gem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#lastmod-tag","text":"The <lastmod> tag in the sitemap.xml will reflect by priority: The modified date of the file as reported by the filesystem if you have jekyll-last-modified-at plugin installed (not compatible with GitHub Pages auto building) A personalised date if you add the variable last_modified_at: with a date in the Front Matter The creation date of your post (corresponding to the post.date variable)","title":"&lt;lastmod&gt; tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#exclusions","text":"If you would like to exclude specific pages/posts from the sitemap set the sitemap flag to false in the front matter for the page/post. sitemap: false To exclude files from your sitemap. It can be achieved with configuration using Jekyll v3.7.2 and jekyll-sitemap v1.2.0 . Add a glob config to your _config.yml file. defaults: - scope: path: \"assets/**/*.pdf\" values: sitemap: false","title":"Exclusions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#override-default-development-settings","text":"Follow these instructions on Jekyll's documentation .","title":"Override default development settings"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#developing-locally","text":"Use script/bootstrap to bootstrap your local development environment. Use script/console to load a local IRB console with the Gem.","title":"Developing locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#testing","text":"script/bootstrap script/cibuild","title":"Testing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#known-issues","text":"If the sitemap.xml doesn't generate in the _site folder, ensure _config.yml doesn't have safe: true . That prevents all plugins from working. If the sitemap.xml doesn't generate in the _site folder, ensure that you don't have a sitemap generator plugin in your _plugin folder.","title":"Known Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/#contributing","text":"Fork the project Create a descriptively named feature branch Add your feature Submit a pull request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/","text":"1.4.0 / 2019-11-21 Minor Enhancements Avoid overwriting an existing robots.txt (#246) Bug Fixes Simulate last_modified_at injection by plugin (#256) 1.3.1 / 2019-03-25 Bug Fixes Update plugin metadata and dev environment (#244) Development Fixes Lock requirement for jekyll-last-modified-at to >= 1.0 1.3.0 / 2019-03-21 Allow Jekyll v4 (still alpha) Documentation Add PDF file exclusion documentation (#213) Correct capitalization of GitHub (#207) Development Fixes Use Ruby 2.3 and Rubocop 0.55 (#214) chore(deps): rubocop-jekyll-0.3 (#227) 1.2.0 / 2018-01-25 Minor Enhancements Remove excluded static files from the sitemap (#166) filter/replace static index.html paths to permalink (#170) Development Fixes Condition the static file tests on Jekyll 3.4.2 and above (#167) Update versions for Travis (#174) Fix Travis Deploy (#173) Test against Jekyll 3.4.x and latest 3.x (#177) Define path with dir (#186) Style: Rubocop auto-correct (#195) Test against Ruby 2.5 (#201) Documentation Add note about use with Github Pages gem (#179) Fix a couple of typos (#184) Use plugins instead of gems in README config (#185) Docs: set site.url in config (#172) 1.1.1 / 2017-04-11 Cut a new version to alleviate sha256 checksum issue on RubyGems.org (#165) 1.1.0 / 2017-04-10 Minor Enhancements escape& (#162) feat: remove 404 pages from the sitemap. closes #113 (#164) 1.0.0 / 2017-01-06 No new changes 0.13.0 / 2017-01-05 Minor Enhancements Add sitemap.xsl if exists (#143) Add robots.txt when none exists (#146) Refactor and add sitemap to site.pages (#137) DRY in sitemap.xml (#136) Documentation Fix #134: Rename \"Issues\" to \"Known Issues\" (#135) Fix #104: Add explanation in README for tag (#139) Update copyright attribution (#149) Development Fixes Travis should do a deep clone (#147) 0.12.0 / 2016-10-06 Minor Enhancements Don't set @site.config[\"time\"] on sitemap generation (#131) Use filters to clean up Liquid template (#128) Development Fixes Appease Rubocop (#132) Drop Addressable dependency (#133) 0.11.0 / 2016-07-08 Add Rubocop (#100) Allow Travis to cache dependencies (#108) Properly Escape URLs (#107) Include PDF files in sitemap (#109) 0.10.0 / 2016-01-05 URI encode sitemap URLs (#85) Do not include 'posts' collection twice (#92) Fix GitHub Pages tests to test just the Jekyll version (#87) Allow HTML files to end with .xhtml or .htm (#93) Simplify whitespace regex for stripping whitespace (#96) 0.9.0 / 2015-09-21 Test against Jekyll 2, 3, and the GitHub Pages version. (#83) 0.8.1 / 2015-03-11 Do not assume all pages have changed (#35) Remove duplicated range from regex (#73) 0.8.0 / 2015-02-03 Call each page page in pages loop in sitemap.xml for clarity (#64) Remove changefreq (#34) Remove priority (#33) Don't strip 'index.html' when there is more to filename ## Minor Enhancements (#68) 0.7.0 / 2014-12-07 Make site.baseurl support more robust (#59) Add site.baseurl to base site URL construction ## Development Fixes (#50) Remove unnecessary spaces and escaping in README ## Bug Fixes (#58) 0.6.3 / 2014-11-11 Be backwards-compatible when Site#in_source_dir and Site#in_dest_dir don't exist (#57) 0.6.2 / 2014-11-08 Bug Fixes Don't attempt to read the sitemap upon page creation. (#52) Use new secure methods to build source & dest paths. (#53) 0.6.1 / 2014-10-17 Minor Enhancements Strip excess whitespace (#40) Bug Fixes Add UTC offset to <lastmod> to handle non-UTC timezones (#49) Development Fixes Adding information about exclusion flag (#45) 0.6.0 / 2014-09-05 Minor Enhancements Include custom collections in the sitemap. (#30) Use post.last_modified_at for post <lastmod> if available (#37) 0.5.1 / 2014-07-31 Bug Fixes Explicitly set sitemap layout to nil to avoid warning (#32) 0.5.0 / 2014-06-02 Minor Enhancements Allow users to exclude a page/post from the sitemap (#11) 0.4.1 / 2014-05-10 Bug Fixes Force sitemap layout to be nil (#16) Correct seconds in timestamp for static files # Development Fixes (#24) Upgrade to Rspec 3.0 and use be_truthy (#24) 0.4.0 / 2014-05-06 Major Enhancements Support Jekyll 2.0 (#12) 0.3.0 / 2014-05-05 Minor Enhancements Generate sitemap using html_pages (#10) Bug Fixes Remove stray sitemap.xsl from template (#8) Development Fixes Added travis (#6) Better timezone support (#7) 0.2.0 / 2014-03-24 Loosen Jekyll requirement (#4) 0.1.0 / 2014-03-15 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#140-2019-11-21","text":"","title":"1.4.0 / 2019-11-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements","text":"Avoid overwriting an existing robots.txt (#246)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes","text":"Simulate last_modified_at injection by plugin (#256)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#131-2019-03-25","text":"","title":"1.3.1 / 2019-03-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_1","text":"Update plugin metadata and dev environment (#244)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes","text":"Lock requirement for jekyll-last-modified-at to >= 1.0","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#130-2019-03-21","text":"Allow Jekyll v4 (still alpha)","title":"1.3.0 / 2019-03-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#documentation","text":"Add PDF file exclusion documentation (#213) Correct capitalization of GitHub (#207)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_1","text":"Use Ruby 2.3 and Rubocop 0.55 (#214) chore(deps): rubocop-jekyll-0.3 (#227)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#120-2018-01-25","text":"","title":"1.2.0 / 2018-01-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_1","text":"Remove excluded static files from the sitemap (#166) filter/replace static index.html paths to permalink (#170)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_2","text":"Condition the static file tests on Jekyll 3.4.2 and above (#167) Update versions for Travis (#174) Fix Travis Deploy (#173) Test against Jekyll 3.4.x and latest 3.x (#177) Define path with dir (#186) Style: Rubocop auto-correct (#195) Test against Ruby 2.5 (#201)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#documentation_1","text":"Add note about use with Github Pages gem (#179) Fix a couple of typos (#184) Use plugins instead of gems in README config (#185) Docs: set site.url in config (#172)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#111-2017-04-11","text":"Cut a new version to alleviate sha256 checksum issue on RubyGems.org (#165)","title":"1.1.1 / 2017-04-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#110-2017-04-10","text":"","title":"1.1.0 / 2017-04-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_2","text":"escape& (#162) feat: remove 404 pages from the sitemap. closes #113 (#164)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#100-2017-01-06","text":"No new changes","title":"1.0.0 / 2017-01-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#0130-2017-01-05","text":"","title":"0.13.0 / 2017-01-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_3","text":"Add sitemap.xsl if exists (#143) Add robots.txt when none exists (#146) Refactor and add sitemap to site.pages (#137) DRY in sitemap.xml (#136)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#documentation_2","text":"Fix #134: Rename \"Issues\" to \"Known Issues\" (#135) Fix #104: Add explanation in README for tag (#139) Update copyright attribution (#149)","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_3","text":"Travis should do a deep clone (#147)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#0120-2016-10-06","text":"","title":"0.12.0 / 2016-10-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_4","text":"Don't set @site.config[\"time\"] on sitemap generation (#131) Use filters to clean up Liquid template (#128)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_4","text":"Appease Rubocop (#132) Drop Addressable dependency (#133)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#0110-2016-07-08","text":"Add Rubocop (#100) Allow Travis to cache dependencies (#108) Properly Escape URLs (#107) Include PDF files in sitemap (#109)","title":"0.11.0 / 2016-07-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#0100-2016-01-05","text":"URI encode sitemap URLs (#85) Do not include 'posts' collection twice (#92) Fix GitHub Pages tests to test just the Jekyll version (#87) Allow HTML files to end with .xhtml or .htm (#93) Simplify whitespace regex for stripping whitespace (#96)","title":"0.10.0 / 2016-01-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#090-2015-09-21","text":"Test against Jekyll 2, 3, and the GitHub Pages version. (#83)","title":"0.9.0 / 2015-09-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#081-2015-03-11","text":"Do not assume all pages have changed (#35) Remove duplicated range from regex (#73)","title":"0.8.1 / 2015-03-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#080-2015-02-03","text":"Call each page page in pages loop in sitemap.xml for clarity (#64) Remove changefreq (#34) Remove priority (#33) Don't strip 'index.html' when there is more to filename ## Minor Enhancements (#68)","title":"0.8.0 / 2015-02-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#070-2014-12-07","text":"Make site.baseurl support more robust (#59) Add site.baseurl to base site URL construction ## Development Fixes (#50) Remove unnecessary spaces and escaping in README ## Bug Fixes (#58)","title":"0.7.0 / 2014-12-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#063-2014-11-11","text":"Be backwards-compatible when Site#in_source_dir and Site#in_dest_dir don't exist (#57)","title":"0.6.3 / 2014-11-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#062-2014-11-08","text":"","title":"0.6.2 / 2014-11-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_2","text":"Don't attempt to read the sitemap upon page creation. (#52) Use new secure methods to build source & dest paths. (#53)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#061-2014-10-17","text":"","title":"0.6.1 / 2014-10-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_5","text":"Strip excess whitespace (#40)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_3","text":"Add UTC offset to <lastmod> to handle non-UTC timezones (#49)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_5","text":"Adding information about exclusion flag (#45)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#060-2014-09-05","text":"","title":"0.6.0 / 2014-09-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_6","text":"Include custom collections in the sitemap. (#30) Use post.last_modified_at for post <lastmod> if available (#37)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#051-2014-07-31","text":"","title":"0.5.1 / 2014-07-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_4","text":"Explicitly set sitemap layout to nil to avoid warning (#32)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#050-2014-06-02","text":"","title":"0.5.0 / 2014-06-02"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_7","text":"Allow users to exclude a page/post from the sitemap (#11)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#041-2014-05-10","text":"","title":"0.4.1 / 2014-05-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_5","text":"Force sitemap layout to be nil (#16) Correct seconds in timestamp for static files # Development Fixes (#24) Upgrade to Rspec 3.0 and use be_truthy (#24)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#040-2014-05-06","text":"","title":"0.4.0 / 2014-05-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#major-enhancements","text":"Support Jekyll 2.0 (#12)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#030-2014-05-05","text":"","title":"0.3.0 / 2014-05-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#minor-enhancements_8","text":"Generate sitemap using html_pages (#10)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#bug-fixes_6","text":"Remove stray sitemap.xsl from template (#8)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#development-fixes_6","text":"Added travis (#6) Better timezone support (#7)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#020-2014-03-24","text":"Loosen Jekyll requirement (#4)","title":"0.2.0 / 2014-03-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/History/#010-2014-03-15","text":"Birthday!","title":"0.1.0 / 2014-03-15"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2014-present, GitHub, inc. and the jekyll-sitemap contributors Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/404/","text":"--- That's an error.","title":"404"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/404/#-","text":"That's an error.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/custom_permalink/","text":"Custom permalink","title":"Custom permalink"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/custom_permalink/#custom-permalink","text":"","title":"Custom permalink"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/custom_permalink_2/","text":"Unique html name","title":"Unique html name"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/custom_permalink_2/#unique-html-name","text":"","title":"Unique html name"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/this-has-non-standard-chars/","text":"URL contains characters that need to be URI encoded","title":"URL contains characters that need to be URI encoded"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_my_collection/this-has-non-standard-chars/#url-contains-characters-that-need-to-be-uri-encoded","text":"","title":"URL contains characters that need to be URI encoded"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2013-12-12-dec-the-second/","text":"--- December the twelfth, actually.","title":"2013 12 12 dec the second"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2013-12-12-dec-the-second/#-","text":"December the twelfth, actually.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2014-03-02-march-the-second/","text":"--- March the second!","title":"2014 03 02 march the second"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2014-03-02-march-the-second/#-","text":"March the second!","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2014-03-04-march-the-fourth/","text":"--- March the fourth!","title":"2014 03 04 march the fourth"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2014-03-04-march-the-fourth/#-","text":"March the fourth!","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2014-05-11-exclude-this-post/","text":"This post should not appear in the sitemap.","title":"2014 05 11 exclude this post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2015-01-18-jekyll-last-modified-at/","text":"--- Please don't modify this file. It's modified time is important.","title":"2015 01 18 jekyll last modified at"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-sitemap-1.4.0/spec/fixtures/_posts/2015-01-18-jekyll-last-modified-at/#-","text":"Please don't modify this file. It's modified time is important.","title":"---"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/","text":"Swiss Jekyll Theme Swiss is a bold Jekyll theme inspired by Swiss design and the works of Massimo Vignelli. This theme lends itself well to sites heavy on written content. Features: Mobile-first design ensures this theme performs fastest on mobile while scaling elegantly to desktop-size screens. Designed for blogs and sites heavy on written content, with bold typography styles, homepage summaries, and previous/next snippets. Supports a wide range of HTML elements and markdown. Flexible styles that can be reused for customization without adding additional CSS. Dynamically generated navigation links. See docs for adding pages with specific post category for-loops. Installation Add this line to your Jekyll site's Gemfile: gem \"github-pages\", group: :jekyll_plugins And add this line to your Jekyll site: remote_theme: broccolini/swiss And then execute: $ bundle Usage This theme comes in eight different color variations. The default is set to the black theme, to change to a different theme edit the config under theme_color: black to one of the following colors: theme_color: black theme_color: red theme_color: white theme_color: gray theme_color: blue theme_color: magenta theme_color: orange theme_color: yellow Contributing Bug reports and pull requests are welcome on GitHub at https://github.com/broccolini/swiss. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct. Development To set up your environment to develop this theme, run bundle install . Your theme is setup just like a normal Jekyll site! To test your theme, run bundle exec jekyll serve and open your browser at http://localhost:4000 . This starts a Jekyll server using your theme. Add pages, documents, data, etc. like normal to test your theme's contents. As you make modifications to your theme and to your content, your site will regenerate and you should see the changes in the browser after a refresh, just like normal. When your theme is released, only the files in _layouts , _includes , and _sass tracked with Git will be released. License The theme is available as open source under the terms of the MIT License .","title":"Swiss Jekyll Theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#swiss-jekyll-theme","text":"Swiss is a bold Jekyll theme inspired by Swiss design and the works of Massimo Vignelli. This theme lends itself well to sites heavy on written content.","title":"Swiss Jekyll Theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#features","text":"Mobile-first design ensures this theme performs fastest on mobile while scaling elegantly to desktop-size screens. Designed for blogs and sites heavy on written content, with bold typography styles, homepage summaries, and previous/next snippets. Supports a wide range of HTML elements and markdown. Flexible styles that can be reused for customization without adding additional CSS. Dynamically generated navigation links. See docs for adding pages with specific post category for-loops.","title":"Features:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#installation","text":"Add this line to your Jekyll site's Gemfile: gem \"github-pages\", group: :jekyll_plugins And add this line to your Jekyll site: remote_theme: broccolini/swiss And then execute: $ bundle","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#usage","text":"This theme comes in eight different color variations. The default is set to the black theme, to change to a different theme edit the config under theme_color: black to one of the following colors: theme_color: black theme_color: red theme_color: white theme_color: gray theme_color: blue theme_color: magenta theme_color: orange theme_color: yellow","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#contributing","text":"Bug reports and pull requests are welcome on GitHub at https://github.com/broccolini/swiss. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#development","text":"To set up your environment to develop this theme, run bundle install . Your theme is setup just like a normal Jekyll site! To test your theme, run bundle exec jekyll serve and open your browser at http://localhost:4000 . This starts a Jekyll server using your theme. Add pages, documents, data, etc. like normal to test your theme's contents. As you make modifications to your theme and to your content, your site will regenerate and you should see the changes in the browser after a refresh, just like normal. When your theme is released, only the files in _layouts , _includes , and _sass tracked with Git will be released.","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-swiss-1.0.0/#license","text":"The theme is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/","text":"The Architect theme Architect is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Architect theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/architect@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Architect will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Architect theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Architect? We'd love your help. Architect is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/architect ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Architect theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#the-architect-theme","text":"Architect is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Architect theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#usage","text":"To use the Architect theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/architect@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#configuration-variables","text":"Architect will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#project-philosophy","text":"The Architect theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#contributing","text":"Interested in contributing to Architect? We'd love your help. Architect is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/architect ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-architect-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/","text":"The Cayman theme Cayman is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Cayman theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/cayman@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Cayman will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Cayman theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Cayman? We'd love your help. Cayman is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/cayman ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Cayman theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#the-cayman-theme","text":"Cayman is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Cayman theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#usage","text":"To use the Cayman theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/cayman@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#configuration-variables","text":"Cayman will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#project-philosophy","text":"The Cayman theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#contributing","text":"Interested in contributing to Cayman? We'd love your help. Cayman is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/cayman ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-cayman-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/","text":"The Dinky theme Dinky is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Dinky theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/dinky@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Dinky will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Dinky theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Dinky? We'd love your help. Dinky is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/dinky ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Dinky theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#the-dinky-theme","text":"Dinky is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Dinky theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#usage","text":"To use the Dinky theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/dinky@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#configuration-variables","text":"Dinky will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#project-philosophy","text":"The Dinky theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#contributing","text":"Interested in contributing to Dinky? We'd love your help. Dinky is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/dinky ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-dinky-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/","text":"The Hacker theme Hacker is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Hacker theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/hacker@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Hacker will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Hacker theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Hacker? We'd love your help. Hacker is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/hacker ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Hacker theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#the-hacker-theme","text":"Hacker is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Hacker theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#usage","text":"To use the Hacker theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/hacker@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#configuration-variables","text":"Hacker will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#project-philosophy","text":"The Hacker theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#contributing","text":"Interested in contributing to Hacker? We'd love your help. Hacker is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/hacker ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-hacker-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/","text":"The Leap day theme Leap day is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Leap day theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/leap-day@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Leap day will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Leap day theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Leap day? We'd love your help. Leap day is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/leap-day ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Leap day theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#the-leap-day-theme","text":"Leap day is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Leap day theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#usage","text":"To use the Leap day theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/leap-day@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#configuration-variables","text":"Leap day will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#project-philosophy","text":"The Leap day theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#contributing","text":"Interested in contributing to Leap day? We'd love your help. Leap day is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/leap-day ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-leap-day-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/","text":"The Merlot theme Merlot is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Merlot theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/merlot@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Merlot will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Merlot theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Merlot? We'd love your help. Merlot is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/merlot ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Merlot theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#the-merlot-theme","text":"Merlot is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Merlot theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#usage","text":"To use the Merlot theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/merlot@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#configuration-variables","text":"Merlot will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#project-philosophy","text":"The Merlot theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#contributing","text":"Interested in contributing to Merlot? We'd love your help. Merlot is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/merlot ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-merlot-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/","text":"The Midnight theme Midnight is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Midnight theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/midnight@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Midnight will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Midnight theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Midnight? We'd love your help. Midnight is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/midnight ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Midnight theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#the-midnight-theme","text":"Midnight is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Midnight theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#usage","text":"To use the Midnight theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/midnight@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#configuration-variables","text":"Midnight will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#project-philosophy","text":"The Midnight theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#contributing","text":"Interested in contributing to Midnight? We'd love your help. Midnight is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/midnight ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-midnight-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/","text":"The Minimal theme Minimal is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Minimal theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/minimal@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Minimal will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Minimal theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Minimal? We'd love your help. Minimal is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/minimal ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Minimal theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#the-minimal-theme","text":"Minimal is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Minimal theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#usage","text":"To use the Minimal theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/minimal@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#configuration-variables","text":"Minimal will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#project-philosophy","text":"The Minimal theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#contributing","text":"Interested in contributing to Minimal? We'd love your help. Minimal is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/minimal ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-minimal-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/","text":"The Modernist theme Modernist is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Modernist theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/modernist@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Modernist will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Modernist theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Modernist? We'd love your help. Modernist is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/modernist ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Modernist theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#the-modernist-theme","text":"Modernist is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Modernist theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#usage","text":"To use the Modernist theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/modernist@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#configuration-variables","text":"Modernist will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#project-philosophy","text":"The Modernist theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#contributing","text":"Interested in contributing to Modernist? We'd love your help. Modernist is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/modernist ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-modernist-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/","text":"The Primer theme Primer is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Primer theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/primer@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Primer will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Primer theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Primer? We'd love your help. Primer is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/primer ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Primer theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#the-primer-theme","text":"Primer is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Primer theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#usage","text":"To use the Primer theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/primer@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#configuration-variables","text":"Primer will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#project-philosophy","text":"The Primer theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#contributing","text":"Interested in contributing to Primer? We'd love your help. Primer is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/primer ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-primer-0.6.0/LICENSE/","text":"The MIT License (MIT) Copyright (c) 2016-2017 GitHub, Inc. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/","text":"The Slate theme Slate is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Slate theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/slate@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Slate will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Slate theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Slate? We'd love your help. Slate is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/slate ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Slate theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#the-slate-theme","text":"Slate is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Slate theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#usage","text":"To use the Slate theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/slate@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#configuration-variables","text":"Slate will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#project-philosophy","text":"The Slate theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#contributing","text":"Interested in contributing to Slate? We'd love your help. Slate is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/slate ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-slate-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/","text":"The Tactile theme Tactile is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Tactile theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/tactile@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Tactile will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Tactile theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Tactile? We'd love your help. Tactile is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/tactile ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Tactile theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#the-tactile-theme","text":"Tactile is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Tactile theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#usage","text":"To use the Tactile theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/tactile@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#configuration-variables","text":"Tactile will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#project-philosophy","text":"The Tactile theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#contributing","text":"Interested in contributing to Tactile? We'd love your help. Tactile is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/tactile ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-tactile-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/","text":"The Time machine theme Time machine is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today . Usage To use the Time machine theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/time-machine@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins Customizing Configuration variables Time machine will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID] Stylesheet If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet. Layouts If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like Customizing Google Analytics code Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site. Overriding GitHub-generated URLs Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation . Roadmap See the open issues for a list of proposed features (and known issues). Project philosophy The Time machine theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying. Contributing Interested in contributing to Time machine? We'd love your help. Time machine is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute. Previewing the theme locally If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/time-machine ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme Running tests The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"The Time machine theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#the-time-machine-theme","text":"Time machine is a Jekyll theme for GitHub Pages. You can preview the theme to see what it looks like , or even use it today .","title":"The Time machine theme"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#usage","text":"To use the Time machine theme: Add the following to your site's _config.yml : yml remote_theme: pages-themes/time-machine@v0.2.0 plugins: - jekyll-remote-theme # add this line to the plugins list if you already have one Optionally, if you'd like to preview your site on your computer, add the following to your site's Gemfile : ruby gem \"github-pages\", group: :jekyll_plugins","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#customizing","text":"","title":"Customizing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#configuration-variables","text":"Time machine will respect the following variables, if set in your site's _config.yml : title: [The title of your site] description: [A short description of your site's purpose] Additionally, you may choose to set the following optional variables: show_downloads: [\"true\" or \"false\" (unquoted) to indicate whether to provide a download URL] google_analytics: [Your Google Analytics tracking ID]","title":"Configuration variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#stylesheet","text":"If you'd like to add your own custom styles: Create a file called /assets/css/style.scss in your site Add the following content to the top of the file, exactly as shown: ```scss --- --- @import \"{{ site.theme }}\"; `` 3. Add any custom CSS (or Sass, including imports) you'd like immediately after the @import` line Note: If you'd like to change the theme's Sass variables, you must set new values before the @import line in your stylesheet.","title":"Stylesheet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#layouts","text":"If you'd like to change the theme's HTML layout: For some changes such as a custom favicon , you can add custom files in your local _includes folder. The files provided with the theme provide a starting point and are included by the original layout template . For more extensive changes, copy the original template from the theme's repository ( Pro-tip: click \"raw\" to make copying easier ) Create a file called /_layouts/default.html in your site Paste the default layout content copied in the first step Customize the layout as you'd like","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#customizing-google-analytics-code","text":"Google has released several iterations to their Google Analytics code over the years since this theme was first created. If you would like to take advantage of the latest code, paste it into _includes/head-custom-google-analytics.html in your Jekyll site.","title":"Customizing Google Analytics code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#overriding-github-generated-urls","text":"Templates often rely on URLs supplied by GitHub such as links to your repository or links to download your project. If you'd like to override one or more default URLs: Look at the template source to determine the name of the variable. It will be in the form of {{ site.github.zip_url }} . Specify the URL that you'd like the template to use in your site's _config.yml . For example, if the variable was site.github.url , you'd add the following: yml github: zip_url: http://example.com/download.zip another_url: another value When your site is built, Jekyll will use the URL you specified, rather than the default one provided by GitHub. Note: You must remove the site. prefix, and each variable name (after the github. ) should be indent with two space below github: . For more information, see the Jekyll variables documentation .","title":"Overriding GitHub-generated URLs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#roadmap","text":"See the open issues for a list of proposed features (and known issues).","title":"Roadmap"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#project-philosophy","text":"The Time machine theme is intended to make it quick and easy for GitHub Pages users to create their first (or 100th) website. The theme should meet the vast majority of users' needs out of the box, erring on the side of simplicity rather than flexibility, and provide users the opportunity to opt-in to additional complexity if they have specific needs or wish to further customize their experience (such as adding custom CSS or modifying the default layout). It should also look great, but that goes without saying.","title":"Project philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#contributing","text":"Interested in contributing to Time machine? We'd love your help. Time machine is an open source project, built one contribution at a time by users like you. See the CONTRIBUTING file for instructions on how to contribute.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#previewing-the-theme-locally","text":"If you'd like to preview the theme locally (for example, in the process of proposing a change): Clone down the theme's repository ( git clone https://github.com/pages-themes/time-machine ) cd into the theme's directory Run script/bootstrap to install the necessary dependencies Run bundle exec jekyll serve to start the preview server Visit localhost:4000 in your browser to preview the theme","title":"Previewing the theme locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-theme-time-machine-0.2.0/#running-tests","text":"The theme contains a minimal test suite, to ensure a site with the theme would build successfully. To run the tests, simply run script/cibuild . You'll need to run script/bootstrap once before the test script will work.","title":"Running tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/","text":"Jekyll Titles from Headings A Jekyll plugin to pull the page title from the first Markdown heading when none is specified. What it does If you have a Jekyll page that doesn't have a title specified in the YAML Front Matter, but the first non-whitespace line in the page is a Markdown H1 / H2 / H3, this plugin instructs Jekyll to use that first heading as the page's title. Why Because lots of plugins and templates rely on page.title . If you're using a plugin like Jekyll Optional Front Matter , you'd have to add Front Matter, just to get the title, which you're already specifying in the document. Additionally, this allows you to store the title semantically, in the document itself so that it's readable, both as Markdown and when rendered, as machine-readable for plugins like Jekyll SEO Tag . Usage Add the following to your site's Gemfile: ruby gem 'jekyll-titles-from-headings' Add the following to your site's config file: yml plugins: - jekyll-titles-from-headings Note: If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins . Configuration Configuration options are optional and placed in _config.yml under the titles_from_headings key. They default to: titles_from_headings: enabled: true strip_title: false collections: false Stripping titles If your theme renders titles based on page.title , you can remove the title from the content by setting strip_title to prevent rendering it twice. To limit this behavior to a certain layouts or paths, you can use front matter defaults , e.g. defaults: - scope: path: some-path layout: some_layout values: strip_title: true Processing Collections If you want to enable this plugin for collection items, set the collections option to true . Since collection items (including posts) already have a title inferred from their filename, this option changes the behavior of this plugin to override the inferred title. The inferred title is only used as a fallback in case the document doesn't start with a heading. Disabling Even if the plugin is enabled (e.g., via the :jekyll_plugins group in your Gemfile) you can disable it by setting the enabled key to false .","title":"Jekyll Titles from Headings"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#jekyll-titles-from-headings","text":"A Jekyll plugin to pull the page title from the first Markdown heading when none is specified.","title":"Jekyll Titles from Headings"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#what-it-does","text":"If you have a Jekyll page that doesn't have a title specified in the YAML Front Matter, but the first non-whitespace line in the page is a Markdown H1 / H2 / H3, this plugin instructs Jekyll to use that first heading as the page's title.","title":"What it does"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#why","text":"Because lots of plugins and templates rely on page.title . If you're using a plugin like Jekyll Optional Front Matter , you'd have to add Front Matter, just to get the title, which you're already specifying in the document. Additionally, this allows you to store the title semantically, in the document itself so that it's readable, both as Markdown and when rendered, as machine-readable for plugins like Jekyll SEO Tag .","title":"Why"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#usage","text":"Add the following to your site's Gemfile: ruby gem 'jekyll-titles-from-headings' Add the following to your site's config file: yml plugins: - jekyll-titles-from-headings Note: If you are using a Jekyll version less than 3.5.0, use the gems key instead of plugins .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#configuration","text":"Configuration options are optional and placed in _config.yml under the titles_from_headings key. They default to: titles_from_headings: enabled: true strip_title: false collections: false","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#stripping-titles","text":"If your theme renders titles based on page.title , you can remove the title from the content by setting strip_title to prevent rendering it twice. To limit this behavior to a certain layouts or paths, you can use front matter defaults , e.g. defaults: - scope: path: some-path layout: some_layout values: strip_title: true","title":"Stripping titles"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#processing-collections","text":"If you want to enable this plugin for collection items, set the collections option to true . Since collection items (including posts) already have a title inferred from their filename, this option changes the behavior of this plugin to override the inferred title. The inferred title is only used as a fallback in case the document doesn't start with a heading.","title":"Processing Collections"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/#disabling","text":"Even if the plugin is enabled (e.g., via the :jekyll_plugins group in your Gemfile) you can disable it by setting the enabled key to false .","title":"Disabling"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/jekyll-titles-from-headings-0.5.3/LICENSE/","text":"MIT License Copyright (c) 2016 Ben Balter Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/json-1.8.3/README-json-jruby/","text":"JSON-JRuby JSON-JRuby is a port of Florian Frank's native json library to JRuby. It aims to be a perfect drop-in replacement for json_pure . Development version The latest version is available from the Git repository : git clone git://github.com/mernen/json-jruby.git Compiling You'll need JRuby version 1.2 or greater to build JSON-JRuby. Its path must be set on the jruby.dir property of nbproject/project.properties (defaults to ../jruby ). Additionally, you'll need Ant , and Ragel 6.4 or greater. Then, from the folder where the sources are located, type: ant clean jar to clean any leftovers from previous builds and generate the .jar files. To generate a RubyGem, specify the gem action rather than jar .","title":"README json jruby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/json-1.8.3/README-json-jruby/#json-jruby","text":"JSON-JRuby is a port of Florian Frank's native json library to JRuby. It aims to be a perfect drop-in replacement for json_pure .","title":"JSON-JRuby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/json-1.8.3/README-json-jruby/#development-version","text":"The latest version is available from the Git repository : git clone git://github.com/mernen/json-jruby.git","title":"Development version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/json-1.8.3/README-json-jruby/#compiling","text":"You'll need JRuby version 1.2 or greater to build JSON-JRuby. Its path must be set on the jruby.dir property of nbproject/project.properties (defaults to ../jruby ). Additionally, you'll need Ant , and Ragel 6.4 or greater. Then, from the folder where the sources are located, type: ant clean jar to clean any leftovers from previous builds and generate the .jar files. To generate a RubyGem, specify the gem action rather than jar .","title":"Compiling"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/","text":"kramdown Readme first! kramdown was originally licensed under the GPL until the 1.0.0 release. However, due to the many requests it is now released under the MIT license and therefore can easily be used in commercial projects, too. However, if you use kramdown in a commercial setting, please consider contributing back any changes for the benefit of the community and/or making a donation (see the links in the sidebar on the kramdown homepage ! Introduction kramdown is a fast, pure Ruby Markdown superset converter, using a strict syntax definition and supporting several common extensions. The syntax definition for the kramdown syntax can be found in doc/syntax.page (or online at http://kramdown.gettalong.org/syntax.html ) and a quick reference is available in doc/quickref.page or online at http://kramdown.gettalong.org/quickref.html . The kramdown library is mainly written to support the kramdown-to-HTML conversion chain. However, due to its flexibility (by creating an internal AST) it supports other input and output formats as well. Here is a list of the supported formats: input formats: kramdown (a Markdown superset), Markdown, GFM, HTML output formats: HTML, kramdown, LaTeX (and therefore PDF), PDF via Prawn All the documentation on the available input and output formats is available in the doc/ directory and online at http://kramdown.gettalong.org . Starting from version 1.0.0 kramdown is using a versioning scheme with major, minor and patch parts in the version number where the major number changes on backwards-incompatible changes, the minor number on the introduction of new features and the patch number on everything else. For information about changes between versions, have a look at http://kramdown.gettalong.org/news.html or the commit history! Usage kramdown has a very simple API, so using kramdown is as easy as require 'kramdown' Kramdown::Document.new(text).to_html For detailed information have a look at the API documentation of the Kramdown::Document class. The full API documentation is available at http://kramdown.gettalong.org/rdoc/ , other sites with an API documentation for kramdown probably don't provide the complete documentation! There are also some third-party libraries that extend the functionality of kramdown -- see the kramdown Wiki at https://github.com/gettalong/kramdown/wiki . Development Just clone the git repository as described in doc/installation.page and you are good to go. You probably want to install rake so that you can use the provided rake tasks. Aside from that: The tidy binary needs to be installed for the automatically derived tests to work. The latex binary needs to be installed for the latex-compilation tests to work. License MIT - see the COPYING file.","title":"kramdown"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#kramdown","text":"","title":"kramdown"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#readme-first","text":"kramdown was originally licensed under the GPL until the 1.0.0 release. However, due to the many requests it is now released under the MIT license and therefore can easily be used in commercial projects, too. However, if you use kramdown in a commercial setting, please consider contributing back any changes for the benefit of the community and/or making a donation (see the links in the sidebar on the kramdown homepage !","title":"Readme first!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#introduction","text":"kramdown is a fast, pure Ruby Markdown superset converter, using a strict syntax definition and supporting several common extensions. The syntax definition for the kramdown syntax can be found in doc/syntax.page (or online at http://kramdown.gettalong.org/syntax.html ) and a quick reference is available in doc/quickref.page or online at http://kramdown.gettalong.org/quickref.html . The kramdown library is mainly written to support the kramdown-to-HTML conversion chain. However, due to its flexibility (by creating an internal AST) it supports other input and output formats as well. Here is a list of the supported formats: input formats: kramdown (a Markdown superset), Markdown, GFM, HTML output formats: HTML, kramdown, LaTeX (and therefore PDF), PDF via Prawn All the documentation on the available input and output formats is available in the doc/ directory and online at http://kramdown.gettalong.org . Starting from version 1.0.0 kramdown is using a versioning scheme with major, minor and patch parts in the version number where the major number changes on backwards-incompatible changes, the minor number on the introduction of new features and the patch number on everything else. For information about changes between versions, have a look at http://kramdown.gettalong.org/news.html or the commit history!","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#usage","text":"kramdown has a very simple API, so using kramdown is as easy as require 'kramdown' Kramdown::Document.new(text).to_html For detailed information have a look at the API documentation of the Kramdown::Document class. The full API documentation is available at http://kramdown.gettalong.org/rdoc/ , other sites with an API documentation for kramdown probably don't provide the complete documentation! There are also some third-party libraries that extend the functionality of kramdown -- see the kramdown Wiki at https://github.com/gettalong/kramdown/wiki .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#development","text":"Just clone the git repository as described in doc/installation.page and you are good to go. You probably want to install rake so that you can use the provided rake tasks. Aside from that: The tidy binary needs to be installed for the automatically derived tests to work. The latex binary needs to be installed for the latex-compilation tests to work.","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/#license","text":"MIT - see the COPYING file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-1.11.1/doc/links/","text":"","title":"Links"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/","text":"kramdown Readme first! kramdown was originally licensed under the GPL until the 1.0.0 release. However, due to the many requests it is now released under the MIT license and therefore can easily be used in commercial projects, too. However, if you use kramdown in a commercial setting, please consider contributing back any changes for the benefit of the community and/or becoming a sponsor or a patron - thanks! Sponsors: GROSSWEBER provides software development consulting and training services . Introduction kramdown is a fast, pure Ruby Markdown superset converter, using a strict syntax definition and supporting several common extensions. The syntax definition for the kramdown syntax can be found in doc/syntax.page (or online at http://kramdown.gettalong.org/syntax.html ) and a quick reference is available in doc/quickref.page or online at http://kramdown.gettalong.org/quickref.html . The kramdown library is mainly written to support the kramdown-to-HTML conversion chain. However, due to its flexibility (by creating an internal AST) it supports other input and output formats as well. Here is a list of the supported formats: input formats: kramdown (a Markdown superset), Markdown, GFM, HTML output formats: HTML, kramdown, LaTeX (and therefore PDF), PDF via Prawn All the documentation on the available input and output formats is available in the doc/ directory and online at http://kramdown.gettalong.org . Starting from version 1.0.0 kramdown is using a versioning scheme with major, minor and patch parts in the version number where the major number changes on backwards-incompatible changes, the minor number on the introduction of new features and the patch number on everything else. For information about changes between versions, have a look at http://kramdown.gettalong.org/news.html or the commit history! Usage kramdown has a very simple API, so using kramdown is as easy as require 'kramdown' Kramdown::Document.new(text).to_html For detailed information have a look at the API documentation of the Kramdown::Document class. The full API documentation is available at http://kramdown.gettalong.org/rdoc/ , other sites with an API documentation for kramdown probably don't provide the complete documentation! There are also some third-party libraries that extend the functionality of kramdown -- see the kramdown Wiki at https://github.com/gettalong/kramdown/wiki . Development Just clone the git repository as described in doc/installation.page and you are good to go. You probably want to install rake so that you can use the provided rake tasks. If you want to run the tests, the development dependencies are needed as well as some additional programs like tidy and latex . See the .travis.yml file for more information. License MIT - see the COPYING file.","title":"kramdown"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#kramdown","text":"","title":"kramdown"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#readme-first","text":"kramdown was originally licensed under the GPL until the 1.0.0 release. However, due to the many requests it is now released under the MIT license and therefore can easily be used in commercial projects, too. However, if you use kramdown in a commercial setting, please consider contributing back any changes for the benefit of the community and/or becoming a sponsor or a patron - thanks! Sponsors: GROSSWEBER provides software development consulting and training services .","title":"Readme first!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#introduction","text":"kramdown is a fast, pure Ruby Markdown superset converter, using a strict syntax definition and supporting several common extensions. The syntax definition for the kramdown syntax can be found in doc/syntax.page (or online at http://kramdown.gettalong.org/syntax.html ) and a quick reference is available in doc/quickref.page or online at http://kramdown.gettalong.org/quickref.html . The kramdown library is mainly written to support the kramdown-to-HTML conversion chain. However, due to its flexibility (by creating an internal AST) it supports other input and output formats as well. Here is a list of the supported formats: input formats: kramdown (a Markdown superset), Markdown, GFM, HTML output formats: HTML, kramdown, LaTeX (and therefore PDF), PDF via Prawn All the documentation on the available input and output formats is available in the doc/ directory and online at http://kramdown.gettalong.org . Starting from version 1.0.0 kramdown is using a versioning scheme with major, minor and patch parts in the version number where the major number changes on backwards-incompatible changes, the minor number on the introduction of new features and the patch number on everything else. For information about changes between versions, have a look at http://kramdown.gettalong.org/news.html or the commit history!","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#usage","text":"kramdown has a very simple API, so using kramdown is as easy as require 'kramdown' Kramdown::Document.new(text).to_html For detailed information have a look at the API documentation of the Kramdown::Document class. The full API documentation is available at http://kramdown.gettalong.org/rdoc/ , other sites with an API documentation for kramdown probably don't provide the complete documentation! There are also some third-party libraries that extend the functionality of kramdown -- see the kramdown Wiki at https://github.com/gettalong/kramdown/wiki .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#development","text":"Just clone the git repository as described in doc/installation.page and you are good to go. You probably want to install rake so that you can use the provided rake tasks. If you want to run the tests, the development dependencies are needed as well as some additional programs like tidy and latex . See the .travis.yml file for more information.","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/kramdown-2.3.2/#license","text":"MIT - see the COPYING file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/","text":"Liquid template engine Contributing guidelines Version history Liquid documentation from Shopify Liquid Wiki at GitHub Website Introduction Liquid is a template engine which was written with very specific requirements: It has to have beautiful and simple markup. Template engines which don't produce good looking markup are no fun to use. It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote. It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects. Why you should use Liquid You want to allow your users to edit the appearance of your application but don't want them to run insecure code on your server . You want to render templates directly from the database. You like smarty (PHP) style template engines. You need a template engine which does HTML just as well as emails. You don't like the markup of your current templating engine. What does it look like? <ul id=\"products\"> {% for product in products %} <li> <h2>{{ product.name }}</h2> Only {{ product.price | price }} {{ product.description | prettyprint | paragraph }} </li> {% endfor %} </ul> How to use Liquid Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash. @template = Liquid::Template.parse(\"hi {{name}}\") # Parses and compiles the template @template.render('name' => 'tobi') # => \"hi tobi\" Error Modes Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour. Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this: Liquid::Template.error_mode = :strict # Raises a SyntaxError when invalid syntax is used Liquid::Template.error_mode = :warn # Adds errors to template.errors but continues as normal Liquid::Template.error_mode = :lax # The default mode, accepts almost anything. If you want to set the error mode only on specific templates you can pass :error_mode as an option to parse : Liquid::Template.parse(source, :error_mode => :strict) This is useful for doing things like enabling strict mode only in the theme editor. It is recommended that you enable :strict or :warn mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#liquid-template-engine","text":"Contributing guidelines Version history Liquid documentation from Shopify Liquid Wiki at GitHub Website","title":"Liquid template engine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#introduction","text":"Liquid is a template engine which was written with very specific requirements: It has to have beautiful and simple markup. Template engines which don't produce good looking markup are no fun to use. It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote. It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects.","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#why-you-should-use-liquid","text":"You want to allow your users to edit the appearance of your application but don't want them to run insecure code on your server . You want to render templates directly from the database. You like smarty (PHP) style template engines. You need a template engine which does HTML just as well as emails. You don't like the markup of your current templating engine.","title":"Why you should use Liquid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#what-does-it-look-like","text":"<ul id=\"products\"> {% for product in products %} <li> <h2>{{ product.name }}</h2> Only {{ product.price | price }} {{ product.description | prettyprint | paragraph }} </li> {% endfor %} </ul>","title":"What does it look like?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#how-to-use-liquid","text":"Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash. @template = Liquid::Template.parse(\"hi {{name}}\") # Parses and compiles the template @template.render('name' => 'tobi') # => \"hi tobi\"","title":"How to use Liquid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/#error-modes","text":"Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour. Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this: Liquid::Template.error_mode = :strict # Raises a SyntaxError when invalid syntax is used Liquid::Template.error_mode = :warn # Adds errors to template.errors but continues as normal Liquid::Template.error_mode = :lax # The default mode, accepts almost anything. If you want to set the error mode only on specific templates you can pass :error_mode as an option to parse : Liquid::Template.parse(source, :error_mode => :strict) This is useful for doing things like enabling strict mode only in the theme editor. It is recommended that you enable :strict or :warn mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages.","title":"Error Modes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/","text":"Liquid Version History 3.0.5 / 2015-07-23 / branch \"3-0-stable\" Fix test failure under certain timezones [Dylan Thacker-Smith] 3.0.4 / 2015-07-17 Fix chained access to multi-dimensional hashes [Florian Weingarten] 3.0.3 / 2015-05-28 Fix condition parse order in strict mode (#569) [Justin Li, pushrax] 3.0.2 / 2015-04-24 Expose VariableLookup private members (#551) [Justin Li, pushrax] Documentation fixes 3.0.1 / 2015-01-23 Remove duplicate index0 key in TableRow tag (#502) [Alfred Xing] 3.0.0 / 2014-11-12 Removed Block#end_tag. Instead, override parse with super followed by your code. See #446 [Dylan Thacker-Smith, dylanahsmith] Fixed condition with wrong data types, see #423 [Bogdan Gusiev] Add url_encode to standard filters, see #421 [Derrick Reimer, djreimer] Add uniq to standard filters [Florian Weingarten, fw42] Add exception_handler feature, see #397 and #254 [Bogdan Gusiev, bogdan and Florian Weingarten, fw42] Optimize variable parsing to avoid repeated regex evaluation during template rendering #383 [Jason Hiltz-Laforge, jasonhl] Optimize checking for block interrupts to reduce object allocation #380 [Jason Hiltz-Laforge, jasonhl] Properly set context rethrow_errors on render! #349 [Thierry Joyal, tjoyal] Fix broken rendering of variables which are equal to false, see #345 [Florian Weingarten, fw42] Remove ActionView template handler [Dylan Thacker-Smith, dylanahsmith] Freeze lots of string literals for new Ruby 2.1 optimization, see #297 [Florian Weingarten, fw42] Allow newlines in tags and variables, see #324 [Dylan Thacker-Smith, dylanahsmith] Tag#parse is called after initialize, which now takes options instead of tokens as the 3rd argument. See #321 [Dylan Thacker-Smith, dylanahsmith] Raise Liquid::ArgumentError instead of ::ArgumentError when filter has wrong number of arguments #309 [Bogdan Gusiev, bogdan] Add a to_s default for liquid drops, see #306 [Adam Doeler, releod] Add strip, lstrip, and rstrip to standard filters [Florian Weingarten, fw42] Make if, for & case tags return complete and consistent nodelists, see #250 [Nick Jones, dntj] Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith] Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] Fix resource counting bug with respond_to?(:length), see #263 [Florian Weingarten, fw42] Allow specifying custom patterns for template filenames, see #284 [Andrei Gladkyi, agladkyi] Allow drops to optimize loading a slice of elements, see #282 [Tom Burns, boourns] Support for passing variables to snippets in subdirs, see #271 [Joost Hietbrink, joost] Add a class cache to avoid runtime extend calls, see #249 [James Tucker, raggi] Remove some legacy Ruby 1.8 compatibility code, see #276 [Florian Weingarten, fw42] Add default filter to standard filters, see #267 [Derrick Reimer, djreimer] Add optional strict parsing and warn parsing, see #235 [Tristan Hume, trishume] Add I18n syntax error translation, see #241 [Simon H\u00f8rup Eskildsen, Sirupsen] Make sort filter work on enumerable drops, see #239 [Florian Weingarten, fw42] Fix clashing method names in enumerable drops, see #238 [Florian Weingarten, fw42] Make map filter work on enumerable drops, see #233 [Florian Weingarten, fw42] Improved whitespace stripping for blank blocks, related to #216 [Florian Weingarten, fw42] 2.6.3 / 2015-07-23 / branch \"2-6-stable\" Fix test failure under certain timezones [Dylan Thacker-Smith] 2.6.2 / 2015-01-23 Remove duplicate hash key [Parker Moore] 2.6.1 / 2014-01-10 Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] * Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith] 2.6.0 / 2013-11-25 IMPORTANT: Liquid 2.6 is going to be the last version of Liquid which maintains explicit Ruby 1.8 compatability. The following releases will only be tested against Ruby 1.9 and Ruby 2.0 and are likely to break on Ruby 1.8. Bugfix for #106: fix example servlet [gnowoel] Bugfix for #97: strip_html filter supports multi-line tags [Jo Liss, joliss] Bugfix for #114: strip_html filter supports style tags [James Allardice, jamesallardice] Bugfix for #117: 'now' support for date filter in Ruby 1.9 [Notre Dame Webgroup, ndwebgroup] Bugfix for #166: truncate filter on UTF-8 strings with Ruby 1.8 [Florian Weingarten, fw42] Bugfix for #204: 'raw' parsing bug [Florian Weingarten, fw42] Bugfix for #150: 'for' parsing bug [Peter Schr\u00f6der, phoet] Bugfix for #126: Strip CRLF in strip_newline [Peter Schr\u00f6der, phoet] Bugfix for #174, \"can't convert Fixnum into String\" for \"replace\" [w\u01d2_is\u795e\u4ed9, jsw0528] Allow a Liquid::Drop to be passed into Template#render [Daniel Huckstep, darkhelmet] Resource limits [Florian Weingarten, fw42] Add reverse filter [Jay Strybis, unreal] Add utf-8 support Use array instead of Hash to keep the registered filters [Tasos Stathopoulos, astathopoulos] Cache tokenized partial templates [Tom Burns, boourns] Avoid warnings in Ruby 1.9.3 [Marcus Stollsteimer, stomar] Better documentation for 'include' tag (closes #163) [Peter Schr\u00f6der, phoet] Use of BigDecimal on filters to have better precision (closes #155) [Arthur Nogueira Neves, arthurnn] 2.5.5 / 2014-01-10 / branch \"2-5-stable\" Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] * Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith] 2.5.4 / 2013-11-11 Fix \"can't convert Fixnum into String\" for \"replace\", see #173, [w\u01d2_is\u795e\u4ed9, jsw0528] 2.5.3 / 2013-10-09 232, #234, #237: Fix map filter bugs [Florian Weingarten, fw42] 2.5.2 / 2013-09-03 / deleted Yanked from rubygems, as it contained too many changes that broke compatibility. Those changes will be on following major releases. 2.5.1 / 2013-07-24 230: Fix security issue with map filter, Use invoke_drop in map filter [Florian Weingarten, fw42] 2.5.0 / 2013-03-06 Prevent Object methods from being called on drops Avoid symbol injection from liquid Added break and continue statements Fix filter parser for args without space separators Add support for filter keyword arguments 2.4.0 / 2012-08-03 Performance improvements Allow filters in assign Add modulo filter Ruby 1.8, 1.9, and Rubinius compatibility fixes Add support for quoted['references'] in tablerow Add support for Enumerable to tablerow strip_html filter removes html comments 2.3.0 / 2011-10-16 Several speed/memory improvements Numerous bug fixes Added support for MRI 1.9, Rubinius, and JRuby Added support for integer drop parameters Added epoch support to date filter New raw tag that suppresses parsing Added else option to for tag New increment tag New split filter 2.2.1 / 2010-08-23 Added support for literal tags 2.2.0 / 2010-08-22 Compatible with Ruby 1.8.7, 1.9.1 and 1.9.2-p0 Merged some changed made by the community 1.9.0 / 2008-03-04 Fixed gem install rake task Improve Error encapsulation in liquid by maintaining a own set of exceptions instead of relying on ruby build ins Before 1.9.0 Added If with or / and expressions Implemented .to_liquid for all objects which can be passed to liquid like Strings Arrays Hashes Numerics and Booleans. To export new objects to liquid just implement .to_liquid on them and return objects which themselves have .to_liquid methods. Added more tags to standard library Added include tag ( like partials in rails ) [...] Gazillion of detail improvements Added strainers as filter hosts for better security [Tobias Luetke] Fixed that rails integration would call filter with the wrong \"self\" [Michael Geary] Fixed bad error reporting when a filter called a method which doesn't exist. Liquid told you that it couldn't find the filter which was obviously misleading [Tobias Luetke] Removed count helper from standard lib. use size [Tobias Luetke] Fixed bug with string filter parameters failing to tolerate commas in strings. [Paul Hammond] Improved filter parameters. Filter parameters are now context sensitive; Types are resolved according to the rules of the context. Multiple parameters are now separated by the Liquid::ArgumentSeparator: , by default [Paul Hammond] {{ 'Typo' | link_to: 'http://typo.leetsoft.com', 'Typo - a modern weblog engine' }} Added Liquid::Drop. A base class which you can use for exporting proxy objects to liquid which can acquire more data when used in liquid. [Tobias Luetke] class ProductDrop < Liquid::Drop def top_sales Shop.current.products.find(:all, :order => 'sales', :limit => 10 ) end end t = Liquid::Template.parse( ' {% for product in product.top_sales %} {{ product.name }} {% endfor %} ' ) t.render('product' => ProductDrop.new ) * Added filter parameters support. Example: {{ date | format_date: \"%Y\" }} [Paul Hammond]","title":"Liquid Version History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#liquid-version-history","text":"","title":"Liquid Version History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#305-2015-07-23-branch-3-0-stable","text":"Fix test failure under certain timezones [Dylan Thacker-Smith]","title":"3.0.5 / 2015-07-23 / branch \"3-0-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#304-2015-07-17","text":"Fix chained access to multi-dimensional hashes [Florian Weingarten]","title":"3.0.4 / 2015-07-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#303-2015-05-28","text":"Fix condition parse order in strict mode (#569) [Justin Li, pushrax]","title":"3.0.3 / 2015-05-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#302-2015-04-24","text":"Expose VariableLookup private members (#551) [Justin Li, pushrax] Documentation fixes","title":"3.0.2 / 2015-04-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#301-2015-01-23","text":"Remove duplicate index0 key in TableRow tag (#502) [Alfred Xing]","title":"3.0.1 / 2015-01-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#300-2014-11-12","text":"Removed Block#end_tag. Instead, override parse with super followed by your code. See #446 [Dylan Thacker-Smith, dylanahsmith] Fixed condition with wrong data types, see #423 [Bogdan Gusiev] Add url_encode to standard filters, see #421 [Derrick Reimer, djreimer] Add uniq to standard filters [Florian Weingarten, fw42] Add exception_handler feature, see #397 and #254 [Bogdan Gusiev, bogdan and Florian Weingarten, fw42] Optimize variable parsing to avoid repeated regex evaluation during template rendering #383 [Jason Hiltz-Laforge, jasonhl] Optimize checking for block interrupts to reduce object allocation #380 [Jason Hiltz-Laforge, jasonhl] Properly set context rethrow_errors on render! #349 [Thierry Joyal, tjoyal] Fix broken rendering of variables which are equal to false, see #345 [Florian Weingarten, fw42] Remove ActionView template handler [Dylan Thacker-Smith, dylanahsmith] Freeze lots of string literals for new Ruby 2.1 optimization, see #297 [Florian Weingarten, fw42] Allow newlines in tags and variables, see #324 [Dylan Thacker-Smith, dylanahsmith] Tag#parse is called after initialize, which now takes options instead of tokens as the 3rd argument. See #321 [Dylan Thacker-Smith, dylanahsmith] Raise Liquid::ArgumentError instead of ::ArgumentError when filter has wrong number of arguments #309 [Bogdan Gusiev, bogdan] Add a to_s default for liquid drops, see #306 [Adam Doeler, releod] Add strip, lstrip, and rstrip to standard filters [Florian Weingarten, fw42] Make if, for & case tags return complete and consistent nodelists, see #250 [Nick Jones, dntj] Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith] Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] Fix resource counting bug with respond_to?(:length), see #263 [Florian Weingarten, fw42] Allow specifying custom patterns for template filenames, see #284 [Andrei Gladkyi, agladkyi] Allow drops to optimize loading a slice of elements, see #282 [Tom Burns, boourns] Support for passing variables to snippets in subdirs, see #271 [Joost Hietbrink, joost] Add a class cache to avoid runtime extend calls, see #249 [James Tucker, raggi] Remove some legacy Ruby 1.8 compatibility code, see #276 [Florian Weingarten, fw42] Add default filter to standard filters, see #267 [Derrick Reimer, djreimer] Add optional strict parsing and warn parsing, see #235 [Tristan Hume, trishume] Add I18n syntax error translation, see #241 [Simon H\u00f8rup Eskildsen, Sirupsen] Make sort filter work on enumerable drops, see #239 [Florian Weingarten, fw42] Fix clashing method names in enumerable drops, see #238 [Florian Weingarten, fw42] Make map filter work on enumerable drops, see #233 [Florian Weingarten, fw42] Improved whitespace stripping for blank blocks, related to #216 [Florian Weingarten, fw42]","title":"3.0.0 / 2014-11-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#263-2015-07-23-branch-2-6-stable","text":"Fix test failure under certain timezones [Dylan Thacker-Smith]","title":"2.6.3 / 2015-07-23 / branch \"2-6-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#262-2015-01-23","text":"Remove duplicate hash key [Parker Moore]","title":"2.6.2 / 2015-01-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#261-2014-01-10","text":"Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] * Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith]","title":"2.6.1 / 2014-01-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#260-2013-11-25","text":"IMPORTANT: Liquid 2.6 is going to be the last version of Liquid which maintains explicit Ruby 1.8 compatability. The following releases will only be tested against Ruby 1.9 and Ruby 2.0 and are likely to break on Ruby 1.8. Bugfix for #106: fix example servlet [gnowoel] Bugfix for #97: strip_html filter supports multi-line tags [Jo Liss, joliss] Bugfix for #114: strip_html filter supports style tags [James Allardice, jamesallardice] Bugfix for #117: 'now' support for date filter in Ruby 1.9 [Notre Dame Webgroup, ndwebgroup] Bugfix for #166: truncate filter on UTF-8 strings with Ruby 1.8 [Florian Weingarten, fw42] Bugfix for #204: 'raw' parsing bug [Florian Weingarten, fw42] Bugfix for #150: 'for' parsing bug [Peter Schr\u00f6der, phoet] Bugfix for #126: Strip CRLF in strip_newline [Peter Schr\u00f6der, phoet] Bugfix for #174, \"can't convert Fixnum into String\" for \"replace\" [w\u01d2_is\u795e\u4ed9, jsw0528] Allow a Liquid::Drop to be passed into Template#render [Daniel Huckstep, darkhelmet] Resource limits [Florian Weingarten, fw42] Add reverse filter [Jay Strybis, unreal] Add utf-8 support Use array instead of Hash to keep the registered filters [Tasos Stathopoulos, astathopoulos] Cache tokenized partial templates [Tom Burns, boourns] Avoid warnings in Ruby 1.9.3 [Marcus Stollsteimer, stomar] Better documentation for 'include' tag (closes #163) [Peter Schr\u00f6der, phoet] Use of BigDecimal on filters to have better precision (closes #155) [Arthur Nogueira Neves, arthurnn]","title":"2.6.0 / 2013-11-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#255-2014-01-10-branch-2-5-stable","text":"Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons, see #273 [Bouke van der Bijl, bouk] * Prevent arbitrary method invocation on condition objects, see #274 [Dylan Thacker-Smith, dylanahsmith]","title":"2.5.5 / 2014-01-10 / branch \"2-5-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#254-2013-11-11","text":"Fix \"can't convert Fixnum into String\" for \"replace\", see #173, [w\u01d2_is\u795e\u4ed9, jsw0528]","title":"2.5.4 / 2013-11-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#253-2013-10-09","text":"","title":"2.5.3 / 2013-10-09"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#232-234-237-fix-map-filter-bugs-florian-weingarten-fw42","text":"","title":"232, #234, #237: Fix map filter bugs [Florian Weingarten, fw42]"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#252-2013-09-03-deleted","text":"Yanked from rubygems, as it contained too many changes that broke compatibility. Those changes will be on following major releases.","title":"2.5.2 / 2013-09-03 / deleted"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#251-2013-07-24","text":"","title":"2.5.1 / 2013-07-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#230-fix-security-issue-with-map-filter-use-invoke_drop-in-map-filter-florian-weingarten-fw42","text":"","title":"230: Fix security issue with map filter, Use invoke_drop in map filter [Florian Weingarten, fw42]"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#250-2013-03-06","text":"Prevent Object methods from being called on drops Avoid symbol injection from liquid Added break and continue statements Fix filter parser for args without space separators Add support for filter keyword arguments","title":"2.5.0 / 2013-03-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#240-2012-08-03","text":"Performance improvements Allow filters in assign Add modulo filter Ruby 1.8, 1.9, and Rubinius compatibility fixes Add support for quoted['references'] in tablerow Add support for Enumerable to tablerow strip_html filter removes html comments","title":"2.4.0 / 2012-08-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#230-2011-10-16","text":"Several speed/memory improvements Numerous bug fixes Added support for MRI 1.9, Rubinius, and JRuby Added support for integer drop parameters Added epoch support to date filter New raw tag that suppresses parsing Added else option to for tag New increment tag New split filter","title":"2.3.0 / 2011-10-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#221-2010-08-23","text":"Added support for literal tags","title":"2.2.1 / 2010-08-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#220-2010-08-22","text":"Compatible with Ruby 1.8.7, 1.9.1 and 1.9.2-p0 Merged some changed made by the community","title":"2.2.0 / 2010-08-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#190-2008-03-04","text":"Fixed gem install rake task Improve Error encapsulation in liquid by maintaining a own set of exceptions instead of relying on ruby build ins","title":"1.9.0 / 2008-03-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-3.0.6/History/#before-190","text":"Added If with or / and expressions Implemented .to_liquid for all objects which can be passed to liquid like Strings Arrays Hashes Numerics and Booleans. To export new objects to liquid just implement .to_liquid on them and return objects which themselves have .to_liquid methods. Added more tags to standard library Added include tag ( like partials in rails ) [...] Gazillion of detail improvements Added strainers as filter hosts for better security [Tobias Luetke] Fixed that rails integration would call filter with the wrong \"self\" [Michael Geary] Fixed bad error reporting when a filter called a method which doesn't exist. Liquid told you that it couldn't find the filter which was obviously misleading [Tobias Luetke] Removed count helper from standard lib. use size [Tobias Luetke] Fixed bug with string filter parameters failing to tolerate commas in strings. [Paul Hammond] Improved filter parameters. Filter parameters are now context sensitive; Types are resolved according to the rules of the context. Multiple parameters are now separated by the Liquid::ArgumentSeparator: , by default [Paul Hammond] {{ 'Typo' | link_to: 'http://typo.leetsoft.com', 'Typo - a modern weblog engine' }} Added Liquid::Drop. A base class which you can use for exporting proxy objects to liquid which can acquire more data when used in liquid. [Tobias Luetke] class ProductDrop < Liquid::Drop def top_sales Shop.current.products.find(:all, :order => 'sales', :limit => 10 ) end end t = Liquid::Template.parse( ' {% for product in product.top_sales %} {{ product.name }} {% endfor %} ' ) t.render('product' => ProductDrop.new ) * Added filter parameters support. Example: {{ date | format_date: \"%Y\" }} [Paul Hammond]","title":"Before 1.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/","text":"Liquid template engine Contributing guidelines Version history Liquid documentation from Shopify Liquid Wiki at GitHub Website Introduction Liquid is a template engine which was written with very specific requirements: It has to have beautiful and simple markup. Template engines which don't produce good looking markup are no fun to use. It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote. It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects. Why you should use Liquid You want to allow your users to edit the appearance of your application but don't want them to run insecure code on your server . You want to render templates directly from the database. You like smarty (PHP) style template engines. You need a template engine which does HTML just as well as emails. You don't like the markup of your current templating engine. What does it look like? <ul id=\"products\"> {% for product in products %} <li> <h2>{{ product.name }}</h2> Only {{ product.price | price }} {{ product.description | prettyprint | paragraph }} </li> {% endfor %} </ul> How to use Liquid Install Liquid by adding gem 'liquid' to your gemfile. Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash. @template = Liquid::Template.parse(\"hi {{name}}\") # Parses and compiles the template @template.render('name' => 'tobi') # => \"hi tobi\" Error Modes Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour. Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this: Liquid::Template.error_mode = :strict # Raises a SyntaxError when invalid syntax is used Liquid::Template.error_mode = :warn # Adds errors to template.errors but continues as normal Liquid::Template.error_mode = :lax # The default mode, accepts almost anything. If you want to set the error mode only on specific templates you can pass :error_mode as an option to parse : Liquid::Template.parse(source, :error_mode => :strict) This is useful for doing things like enabling strict mode only in the theme editor. It is recommended that you enable :strict or :warn mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages. Undefined variables and filters By default, the renderer doesn't raise or in any other way notify you if some variables or filters are missing, i.e. not passed to the render method. You can improve this situation by passing strict_variables: true and/or strict_filters: true options to the render method. When one of these options is set to true, all errors about undefined variables and undefined filters will be stored in errors array of a Liquid::Template instance. Here are some examples: template = Liquid::Template.parse(\"{{x}} {{y}} {{z.a}} {{z.b}}\") template.render({ 'x' => 1, 'z' => { 'a' => 2 } }, { strict_variables: true }) #=> '1 2 ' # when a variable is undefined, it's rendered as nil template.errors #=> [#<Liquid::UndefinedVariable: Liquid error: undefined variable y>, #<Liquid::UndefinedVariable: Liquid error: undefined variable b>] template = Liquid::Template.parse(\"{{x | filter1 | upcase}}\") template.render({ 'x' => 'foo' }, { strict_filters: true }) #=> '' # when at least one filter in the filter chain is undefined, a whole expression is rendered as nil template.errors #=> [#<Liquid::UndefinedFilter: Liquid error: undefined filter filter1>] If you want to raise on a first exception instead of pushing all of them in errors , you can use render! method: template = Liquid::Template.parse(\"{{x}} {{y}}\") template.render!({ 'x' => 1}, { strict_variables: true }) #=> Liquid::UndefinedVariable: Liquid error: undefined variable y","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#liquid-template-engine","text":"Contributing guidelines Version history Liquid documentation from Shopify Liquid Wiki at GitHub Website","title":"Liquid template engine"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#introduction","text":"Liquid is a template engine which was written with very specific requirements: It has to have beautiful and simple markup. Template engines which don't produce good looking markup are no fun to use. It needs to be non evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote. It has to be stateless. Compile and render steps have to be separate so that the expensive parsing and compiling can be done once and later on you can just render it passing in a hash with local variables and objects.","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#why-you-should-use-liquid","text":"You want to allow your users to edit the appearance of your application but don't want them to run insecure code on your server . You want to render templates directly from the database. You like smarty (PHP) style template engines. You need a template engine which does HTML just as well as emails. You don't like the markup of your current templating engine.","title":"Why you should use Liquid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#what-does-it-look-like","text":"<ul id=\"products\"> {% for product in products %} <li> <h2>{{ product.name }}</h2> Only {{ product.price | price }} {{ product.description | prettyprint | paragraph }} </li> {% endfor %} </ul>","title":"What does it look like?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#how-to-use-liquid","text":"Install Liquid by adding gem 'liquid' to your gemfile. Liquid supports a very simple API based around the Liquid::Template class. For standard use you can just pass it the content of a file and call render with a parameters hash. @template = Liquid::Template.parse(\"hi {{name}}\") # Parses and compiles the template @template.render('name' => 'tobi') # => \"hi tobi\"","title":"How to use Liquid"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#error-modes","text":"Setting the error mode of Liquid lets you specify how strictly you want your templates to be interpreted. Normally the parser is very lax and will accept almost anything without error. Unfortunately this can make it very hard to debug and can lead to unexpected behaviour. Liquid also comes with a stricter parser that can be used when editing templates to give better error messages when templates are invalid. You can enable this new parser like this: Liquid::Template.error_mode = :strict # Raises a SyntaxError when invalid syntax is used Liquid::Template.error_mode = :warn # Adds errors to template.errors but continues as normal Liquid::Template.error_mode = :lax # The default mode, accepts almost anything. If you want to set the error mode only on specific templates you can pass :error_mode as an option to parse : Liquid::Template.parse(source, :error_mode => :strict) This is useful for doing things like enabling strict mode only in the theme editor. It is recommended that you enable :strict or :warn mode on new apps to stop invalid templates from being created. It is also recommended that you use it in the template editors of existing apps to give editors better error messages.","title":"Error Modes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/#undefined-variables-and-filters","text":"By default, the renderer doesn't raise or in any other way notify you if some variables or filters are missing, i.e. not passed to the render method. You can improve this situation by passing strict_variables: true and/or strict_filters: true options to the render method. When one of these options is set to true, all errors about undefined variables and undefined filters will be stored in errors array of a Liquid::Template instance. Here are some examples: template = Liquid::Template.parse(\"{{x}} {{y}} {{z.a}} {{z.b}}\") template.render({ 'x' => 1, 'z' => { 'a' => 2 } }, { strict_variables: true }) #=> '1 2 ' # when a variable is undefined, it's rendered as nil template.errors #=> [#<Liquid::UndefinedVariable: Liquid error: undefined variable y>, #<Liquid::UndefinedVariable: Liquid error: undefined variable b>] template = Liquid::Template.parse(\"{{x | filter1 | upcase}}\") template.render({ 'x' => 'foo' }, { strict_filters: true }) #=> '' # when at least one filter in the filter chain is undefined, a whole expression is rendered as nil template.errors #=> [#<Liquid::UndefinedFilter: Liquid error: undefined filter filter1>] If you want to raise on a first exception instead of pushing all of them in errors , you can use render! method: template = Liquid::Template.parse(\"{{x}} {{y}}\") template.render!({ 'x' => 1}, { strict_variables: true }) #=> Liquid::UndefinedVariable: Liquid error: undefined variable y","title":"Undefined variables and filters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/","text":"Liquid Change Log 4.0.3 / 2019-03-12 Fixed Fix break and continue tags inside included templates in loops (#1072) [Justin Li] 4.0.2 / 2019-03-08 Changed Add where filter (#1026) [Samuel Doiron] Add ParseTreeVisitor to iterate the Liquid AST (#1025) [Stephen Paul Weber] Improve strip_html performance (#1032) [printercu] Fixed Add error checking for invalid combinations of inputs to sort, sort_natural, where, uniq, map, compact filters (#1059) [Garland Zhang] Validate the character encoding in url_decode (#1070) [Clayton Smith] 4.0.1 / 2018-10-09 Changed Add benchmark group in Gemfile (#855) [Jerry Liu] Allow benchmarks to benchmark render by itself (#851) [Jerry Liu] Avoid calling line_number on String node when rescuing a render error. (#860) [Dylan Thacker-Smith] Avoid duck typing to detect whether to call render on a node. [Dylan Thacker-Smith] Clarify spelling of reversed on for block tag (#843) [Mark Crossfield] Replace recursion with loop to avoid potential stack overflow from malicious input (#891, #892) [Dylan Thacker-Smith] Limit block tag nesting to 100 (#894) [Dylan Thacker-Smith] Replace assert_equal nil with assert_nil (#895) [Dylan Thacker-Smith] Remove Spy Gem (#896) [Dylan Thacker-Smith] Add collection_name and variable_name reader to For block (#909) Symbols render as strings (#920) [Justin Li] Remove default value from Hash objects (#932) [Maxime Bedard] Remove one level of nesting (#944) [Dylan Thacker-Smith] Update Rubocop version (#952) [Justin Li] Add at_least and at_most filters (#954, #958) [Nithin Bekal] Add a regression test for a liquid-c trim mode bug (#972) [Dylan Thacker-Smith] Use https rather than git protocol to fetch liquid-c [Dylan Thacker-Smith] Add tests against Ruby 2.4 (#963) and 2.5 (#981) Replace RegExp literals with constants (#988) [Ashwin Maroli] Replace unnecessary #each_with_index with #each (#992) [Ashwin Maroli] Improve the unexpected end delimiter message for block tags. (#1003) [Dylan Thacker-Smith] Refactor and optimize rendering (#1005) [Christopher Aue] Add installation instruction (#1006) [Ben Gift] Remove Circle CI (#1010) Rename deprecated BigDecimal.new to BigDecimal (#1024) [Koichi ITO] Rename deprecated Rubocop name (#1027) [Justin Li] Fixed Handle join filter on non String joiners (#857) [Richard Monette] Fix duplicate inclusion condition logic error of Liquid::Strainer.add_filter method (#861) Fix escape , url_encode , url_decode not handling non-string values (#898) [Thierry Joyal] Fix raise when variable is defined but nil when using strict_variables [Pascal Betz] Fix sort and sort_natural to handle arrays with nils (#930) [Eric Chan] 4.0.0 / 2016-12-14 / branch \"4-0-stable\" Changed Render an opaque internal error by default for non-Liquid::Error (#835) [Dylan Thacker-Smith] Ruby 2.0 support dropped (#832) [Dylan Thacker-Smith] Add to_number Drop method to allow custom drops to work with number filters (#731) Add strict_variables and strict_filters options to detect undefined references (#691) Improve loop performance (#681) [Florian Weingarten] Rename Drop method before_method to liquid_method_missing (#661) [Thierry Joyal] Add url_decode filter to invert url_encode (#645) [Larry Archer] Add global_filter to apply a filter to all output (#610) [Loren Hale] Add compact filter (#600) [Carson Reinke] Rename deprecated \"has_key?\" and \"has_interrupt?\" methods (#593) [Florian Weingarten] Include template name with line numbers in render errors (574) [Dylan Thacker-Smith] Add sort_natural filter (#554) [Martin Hanzel] Add forloop.parentloop as a reference to the parent loop (#520) [Justin Li] Block parsing moved to BlockBody class (#458) [Dylan Thacker-Smith] Add concat filter to concatenate arrays (#429) [Diogo Beato] Ruby 1.9 support dropped (#491) [Justin Li] Liquid::Template.file_system's read_template_file method is no longer passed the context. (#441) [James Reid-Smith] Remove liquid_methods (See https://github.com/Shopify/liquid/pull/568 for replacement) Liquid::Template.register_filter raises when the module overrides registered public methods as private or protected (#705) [Gaurav Chande] Fixed Fix variable names being detected as an operator when starting with contains (#788) [Michael Angell] Fix include tag used with strict_variables (#828) [QuickPay] Fix map filter when value is a Proc (#672) [Guillaume Malette] Fix truncate filter when value is not a string (#672) [Guillaume Malette] Fix behaviour of escape filter when input is nil (#665) [Tanel Jakobsoo] Fix sort filter behaviour with empty array input (#652) [Marcel Cary] Fix test failure under certain timezones (#631) [Dylan Thacker-Smith] Fix bug in uniq filter (#595) [Florian Weingarten] Fix bug when \"blank\" and \"empty\" are used as variable names (#592) [Florian Weingarten] Fix condition parse order in strict mode (#569) [Justin Li] Fix naming of the \"context variable\" when dynamically including a template (#559) [Justin Li] Gracefully accept empty strings in the date filter (#555) [Loren Hale] Fix capturing into variables with a hyphen in the name (#505) [Florian Weingarten] Fix case sensitivity regression in date standard filter (#499) [Kelley Reynolds] Disallow filters with no variable in strict mode (#475) [Justin Li] Disallow variable names in the strict parser that are not valid in the lax parser (#463) [Justin Li] Fix BlockBody#warnings taking exponential time to compute (#486) [Justin Li] 3.0.5 / 2015-07-23 / branch \"3-0-stable\" Fix test failure under certain timezones [Dylan Thacker-Smith] 3.0.4 / 2015-07-17 Fix chained access to multi-dimensional hashes [Florian Weingarten] 3.0.3 / 2015-05-28 Fix condition parse order in strict mode (#569) [Justin Li] 3.0.2 / 2015-04-24 Expose VariableLookup private members (#551) [Justin Li] Documentation fixes 3.0.1 / 2015-01-23 Remove duplicate index0 key in TableRow tag (#502) [Alfred Xing] 3.0.0 / 2014-11-12 Removed Block#end_tag. Instead, override parse with super followed by your code. See #446 [Dylan Thacker-Smith] Fixed condition with wrong data types (#423) [Bogdan Gusiev] Add url_encode to standard filters (#421) [Derrick Reimer] Add uniq to standard filters [Florian Weingarten] Add exception_handler feature (#397) and #254 [Bogdan Gusiev, Florian Weingarten] Optimize variable parsing to avoid repeated regex evaluation during template rendering #383 [Jason Hiltz-Laforge] Optimize checking for block interrupts to reduce object allocation #380 [Jason Hiltz-Laforge] Properly set context rethrow_errors on render! #349 [Thierry Joyal] Fix broken rendering of variables which are equal to false (#345) [Florian Weingarten] Remove ActionView template handler [Dylan Thacker-Smith] Freeze lots of string literals for new Ruby 2.1 optimization (#297) [Florian Weingarten] Allow newlines in tags and variables (#324) [Dylan Thacker-Smith] Tag#parse is called after initialize, which now takes options instead of tokens as the 3rd argument. See #321 [Dylan Thacker-Smith] Raise Liquid::ArgumentError instead of ::ArgumentError when filter has wrong number of arguments #309 [Bogdan Gusiev] Add a to_s default for liquid drops (#306) [Adam Doeler] Add strip, lstrip, and rstrip to standard filters [Florian Weingarten] Make if, for & case tags return complete and consistent nodelists (#250) [Nick Jones] Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith] Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] Fix resource counting bug with respond_to?(:length) (#263) [Florian Weingarten] Allow specifying custom patterns for template filenames (#284) [Andrei Gladkyi] Allow drops to optimize loading a slice of elements (#282) [Tom Burns] Support for passing variables to snippets in subdirs (#271) [Joost Hietbrink] Add a class cache to avoid runtime extend calls (#249) [James Tucker] Remove some legacy Ruby 1.8 compatibility code (#276) [Florian Weingarten] Add default filter to standard filters (#267) [Derrick Reimer] Add optional strict parsing and warn parsing (#235) [Tristan Hume] Add I18n syntax error translation (#241) [Simon H\u00f8rup Eskildsen, Sirupsen] Make sort filter work on enumerable drops (#239) [Florian Weingarten] Fix clashing method names in enumerable drops (#238) [Florian Weingarten] Make map filter work on enumerable drops (#233) [Florian Weingarten] Improved whitespace stripping for blank blocks, related to #216 [Florian Weingarten] 2.6.3 / 2015-07-23 / branch \"2-6-stable\" Fix test failure under certain timezones [Dylan Thacker-Smith] 2.6.2 / 2015-01-23 Remove duplicate hash key [Parker Moore] 2.6.1 / 2014-01-10 Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] * Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith] 2.6.0 / 2013-11-25 IMPORTANT: Liquid 2.6 is going to be the last version of Liquid which maintains explicit Ruby 1.8 compatability. The following releases will only be tested against Ruby 1.9 and Ruby 2.0 and are likely to break on Ruby 1.8. Bugfix for #106: fix example servlet [gnowoel] Bugfix for #97: strip_html filter supports multi-line tags [Jo Liss] Bugfix for #114: strip_html filter supports style tags [James Allardice] Bugfix for #117: 'now' support for date filter in Ruby 1.9 [Notre Dame Webgroup] Bugfix for #166: truncate filter on UTF-8 strings with Ruby 1.8 [Florian Weingarten] Bugfix for #204: 'raw' parsing bug [Florian Weingarten] Bugfix for #150: 'for' parsing bug [Peter Schr\u00f6der] Bugfix for #126: Strip CRLF in strip_newline [Peter Schr\u00f6der] Bugfix for #174, \"can't convert Fixnum into String\" for \"replace\" [jsw0528] Allow a Liquid::Drop to be passed into Template#render [Daniel Huckstep] Resource limits [Florian Weingarten] Add reverse filter [Jay Strybis] Add utf-8 support Use array instead of Hash to keep the registered filters [Tasos Stathopoulos] Cache tokenized partial templates [Tom Burns] Avoid warnings in Ruby 1.9.3 [Marcus Stollsteimer] Better documentation for 'include' tag (closes #163) [Peter Schr\u00f6der] Use of BigDecimal on filters to have better precision (closes #155) [Arthur Nogueira Neves] 2.5.5 / 2014-01-10 / branch \"2-5-stable\" Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] * Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith] 2.5.4 / 2013-11-11 Fix \"can't convert Fixnum into String\" for \"replace\" (#173), [jsw0528] 2.5.3 / 2013-10-09 232, #234, #237: Fix map filter bugs [Florian Weingarten] 2.5.2 / 2013-09-03 / deleted Yanked from rubygems, as it contained too many changes that broke compatibility. Those changes will be on following major releases. 2.5.1 / 2013-07-24 230: Fix security issue with map filter, Use invoke_drop in map filter [Florian Weingarten] 2.5.0 / 2013-03-06 Prevent Object methods from being called on drops Avoid symbol injection from liquid Added break and continue statements Fix filter parser for args without space separators Add support for filter keyword arguments 2.4.0 / 2012-08-03 Performance improvements Allow filters in assign Add modulo filter Ruby 1.8, 1.9, and Rubinius compatibility fixes Add support for quoted['references'] in tablerow Add support for Enumerable to tablerow strip_html filter removes html comments 2.3.0 / 2011-10-16 Several speed/memory improvements Numerous bug fixes Added support for MRI 1.9, Rubinius, and JRuby Added support for integer drop parameters Added epoch support to date filter New raw tag that suppresses parsing Added else option to for tag New increment tag New split filter 2.2.1 / 2010-08-23 Added support for literal tags 2.2.0 / 2010-08-22 Compatible with Ruby 1.8.7, 1.9.1 and 1.9.2-p0 Merged some changed made by the community 1.9.0 / 2008-03-04 Fixed gem install rake task Improve Error encapsulation in liquid by maintaining a own set of exceptions instead of relying on ruby build ins Before 1.9.0 Added If with or / and expressions Implemented .to_liquid for all objects which can be passed to liquid like Strings Arrays Hashes Numerics and Booleans. To export new objects to liquid just implement .to_liquid on them and return objects which themselves have .to_liquid methods. Added more tags to standard library Added include tag ( like partials in rails ) [...] Gazillion of detail improvements Added strainers as filter hosts for better security [Tobias Luetke] Fixed that rails integration would call filter with the wrong \"self\" [Michael Geary] Fixed bad error reporting when a filter called a method which doesn't exist. Liquid told you that it couldn't find the filter which was obviously misleading [Tobias Luetke] Removed count helper from standard lib. use size [Tobias Luetke] Fixed bug with string filter parameters failing to tolerate commas in strings. [Paul Hammond] Improved filter parameters. Filter parameters are now context sensitive; Types are resolved according to the rules of the context. Multiple parameters are now separated by the Liquid::ArgumentSeparator: , by default [Paul Hammond] {{ 'Typo' | link_to: 'http://typo.leetsoft.com', 'Typo - a modern weblog engine' }} Added Liquid::Drop. A base class which you can use for exporting proxy objects to liquid which can acquire more data when used in liquid. [Tobias Luetke] class ProductDrop < Liquid::Drop def top_sales Shop.current.products.find(:all, :order => 'sales', :limit => 10 ) end end t = Liquid::Template.parse( ' {% for product in product.top_sales %} {{ product.name }} {% endfor %} ' ) t.render('product' => ProductDrop.new ) * Added filter parameters support. Example: {{ date | format_date: \"%Y\" }} [Paul Hammond]","title":"Liquid Change Log"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#liquid-change-log","text":"","title":"Liquid Change Log"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#403-2019-03-12","text":"","title":"4.0.3 / 2019-03-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#fixed","text":"Fix break and continue tags inside included templates in loops (#1072) [Justin Li]","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#402-2019-03-08","text":"","title":"4.0.2 / 2019-03-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#changed","text":"Add where filter (#1026) [Samuel Doiron] Add ParseTreeVisitor to iterate the Liquid AST (#1025) [Stephen Paul Weber] Improve strip_html performance (#1032) [printercu]","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#fixed_1","text":"Add error checking for invalid combinations of inputs to sort, sort_natural, where, uniq, map, compact filters (#1059) [Garland Zhang] Validate the character encoding in url_decode (#1070) [Clayton Smith]","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#401-2018-10-09","text":"","title":"4.0.1 / 2018-10-09"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#changed_1","text":"Add benchmark group in Gemfile (#855) [Jerry Liu] Allow benchmarks to benchmark render by itself (#851) [Jerry Liu] Avoid calling line_number on String node when rescuing a render error. (#860) [Dylan Thacker-Smith] Avoid duck typing to detect whether to call render on a node. [Dylan Thacker-Smith] Clarify spelling of reversed on for block tag (#843) [Mark Crossfield] Replace recursion with loop to avoid potential stack overflow from malicious input (#891, #892) [Dylan Thacker-Smith] Limit block tag nesting to 100 (#894) [Dylan Thacker-Smith] Replace assert_equal nil with assert_nil (#895) [Dylan Thacker-Smith] Remove Spy Gem (#896) [Dylan Thacker-Smith] Add collection_name and variable_name reader to For block (#909) Symbols render as strings (#920) [Justin Li] Remove default value from Hash objects (#932) [Maxime Bedard] Remove one level of nesting (#944) [Dylan Thacker-Smith] Update Rubocop version (#952) [Justin Li] Add at_least and at_most filters (#954, #958) [Nithin Bekal] Add a regression test for a liquid-c trim mode bug (#972) [Dylan Thacker-Smith] Use https rather than git protocol to fetch liquid-c [Dylan Thacker-Smith] Add tests against Ruby 2.4 (#963) and 2.5 (#981) Replace RegExp literals with constants (#988) [Ashwin Maroli] Replace unnecessary #each_with_index with #each (#992) [Ashwin Maroli] Improve the unexpected end delimiter message for block tags. (#1003) [Dylan Thacker-Smith] Refactor and optimize rendering (#1005) [Christopher Aue] Add installation instruction (#1006) [Ben Gift] Remove Circle CI (#1010) Rename deprecated BigDecimal.new to BigDecimal (#1024) [Koichi ITO] Rename deprecated Rubocop name (#1027) [Justin Li]","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#fixed_2","text":"Handle join filter on non String joiners (#857) [Richard Monette] Fix duplicate inclusion condition logic error of Liquid::Strainer.add_filter method (#861) Fix escape , url_encode , url_decode not handling non-string values (#898) [Thierry Joyal] Fix raise when variable is defined but nil when using strict_variables [Pascal Betz] Fix sort and sort_natural to handle arrays with nils (#930) [Eric Chan]","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#400-2016-12-14-branch-4-0-stable","text":"","title":"4.0.0 / 2016-12-14 / branch \"4-0-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#changed_2","text":"Render an opaque internal error by default for non-Liquid::Error (#835) [Dylan Thacker-Smith] Ruby 2.0 support dropped (#832) [Dylan Thacker-Smith] Add to_number Drop method to allow custom drops to work with number filters (#731) Add strict_variables and strict_filters options to detect undefined references (#691) Improve loop performance (#681) [Florian Weingarten] Rename Drop method before_method to liquid_method_missing (#661) [Thierry Joyal] Add url_decode filter to invert url_encode (#645) [Larry Archer] Add global_filter to apply a filter to all output (#610) [Loren Hale] Add compact filter (#600) [Carson Reinke] Rename deprecated \"has_key?\" and \"has_interrupt?\" methods (#593) [Florian Weingarten] Include template name with line numbers in render errors (574) [Dylan Thacker-Smith] Add sort_natural filter (#554) [Martin Hanzel] Add forloop.parentloop as a reference to the parent loop (#520) [Justin Li] Block parsing moved to BlockBody class (#458) [Dylan Thacker-Smith] Add concat filter to concatenate arrays (#429) [Diogo Beato] Ruby 1.9 support dropped (#491) [Justin Li] Liquid::Template.file_system's read_template_file method is no longer passed the context. (#441) [James Reid-Smith] Remove liquid_methods (See https://github.com/Shopify/liquid/pull/568 for replacement) Liquid::Template.register_filter raises when the module overrides registered public methods as private or protected (#705) [Gaurav Chande]","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#fixed_3","text":"Fix variable names being detected as an operator when starting with contains (#788) [Michael Angell] Fix include tag used with strict_variables (#828) [QuickPay] Fix map filter when value is a Proc (#672) [Guillaume Malette] Fix truncate filter when value is not a string (#672) [Guillaume Malette] Fix behaviour of escape filter when input is nil (#665) [Tanel Jakobsoo] Fix sort filter behaviour with empty array input (#652) [Marcel Cary] Fix test failure under certain timezones (#631) [Dylan Thacker-Smith] Fix bug in uniq filter (#595) [Florian Weingarten] Fix bug when \"blank\" and \"empty\" are used as variable names (#592) [Florian Weingarten] Fix condition parse order in strict mode (#569) [Justin Li] Fix naming of the \"context variable\" when dynamically including a template (#559) [Justin Li] Gracefully accept empty strings in the date filter (#555) [Loren Hale] Fix capturing into variables with a hyphen in the name (#505) [Florian Weingarten] Fix case sensitivity regression in date standard filter (#499) [Kelley Reynolds] Disallow filters with no variable in strict mode (#475) [Justin Li] Disallow variable names in the strict parser that are not valid in the lax parser (#463) [Justin Li] Fix BlockBody#warnings taking exponential time to compute (#486) [Justin Li]","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#305-2015-07-23-branch-3-0-stable","text":"Fix test failure under certain timezones [Dylan Thacker-Smith]","title":"3.0.5 / 2015-07-23 / branch \"3-0-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#304-2015-07-17","text":"Fix chained access to multi-dimensional hashes [Florian Weingarten]","title":"3.0.4 / 2015-07-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#303-2015-05-28","text":"Fix condition parse order in strict mode (#569) [Justin Li]","title":"3.0.3 / 2015-05-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#302-2015-04-24","text":"Expose VariableLookup private members (#551) [Justin Li] Documentation fixes","title":"3.0.2 / 2015-04-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#301-2015-01-23","text":"Remove duplicate index0 key in TableRow tag (#502) [Alfred Xing]","title":"3.0.1 / 2015-01-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#300-2014-11-12","text":"Removed Block#end_tag. Instead, override parse with super followed by your code. See #446 [Dylan Thacker-Smith] Fixed condition with wrong data types (#423) [Bogdan Gusiev] Add url_encode to standard filters (#421) [Derrick Reimer] Add uniq to standard filters [Florian Weingarten] Add exception_handler feature (#397) and #254 [Bogdan Gusiev, Florian Weingarten] Optimize variable parsing to avoid repeated regex evaluation during template rendering #383 [Jason Hiltz-Laforge] Optimize checking for block interrupts to reduce object allocation #380 [Jason Hiltz-Laforge] Properly set context rethrow_errors on render! #349 [Thierry Joyal] Fix broken rendering of variables which are equal to false (#345) [Florian Weingarten] Remove ActionView template handler [Dylan Thacker-Smith] Freeze lots of string literals for new Ruby 2.1 optimization (#297) [Florian Weingarten] Allow newlines in tags and variables (#324) [Dylan Thacker-Smith] Tag#parse is called after initialize, which now takes options instead of tokens as the 3rd argument. See #321 [Dylan Thacker-Smith] Raise Liquid::ArgumentError instead of ::ArgumentError when filter has wrong number of arguments #309 [Bogdan Gusiev] Add a to_s default for liquid drops (#306) [Adam Doeler] Add strip, lstrip, and rstrip to standard filters [Florian Weingarten] Make if, for & case tags return complete and consistent nodelists (#250) [Nick Jones] Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith] Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] Fix resource counting bug with respond_to?(:length) (#263) [Florian Weingarten] Allow specifying custom patterns for template filenames (#284) [Andrei Gladkyi] Allow drops to optimize loading a slice of elements (#282) [Tom Burns] Support for passing variables to snippets in subdirs (#271) [Joost Hietbrink] Add a class cache to avoid runtime extend calls (#249) [James Tucker] Remove some legacy Ruby 1.8 compatibility code (#276) [Florian Weingarten] Add default filter to standard filters (#267) [Derrick Reimer] Add optional strict parsing and warn parsing (#235) [Tristan Hume] Add I18n syntax error translation (#241) [Simon H\u00f8rup Eskildsen, Sirupsen] Make sort filter work on enumerable drops (#239) [Florian Weingarten] Fix clashing method names in enumerable drops (#238) [Florian Weingarten] Make map filter work on enumerable drops (#233) [Florian Weingarten] Improved whitespace stripping for blank blocks, related to #216 [Florian Weingarten]","title":"3.0.0 / 2014-11-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#263-2015-07-23-branch-2-6-stable","text":"Fix test failure under certain timezones [Dylan Thacker-Smith]","title":"2.6.3 / 2015-07-23 / branch \"2-6-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#262-2015-01-23","text":"Remove duplicate hash key [Parker Moore]","title":"2.6.2 / 2015-01-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#261-2014-01-10","text":"Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] * Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith]","title":"2.6.1 / 2014-01-10"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#260-2013-11-25","text":"IMPORTANT: Liquid 2.6 is going to be the last version of Liquid which maintains explicit Ruby 1.8 compatability. The following releases will only be tested against Ruby 1.9 and Ruby 2.0 and are likely to break on Ruby 1.8. Bugfix for #106: fix example servlet [gnowoel] Bugfix for #97: strip_html filter supports multi-line tags [Jo Liss] Bugfix for #114: strip_html filter supports style tags [James Allardice] Bugfix for #117: 'now' support for date filter in Ruby 1.9 [Notre Dame Webgroup] Bugfix for #166: truncate filter on UTF-8 strings with Ruby 1.8 [Florian Weingarten] Bugfix for #204: 'raw' parsing bug [Florian Weingarten] Bugfix for #150: 'for' parsing bug [Peter Schr\u00f6der] Bugfix for #126: Strip CRLF in strip_newline [Peter Schr\u00f6der] Bugfix for #174, \"can't convert Fixnum into String\" for \"replace\" [jsw0528] Allow a Liquid::Drop to be passed into Template#render [Daniel Huckstep] Resource limits [Florian Weingarten] Add reverse filter [Jay Strybis] Add utf-8 support Use array instead of Hash to keep the registered filters [Tasos Stathopoulos] Cache tokenized partial templates [Tom Burns] Avoid warnings in Ruby 1.9.3 [Marcus Stollsteimer] Better documentation for 'include' tag (closes #163) [Peter Schr\u00f6der] Use of BigDecimal on filters to have better precision (closes #155) [Arthur Nogueira Neves]","title":"2.6.0 / 2013-11-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#255-2014-01-10-branch-2-5-stable","text":"Security fix, cherry-picked from master (4e14a65): * Don't call to_sym when creating conditions for security reasons (#273) [Bouke van der Bijl] * Prevent arbitrary method invocation on condition objects (#274) [Dylan Thacker-Smith]","title":"2.5.5 / 2014-01-10 / branch \"2-5-stable\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#254-2013-11-11","text":"Fix \"can't convert Fixnum into String\" for \"replace\" (#173), [jsw0528]","title":"2.5.4 / 2013-11-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#253-2013-10-09","text":"","title":"2.5.3 / 2013-10-09"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#232-234-237-fix-map-filter-bugs-florian-weingarten","text":"","title":"232, #234, #237: Fix map filter bugs [Florian Weingarten]"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#252-2013-09-03-deleted","text":"Yanked from rubygems, as it contained too many changes that broke compatibility. Those changes will be on following major releases.","title":"2.5.2 / 2013-09-03 / deleted"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#251-2013-07-24","text":"","title":"2.5.1 / 2013-07-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#230-fix-security-issue-with-map-filter-use-invoke_drop-in-map-filter-florian-weingarten","text":"","title":"230: Fix security issue with map filter, Use invoke_drop in map filter [Florian Weingarten]"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#250-2013-03-06","text":"Prevent Object methods from being called on drops Avoid symbol injection from liquid Added break and continue statements Fix filter parser for args without space separators Add support for filter keyword arguments","title":"2.5.0 / 2013-03-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#240-2012-08-03","text":"Performance improvements Allow filters in assign Add modulo filter Ruby 1.8, 1.9, and Rubinius compatibility fixes Add support for quoted['references'] in tablerow Add support for Enumerable to tablerow strip_html filter removes html comments","title":"2.4.0 / 2012-08-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#230-2011-10-16","text":"Several speed/memory improvements Numerous bug fixes Added support for MRI 1.9, Rubinius, and JRuby Added support for integer drop parameters Added epoch support to date filter New raw tag that suppresses parsing Added else option to for tag New increment tag New split filter","title":"2.3.0 / 2011-10-16"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#221-2010-08-23","text":"Added support for literal tags","title":"2.2.1 / 2010-08-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#220-2010-08-22","text":"Compatible with Ruby 1.8.7, 1.9.1 and 1.9.2-p0 Merged some changed made by the community","title":"2.2.0 / 2010-08-22"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#190-2008-03-04","text":"Fixed gem install rake task Improve Error encapsulation in liquid by maintaining a own set of exceptions instead of relying on ruby build ins","title":"1.9.0 / 2008-03-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/liquid-4.0.3/History/#before-190","text":"Added If with or / and expressions Implemented .to_liquid for all objects which can be passed to liquid like Strings Arrays Hashes Numerics and Booleans. To export new objects to liquid just implement .to_liquid on them and return objects which themselves have .to_liquid methods. Added more tags to standard library Added include tag ( like partials in rails ) [...] Gazillion of detail improvements Added strainers as filter hosts for better security [Tobias Luetke] Fixed that rails integration would call filter with the wrong \"self\" [Michael Geary] Fixed bad error reporting when a filter called a method which doesn't exist. Liquid told you that it couldn't find the filter which was obviously misleading [Tobias Luetke] Removed count helper from standard lib. use size [Tobias Luetke] Fixed bug with string filter parameters failing to tolerate commas in strings. [Paul Hammond] Improved filter parameters. Filter parameters are now context sensitive; Types are resolved according to the rules of the context. Multiple parameters are now separated by the Liquid::ArgumentSeparator: , by default [Paul Hammond] {{ 'Typo' | link_to: 'http://typo.leetsoft.com', 'Typo - a modern weblog engine' }} Added Liquid::Drop. A base class which you can use for exporting proxy objects to liquid which can acquire more data when used in liquid. [Tobias Luetke] class ProductDrop < Liquid::Drop def top_sales Shop.current.products.find(:all, :order => 'sales', :limit => 10 ) end end t = Liquid::Template.parse( ' {% for product in product.top_sales %} {{ product.name }} {% endfor %} ' ) t.render('product' => ProductDrop.new ) * Added filter parameters support. Example: {{ date | format_date: \"%Y\" }} [Paul Hammond]","title":"Before 1.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/","text":":exclamation: Listen is currently accepting more maintainers. Please read this if you're interested in joining the team. Listen The Listen gem listens to file modifications and notifies you about the changes. Features OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Tested on MRI Ruby environments (2.0+ only) via Travis CI , Issues / limitations Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 - see Duplicate directory errors ). No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in Listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Specs suite on JRuby and Rubinius aren't reliable on Travis CI, but should work. Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Ruby 1.9.3 is no longer maintained (and may not work with Listen) - it's best to upgrade to Ruby 2.2.2. Pull requests or help is very welcome for these. Install The simplest way to install Listen is to use Bundler . gem 'listen', '~> 3.0' # NOTE: for TCP functionality, use '~> 2.10' for now Usage Call Listen.to with either a single directory or multiple directories, then define the \"changes\" callback in a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path: #{modified}\" puts \"added absolute path: #{added}\" puts \"removed absolute path: #{removed}\" end listener.start # not blocking sleep Pause / unpause / stop Listeners can also be easily paused/unpaused: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.unpause # resumes processing changes (\"start\" would do the same) listener.stop # stop both listening to changes and processing them Note: While paused, Listen keeps on collecting changes in the background - to clear them, call \"stop\" Note: You should keep track of all started listeners and stop them properly on finish. Ignore / ignore! Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer), you can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 ) Only Listen catches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths. Changes callback Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified , added and removed paths, in that particular order. Paths are always returned in their absolute form. Example: listener = Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end listener.start sleep or ... # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir', &callback) listener.start sleep Options All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\" Debugging Setting the environment variable LISTEN_GEM_DEBUGGING=1 sets up the INFO level logger, while LISTEN_GEM_DEBUGGING=2 sets up the DEBUG level logger. You can also set Listen.logger to a custom logger. Listen adapters The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the Listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The Listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener. On Windows If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0' if Gem.win_platform? On *BSD If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end Getting the polling fallback message ? Please visit the installation section of the Listen WIKI for more information and options for potential fixes. Issues and troubleshooting NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=1 environment variable, it can be almost impossible to guess why listen is not working as expected. See TROUBLESHOOTING Performance If Listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running Listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of Listen prior to 2.7.7 not getting silent crashes within Listen (see LISTEN_GEM_DEBUGGING=2) not running multiple instances of Listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=2 can help discover the actual events and time they happened. See also Tips and Techniques . Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net). Acknowledgments Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration. Author Thibaud Guillaume-Gentil ( @thibaudgg ) Contributors https://github.com/guard/listen/graphs/contributors","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#listen","text":"The Listen gem listens to file modifications and notifies you about the changes.","title":"Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#features","text":"OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Tested on MRI Ruby environments (2.0+ only) via Travis CI ,","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#issues-limitations","text":"Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 - see Duplicate directory errors ). No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in Listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Specs suite on JRuby and Rubinius aren't reliable on Travis CI, but should work. Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Ruby 1.9.3 is no longer maintained (and may not work with Listen) - it's best to upgrade to Ruby 2.2.2. Pull requests or help is very welcome for these.","title":"Issues / limitations"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#install","text":"The simplest way to install Listen is to use Bundler . gem 'listen', '~> 3.0' # NOTE: for TCP functionality, use '~> 2.10' for now","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#usage","text":"Call Listen.to with either a single directory or multiple directories, then define the \"changes\" callback in a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path: #{modified}\" puts \"added absolute path: #{added}\" puts \"removed absolute path: #{removed}\" end listener.start # not blocking sleep","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#pause-unpause-stop","text":"Listeners can also be easily paused/unpaused: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.unpause # resumes processing changes (\"start\" would do the same) listener.stop # stop both listening to changes and processing them Note: While paused, Listen keeps on collecting changes in the background - to clear them, call \"stop\" Note: You should keep track of all started listeners and stop them properly on finish.","title":"Pause / unpause / stop"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#ignore-ignore","text":"Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer), you can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 )","title":"Ignore / ignore!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#only","text":"Listen catches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths.","title":"Only"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#changes-callback","text":"Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified , added and removed paths, in that particular order. Paths are always returned in their absolute form. Example: listener = Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end listener.start sleep or ... # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir', &callback) listener.start sleep","title":"Changes callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#options","text":"All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\"","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#debugging","text":"Setting the environment variable LISTEN_GEM_DEBUGGING=1 sets up the INFO level logger, while LISTEN_GEM_DEBUGGING=2 sets up the DEBUG level logger. You can also set Listen.logger to a custom logger.","title":"Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#listen-adapters","text":"The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the Listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The Listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener.","title":"Listen adapters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#on-windows","text":"If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0' if Gem.win_platform?","title":"On Windows"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#on-bsd","text":"If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end","title":"On *BSD"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#getting-the-polling-fallback-message","text":"Please visit the installation section of the Listen WIKI for more information and options for potential fixes.","title":"Getting the polling fallback message?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#issues-and-troubleshooting","text":"NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=1 environment variable, it can be almost impossible to guess why listen is not working as expected. See TROUBLESHOOTING","title":"Issues and troubleshooting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#performance","text":"If Listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running Listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of Listen prior to 2.7.7 not getting silent crashes within Listen (see LISTEN_GEM_DEBUGGING=2) not running multiple instances of Listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=2 can help discover the actual events and time they happened. See also Tips and Techniques .","title":"Performance"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#acknowledgments","text":"Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration.","title":"Acknowledgments"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#author","text":"Thibaud Guillaume-Gentil ( @thibaudgg )","title":"Author"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/#contributors","text":"https://github.com/guard/listen/graphs/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CHANGELOG/","text":"Moved to GitHub releases page.","title":"Moved to [GitHub releases](https://github.com/guard/listen/releases) page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CHANGELOG/#moved-to-github-releases-page","text":"","title":"Moved to GitHub releases page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CONTRIBUTING/","text":"Contribute to Listen File an issue If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details. Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CONTRIBUTING/#contribute-to-listen","text":"","title":"Contribute to Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CONTRIBUTING/#file-an-issue","text":"If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details.","title":"File an issue"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.0.6/CONTRIBUTING/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/","text":"Listen The listen gem listens to file modifications and notifies you about the changes. Features OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Continuous Integration: tested on selected Ruby environments via Github Workflows . Issues / limitations Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 . No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Listeners do not notify across forked processes, if you wish for multiple processes to receive change notifications you must listen inside of each process . Pull requests or help is very welcome for these. Install The simplest way to install listen is to use Bundler . gem 'listen' Complete Example Here is a complete example of using the listen gem: require 'listen' listener = Listen.to('/srv/app') do |modified, added, removed| puts(modified: modified, added: added, removed: removed) end listener.start sleep Running the above in the background, you can see the callback block being called in response to each command: $ cd /srv/app $ touch a.txt {:modified=>[], :added=>[\"/srv/app/a.txt\"], :removed=>[]} $ echo more >> a.txt {:modified=>[\"/srv/app/a.txt\"], :added=>[], :removed=>[]} $ mv a.txt b.txt {:modified=>[], :added=>[\"/srv/app/b.txt\"], :removed=>[\"/srv/app/a.txt\"]} $ vi b.txt # add a line to this new file and press ZZ to save and exit {:modified=>[\"/srv/app/b.txt\"], :added=>[], :removed=>[]} $ vi c.txt # add a line and press ZZ to save and exit {:modified=>[], :added=>[\"/srv/app/c.txt\"], :removed=>[]} $ rm b.txt c.txt {:modified=>[], :added=>[], :removed=>[\"/srv/app/b.txt\", \"/srv/app/c.txt\"]} Usage Call Listen.to with one or more directories and the \"changes\" callback passed as a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path array: #{modified}\" puts \"added absolute path array: #{added}\" puts \"removed absolute path array: #{removed}\" end listener.start # starts a listener thread--does not block # do whatever you want here...just don't exit the process :) sleep Changes Callback Changes to the listened-to directories are reported by the listener thread in a callback. The callback receives three array parameters: modified , added and removed , in that order. Each of these three is always an array with 0 or more entries. Each array entry is an absolute path. Pause / start / stop Listeners can also be easily paused and later un-paused with start: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.start # resumes processing changes listener.stop # stop both listening to changes and processing them Note: While paused, listen keeps on collecting changes in the background - to clear them, call stop . Note: You should keep track of all started listeners and stop them properly on finish. Ignore / ignore! Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_FILES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer). You can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 ). Only Listen watches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths. Options All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_FILES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\" Logging and Debugging Listen logs its activity to Listen.logger . This is the primary method of debugging. Custom Logger You can call Listen.logger = to set a custom listen logger for the process. For example: Listen.logger = Rails.logger Default Logger If no custom logger is set, a default listen logger which logs to to STDERR will be created and assigned to Listen.logger . The default logger defaults to the error logging level (severity). You can override the logging level by setting the environment variable LISTEN_GEM_DEBUGGING=<level> . For <level> , all standard ::Logger levels are supported, with any mix of upper-/lower-case: export LISTEN_GEM_DEBUGGING=debug # or 2 [deprecated] export LISTEN_GEM_DEBUGGING=info # or 1 or true or yes [deprecated] export LISTEN_GEM_DEBUGGING=warn export LISTEN_GEM_DEBUGGING=fatal export LISTEN_GEM_DEBUGGING=error The default of error will be used if an unsupported value is set. Note: The alternate values 1 , 2 , true and yes shown above are deprecated and will be removed from listen v4.0. Disabling Logging If you want to disable listen logging, set Listen.logger = ::Logger.new('/dev/null') Listen Adapters The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener. On Windows If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0', platforms: [:mingw, :mswin, :x64_mingw, :jruby] On *BSD If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end Getting the polling fallback message ? If you see: Listen will be polling for changes. This means the Listen gem can\u2019t find an optimized adapter. Typically this is caused by: You\u2019re on Windows and WDM gem isn\u2019t installed. You\u2019re running the app without Bundler or RubyGems. Using Sass which includes an ancient (the \u201cdinosaur\u201d type of ancient) version of the Listen gem. Possible solutions: Suppress the message by using the :force_polling option. Or, you could just ignore the message since it\u2019s harmless. Windows users: Install the WDM gem. Upgrade Ruby (use RubyInstaller for Windows or RVM/rbenv for Mac) and RubyGems. Run your apps using Bundler. Sass users: Install the latest version of Listen and try again. Simplified Bundler and Sass example Create a Gemfile with these lines: source 'https://rubygems.org' gem 'listen' gem 'sass' Next, use Bundler to update gems: $ bundle update $ bundle exec sass --watch # ... or whatever app is using Listen. Increasing the amount of inotify watchers If you are running Debian, RedHat, or another similar Linux distribution, run the following in a terminal: $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf\" $ sudo sysctl -p If you are running ArchLinux, search the /etc/sysctl.d/ directory for config files with the setting: $ grep -H -s \"fs.inotify.max_user_watches\" /etc/sysctl.d/* /etc/sysctl.d/40-max_user_watches.conf:fs.inotify.max_user_watches=100000 Then change the setting in the file you found above to a higher value (see here for why): $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 > /etc/sysctl.d/40-max-user-watches.conf\" $ sudo sysctl --system The technical details Listen uses inotify by default on Linux to monitor directories for changes. It's not uncommon to encounter a system limit on the number of files you can monitor. For example, Ubuntu Lucid's (64bit) inotify limit is set to 8192. You can get your current inotify file watch limit by executing: $ cat /proc/sys/fs/inotify/max_user_watches When this limit is not enough to monitor all files inside a directory, the limit must be increased for Listen to work properly. You can set a new limit temporarily with: $ sudo sysctl fs.inotify.max_user_watches=524288 $ sudo sysctl -p If you like to make your limit permanent, use: $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf\" $ sudo sysctl -p You may also need to pay attention to the values of max_queued_events and max_user_instances if Listen keeps on complaining. More info Man page for inotify(7) . Blog post: limit of inotify . Issues and Troubleshooting If the gem doesn't work as expected, start by setting LISTEN_GEM_DEBUGGING=debug or LISTEN_GEM_DEBUGGING=info as described above in Logging and Debugging . NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=debug environment variable, it is usually impossible to guess why listen is not working as expected. 3 steps before you start diagnosing problems These 3 steps will: help quickly troubleshoot obscure problems (trust me, most of them are obscure) help quickly identify the area of the problem (a full list is below) help you get familiar with listen's diagnostic mode (it really comes in handy, trust me) help you create relevant output before you submit an issue (so we can respond with answers instead of tons of questions) Step 1 - The most important option in Listen For effective troubleshooting set the LISTEN_GEM_DEBUGGING=info variable before starting listen . Step 2 - Verify polling works Polling has to work ... or something is really wrong (and we need to know that before anything else). (see force_polling option). After starting listen , you should see something like: INFO -- : Record.build(): 0.06773114204406738 seconds Step 3 - Trigger some changes directly without using editors or apps Make changes e.g. touch foo or echo \"a\" >> foo (for troubleshooting, avoid using an editor which could generate too many misleading events). You should see something like: INFO -- : listen: raw changes: [[:added, \"/home/me/foo\"]] INFO -- : listen: final changes: {:modified=>[], :added=>[\"/home/me/foo\"], :removed=>[]} \"raw changes\" contains changes collected during the :wait_for_delay and :latency intervals, while \"final changes\" is what listen decided are relevant changes (for better editor support). Performance If listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of listen prior to 2.7.7 not getting silent crashes within listen (see LISTEN_GEM_DEBUGGING=debug ) not running multiple instances of listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=debug can help discover the actual events and time they happened. Tips and Techniques Watch only directories you're interested in. Set your editor to save quickly (e.g. without backup files, without atomic-save) Tweak the :latency and :wait_for_delay options until you get good results (see options ). Add :ignore rules to silence all events you don't care about (reduces a lot of noise, especially if you use it on directories) Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net). Releasing Prerequisites You must have commit rights to the GitHub repository. You must have push rights for rubygems.org. How to release Run bundle install to make sure that you have all the gems necessary for testing and releasing. Ensure all tests are passing by running bundle exec rake . Determine which would be the correct next version number according to semver . Update the version in ./lib/listen/version.rb . Update the version in the Install section of ./README.md ( gem 'listen', '~> X.Y' ). Commit the version in a single commit, the message should be \"Preparing vX.Y.Z\" Run bundle exec rake release:full ; this will tag, push to GitHub, and publish to rubygems.org. Update and publish the release notes on the GitHub releases page if necessary Acknowledgments Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Natalie Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration. Author Thibaud Guillaume-Gentil ( @thibaudgg ) Contributors https://github.com/guard/listen/graphs/contributors","title":"Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#listen","text":"The listen gem listens to file modifications and notifies you about the changes.","title":"Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#features","text":"OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Continuous Integration: tested on selected Ruby environments via Github Workflows .","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#issues-limitations","text":"Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 . No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Listeners do not notify across forked processes, if you wish for multiple processes to receive change notifications you must listen inside of each process . Pull requests or help is very welcome for these.","title":"Issues / limitations"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#install","text":"The simplest way to install listen is to use Bundler . gem 'listen'","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#complete-example","text":"Here is a complete example of using the listen gem: require 'listen' listener = Listen.to('/srv/app') do |modified, added, removed| puts(modified: modified, added: added, removed: removed) end listener.start sleep Running the above in the background, you can see the callback block being called in response to each command: $ cd /srv/app $ touch a.txt {:modified=>[], :added=>[\"/srv/app/a.txt\"], :removed=>[]} $ echo more >> a.txt {:modified=>[\"/srv/app/a.txt\"], :added=>[], :removed=>[]} $ mv a.txt b.txt {:modified=>[], :added=>[\"/srv/app/b.txt\"], :removed=>[\"/srv/app/a.txt\"]} $ vi b.txt # add a line to this new file and press ZZ to save and exit {:modified=>[\"/srv/app/b.txt\"], :added=>[], :removed=>[]} $ vi c.txt # add a line and press ZZ to save and exit {:modified=>[], :added=>[\"/srv/app/c.txt\"], :removed=>[]} $ rm b.txt c.txt {:modified=>[], :added=>[], :removed=>[\"/srv/app/b.txt\", \"/srv/app/c.txt\"]}","title":"Complete Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#usage","text":"Call Listen.to with one or more directories and the \"changes\" callback passed as a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path array: #{modified}\" puts \"added absolute path array: #{added}\" puts \"removed absolute path array: #{removed}\" end listener.start # starts a listener thread--does not block # do whatever you want here...just don't exit the process :) sleep","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#changes-callback","text":"Changes to the listened-to directories are reported by the listener thread in a callback. The callback receives three array parameters: modified , added and removed , in that order. Each of these three is always an array with 0 or more entries. Each array entry is an absolute path.","title":"Changes Callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#pause-start-stop","text":"Listeners can also be easily paused and later un-paused with start: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.start # resumes processing changes listener.stop # stop both listening to changes and processing them Note: While paused, listen keeps on collecting changes in the background - to clear them, call stop . Note: You should keep track of all started listeners and stop them properly on finish.","title":"Pause / start / stop"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#ignore-ignore","text":"Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_FILES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer). You can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 ).","title":"Ignore / ignore!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#only","text":"Listen watches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths.","title":"Only"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#options","text":"All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_FILES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\"","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#logging-and-debugging","text":"Listen logs its activity to Listen.logger . This is the primary method of debugging.","title":"Logging and Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#custom-logger","text":"You can call Listen.logger = to set a custom listen logger for the process. For example: Listen.logger = Rails.logger","title":"Custom Logger"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#default-logger","text":"If no custom logger is set, a default listen logger which logs to to STDERR will be created and assigned to Listen.logger . The default logger defaults to the error logging level (severity). You can override the logging level by setting the environment variable LISTEN_GEM_DEBUGGING=<level> . For <level> , all standard ::Logger levels are supported, with any mix of upper-/lower-case: export LISTEN_GEM_DEBUGGING=debug # or 2 [deprecated] export LISTEN_GEM_DEBUGGING=info # or 1 or true or yes [deprecated] export LISTEN_GEM_DEBUGGING=warn export LISTEN_GEM_DEBUGGING=fatal export LISTEN_GEM_DEBUGGING=error The default of error will be used if an unsupported value is set. Note: The alternate values 1 , 2 , true and yes shown above are deprecated and will be removed from listen v4.0.","title":"Default Logger"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#disabling-logging","text":"If you want to disable listen logging, set Listen.logger = ::Logger.new('/dev/null')","title":"Disabling Logging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#listen-adapters","text":"The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener.","title":"Listen Adapters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#on-windows","text":"If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0', platforms: [:mingw, :mswin, :x64_mingw, :jruby]","title":"On Windows"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#on-bsd","text":"If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end","title":"On *BSD"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#getting-the-polling-fallback-message","text":"If you see: Listen will be polling for changes. This means the Listen gem can\u2019t find an optimized adapter. Typically this is caused by: You\u2019re on Windows and WDM gem isn\u2019t installed. You\u2019re running the app without Bundler or RubyGems. Using Sass which includes an ancient (the \u201cdinosaur\u201d type of ancient) version of the Listen gem. Possible solutions: Suppress the message by using the :force_polling option. Or, you could just ignore the message since it\u2019s harmless. Windows users: Install the WDM gem. Upgrade Ruby (use RubyInstaller for Windows or RVM/rbenv for Mac) and RubyGems. Run your apps using Bundler. Sass users: Install the latest version of Listen and try again.","title":"Getting the polling fallback message?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#simplified-bundler-and-sass-example","text":"Create a Gemfile with these lines: source 'https://rubygems.org' gem 'listen' gem 'sass' Next, use Bundler to update gems: $ bundle update $ bundle exec sass --watch # ... or whatever app is using Listen.","title":"Simplified Bundler and Sass example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#increasing-the-amount-of-inotify-watchers","text":"If you are running Debian, RedHat, or another similar Linux distribution, run the following in a terminal: $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf\" $ sudo sysctl -p If you are running ArchLinux, search the /etc/sysctl.d/ directory for config files with the setting: $ grep -H -s \"fs.inotify.max_user_watches\" /etc/sysctl.d/* /etc/sysctl.d/40-max_user_watches.conf:fs.inotify.max_user_watches=100000 Then change the setting in the file you found above to a higher value (see here for why): $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 > /etc/sysctl.d/40-max-user-watches.conf\" $ sudo sysctl --system","title":"Increasing the amount of inotify watchers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#the-technical-details","text":"Listen uses inotify by default on Linux to monitor directories for changes. It's not uncommon to encounter a system limit on the number of files you can monitor. For example, Ubuntu Lucid's (64bit) inotify limit is set to 8192. You can get your current inotify file watch limit by executing: $ cat /proc/sys/fs/inotify/max_user_watches When this limit is not enough to monitor all files inside a directory, the limit must be increased for Listen to work properly. You can set a new limit temporarily with: $ sudo sysctl fs.inotify.max_user_watches=524288 $ sudo sysctl -p If you like to make your limit permanent, use: $ sudo sh -c \"echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf\" $ sudo sysctl -p You may also need to pay attention to the values of max_queued_events and max_user_instances if Listen keeps on complaining.","title":"The technical details"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#more-info","text":"Man page for inotify(7) . Blog post: limit of inotify .","title":"More info"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#issues-and-troubleshooting","text":"If the gem doesn't work as expected, start by setting LISTEN_GEM_DEBUGGING=debug or LISTEN_GEM_DEBUGGING=info as described above in Logging and Debugging . NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=debug environment variable, it is usually impossible to guess why listen is not working as expected.","title":"Issues and Troubleshooting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#3-steps-before-you-start-diagnosing-problems","text":"These 3 steps will: help quickly troubleshoot obscure problems (trust me, most of them are obscure) help quickly identify the area of the problem (a full list is below) help you get familiar with listen's diagnostic mode (it really comes in handy, trust me) help you create relevant output before you submit an issue (so we can respond with answers instead of tons of questions) Step 1 - The most important option in Listen For effective troubleshooting set the LISTEN_GEM_DEBUGGING=info variable before starting listen . Step 2 - Verify polling works Polling has to work ... or something is really wrong (and we need to know that before anything else). (see force_polling option). After starting listen , you should see something like: INFO -- : Record.build(): 0.06773114204406738 seconds Step 3 - Trigger some changes directly without using editors or apps Make changes e.g. touch foo or echo \"a\" >> foo (for troubleshooting, avoid using an editor which could generate too many misleading events). You should see something like: INFO -- : listen: raw changes: [[:added, \"/home/me/foo\"]] INFO -- : listen: final changes: {:modified=>[], :added=>[\"/home/me/foo\"], :removed=>[]} \"raw changes\" contains changes collected during the :wait_for_delay and :latency intervals, while \"final changes\" is what listen decided are relevant changes (for better editor support).","title":"3 steps before you start diagnosing problems"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#performance","text":"If listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of listen prior to 2.7.7 not getting silent crashes within listen (see LISTEN_GEM_DEBUGGING=debug ) not running multiple instances of listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=debug can help discover the actual events and time they happened.","title":"Performance"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#tips-and-techniques","text":"Watch only directories you're interested in. Set your editor to save quickly (e.g. without backup files, without atomic-save) Tweak the :latency and :wait_for_delay options until you get good results (see options ). Add :ignore rules to silence all events you don't care about (reduces a lot of noise, especially if you use it on directories)","title":"Tips and Techniques"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#releasing","text":"","title":"Releasing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#prerequisites","text":"You must have commit rights to the GitHub repository. You must have push rights for rubygems.org.","title":"Prerequisites"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#how-to-release","text":"Run bundle install to make sure that you have all the gems necessary for testing and releasing. Ensure all tests are passing by running bundle exec rake . Determine which would be the correct next version number according to semver . Update the version in ./lib/listen/version.rb . Update the version in the Install section of ./README.md ( gem 'listen', '~> X.Y' ). Commit the version in a single commit, the message should be \"Preparing vX.Y.Z\" Run bundle exec rake release:full ; this will tag, push to GitHub, and publish to rubygems.org. Update and publish the release notes on the GitHub releases page if necessary","title":"How to release"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#acknowledgments","text":"Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Natalie Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration.","title":"Acknowledgments"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#author","text":"Thibaud Guillaume-Gentil ( @thibaudgg )","title":"Author"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/#contributors","text":"https://github.com/guard/listen/graphs/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CHANGELOG/","text":"Moved to GitHub releases page.","title":"Moved to [GitHub releases](https://github.com/guard/listen/releases) page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CHANGELOG/#moved-to-github-releases-page","text":"","title":"Moved to GitHub releases page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CONTRIBUTING/","text":"Contribute to Listen File an issue If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details. Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Please do not change the version number. The title of your PR will automatically be included in the release notes for the next version of the gem. A maintainer can add one of the following GitHub labels to the PR to automatically categorize it when the release notes are generated: \u26a0\ufe0f Breaking \u2728 Feature \ud83d\udc1b Bug Fix \ud83d\udcda Docs \ud83c\udfe0 Housekeeping For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CONTRIBUTING/#contribute-to-listen","text":"","title":"Contribute to Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CONTRIBUTING/#file-an-issue","text":"If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details.","title":"File an issue"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/listen-3.7.1/CONTRIBUTING/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Please do not change the version number. The title of your PR will automatically be included in the release notes for the next version of the gem. A maintainer can add one of the following GitHub labels to the PR to automatically categorize it when the release notes are generated: \u26a0\ufe0f Breaking \u2728 Feature \ud83d\udc1b Bug Fix \ud83d\udcda Docs \ud83c\udfe0 Housekeeping For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/","text":"Mercenary Lightweight and flexible library for writing command-line apps in Ruby. Installation Add this line to your application's Gemfile: gem 'mercenary' And then execute: $ bundle Or install it yourself as: $ gem install mercenary Note: Mercenary may not work with Ruby < 1.9.3. Usage Creating programs and commands with Mercenary is easy: Mercenary.program(:jekyll) do |p| p.version Jekyll::VERSION p.description 'Jekyll is a blog-aware, static site generator in Ruby' p.syntax \"jekyll <subcommand> [options]\" p.command(:new) do |c| c.syntax \"new PATH\" # do not include the program name or super commands c.description \"Creates a new Jekyll site scaffold in PATH\" c.option 'blank', '--blank', 'Initialize the new site without any content.' c.action do |args, options| Jekyll::Commands::New.process(args, blank: options['blank']) end end p.command(:build) do |c| c.syntax \"build [options]\" c.description \"Builds your Jekyll site\" c.option 'safe', '--safe', 'Run in safe mode' c.option 'source', '--source DIR', 'From where to collect the source files' c.option 'destination', '--dest DIR', 'To where the compiled files should be written' c.action do |_, options| Jekyll::Commands::Build.process(options) end end # Bring in command bundled in external gem begin require \"jekyll-import\" JekyllImport.init_with_program(p) rescue LoadError end p.default_command(:build) end All commands have the following default options: -h/--help - show a help message -v/--version - show the program version -t/--trace - show the full backtrace when an error occurs API Mercenary .program Creates and executes a program. Accepts two arguments: name - program name as a Symbol block - the specification for the program, passed the program instance as an argument. Example is above, under the heading Usage . Program Program is a subclass of Command , so it has all of the methods documented below as well as those for Command . #config Fetches the program configuration hash. Command #new Create a new command. Accepts two arguments: name - the name of your command, as a symbol parent - (optional) the parent Command #version Sets or gets the version of the command. Accepts an optional argument: version - (optional) the version to set for the command. If present, this becomes the new version for the command and persists. #syntax Sets or gets the syntax of the command. Built on parent syntaxes if a parent exists. Accepts one optional argument: syntax - (optional) the syntax to set for the command. Will inherit from the parent commands or program. Usually in the form of \"command_name <SUBCOMMAND> [OPTIONS]\" When a parent command exists, say supercommand , with syntax set as supercommand <SUBCOMMAND> [OPTIONS] , the syntax of the command in question will be supercommand command_name <SUBCOMMAND> [OPTIONS] with both <SUBCOMMAND> and [OPTIONS] stripped out. Any text between < and > or between [ and ] will be stripped from parent command syntaxes. The purpose of this chaining is to reduce redundancy. #description Sets or gets the description of the command. Accepts one optional argument: desc - (optional) the description to set for the command. If provided, will override any previous description set for the command. #default_command Sets or gets the default subcommand of the command to execute in the event no subcommand is passed during execution. Accepts one optional argument: command_name - (optional) the Symbol name of the subcommand to be executed. Raises an ArgumentError if the subcommand doesn't exist. Overwrites previously-set default commands. #option Adds a new option to the command. Accepts many arguments: config_key - the configuration key that the value of this option maps to. *options - all the options, globbed, to be passed to OptionParser , namely the switches and the option description. Usually in the format \"-s\", \"--switch\", \"Sets the 'switch' flag\" . Valid option calls: cmd.option 'config_key', '-c', 'Sets the \"config\" flag' cmd.option 'config_key', '--config', 'Sets the \"config\" flag' cmd.option 'config_key', '-c', '--config', 'Sets the \"config\" flag.' cmd.option 'config_key', '-c FILE', '--config FILE', 'The config file.' cmd.option 'config_key', '-c FILE1[,FILE2[,FILE3...]]', '--config FILE1[,FILE2[,FILE3...]]', Array, 'The config files.' Notice that you can specify either a short switch, a long switch, or both. If you want to accept an argument, you have to specify it in the switch strings. The class of the argument defaults to String , but you can optionally set a different class to create, e.g. Array , if you are expecting a particular class in your code from this option's value. The description is also optional, but it's highly recommended to include a description. #alias Specifies an alias for this command such that the alias may be used in place of the command during execution. Accepts one argument: cmd_name - the alias name for this command as a Symbol Example: cmd.alias(:my_alias) # Now `cmd` is now also executable via \"my_alias\" #action Specifies a block to be executed in the event the command is specified at runtime. The block is given two arguments: args - the non-switch arguments given from the command-line options - the options hash built via the switches passed Note that actions are additive , meaning any new call to #action will result in another action to be executed at runtime. Actions will be executed in the order they are specified in. Example: cmd.action do |args, options| # do something! end #logger Access the logger for this command. Useful for outputting information to STDOUT. Accepts one optional argument: level - (optional) the severity threshold at which to begin logging. Uses Ruby's built-in Logger levels. Log level defaults to Logger::INFO . Examples: cmd.logger(Logger::DEBUG) cmd.logger.debug \"My debug message.\" cmd.logger.info \"My informative message.\" cmd.logger.warn \"ACHTUNG!!\" cmd.logger.error \"Something terrible has happened.\" cmd.logger.fatal \"I can't continue doing what I'm doing.\" #command Creates a new subcommand for the current command. Accepts two arguments: cmd_name - the command name, as a Symbol block - the specification of the subcommand in a block Example: my_command.command(:my_subcommand) do |subcmd| subcmd.description 'My subcommand' subcmd.syntax 'my_subcommand [OPTIONS]' # ... end Contributing Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Mercenary"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#mercenary","text":"Lightweight and flexible library for writing command-line apps in Ruby.","title":"Mercenary"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#installation","text":"Add this line to your application's Gemfile: gem 'mercenary' And then execute: $ bundle Or install it yourself as: $ gem install mercenary Note: Mercenary may not work with Ruby < 1.9.3.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#usage","text":"Creating programs and commands with Mercenary is easy: Mercenary.program(:jekyll) do |p| p.version Jekyll::VERSION p.description 'Jekyll is a blog-aware, static site generator in Ruby' p.syntax \"jekyll <subcommand> [options]\" p.command(:new) do |c| c.syntax \"new PATH\" # do not include the program name or super commands c.description \"Creates a new Jekyll site scaffold in PATH\" c.option 'blank', '--blank', 'Initialize the new site without any content.' c.action do |args, options| Jekyll::Commands::New.process(args, blank: options['blank']) end end p.command(:build) do |c| c.syntax \"build [options]\" c.description \"Builds your Jekyll site\" c.option 'safe', '--safe', 'Run in safe mode' c.option 'source', '--source DIR', 'From where to collect the source files' c.option 'destination', '--dest DIR', 'To where the compiled files should be written' c.action do |_, options| Jekyll::Commands::Build.process(options) end end # Bring in command bundled in external gem begin require \"jekyll-import\" JekyllImport.init_with_program(p) rescue LoadError end p.default_command(:build) end All commands have the following default options: -h/--help - show a help message -v/--version - show the program version -t/--trace - show the full backtrace when an error occurs","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#api","text":"","title":"API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#mercenary_1","text":"","title":"Mercenary"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#program","text":"Creates and executes a program. Accepts two arguments: name - program name as a Symbol block - the specification for the program, passed the program instance as an argument. Example is above, under the heading Usage .","title":".program"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#program_1","text":"Program is a subclass of Command , so it has all of the methods documented below as well as those for Command .","title":"Program"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#config","text":"Fetches the program configuration hash.","title":"#config"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#command","text":"","title":"Command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#new","text":"Create a new command. Accepts two arguments: name - the name of your command, as a symbol parent - (optional) the parent Command","title":"#new"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#version","text":"Sets or gets the version of the command. Accepts an optional argument: version - (optional) the version to set for the command. If present, this becomes the new version for the command and persists.","title":"#version"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#syntax","text":"Sets or gets the syntax of the command. Built on parent syntaxes if a parent exists. Accepts one optional argument: syntax - (optional) the syntax to set for the command. Will inherit from the parent commands or program. Usually in the form of \"command_name <SUBCOMMAND> [OPTIONS]\" When a parent command exists, say supercommand , with syntax set as supercommand <SUBCOMMAND> [OPTIONS] , the syntax of the command in question will be supercommand command_name <SUBCOMMAND> [OPTIONS] with both <SUBCOMMAND> and [OPTIONS] stripped out. Any text between < and > or between [ and ] will be stripped from parent command syntaxes. The purpose of this chaining is to reduce redundancy.","title":"#syntax"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#description","text":"Sets or gets the description of the command. Accepts one optional argument: desc - (optional) the description to set for the command. If provided, will override any previous description set for the command.","title":"#description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#default_command","text":"Sets or gets the default subcommand of the command to execute in the event no subcommand is passed during execution. Accepts one optional argument: command_name - (optional) the Symbol name of the subcommand to be executed. Raises an ArgumentError if the subcommand doesn't exist. Overwrites previously-set default commands.","title":"#default_command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#option","text":"Adds a new option to the command. Accepts many arguments: config_key - the configuration key that the value of this option maps to. *options - all the options, globbed, to be passed to OptionParser , namely the switches and the option description. Usually in the format \"-s\", \"--switch\", \"Sets the 'switch' flag\" . Valid option calls: cmd.option 'config_key', '-c', 'Sets the \"config\" flag' cmd.option 'config_key', '--config', 'Sets the \"config\" flag' cmd.option 'config_key', '-c', '--config', 'Sets the \"config\" flag.' cmd.option 'config_key', '-c FILE', '--config FILE', 'The config file.' cmd.option 'config_key', '-c FILE1[,FILE2[,FILE3...]]', '--config FILE1[,FILE2[,FILE3...]]', Array, 'The config files.' Notice that you can specify either a short switch, a long switch, or both. If you want to accept an argument, you have to specify it in the switch strings. The class of the argument defaults to String , but you can optionally set a different class to create, e.g. Array , if you are expecting a particular class in your code from this option's value. The description is also optional, but it's highly recommended to include a description.","title":"#option"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#alias","text":"Specifies an alias for this command such that the alias may be used in place of the command during execution. Accepts one argument: cmd_name - the alias name for this command as a Symbol Example: cmd.alias(:my_alias) # Now `cmd` is now also executable via \"my_alias\"","title":"#alias"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#action","text":"Specifies a block to be executed in the event the command is specified at runtime. The block is given two arguments: args - the non-switch arguments given from the command-line options - the options hash built via the switches passed Note that actions are additive , meaning any new call to #action will result in another action to be executed at runtime. Actions will be executed in the order they are specified in. Example: cmd.action do |args, options| # do something! end","title":"#action"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#logger","text":"Access the logger for this command. Useful for outputting information to STDOUT. Accepts one optional argument: level - (optional) the severity threshold at which to begin logging. Uses Ruby's built-in Logger levels. Log level defaults to Logger::INFO . Examples: cmd.logger(Logger::DEBUG) cmd.logger.debug \"My debug message.\" cmd.logger.info \"My informative message.\" cmd.logger.warn \"ACHTUNG!!\" cmd.logger.error \"Something terrible has happened.\" cmd.logger.fatal \"I can't continue doing what I'm doing.\"","title":"#logger"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#command_1","text":"Creates a new subcommand for the current command. Accepts two arguments: cmd_name - the command name, as a Symbol block - the specification of the subcommand in a block Example: my_command.command(:my_subcommand) do |subcmd| subcmd.description 'My subcommand' subcmd.syntax 'my_subcommand [OPTIONS]' # ... end","title":"#command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/#contributing","text":"Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/","text":"0.3.6 / 2016-04-07 Bug Fixes Presenter: Options should include those from parent command (#42) 0.3.5 / 2014-11-12 Bug Fixes Capture OptionsParser::InvalidOption and show a nice error message (#38) Absolute paths for requires and autoloads (#39) Development Fixes Bump to RSpec 3 (#40) 0.3.4 / 2014-07-11 Bug Fixes Use option object as key in the command's @map hash (#35) 0.3.3 / 2014-05-07 Bug Fixes The --version flag should not exit with code 1, but instead code 0. (#33) 0.3.2 / 2014-03-18 Bug Fixes Remove duplicate commands from help output; show aliases w/command names (#29) 0.3.1 / 2014-02-21 Minor Enhancements Add -t/--trace to list of options in help message (#19) Bug Fixes Mercenary::Option now accepts return values in the form of Class constants (#22) 0.3.0 / 2014-02-20 Major Enhancements Officially drop 1.8.7 support (#14) Allow Commands to set their own versions (#17) Show subcommands, options and usage in help and attach to all commands (#18) Add -t, --trace to allow full exception backtrace to print, otherwise print just the error message (#19) Minor Enhancements Logging state is maintained throughout process (#12) Tidy up Command#logger output (#21) Development Fixes Added specs for Program (#13) 0.2.1 / 2013-12-25 Bug Fixes Added missing comma to fix '-v' and '--version' options (#9) 0.2.0 / 2013-11-30 Major Enhancements Add Command#default_command to specify a default command if none is given by the user at runtime (#7) Minor Enhancements Add Command#execute to execute the actions of a command (#6) Development Fixes Add standard GitHub bootstrap and cibuild scripts to script/ (#2) 0.1.0 / 2013-11-08 Major Enhancements It works! Minor Enhancements Add a logger to Command Add --version switch to all programs Bug Fixes Fix Command#syntax and Command#description 's handing of setting vs getting Fix load path problem in lib/mercenary.rb Development Fixes Add TomDoc to everything Add a couple starter specs Add TravisCI badge Add Travis configuration 0.0.1 / 2013-11-06 Birthday!","title":"History"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#036-2016-04-07","text":"","title":"0.3.6 / 2016-04-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes","text":"Presenter: Options should include those from parent command (#42)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#035-2014-11-12","text":"","title":"0.3.5 / 2014-11-12"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_1","text":"Capture OptionsParser::InvalidOption and show a nice error message (#38) Absolute paths for requires and autoloads (#39)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#development-fixes","text":"Bump to RSpec 3 (#40)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#034-2014-07-11","text":"","title":"0.3.4 / 2014-07-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_2","text":"Use option object as key in the command's @map hash (#35)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#033-2014-05-07","text":"","title":"0.3.3 / 2014-05-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_3","text":"The --version flag should not exit with code 1, but instead code 0. (#33)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#032-2014-03-18","text":"","title":"0.3.2 / 2014-03-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_4","text":"Remove duplicate commands from help output; show aliases w/command names (#29)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#031-2014-02-21","text":"","title":"0.3.1 / 2014-02-21"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#minor-enhancements","text":"Add -t/--trace to list of options in help message (#19)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_5","text":"Mercenary::Option now accepts return values in the form of Class constants (#22)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#030-2014-02-20","text":"","title":"0.3.0 / 2014-02-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#major-enhancements","text":"Officially drop 1.8.7 support (#14) Allow Commands to set their own versions (#17) Show subcommands, options and usage in help and attach to all commands (#18) Add -t, --trace to allow full exception backtrace to print, otherwise print just the error message (#19)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#minor-enhancements_1","text":"Logging state is maintained throughout process (#12) Tidy up Command#logger output (#21)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#development-fixes_1","text":"Added specs for Program (#13)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#021-2013-12-25","text":"","title":"0.2.1 / 2013-12-25"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_6","text":"Added missing comma to fix '-v' and '--version' options (#9)","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#020-2013-11-30","text":"","title":"0.2.0 / 2013-11-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#major-enhancements_1","text":"Add Command#default_command to specify a default command if none is given by the user at runtime (#7)","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#minor-enhancements_2","text":"Add Command#execute to execute the actions of a command (#6)","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#development-fixes_2","text":"Add standard GitHub bootstrap and cibuild scripts to script/ (#2)","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#010-2013-11-08","text":"","title":"0.1.0 / 2013-11-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#major-enhancements_2","text":"It works!","title":"Major Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#minor-enhancements_3","text":"Add a logger to Command Add --version switch to all programs","title":"Minor Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#bug-fixes_7","text":"Fix Command#syntax and Command#description 's handing of setting vs getting Fix load path problem in lib/mercenary.rb","title":"Bug Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#development-fixes_3","text":"Add TomDoc to everything Add a couple starter specs Add TravisCI badge Add Travis configuration","title":"Development Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mercenary-0.3.6/History/#001-2013-11-06","text":"Birthday!","title":"0.0.1 / 2013-11-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/","text":"MiniPortile This documents versions 2 and up, for which the require file was renamed to mini_portile2 . For mini_portile versions 0.6.x and previous, please visit the v0.6.x branch . Documentation: http://www.rubydoc.info/github/flavorjones/mini_portile Source Code: https://github.com/flavorjones/mini_portile Bug Reports: https://github.com/flavorjones/mini_portile/issues This project is a minimalistic implementation of a port/recipe system for developers . Because \"Works on my machine\" is unacceptable for a library maintainer. Not Another Package Management System mini_portile2 is not a general package management system. It is not aimed to replace apt, macports or homebrew. It's intended primarily to make sure that you, as the developer of a library, can reproduce a user's dependencies and environment by specifying a specific version of an underlying dependency that you'd like to use. So, if a user says, \"This bug happens on my system that uses libiconv 1.13.1\", mini_portile2 should make it easy for you to download, compile and link against libiconv 1.13.1; and run your test suite against it. This scenario might be simplified with something like this: rake compile LIBICONV_VERSION=1.13.1 (For your homework, you can make libiconv version be taken from the appropriate ENV variables.) Sounds easy, but where's the catch? At this time (and highly likely will be always) mini_portile2 is only compatible with GCC compilers and autoconf - or configure -based projects. That is, it assumes the library you want to build contains a configure script, which all the autoconf-based libraries do. How to use Now that you know the catch, and you're still reading this, here is a quick example: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files = [\"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"] recipe.cook recipe.activate The gem version constraint makes sure that your extconf.rb is protected against possible backwards-incompatible changes to mini_portile2 . This constraint is REQUIRED if you're using mini_portile2 within a gem installation process (e.g., extconf.rb), because Bundler doesn't enforce gem version constraints at install-time (only at run-time. #cook will download, extract, patch, configure and compile the library into a namespaced structure. #activate ensures GCC will find this library and prefer it over a system-wide installation. Directory Structure Conventions mini_portile2 follows the principle of convention over configuration and established a folder structure where is going to place files and perform work. Take the above example, and let's draw some picture: mylib |-- ports | |-- archives | | `-- libiconv-1.13.1.tar.gz | `-- <platform> | `-- libiconv | `-- 1.13.1 | |-- bin | |-- include | `-- lib `-- tmp `-- <platform> `-- ports In above structure, <platform> refers to the architecture that represents the operating system you're using (e.g. i686-linux, i386-mingw32, etc). Inside the platform folder, mini_portile2 will store the artifacts that result from the compilation process. The library is versioned so you can keep multiple versions around on disk without clobbering anything. archives is where downloaded source files are cached. It is recommended you avoid trashing that folder to avoid downloading the same file multiple times (save bandwidth, save the world). tmp is where compilation is performed and can be safely discarded. Use the recipe's #path to obtain the full path to the installation directory: recipe.cook recipe.path # => /home/luis/projects/myapp/ports/i686-linux/libiconv/1.13.1 How can I combine this with my compilation task? In the simplest case, your rake compile task will depend on mini_portile2 compilation and most important, activation. Example: task :libiconv do recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files << { url: \"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"], md5: \"7ab33ebd26687c744a37264a330bbe9a\" } checkpoint = \".#{recipe.name}-#{recipe.version}.installed\" unless File.exist?(checkpoint) recipe.cook touch checkpoint end recipe.activate end task :compile => [:libiconv] do # ... your library's compilation task ... end The above example will: download and verify integrity the sources only once compile the library only once (using a timestamp file) ensure compiled library is activated make the compile task depend upon compiled library activation As an exercise for the reader, you could specify the libiconv version in an environment variable or a configuration file. Native and/or Cross Compilation The above example covers the normal use case: compiling dependencies natively. MiniPortile also covers another use case, which is the cross-compilation of the dependencies to be used as part of a binary gem compilation. It is the perfect complementary tool for rake-compiler and its cross rake task. Depending on your usage of rake-compiler , you will need to use host to match the installed cross-compiler toolchain. Please refer to the examples directory for simplified and practical usage. Supported Scenarios As mentioned before, MiniPortile requires a GCC compiler toolchain. This has been tested against Ubuntu, OSX and even Windows (RubyInstaller with DevKit) License This library is licensed under MIT license. Please see LICENSE.txt for details.","title":"MiniPortile"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#miniportile","text":"This documents versions 2 and up, for which the require file was renamed to mini_portile2 . For mini_portile versions 0.6.x and previous, please visit the v0.6.x branch . Documentation: http://www.rubydoc.info/github/flavorjones/mini_portile Source Code: https://github.com/flavorjones/mini_portile Bug Reports: https://github.com/flavorjones/mini_portile/issues This project is a minimalistic implementation of a port/recipe system for developers . Because \"Works on my machine\" is unacceptable for a library maintainer.","title":"MiniPortile"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#not-another-package-management-system","text":"mini_portile2 is not a general package management system. It is not aimed to replace apt, macports or homebrew. It's intended primarily to make sure that you, as the developer of a library, can reproduce a user's dependencies and environment by specifying a specific version of an underlying dependency that you'd like to use. So, if a user says, \"This bug happens on my system that uses libiconv 1.13.1\", mini_portile2 should make it easy for you to download, compile and link against libiconv 1.13.1; and run your test suite against it. This scenario might be simplified with something like this: rake compile LIBICONV_VERSION=1.13.1 (For your homework, you can make libiconv version be taken from the appropriate ENV variables.)","title":"Not Another Package Management System"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#sounds-easy-but-wheres-the-catch","text":"At this time (and highly likely will be always) mini_portile2 is only compatible with GCC compilers and autoconf - or configure -based projects. That is, it assumes the library you want to build contains a configure script, which all the autoconf-based libraries do.","title":"Sounds easy, but where's the catch?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#how-to-use","text":"Now that you know the catch, and you're still reading this, here is a quick example: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files = [\"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"] recipe.cook recipe.activate The gem version constraint makes sure that your extconf.rb is protected against possible backwards-incompatible changes to mini_portile2 . This constraint is REQUIRED if you're using mini_portile2 within a gem installation process (e.g., extconf.rb), because Bundler doesn't enforce gem version constraints at install-time (only at run-time. #cook will download, extract, patch, configure and compile the library into a namespaced structure. #activate ensures GCC will find this library and prefer it over a system-wide installation.","title":"How to use"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#directory-structure-conventions","text":"mini_portile2 follows the principle of convention over configuration and established a folder structure where is going to place files and perform work. Take the above example, and let's draw some picture: mylib |-- ports | |-- archives | | `-- libiconv-1.13.1.tar.gz | `-- <platform> | `-- libiconv | `-- 1.13.1 | |-- bin | |-- include | `-- lib `-- tmp `-- <platform> `-- ports In above structure, <platform> refers to the architecture that represents the operating system you're using (e.g. i686-linux, i386-mingw32, etc). Inside the platform folder, mini_portile2 will store the artifacts that result from the compilation process. The library is versioned so you can keep multiple versions around on disk without clobbering anything. archives is where downloaded source files are cached. It is recommended you avoid trashing that folder to avoid downloading the same file multiple times (save bandwidth, save the world). tmp is where compilation is performed and can be safely discarded. Use the recipe's #path to obtain the full path to the installation directory: recipe.cook recipe.path # => /home/luis/projects/myapp/ports/i686-linux/libiconv/1.13.1","title":"Directory Structure Conventions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#how-can-i-combine-this-with-my-compilation-task","text":"In the simplest case, your rake compile task will depend on mini_portile2 compilation and most important, activation. Example: task :libiconv do recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files << { url: \"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"], md5: \"7ab33ebd26687c744a37264a330bbe9a\" } checkpoint = \".#{recipe.name}-#{recipe.version}.installed\" unless File.exist?(checkpoint) recipe.cook touch checkpoint end recipe.activate end task :compile => [:libiconv] do # ... your library's compilation task ... end The above example will: download and verify integrity the sources only once compile the library only once (using a timestamp file) ensure compiled library is activated make the compile task depend upon compiled library activation As an exercise for the reader, you could specify the libiconv version in an environment variable or a configuration file.","title":"How can I combine this with my compilation task?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#native-andor-cross-compilation","text":"The above example covers the normal use case: compiling dependencies natively. MiniPortile also covers another use case, which is the cross-compilation of the dependencies to be used as part of a binary gem compilation. It is the perfect complementary tool for rake-compiler and its cross rake task. Depending on your usage of rake-compiler , you will need to use host to match the installed cross-compiler toolchain. Please refer to the examples directory for simplified and practical usage.","title":"Native and/or Cross Compilation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#supported-scenarios","text":"As mentioned before, MiniPortile requires a GCC compiler toolchain. This has been tested against Ubuntu, OSX and even Windows (RubyInstaller with DevKit)","title":"Supported Scenarios"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/#license","text":"This library is licensed under MIT license. Please see LICENSE.txt for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/","text":"2.1.0 / 2016-01-06 Enhancements Add support for file: protocol for tarballs Bugfixes Raise exception on unsupported URI protocols Ignore git whitespace config when patching (Thanks, @e2!) (#67) 2.0.0 / 2015-11-30 Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Note that the 0.7.0.rc* series was not released as 0.7.0 final, and instead became 2.0.0 due to backwards-incompatible behavioral changes which can appear because rubygems doesn't enforce loading the declared dependency version at installation-time (only run-time). If you use MiniPortile in an extconf.rb file, please make sure you're setting a gem version constraint before require \"mini_portile2\" . Note also that 2.0.0 doesn't include the backwards-compatible \"escaped string\" behavior from 0.7.0.rc3. Enhancements In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads Bugfixes Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy. 0.7.0.rc4 / 2015-08-24 Updated tests for Windows. No functional change. Final release candidate? 0.7.0.rc3 / 2015-08-24 Restore backwards-compatible behavior with respect to escaped strings. 0.7.0.rc2 / 2015-08-24 Restore support for Ruby 1.9.2 Add Ruby 2.0.0 and Ruby 2.1.x to Appveyor suite 0.7.0.rc1 / 2015-08-24 Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Enhancements In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads Bugfixes Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy. 0.6.2 / 2014-12-30 Updated gemspec, license and README to reflect new maintainer. 0.6.1 / 2014-08-03 Enhancements: Expand path to logfile to easier debugging on failures. Pull #33 [marvin2k] 0.6.0 / 2014-04-18 Enhancements: Add default cert store and custom certs from SSL_CERT_FILE if present. This increases compatibility with Ruby 1.8.7. Bugfixes: Specify Accept-Encoding to make sure a raw file content is downloaded. Pull #30. [knu] Internal: Improve examples and use them as test harness. 0.5.3 / 2014-03-24 Bugfixes: Shell escape paths in tar command. Pull #29. [quickshiftin] Support older versions of tar that cannot auto-detect the compression type. Pull #27. Closes #21. [b-dean] Try RbConfig's CC before fall back to 'gcc'. Ref #28. 0.5.2 / 2013-10-23 Bugfixes: Change tar detection order to support NetBSD 'gtar'. Closes #24 Trick 'git-apply' when applying patches on nested Git checkouts. [larskanis] Respect ENV's MAKE before fallback to 'make'. [larskanis] Respect ENV's CC variable before fallback to 'gcc'. Avoid non-ASCII output of GCC cause host detection issues. Closes #22 0.5.1 / 2013-07-07 Bugfixes: Detect tar executable without shelling out. [jtimberman] 0.5.0 / 2012-11-17 Enhancements: Allow patching extracted files using git apply . [metaskills] 0.4.1 / 2012-10-24 Bugfixes: Syntax to process FTp binary chunks differs between Ruby 1.8.7 and 1.9.x 0.4.0 / 2012-10-24 Enhancements: Allow fetching of FTP URLs along HTTP ones. [metaskills] 0.3.0 / 2012-03-23 Enhancements: Use gcc -v to determine original host (platform) instead of Ruby one. Deprecations: Dropped support for Rubies older than 1.8.7 0.2.2 / 2011-04-11 Minor enhancements: Use LDFLAGS when activating recipes for cross-compilation. Closes #6 Bugfixes: Remove memoization of *_path helpers. Closes #7 0.2.1 / 2011-04-06 Minor enhancements: Provide MiniPortile#path to obtain full path to installation directory. Closes GH-5 0.2.0 / 2011-04-05 Enhancements: Improve tar detection Improve and refactor configure_options Detect configure_options changes. Closes GH-1 Add recipe examples Bugfixes: MiniPortile#target can be changed now. Closes GH-2 Always redirect tar output properly 0.1.0 / 2011-03-08 Initial release. Welcome to this world!","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#210-2016-01-06","text":"","title":"2.1.0 / 2016-01-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#enhancements","text":"Add support for file: protocol for tarballs","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#bugfixes","text":"Raise exception on unsupported URI protocols Ignore git whitespace config when patching (Thanks, @e2!) (#67)","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#200-2015-11-30","text":"Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Note that the 0.7.0.rc* series was not released as 0.7.0 final, and instead became 2.0.0 due to backwards-incompatible behavioral changes which can appear because rubygems doesn't enforce loading the declared dependency version at installation-time (only run-time). If you use MiniPortile in an extconf.rb file, please make sure you're setting a gem version constraint before require \"mini_portile2\" . Note also that 2.0.0 doesn't include the backwards-compatible \"escaped string\" behavior from 0.7.0.rc3.","title":"2.0.0 / 2015-11-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#enhancements_1","text":"In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#bugfixes_1","text":"Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy.","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#070rc4-2015-08-24","text":"Updated tests for Windows. No functional change. Final release candidate?","title":"0.7.0.rc4 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#070rc3-2015-08-24","text":"Restore backwards-compatible behavior with respect to escaped strings.","title":"0.7.0.rc3 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#070rc2-2015-08-24","text":"Restore support for Ruby 1.9.2 Add Ruby 2.0.0 and Ruby 2.1.x to Appveyor suite","title":"0.7.0.rc2 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#070rc1-2015-08-24","text":"Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release.","title":"0.7.0.rc1 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#enhancements_2","text":"In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#bugfixes_2","text":"Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy.","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#062-2014-12-30","text":"Updated gemspec, license and README to reflect new maintainer.","title":"0.6.2 / 2014-12-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#061-2014-08-03","text":"Enhancements: Expand path to logfile to easier debugging on failures. Pull #33 [marvin2k]","title":"0.6.1 / 2014-08-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#060-2014-04-18","text":"Enhancements: Add default cert store and custom certs from SSL_CERT_FILE if present. This increases compatibility with Ruby 1.8.7. Bugfixes: Specify Accept-Encoding to make sure a raw file content is downloaded. Pull #30. [knu] Internal: Improve examples and use them as test harness.","title":"0.6.0 / 2014-04-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#053-2014-03-24","text":"Bugfixes: Shell escape paths in tar command. Pull #29. [quickshiftin] Support older versions of tar that cannot auto-detect the compression type. Pull #27. Closes #21. [b-dean] Try RbConfig's CC before fall back to 'gcc'. Ref #28.","title":"0.5.3 / 2014-03-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#052-2013-10-23","text":"Bugfixes: Change tar detection order to support NetBSD 'gtar'. Closes #24 Trick 'git-apply' when applying patches on nested Git checkouts. [larskanis] Respect ENV's MAKE before fallback to 'make'. [larskanis] Respect ENV's CC variable before fallback to 'gcc'. Avoid non-ASCII output of GCC cause host detection issues. Closes #22","title":"0.5.2 / 2013-10-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#051-2013-07-07","text":"Bugfixes: Detect tar executable without shelling out. [jtimberman]","title":"0.5.1 / 2013-07-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#050-2012-11-17","text":"Enhancements: Allow patching extracted files using git apply . [metaskills]","title":"0.5.0 / 2012-11-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#041-2012-10-24","text":"Bugfixes: Syntax to process FTp binary chunks differs between Ruby 1.8.7 and 1.9.x","title":"0.4.1 / 2012-10-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#040-2012-10-24","text":"Enhancements: Allow fetching of FTP URLs along HTTP ones. [metaskills]","title":"0.4.0 / 2012-10-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#030-2012-03-23","text":"Enhancements: Use gcc -v to determine original host (platform) instead of Ruby one. Deprecations: Dropped support for Rubies older than 1.8.7","title":"0.3.0 / 2012-03-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#022-2011-04-11","text":"Minor enhancements: Use LDFLAGS when activating recipes for cross-compilation. Closes #6 Bugfixes: Remove memoization of *_path helpers. Closes #7","title":"0.2.2 / 2011-04-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#021-2011-04-06","text":"Minor enhancements: Provide MiniPortile#path to obtain full path to installation directory. Closes GH-5","title":"0.2.1 / 2011-04-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#020-2011-04-05","text":"Enhancements: Improve tar detection Improve and refactor configure_options Detect configure_options changes. Closes GH-1 Add recipe examples Bugfixes: MiniPortile#target can be changed now. Closes GH-2 Always redirect tar output properly","title":"0.2.0 / 2011-04-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.1.0/CHANGELOG/#010-2011-03-08","text":"Initial release. Welcome to this world!","title":"0.1.0 / 2011-03-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/","text":"MiniPortile This documents versions 2 and up, for which the require file was renamed to mini_portile2 . For mini_portile versions 0.6.x and previous, please visit the v0.6.x branch . Documentation: http://www.rubydoc.info/github/flavorjones/mini_portile Source Code: https://github.com/flavorjones/mini_portile Bug Reports: https://github.com/flavorjones/mini_portile/issues This project is a minimalistic implementation of a port/recipe system for developers . Because \"Works on my machine\" is unacceptable for a library maintainer. Not Another Package Management System mini_portile2 is not a general package management system. It is not aimed to replace apt, macports or homebrew. It's intended primarily to make sure that you, as the developer of a library, can reproduce a user's dependencies and environment by specifying a specific version of an underlying dependency that you'd like to use. So, if a user says, \"This bug happens on my system that uses libiconv 1.13.1\", mini_portile2 should make it easy for you to download, compile and link against libiconv 1.13.1; and run your test suite against it. This scenario might be simplified with something like this: rake compile LIBICONV_VERSION=1.13.1 (For your homework, you can make libiconv version be taken from the appropriate ENV variables.) Sounds easy, but where's the catch? At this time mini_portile2 only supports autoconf - or configure -based projects. (That is, it assumes the library you want to build contains a configure script, which all the autoconf-based libraries do.) As of v2.2.0, there is experimental support for CMake -based projects. We welcome your feedback on this, particularly for Windows platforms. How to use (for autoconf projects) Now that you know the catch, and you're still reading this, here is a quick example: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files = [\"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"] recipe.cook recipe.activate The gem version constraint makes sure that your extconf.rb is protected against possible backwards-incompatible changes to mini_portile2 . This constraint is REQUIRED if you're using mini_portile2 within a gem installation process (e.g., extconf.rb), because Bundler doesn't enforce gem version constraints at install-time (only at run-time. #cook will download, extract, patch, configure and compile the library into a namespaced structure. #activate ensures GCC will find this library and prefer it over a system-wide installation. Some keyword arguments can be passed to the constructor to configure the commands used: gcc_command The compiler command that is used is configurable, and in order of preference will use: the CC environment variable (if present) the gcc_command value passed in to the constructor RbConfig::CONFIG[\"CC\"] \"gcc\" You can pass it in like so: MiniPortile.new(\"libiconv\", \"1.13.1\", gcc_command: \"cc\") make_command The configuration/make command that is used is configurable, and in order of preference will use: the MAKE environment variable (if present) the make_command value passed in to the constructor the make environment variable (if present) \"make\" You can pass it in like so: MiniPortile.new(\"libiconv\", \"1.13.1\", make_command: \"nmake\") open_timeout , read_timeout By default, when downloading source archives, MiniPortile will use a timeout value of 10 seconds. This can be overridden by passing a different value (in seconds): MiniPortile.new(\"libiconv\", \"1.13.1\", open_timeout: 99, read_timeout: 2) How to use (for cmake projects) Same as above, but instead of MiniPortile.new , call MiniPortileCMake.new . make_command This is configurable as above, except for Windows systems where it's hardcoded to \"nmake\" . cmake_command The cmake command used is configurable, and in order of preference will use: the CMAKE environment variable (if present) the cmake_command value passed in to the constructor \"cmake\" You can pass it in like so: MiniPortileCMake.new(\"libfoobar\", \"1.3.5\", cmake_command: \"cmake3\") Local source directories Instead of downloading a remote file, you can also point mini_portile2 at a local source directory. In particular, this may be useful for testing or debugging: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.source_directory = \"/path/to/local/source/for/library-1.2.3\" Directory Structure Conventions mini_portile2 follows the principle of convention over configuration and established a folder structure where is going to place files and perform work. Take the above example, and let's draw some picture: mylib |-- ports | |-- archives | | `-- libiconv-1.13.1.tar.gz | `-- <platform> | `-- libiconv | `-- 1.13.1 | |-- bin | |-- include | `-- lib `-- tmp `-- <platform> `-- ports In above structure, <platform> refers to the architecture that represents the operating system you're using (e.g. i686-linux, i386-mingw32, etc). Inside the platform folder, mini_portile2 will store the artifacts that result from the compilation process. The library is versioned so you can keep multiple versions around on disk without clobbering anything. archives is where downloaded source files are cached. It is recommended you avoid trashing that folder to avoid downloading the same file multiple times (save bandwidth, save the world). tmp is where compilation is performed and can be safely discarded. Use the recipe's #path to obtain the full path to the installation directory: recipe.cook recipe.path # => /home/luis/projects/myapp/ports/i686-linux/libiconv/1.13.1 How can I combine this with my compilation task? In the simplest case, your rake compile task will depend on mini_portile2 compilation and most important, activation. Example: task :libiconv do recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files << { url: \"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"], sha256: \"55a36168306089009d054ccdd9d013041bfc3ab26be7033d107821f1c4949a49\" } checkpoint = \".#{recipe.name}-#{recipe.version}.installed\" unless File.exist?(checkpoint) recipe.cook touch checkpoint end recipe.activate end task :compile => [:libiconv] do # ... your library's compilation task ... end The above example will: download and verify integrity the sources only once compile the library only once (using a timestamp file) ensure compiled library is activated make the compile task depend upon compiled library activation As an exercise for the reader, you could specify the libiconv version in an environment variable or a configuration file. Download verification MiniPortile supports HTTPS, HTTP, FTP and FILE sources for download. The integrity of the downloaded file can be verified per hash value or PGP signature. This is particular important for untrusted sources (non-HTTPS). Hash digest verification MiniPortile can verify the integrity of the downloaded file per SHA256, SHA1 or MD5 hash digest. recipe.files << { url: \"http://your.host/file.tar.bz2\", sha256: \"<32 byte hex value>\", } PGP signature verification MiniPortile can also verify the integrity of the downloaded file per PGP signature. public_key = <<-EOT -----BEGIN PGP PUBLIC KEY BLOCK----- Version: GnuPG v1 mQENBE7SKu8BCADQo6x4ZQfAcPlJMLmL8zBEBUS6GyKMMMDtrTh3Yaq481HB54oR [...] -----END PGP PUBLIC KEY BLOCK----- EOT recipe.files << { url: \"http://your.host/file.tar.bz2\", gpg: { key: public_key, signature_url: \"http://your.host/file.tar.bz2.sig\" } } Please note, that the gpg executable is required to verify the signature. It is therefore recommended to use the hash verification method instead of PGP, when used in extconf.rb while gem install . Native and/or Cross Compilation The above example covers the normal use case: compiling dependencies natively. MiniPortile also covers another use case, which is the cross-compilation of the dependencies to be used as part of a binary gem compilation. It is the perfect complementary tool for rake-compiler and its cross rake task. Depending on your usage of rake-compiler , you will need to use host to match the installed cross-compiler toolchain. Please refer to the examples directory for simplified and practical usage. Supported Scenarios As mentioned before, MiniPortile requires a GCC compiler toolchain. This has been tested against Ubuntu, OSX and even Windows (RubyInstaller with DevKit) Support The bug tracker is available here: https://github.com/flavorjones/mini_portile/issues Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Loofah. Tidelift subscriptions also help the Loofah maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often. Security See SECURITY.md for vulnerability reporting details. License This library is licensed under MIT license. Please see LICENSE.txt for details.","title":"MiniPortile"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#miniportile","text":"This documents versions 2 and up, for which the require file was renamed to mini_portile2 . For mini_portile versions 0.6.x and previous, please visit the v0.6.x branch . Documentation: http://www.rubydoc.info/github/flavorjones/mini_portile Source Code: https://github.com/flavorjones/mini_portile Bug Reports: https://github.com/flavorjones/mini_portile/issues This project is a minimalistic implementation of a port/recipe system for developers . Because \"Works on my machine\" is unacceptable for a library maintainer.","title":"MiniPortile"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#not-another-package-management-system","text":"mini_portile2 is not a general package management system. It is not aimed to replace apt, macports or homebrew. It's intended primarily to make sure that you, as the developer of a library, can reproduce a user's dependencies and environment by specifying a specific version of an underlying dependency that you'd like to use. So, if a user says, \"This bug happens on my system that uses libiconv 1.13.1\", mini_portile2 should make it easy for you to download, compile and link against libiconv 1.13.1; and run your test suite against it. This scenario might be simplified with something like this: rake compile LIBICONV_VERSION=1.13.1 (For your homework, you can make libiconv version be taken from the appropriate ENV variables.)","title":"Not Another Package Management System"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#sounds-easy-but-wheres-the-catch","text":"At this time mini_portile2 only supports autoconf - or configure -based projects. (That is, it assumes the library you want to build contains a configure script, which all the autoconf-based libraries do.) As of v2.2.0, there is experimental support for CMake -based projects. We welcome your feedback on this, particularly for Windows platforms.","title":"Sounds easy, but where's the catch?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#how-to-use-for-autoconf-projects","text":"Now that you know the catch, and you're still reading this, here is a quick example: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files = [\"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"] recipe.cook recipe.activate The gem version constraint makes sure that your extconf.rb is protected against possible backwards-incompatible changes to mini_portile2 . This constraint is REQUIRED if you're using mini_portile2 within a gem installation process (e.g., extconf.rb), because Bundler doesn't enforce gem version constraints at install-time (only at run-time. #cook will download, extract, patch, configure and compile the library into a namespaced structure. #activate ensures GCC will find this library and prefer it over a system-wide installation. Some keyword arguments can be passed to the constructor to configure the commands used:","title":"How to use (for autoconf projects)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#gcc_command","text":"The compiler command that is used is configurable, and in order of preference will use: the CC environment variable (if present) the gcc_command value passed in to the constructor RbConfig::CONFIG[\"CC\"] \"gcc\" You can pass it in like so: MiniPortile.new(\"libiconv\", \"1.13.1\", gcc_command: \"cc\")","title":"gcc_command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#make_command","text":"The configuration/make command that is used is configurable, and in order of preference will use: the MAKE environment variable (if present) the make_command value passed in to the constructor the make environment variable (if present) \"make\" You can pass it in like so: MiniPortile.new(\"libiconv\", \"1.13.1\", make_command: \"nmake\")","title":"make_command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#open_timeout-read_timeout","text":"By default, when downloading source archives, MiniPortile will use a timeout value of 10 seconds. This can be overridden by passing a different value (in seconds): MiniPortile.new(\"libiconv\", \"1.13.1\", open_timeout: 99, read_timeout: 2)","title":"open_timeout, read_timeout"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#how-to-use-for-cmake-projects","text":"Same as above, but instead of MiniPortile.new , call MiniPortileCMake.new .","title":"How to use (for cmake projects)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#make_command_1","text":"This is configurable as above, except for Windows systems where it's hardcoded to \"nmake\" .","title":"make_command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#cmake_command","text":"The cmake command used is configurable, and in order of preference will use: the CMAKE environment variable (if present) the cmake_command value passed in to the constructor \"cmake\" You can pass it in like so: MiniPortileCMake.new(\"libfoobar\", \"1.3.5\", cmake_command: \"cmake3\")","title":"cmake_command"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#local-source-directories","text":"Instead of downloading a remote file, you can also point mini_portile2 at a local source directory. In particular, this may be useful for testing or debugging: gem \"mini_portile2\", \"~> 2.0.0\" # NECESSARY if used in extconf.rb. see below. require \"mini_portile2\" recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.source_directory = \"/path/to/local/source/for/library-1.2.3\"","title":"Local source directories"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#directory-structure-conventions","text":"mini_portile2 follows the principle of convention over configuration and established a folder structure where is going to place files and perform work. Take the above example, and let's draw some picture: mylib |-- ports | |-- archives | | `-- libiconv-1.13.1.tar.gz | `-- <platform> | `-- libiconv | `-- 1.13.1 | |-- bin | |-- include | `-- lib `-- tmp `-- <platform> `-- ports In above structure, <platform> refers to the architecture that represents the operating system you're using (e.g. i686-linux, i386-mingw32, etc). Inside the platform folder, mini_portile2 will store the artifacts that result from the compilation process. The library is versioned so you can keep multiple versions around on disk without clobbering anything. archives is where downloaded source files are cached. It is recommended you avoid trashing that folder to avoid downloading the same file multiple times (save bandwidth, save the world). tmp is where compilation is performed and can be safely discarded. Use the recipe's #path to obtain the full path to the installation directory: recipe.cook recipe.path # => /home/luis/projects/myapp/ports/i686-linux/libiconv/1.13.1","title":"Directory Structure Conventions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#how-can-i-combine-this-with-my-compilation-task","text":"In the simplest case, your rake compile task will depend on mini_portile2 compilation and most important, activation. Example: task :libiconv do recipe = MiniPortile.new(\"libiconv\", \"1.13.1\") recipe.files << { url: \"http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.13.1.tar.gz\"], sha256: \"55a36168306089009d054ccdd9d013041bfc3ab26be7033d107821f1c4949a49\" } checkpoint = \".#{recipe.name}-#{recipe.version}.installed\" unless File.exist?(checkpoint) recipe.cook touch checkpoint end recipe.activate end task :compile => [:libiconv] do # ... your library's compilation task ... end The above example will: download and verify integrity the sources only once compile the library only once (using a timestamp file) ensure compiled library is activated make the compile task depend upon compiled library activation As an exercise for the reader, you could specify the libiconv version in an environment variable or a configuration file.","title":"How can I combine this with my compilation task?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#download-verification","text":"MiniPortile supports HTTPS, HTTP, FTP and FILE sources for download. The integrity of the downloaded file can be verified per hash value or PGP signature. This is particular important for untrusted sources (non-HTTPS).","title":"Download verification"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#hash-digest-verification","text":"MiniPortile can verify the integrity of the downloaded file per SHA256, SHA1 or MD5 hash digest. recipe.files << { url: \"http://your.host/file.tar.bz2\", sha256: \"<32 byte hex value>\", }","title":"Hash digest verification"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#pgp-signature-verification","text":"MiniPortile can also verify the integrity of the downloaded file per PGP signature. public_key = <<-EOT -----BEGIN PGP PUBLIC KEY BLOCK----- Version: GnuPG v1 mQENBE7SKu8BCADQo6x4ZQfAcPlJMLmL8zBEBUS6GyKMMMDtrTh3Yaq481HB54oR [...] -----END PGP PUBLIC KEY BLOCK----- EOT recipe.files << { url: \"http://your.host/file.tar.bz2\", gpg: { key: public_key, signature_url: \"http://your.host/file.tar.bz2.sig\" } } Please note, that the gpg executable is required to verify the signature. It is therefore recommended to use the hash verification method instead of PGP, when used in extconf.rb while gem install .","title":"PGP signature verification"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#native-andor-cross-compilation","text":"The above example covers the normal use case: compiling dependencies natively. MiniPortile also covers another use case, which is the cross-compilation of the dependencies to be used as part of a binary gem compilation. It is the perfect complementary tool for rake-compiler and its cross rake task. Depending on your usage of rake-compiler , you will need to use host to match the installed cross-compiler toolchain. Please refer to the examples directory for simplified and practical usage.","title":"Native and/or Cross Compilation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#supported-scenarios","text":"As mentioned before, MiniPortile requires a GCC compiler toolchain. This has been tested against Ubuntu, OSX and even Windows (RubyInstaller with DevKit)","title":"Supported Scenarios"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#support","text":"The bug tracker is available here: https://github.com/flavorjones/mini_portile/issues Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Loofah. Tidelift subscriptions also help the Loofah maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often.","title":"Support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#security","text":"See SECURITY.md for vulnerability reporting details.","title":"Security"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/#license","text":"This library is licensed under MIT license. Please see LICENSE.txt for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/","text":"mini_portile changelog 2.8.0 / 2022-02-20 Added Support xz-compressed archives (recognized by an .xz file extension). When downloading a source archive, default open_timeout and read_timeout to 10 seconds, but allow configuration via open_timeout and read_timeout config parameters. 2.7.1 / 2021-10-20 Packaging A test artifact that has been included in the gem was being flagged by some users' security scanners because it wasn't a real tarball. That artifact has been updated to be a real tarball. [#108] 2.7.0 / 2021-08-31 Added The commands used for \"make\", \"compile\", and \"cmake\" are configurable via keyword arguments. [#107] (Thanks, @cosmo0920!) 2.6.1 / 2021-05-31 Dependencies Make net-ftp an optional dependency, since requiring it as a hard dependency in v2.5.2 caused warnings to be emitted by Ruby 2.7 and earlier. A warning message is emitted if FTP functionality is called and net-ftp isn't available; this should only happen in Ruby 3.1 and later. 2.5.3 / 2021-05-31 Dependencies Make net-ftp an optional dependency, since requiring it as a hard dependency in v2.5.2 caused warnings to be emitted by Ruby 2.7 and earlier. A warning message is emitted if FTP functionality is called and net-ftp isn't available; this should only happen in Ruby 3.1 and later. 2.6.0 / 2021-05-31 Added Recipes may build against a local directory by specifying source_directory instead of files . In particular, this may be useful for debugging problems with the upstream dependency (e.g., use git bisect in a local clone) or for continuous integration with upstream HEAD. 2.5.2 / 2021-05-28 Dependencies Add net-ftp as an explicit dependency to accommodate the upcoming Ruby 3.1 changes that move this and other gems out of the \"default\" gem set and into the \"bundled\" gem set. See https://bugs.ruby-lang.org/issues/17873 [#101] 2.5.1 / 2021-04-28 Dependencies This release ends support for ruby < 2.3.0. If you're on 2.2.x or earlier, we strongly suggest that you find the time to upgrade, because official support for Ruby 2.2 ended on 2018-03-31 . Enhancements MiniPortile.execute now takes an optional :env hash, which is merged into the environment variables for the subprocess. Likely this is only useful for specialized use cases. [#99] Experimental support for cmake-based projects extended to Windows. (Thanks, @larskanis!) 2.5.0 / 2020-02-24 Enhancements When verifying GPG signatures, remove all imported pubkeys from keyring [#90] (Thanks, @hanazuki!) 2.4.0 / 2018-12-02 Enhancements Skip progress report when Content-Length is unavailable. [#85] (Thanks, @eagletmt!) 2.3.0 / 2017-09-13 Enhancements Verify checksums of files at extraction time (in addition to at download time). (#56) Clarify error message if a tar command can't be found. (#81) 2.2.0 / 2017-06-04 Enhancements Remove MD5 hashing of configure options, not avialbale in FIPS mode. (#78) Add experimental support for cmake-based projects. Retry on HTTP failures during downloads. [#63] (Thanks, @jtarchie and @jvshahid!) Support Ruby 2.4 frozen string literals. Support applying patches for users with misconfigured git worktree. [#69] Support gpg signature verification of download resources. 2.1.0 / 2016-01-06 Enhancements Add support for file: protocol for tarballs Bugfixes Raise exception on unsupported URI protocols Ignore git whitespace config when patching (Thanks, @e2!) (#67) 2.0.0 / 2015-11-30 Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Note that the 0.7.0.rc* series was not released as 0.7.0 final, and instead became 2.0.0 due to backwards-incompatible behavioral changes which can appear because rubygems doesn't enforce loading the declared dependency version at installation-time (only run-time). If you use MiniPortile in an extconf.rb file, please make sure you're setting a gem version constraint before require \"mini_portile2\" . Note also that 2.0.0 doesn't include the backwards-compatible \"escaped string\" behavior from 0.7.0.rc3. Enhancements In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads Bugfixes Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy. 0.7.0.rc4 / 2015-08-24 Updated tests for Windows. No functional change. Final release candidate? 0.7.0.rc3 / 2015-08-24 Restore backwards-compatible behavior with respect to escaped strings. 0.7.0.rc2 / 2015-08-24 Restore support for Ruby 1.9.2 Add Ruby 2.0.0 and Ruby 2.1.x to Appveyor suite 0.7.0.rc1 / 2015-08-24 Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Enhancements In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads Bugfixes Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy. 0.6.2 / 2014-12-30 Updated gemspec, license and README to reflect new maintainer. 0.6.1 / 2014-08-03 Enhancements: Expand path to logfile to easier debugging on failures. Pull #33 [marvin2k] 0.6.0 / 2014-04-18 Enhancements: Add default cert store and custom certs from SSL_CERT_FILE if present. This increases compatibility with Ruby 1.8.7. Bugfixes: Specify Accept-Encoding to make sure a raw file content is downloaded. Pull #30. [knu] Internal: Improve examples and use them as test harness. 0.5.3 / 2014-03-24 Bugfixes: Shell escape paths in tar command. Pull #29. [quickshiftin] Support older versions of tar that cannot auto-detect the compression type. Pull #27. Closes #21. [b-dean] Try RbConfig's CC before fall back to 'gcc'. Ref #28. 0.5.2 / 2013-10-23 Bugfixes: Change tar detection order to support NetBSD 'gtar'. Closes #24 Trick 'git-apply' when applying patches on nested Git checkouts. [larskanis] Respect ENV's MAKE before fallback to 'make'. [larskanis] Respect ENV's CC variable before fallback to 'gcc'. Avoid non-ASCII output of GCC cause host detection issues. Closes #22 0.5.1 / 2013-07-07 Bugfixes: Detect tar executable without shelling out. [jtimberman] 0.5.0 / 2012-11-17 Enhancements: Allow patching extracted files using git apply . [metaskills] 0.4.1 / 2012-10-24 Bugfixes: Syntax to process FTp binary chunks differs between Ruby 1.8.7 and 1.9.x 0.4.0 / 2012-10-24 Enhancements: Allow fetching of FTP URLs along HTTP ones. [metaskills] 0.3.0 / 2012-03-23 Enhancements: Use gcc -v to determine original host (platform) instead of Ruby one. Deprecations: Dropped support for Rubies older than 1.8.7 0.2.2 / 2011-04-11 Minor enhancements: Use LDFLAGS when activating recipes for cross-compilation. Closes #6 Bugfixes: Remove memoization of *_path helpers. Closes #7 0.2.1 / 2011-04-06 Minor enhancements: Provide MiniPortile#path to obtain full path to installation directory. Closes GH-5 0.2.0 / 2011-04-05 Enhancements: Improve tar detection Improve and refactor configure_options Detect configure_options changes. Closes GH-1 Add recipe examples Bugfixes: MiniPortile#target can be changed now. Closes GH-2 Always redirect tar output properly 0.1.0 / 2011-03-08 Initial release. Welcome to this world!","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#mini_portile-changelog","text":"","title":"mini_portile changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#280-2022-02-20","text":"","title":"2.8.0 / 2022-02-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#added","text":"Support xz-compressed archives (recognized by an .xz file extension). When downloading a source archive, default open_timeout and read_timeout to 10 seconds, but allow configuration via open_timeout and read_timeout config parameters.","title":"Added"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#271-2021-10-20","text":"","title":"2.7.1 / 2021-10-20"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#packaging","text":"A test artifact that has been included in the gem was being flagged by some users' security scanners because it wasn't a real tarball. That artifact has been updated to be a real tarball. [#108]","title":"Packaging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#270-2021-08-31","text":"","title":"2.7.0 / 2021-08-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#added_1","text":"The commands used for \"make\", \"compile\", and \"cmake\" are configurable via keyword arguments. [#107] (Thanks, @cosmo0920!)","title":"Added"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#261-2021-05-31","text":"","title":"2.6.1 / 2021-05-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#dependencies","text":"Make net-ftp an optional dependency, since requiring it as a hard dependency in v2.5.2 caused warnings to be emitted by Ruby 2.7 and earlier. A warning message is emitted if FTP functionality is called and net-ftp isn't available; this should only happen in Ruby 3.1 and later.","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#253-2021-05-31","text":"","title":"2.5.3 / 2021-05-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#dependencies_1","text":"Make net-ftp an optional dependency, since requiring it as a hard dependency in v2.5.2 caused warnings to be emitted by Ruby 2.7 and earlier. A warning message is emitted if FTP functionality is called and net-ftp isn't available; this should only happen in Ruby 3.1 and later.","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#260-2021-05-31","text":"","title":"2.6.0 / 2021-05-31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#added_2","text":"Recipes may build against a local directory by specifying source_directory instead of files . In particular, this may be useful for debugging problems with the upstream dependency (e.g., use git bisect in a local clone) or for continuous integration with upstream HEAD.","title":"Added"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#252-2021-05-28","text":"","title":"2.5.2 / 2021-05-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#dependencies_2","text":"Add net-ftp as an explicit dependency to accommodate the upcoming Ruby 3.1 changes that move this and other gems out of the \"default\" gem set and into the \"bundled\" gem set. See https://bugs.ruby-lang.org/issues/17873 [#101]","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#251-2021-04-28","text":"","title":"2.5.1 / 2021-04-28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#dependencies_3","text":"This release ends support for ruby < 2.3.0. If you're on 2.2.x or earlier, we strongly suggest that you find the time to upgrade, because official support for Ruby 2.2 ended on 2018-03-31 .","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements","text":"MiniPortile.execute now takes an optional :env hash, which is merged into the environment variables for the subprocess. Likely this is only useful for specialized use cases. [#99] Experimental support for cmake-based projects extended to Windows. (Thanks, @larskanis!)","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#250-2020-02-24","text":"","title":"2.5.0 / 2020-02-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_1","text":"When verifying GPG signatures, remove all imported pubkeys from keyring [#90] (Thanks, @hanazuki!)","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#240-2018-12-02","text":"","title":"2.4.0 / 2018-12-02"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_2","text":"Skip progress report when Content-Length is unavailable. [#85] (Thanks, @eagletmt!)","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#230-2017-09-13","text":"","title":"2.3.0 / 2017-09-13"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_3","text":"Verify checksums of files at extraction time (in addition to at download time). (#56) Clarify error message if a tar command can't be found. (#81)","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#220-2017-06-04","text":"","title":"2.2.0 / 2017-06-04"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_4","text":"Remove MD5 hashing of configure options, not avialbale in FIPS mode. (#78) Add experimental support for cmake-based projects. Retry on HTTP failures during downloads. [#63] (Thanks, @jtarchie and @jvshahid!) Support Ruby 2.4 frozen string literals. Support applying patches for users with misconfigured git worktree. [#69] Support gpg signature verification of download resources.","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#210-2016-01-06","text":"","title":"2.1.0 / 2016-01-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_5","text":"Add support for file: protocol for tarballs","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#bugfixes","text":"Raise exception on unsupported URI protocols Ignore git whitespace config when patching (Thanks, @e2!) (#67)","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#200-2015-11-30","text":"Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release. Note that the 0.7.0.rc* series was not released as 0.7.0 final, and instead became 2.0.0 due to backwards-incompatible behavioral changes which can appear because rubygems doesn't enforce loading the declared dependency version at installation-time (only run-time). If you use MiniPortile in an extconf.rb file, please make sure you're setting a gem version constraint before require \"mini_portile2\" . Note also that 2.0.0 doesn't include the backwards-compatible \"escaped string\" behavior from 0.7.0.rc3.","title":"2.0.0 / 2015-11-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_6","text":"In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#bugfixes_1","text":"Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy.","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#070rc4-2015-08-24","text":"Updated tests for Windows. No functional change. Final release candidate?","title":"0.7.0.rc4 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#070rc3-2015-08-24","text":"Restore backwards-compatible behavior with respect to escaped strings.","title":"0.7.0.rc3 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#070rc2-2015-08-24","text":"Restore support for Ruby 1.9.2 Add Ruby 2.0.0 and Ruby 2.1.x to Appveyor suite","title":"0.7.0.rc2 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#070rc1-2015-08-24","text":"Many thanks to @larskanis, @knu, and @kirikak2, who all contributed code, ideas, or both to this release.","title":"0.7.0.rc1 / 2015-08-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#enhancements_7","text":"In patch task, use git(1) or patch(1), whichever is available. Append outputs to patch.log instead of clobbering it for every patch command. Take configure_options literally without running a subshell. This changes allows for embedded spaces in a path, among other things. Please unescape configure_options where you have been doing it yourself. Print last 20 lines of the given log file, for convenience. Allow SHA1, SHA256 and MD5 hash verification of downloads","title":"Enhancements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#bugfixes_2","text":"Fix issue when proxy username/password use escaped characters. Fix use of https and ftp proxy.","title":"Bugfixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#062-2014-12-30","text":"Updated gemspec, license and README to reflect new maintainer.","title":"0.6.2 / 2014-12-30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#061-2014-08-03","text":"Enhancements: Expand path to logfile to easier debugging on failures. Pull #33 [marvin2k]","title":"0.6.1 / 2014-08-03"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#060-2014-04-18","text":"Enhancements: Add default cert store and custom certs from SSL_CERT_FILE if present. This increases compatibility with Ruby 1.8.7. Bugfixes: Specify Accept-Encoding to make sure a raw file content is downloaded. Pull #30. [knu] Internal: Improve examples and use them as test harness.","title":"0.6.0 / 2014-04-18"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#053-2014-03-24","text":"Bugfixes: Shell escape paths in tar command. Pull #29. [quickshiftin] Support older versions of tar that cannot auto-detect the compression type. Pull #27. Closes #21. [b-dean] Try RbConfig's CC before fall back to 'gcc'. Ref #28.","title":"0.5.3 / 2014-03-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#052-2013-10-23","text":"Bugfixes: Change tar detection order to support NetBSD 'gtar'. Closes #24 Trick 'git-apply' when applying patches on nested Git checkouts. [larskanis] Respect ENV's MAKE before fallback to 'make'. [larskanis] Respect ENV's CC variable before fallback to 'gcc'. Avoid non-ASCII output of GCC cause host detection issues. Closes #22","title":"0.5.2 / 2013-10-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#051-2013-07-07","text":"Bugfixes: Detect tar executable without shelling out. [jtimberman]","title":"0.5.1 / 2013-07-07"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#050-2012-11-17","text":"Enhancements: Allow patching extracted files using git apply . [metaskills]","title":"0.5.0 / 2012-11-17"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#041-2012-10-24","text":"Bugfixes: Syntax to process FTp binary chunks differs between Ruby 1.8.7 and 1.9.x","title":"0.4.1 / 2012-10-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#040-2012-10-24","text":"Enhancements: Allow fetching of FTP URLs along HTTP ones. [metaskills]","title":"0.4.0 / 2012-10-24"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#030-2012-03-23","text":"Enhancements: Use gcc -v to determine original host (platform) instead of Ruby one. Deprecations: Dropped support for Rubies older than 1.8.7","title":"0.3.0 / 2012-03-23"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#022-2011-04-11","text":"Minor enhancements: Use LDFLAGS when activating recipes for cross-compilation. Closes #6 Bugfixes: Remove memoization of *_path helpers. Closes #7","title":"0.2.2 / 2011-04-11"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#021-2011-04-06","text":"Minor enhancements: Provide MiniPortile#path to obtain full path to installation directory. Closes GH-5","title":"0.2.1 / 2011-04-06"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#020-2011-04-05","text":"Enhancements: Improve tar detection Improve and refactor configure_options Detect configure_options changes. Closes GH-1 Add recipe examples Bugfixes: MiniPortile#target can be changed now. Closes GH-2 Always redirect tar output properly","title":"0.2.0 / 2011-04-05"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/CHANGELOG/#010-2011-03-08","text":"Initial release. Welcome to this world!","title":"0.1.0 / 2011-03-08"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/SECURITY/","text":"Security and Vulnerability Reporting The mini_portile core contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding mini_portile, please report it via Tidelift . Your report will be acknowledged within 48 hours, and you'll receive a more detailed response within 96 hours indicating next steps in handling your report. If you have not received a reply to your submission within 96 hours, Contact the current security coordinator, Mike Dalessio mike.dalessio@gmail.com . The information you share with the mini_portile core contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security and Vulnerability Reporting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/mini_portile2-2.8.0/SECURITY/#security-and-vulnerability-reporting","text":"The mini_portile core contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding mini_portile, please report it via Tidelift . Your report will be acknowledged within 48 hours, and you'll receive a more detailed response within 96 hours indicating next steps in handling your report. If you have not received a reply to your submission within 96 hours, Contact the current security coordinator, Mike Dalessio mike.dalessio@gmail.com . The information you share with the mini_portile core contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security and Vulnerability Reporting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/","text":"minima Minima is a one-size-fits-all Jekyll theme for writers . It's Jekyll's default (and first) theme. It's what you get when you run jekyll new . Theme preview Installation Add this line to your Jekyll site's Gemfile: gem \"minima\" And add this line to your Jekyll site: theme: minima And then execute: $ bundle Contents At-A-Glance Minima has been scaffolded by the jekyll new-theme command and therefore has all the necessary files and directories to have a new Jekyll site up and running with zero-configuration. Layouts Refers to files within the _layouts directory, that define the markup for your theme. default.html \u2014 The base layout that lays the foundation for subsequent layouts. The derived layouts inject their contents into this file at the line that says {{ content }} and are linked to this file via FrontMatter declaration layout: default . home.html \u2014 The layout for your landing-page / home-page / index-page. [ More Info. ] page.html \u2014 The layout for your documents that contain FrontMatter, but are not posts. post.html \u2014 The layout for your posts. Includes Refers to snippets of code within the _includes directory that can be inserted in multiple layouts (and another include-file as well) within the same theme-gem. disqus_comments.html \u2014 Code to markup disqus comment box. footer.html \u2014 Defines the site's footer section. google-analytics.html \u2014 Inserts Google Analytics module (active only in production environment). head.html \u2014 Code-block that defines the <head></head> in default layout. header.html \u2014 Defines the site's main header section. By default, pages with a defined title attribute will have links displayed here. Sass Refers to .scss files within the _sass directory that define the theme's styles. minima.scss \u2014 The core file imported by preprocessed main.scss , it defines the variable defaults for the theme and also further imports sass partials to supplement itself. minima/_base.scss \u2014 Resets and defines base styles for various HTML elements. minima/_layout.scss \u2014 Defines the visual style for various layouts. minima/_syntax-highlighting.scss \u2014 Defines the styles for syntax-highlighting. Assets Refers to various asset files within the assets directory. Contains the main.scss that imports sass files from within the _sass directory. This main.scss is what gets processed into the theme's main stylesheet main.css called by _layouts/default.html via _includes/head.html . This directory can include sub-directories to manage assets of similar type, and will be copied over as is, to the final transformed site directory. Plugins Minima comes with jekyll-seo-tag plugin preinstalled to make sure your website gets the most useful meta tags. See usage to know how to set it up. Usage Home Layout home.html is a flexible HTML layout for the site's landing-page / home-page / index-page. Main Heading and Content-injection From Minima v2.2 onwards, the home layout will inject all content from your index.md / index.html before the Posts heading. This will allow you to include non-posts related content to be published on the landing page under a dedicated heading. We recommended that you title this section with a Heading2 ( ## ) . Usually the site.title itself would suffice as the implicit 'main-title' for a landing-page. But, if your landing-page would like a heading to be explicitly displayed, then simply define a title variable in the document's front matter and it will be rendered with an <h1> tag. Post Listing This section is optional from Minima v2.2 onwards. It will be automatically included only when your site contains one or more valid posts or drafts (if the site is configured to show_drafts ). The title for this section is Posts by default and rendered with an <h2> tag. You can customize this heading by defining a list_title variable in the document's front matter. -- Customization To override the default structure and style of minima, simply create the concerned directory at the root of your site, copy the file you wish to customize to that directory, and then edit the file. e.g., to override the _includes/head.html file to specify a custom style path, create an _includes directory, copy _includes/head.html from minima gem folder to <yoursite>/_includes and start editing that file. The site's default CSS has now moved to a new place within the gem itself, assets/main.scss . To override the default CSS , the file has to exist at your site source. Do either of the following: - Create a new instance of main.scss at site source. - Create a new file main.scss at <your-site>/assets/ - Add the frontmatter dashes, and - Add @import \"minima\"; , to <your-site>/assets/main.scss - Add your custom CSS. - Download the file from this repo - Create a new file main.scss at <your-site>/assets/ - Copy the contents at assets/main.scss onto the main.scss you just created, and edit away! - Copy directly from Minima 2.0 gem - Go to your local minima gem installation directory ( run bundle show minima to get the path to it ). - Copy the assets/ folder from there into the root of <your-site> - Change whatever values you want, inside <your-site>/assets/main.scss -- Customize navigation links This allows you to set which pages you want to appear in the navigation area and configure order of the links. For instance, to only link to the about and the portfolio page, add the following to you _config.yml : header_pages: - about.md - portfolio.md -- Change default date format You can change the default date format by specifying site.minima.date_format in _config.yml . # Minima date format # refer to http://shopify.github.io/liquid/filters/date/ if you want to customize this minima: date_format: \"%b %-d, %Y\" -- Enabling comments (via Disqus) Optionally, if you have a Disqus account, you can tell Jekyll to use it to show a comments section below each post. To enable it, add the following lines to your Jekyll site: disqus: shortname: my_disqus_shortname You can find out more about Disqus' shortnames here . Comments are enabled by default and will only appear in production, i.e., JEKYLL_ENV=production If you don't want to display comments for a particular post you can disable them by adding comments: false to that post's YAML Front Matter. -- Social networks You can add links to the accounts you have on other sites, with respective icon, by adding one or more of the following options in your config: twitter_username: jekyllrb github_username: jekyll dribbble_username: jekyll facebook_username: jekyll flickr_username: jekyll instagram_username: jekyll linkedin_username: jekyll pinterest_username: jekyll youtube_username: jekyll googleplus_username: +jekyll rss: rss mastodon: - username: jekyll instance: example.com - username: jekyll2 instance: example.com -- Enabling Google Analytics To enable Google Analytics, add the following lines to your Jekyll site: google_analytics: UA-NNNNNNNN-N Google Analytics will only appear in production, i.e., JEKYLL_ENV=production -- Enabling Excerpts on the Home Page To display post-excerpts on the Home Page, simply add the following to your _config.yml : show_excerpts: true Contributing Bug reports and pull requests are welcome on GitHub at https://github.com/jekyll/minima. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct. Development To set up your environment to develop this theme, run script/bootstrap . To test your theme, run script/server (or bundle exec jekyll serve ) and open your browser at http://localhost:4000 . This starts a Jekyll server using your theme and the contents. As you make modifications, your site will regenerate and you should see the changes in the browser after a refresh. License The theme is available as open source under the terms of the MIT License .","title":"minima"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#minima","text":"Minima is a one-size-fits-all Jekyll theme for writers . It's Jekyll's default (and first) theme. It's what you get when you run jekyll new . Theme preview","title":"minima"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#installation","text":"Add this line to your Jekyll site's Gemfile: gem \"minima\" And add this line to your Jekyll site: theme: minima And then execute: $ bundle","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#contents-at-a-glance","text":"Minima has been scaffolded by the jekyll new-theme command and therefore has all the necessary files and directories to have a new Jekyll site up and running with zero-configuration.","title":"Contents At-A-Glance"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#layouts","text":"Refers to files within the _layouts directory, that define the markup for your theme. default.html \u2014 The base layout that lays the foundation for subsequent layouts. The derived layouts inject their contents into this file at the line that says {{ content }} and are linked to this file via FrontMatter declaration layout: default . home.html \u2014 The layout for your landing-page / home-page / index-page. [ More Info. ] page.html \u2014 The layout for your documents that contain FrontMatter, but are not posts. post.html \u2014 The layout for your posts.","title":"Layouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#includes","text":"Refers to snippets of code within the _includes directory that can be inserted in multiple layouts (and another include-file as well) within the same theme-gem. disqus_comments.html \u2014 Code to markup disqus comment box. footer.html \u2014 Defines the site's footer section. google-analytics.html \u2014 Inserts Google Analytics module (active only in production environment). head.html \u2014 Code-block that defines the <head></head> in default layout. header.html \u2014 Defines the site's main header section. By default, pages with a defined title attribute will have links displayed here.","title":"Includes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#sass","text":"Refers to .scss files within the _sass directory that define the theme's styles. minima.scss \u2014 The core file imported by preprocessed main.scss , it defines the variable defaults for the theme and also further imports sass partials to supplement itself. minima/_base.scss \u2014 Resets and defines base styles for various HTML elements. minima/_layout.scss \u2014 Defines the visual style for various layouts. minima/_syntax-highlighting.scss \u2014 Defines the styles for syntax-highlighting.","title":"Sass"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#assets","text":"Refers to various asset files within the assets directory. Contains the main.scss that imports sass files from within the _sass directory. This main.scss is what gets processed into the theme's main stylesheet main.css called by _layouts/default.html via _includes/head.html . This directory can include sub-directories to manage assets of similar type, and will be copied over as is, to the final transformed site directory.","title":"Assets"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#plugins","text":"Minima comes with jekyll-seo-tag plugin preinstalled to make sure your website gets the most useful meta tags. See usage to know how to set it up.","title":"Plugins"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#home-layout","text":"home.html is a flexible HTML layout for the site's landing-page / home-page / index-page.","title":"Home Layout"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#main-heading-and-content-injection","text":"From Minima v2.2 onwards, the home layout will inject all content from your index.md / index.html before the Posts heading. This will allow you to include non-posts related content to be published on the landing page under a dedicated heading. We recommended that you title this section with a Heading2 ( ## ) . Usually the site.title itself would suffice as the implicit 'main-title' for a landing-page. But, if your landing-page would like a heading to be explicitly displayed, then simply define a title variable in the document's front matter and it will be rendered with an <h1> tag.","title":"Main Heading and Content-injection"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#post-listing","text":"This section is optional from Minima v2.2 onwards. It will be automatically included only when your site contains one or more valid posts or drafts (if the site is configured to show_drafts ). The title for this section is Posts by default and rendered with an <h2> tag. You can customize this heading by defining a list_title variable in the document's front matter. --","title":"Post Listing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#customization","text":"To override the default structure and style of minima, simply create the concerned directory at the root of your site, copy the file you wish to customize to that directory, and then edit the file. e.g., to override the _includes/head.html file to specify a custom style path, create an _includes directory, copy _includes/head.html from minima gem folder to <yoursite>/_includes and start editing that file. The site's default CSS has now moved to a new place within the gem itself, assets/main.scss . To override the default CSS , the file has to exist at your site source. Do either of the following: - Create a new instance of main.scss at site source. - Create a new file main.scss at <your-site>/assets/ - Add the frontmatter dashes, and - Add @import \"minima\"; , to <your-site>/assets/main.scss - Add your custom CSS. - Download the file from this repo - Create a new file main.scss at <your-site>/assets/ - Copy the contents at assets/main.scss onto the main.scss you just created, and edit away! - Copy directly from Minima 2.0 gem - Go to your local minima gem installation directory ( run bundle show minima to get the path to it ). - Copy the assets/ folder from there into the root of <your-site> - Change whatever values you want, inside <your-site>/assets/main.scss --","title":"Customization"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#customize-navigation-links","text":"This allows you to set which pages you want to appear in the navigation area and configure order of the links. For instance, to only link to the about and the portfolio page, add the following to you _config.yml : header_pages: - about.md - portfolio.md --","title":"Customize navigation links"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#change-default-date-format","text":"You can change the default date format by specifying site.minima.date_format in _config.yml . # Minima date format # refer to http://shopify.github.io/liquid/filters/date/ if you want to customize this minima: date_format: \"%b %-d, %Y\" --","title":"Change default date format"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#enabling-comments-via-disqus","text":"Optionally, if you have a Disqus account, you can tell Jekyll to use it to show a comments section below each post. To enable it, add the following lines to your Jekyll site: disqus: shortname: my_disqus_shortname You can find out more about Disqus' shortnames here . Comments are enabled by default and will only appear in production, i.e., JEKYLL_ENV=production If you don't want to display comments for a particular post you can disable them by adding comments: false to that post's YAML Front Matter. --","title":"Enabling comments (via Disqus)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#social-networks","text":"You can add links to the accounts you have on other sites, with respective icon, by adding one or more of the following options in your config: twitter_username: jekyllrb github_username: jekyll dribbble_username: jekyll facebook_username: jekyll flickr_username: jekyll instagram_username: jekyll linkedin_username: jekyll pinterest_username: jekyll youtube_username: jekyll googleplus_username: +jekyll rss: rss mastodon: - username: jekyll instance: example.com - username: jekyll2 instance: example.com --","title":"Social networks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#enabling-google-analytics","text":"To enable Google Analytics, add the following lines to your Jekyll site: google_analytics: UA-NNNNNNNN-N Google Analytics will only appear in production, i.e., JEKYLL_ENV=production --","title":"Enabling Google Analytics"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#enabling-excerpts-on-the-home-page","text":"To display post-excerpts on the Home Page, simply add the following to your _config.yml : show_excerpts: true","title":"Enabling Excerpts on the Home Page"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#contributing","text":"Bug reports and pull requests are welcome on GitHub at https://github.com/jekyll/minima. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the Contributor Covenant code of conduct.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#development","text":"To set up your environment to develop this theme, run script/bootstrap . To test your theme, run script/server (or bundle exec jekyll serve ) and open your browser at http://localhost:4000 . This starts a Jekyll server using your theme and the contents. As you make modifications, your site will regenerate and you should see the changes in the browser after a refresh.","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/minima-2.5.1/#license","text":"The theme is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/","text":"multipart-post http://github.com/nicksieger/multipart-post DESCRIPTION: Adds a streamy multipart form post capability to Net::HTTP. Also supports other methods besides POST. FEATURES/PROBLEMS: Appears to actually work. A good feature to have. Encapsulates posting of file/binary parts and name/value parameter parts, similar to most browsers' file upload forms. Provides an UploadIO helper class to prepare IO objects for inclusion in the params hash of the multipart post object. SYNOPSIS: require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |jpg| req = Net::HTTP::Post::Multipart.new url.path, \"file\" => UploadIO.new(jpg, \"image/jpeg\", \"image.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end end To post multiple files or attachments, simply include multiple parameters with UploadIO values: require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') req = Net::HTTP::Post::Multipart.new url.path, \"file1\" => UploadIO.new(File.new(\"./image.jpg\"), \"image/jpeg\", \"image.jpg\"), \"file2\" => UploadIO.new(File.new(\"./image2.jpg\"), \"image/jpeg\", \"image2.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end REQUIREMENTS: None INSTALL: gem install multipart-post LICENSE: (The MIT License) Copyright (c) 2007-2013 Nick Sieger nick@nicksieger.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#multipart-post","text":"http://github.com/nicksieger/multipart-post","title":"multipart-post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#description","text":"Adds a streamy multipart form post capability to Net::HTTP. Also supports other methods besides POST.","title":"DESCRIPTION:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#featuresproblems","text":"Appears to actually work. A good feature to have. Encapsulates posting of file/binary parts and name/value parameter parts, similar to most browsers' file upload forms. Provides an UploadIO helper class to prepare IO objects for inclusion in the params hash of the multipart post object.","title":"FEATURES/PROBLEMS:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#synopsis","text":"require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |jpg| req = Net::HTTP::Post::Multipart.new url.path, \"file\" => UploadIO.new(jpg, \"image/jpeg\", \"image.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end end To post multiple files or attachments, simply include multiple parameters with UploadIO values: require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') req = Net::HTTP::Post::Multipart.new url.path, \"file1\" => UploadIO.new(File.new(\"./image.jpg\"), \"image/jpeg\", \"image.jpg\"), \"file2\" => UploadIO.new(File.new(\"./image2.jpg\"), \"image/jpeg\", \"image2.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end","title":"SYNOPSIS:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#requirements","text":"None","title":"REQUIREMENTS:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#install","text":"gem install multipart-post","title":"INSTALL:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.0.0/#license","text":"(The MIT License) Copyright (c) 2007-2013 Nick Sieger nick@nicksieger.com Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/","text":"Multipart::Post Adds a streamy multipart form post capability to Net::HTTP . Also supports other methods besides POST . Features/Problems Appears to actually work. A good feature to have. Encapsulates posting of file/binary parts and name/value parameter parts, similar to most browsers' file upload forms. Provides an UploadIO helper class to prepare IO objects for inclusion in the params hash of the multipart post object. Installation gem install multipart-post or in your Gemfile gem 'multipart-post' Usage require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |jpg| req = Net::HTTP::Post::Multipart.new url.path, \"file\" => UploadIO.new(jpg, \"image/jpeg\", \"image.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end end To post multiple files or attachments, simply include multiple parameters with UploadIO values: require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') req = Net::HTTP::Post::Multipart.new url.path, \"file1\" => UploadIO.new(File.new(\"./image.jpg\"), \"image/jpeg\", \"image.jpg\"), \"file2\" => UploadIO.new(File.new(\"./image2.jpg\"), \"image/jpeg\", \"image2.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end To post files with other normal, non-file params such as input values, you need to pass hashes to the Multipart.new method. In Rails 4 for example: def model_params require_params = params.require(:model).permit(:param_one, :param_two, :param_three, :avatar) require_params[:avatar] = model_params[:avatar].present? ? UploadIO.new(model_params[:avatar].tempfile, model_params[:avatar].content_type, model_params[:avatar].original_filename) : nil require_params end require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') Net::HTTP.start(url.host, url.port) do |http| req = Net::HTTP::Post::Multipart.new(url, model_params) key = \"authorization_key\" req.add_field(\"Authorization\", key) #add to Headers http.use_ssl = (url.scheme == \"https\") http.request(req) end Or in plain ruby: def params(file) params = { \"description\" => \"A nice picture!\" } params[:datei] = UploadIO.new(file, \"image/jpeg\", \"image.jpg\") params end url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |file| req = Net::HTTP::Post::Multipart.new(url.path, params(file)) res = Net::HTTP.start(url.host, url.port) do |http| return http.request(req).body end end Debugging You can debug requests and responses (e.g. status codes) for all requests by adding the following code: http = Net::HTTP.new(uri.host, uri.port) http.set_debug_output($stdout) License Released under the MIT license. Copyright (c) 2007-2013 Nick Sieger nick@nicksieger.com Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Multipart::Post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#multipartpost","text":"Adds a streamy multipart form post capability to Net::HTTP . Also supports other methods besides POST .","title":"Multipart::Post"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#featuresproblems","text":"Appears to actually work. A good feature to have. Encapsulates posting of file/binary parts and name/value parameter parts, similar to most browsers' file upload forms. Provides an UploadIO helper class to prepare IO objects for inclusion in the params hash of the multipart post object.","title":"Features/Problems"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#installation","text":"gem install multipart-post or in your Gemfile gem 'multipart-post'","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#usage","text":"require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |jpg| req = Net::HTTP::Post::Multipart.new url.path, \"file\" => UploadIO.new(jpg, \"image/jpeg\", \"image.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end end To post multiple files or attachments, simply include multiple parameters with UploadIO values: require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') req = Net::HTTP::Post::Multipart.new url.path, \"file1\" => UploadIO.new(File.new(\"./image.jpg\"), \"image/jpeg\", \"image.jpg\"), \"file2\" => UploadIO.new(File.new(\"./image2.jpg\"), \"image/jpeg\", \"image2.jpg\") res = Net::HTTP.start(url.host, url.port) do |http| http.request(req) end To post files with other normal, non-file params such as input values, you need to pass hashes to the Multipart.new method. In Rails 4 for example: def model_params require_params = params.require(:model).permit(:param_one, :param_two, :param_three, :avatar) require_params[:avatar] = model_params[:avatar].present? ? UploadIO.new(model_params[:avatar].tempfile, model_params[:avatar].content_type, model_params[:avatar].original_filename) : nil require_params end require 'net/http/post/multipart' url = URI.parse('http://www.example.com/upload') Net::HTTP.start(url.host, url.port) do |http| req = Net::HTTP::Post::Multipart.new(url, model_params) key = \"authorization_key\" req.add_field(\"Authorization\", key) #add to Headers http.use_ssl = (url.scheme == \"https\") http.request(req) end Or in plain ruby: def params(file) params = { \"description\" => \"A nice picture!\" } params[:datei] = UploadIO.new(file, \"image/jpeg\", \"image.jpg\") params end url = URI.parse('http://www.example.com/upload') File.open(\"./image.jpg\") do |file| req = Net::HTTP::Post::Multipart.new(url.path, params(file)) res = Net::HTTP.start(url.host, url.port) do |http| return http.request(req).body end end","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#debugging","text":"You can debug requests and responses (e.g. status codes) for all requests by adding the following code: http = Net::HTTP.new(uri.host, uri.port) http.set_debug_output($stdout)","title":"Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/multipart-post-2.1.1/#license","text":"Released under the MIT license. Copyright (c) 2007-2013 Nick Sieger nick@nicksieger.com Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/","text":"Net::DNS Net::DNS is a DNS library written in pure Ruby. It started as a port of Perl Net::DNS module, but it evolved in time into a full Ruby library. Features Complete OO interface Clean and intuitive API Modular and flexible Requirements Ruby >= 1.8.7 Installation The best way to install this library is via RubyGems . $ gem install net-dns You might need administrator privileges on your system to install the gem. API Documentation Visit the page http://rdoc.info/gems/net-dns Trivial resolver The simplest way to use the library is to invoke the Resolver() method: require 'rubygems' require 'net/dns' p Resolver(\"www.google.com\") The output is compatible with BIND zone files and it's the same you would get with the dig utility. ;; Answer received from localhost:53 (212 bytes) ;; ;; HEADER SECTION ;; id = 64075 ;; qr = 1 opCode: QUERY aa = 0 tc = 0 rd = 1 ;; ra = 1 ad = 0 cd = 0 rcode = NoError ;; qdCount = 1 anCount = 3 nsCount = 4 arCount = 4 ;; QUESTION SECTION (1 record): ;; google.com. IN A ;; ANSWER SECTION (3 records): google.com. 212 IN A 74.125.45.100 google.com. 212 IN A 74.125.67.100 google.com. 212 IN A 209.85.171.100 ;; AUTHORITY SECTION (4 records): google.com. 345512 IN NS ns1.google.com. google.com. 345512 IN NS ns4.google.com. google.com. 345512 IN NS ns2.google.com. google.com. 345512 IN NS ns3.google.com. ;; ADDITIONAL SECTION (4 records): ns1.google.com. 170275 IN A 216.239.32.10 ns2.google.com. 170275 IN A 216.239.34.10 ns3.google.com. 170275 IN A 216.239.36.10 ns4.google.com. 170275 IN A 216.239.38.10 An optional block can be passed yielding the Net::DNS::Packet object Resolver(\"www.google.com\") { |packet| puts packet.size + \" bytes\" } # => 484 bytes Same for Net::DNS::Resolver.start(): Net::DNS::Resolver.start(\"google.com\").answer.size # => 5 As optional parameters, +TYPE+ and +CLASS+ can be specified. p Net::DNS::Resolver.start(\"google.com\", Net::DNS::MX) ;; Answer received from localhost:53 (316 bytes) ;; ;; HEADER SECTION ;; id = 59980 ;; qr = 1 opCode: QUERY aa = 0 tc = 0 rd = 1 ;; ra = 1 ad = 0 cd = 0 rcode = NoError ;; qdCount = 1 anCount = 4 nsCount = 4 arCount = 8 ;; QUESTION SECTION (1 record): ;; google.com. IN MX ;; ANSWER SECTION (4 records): google.com. 10800 IN MX 10 smtp2.google.com. google.com. 10800 IN MX 10 smtp3.google.com. google.com. 10800 IN MX 10 smtp4.google.com. google.com. 10800 IN MX 10 smtp1.google.com. Handling the response packet The method Net::DNS::Resolver.start is a wrapper around Resolver.new. It returns a new Net::DNS::Packet object. A DNS packet is divided into 5 sections: header section # => a Net::DNS::Header object question section # => a Net::DNS::Question object answer section # => an Array of Net::DNS::RR objects authority section # => an Array of Net::DNS::RR objects additional section # => an Array of Net::DNS::RR objects You can access each section by calling the attribute with the same name on a Packet object: packet = Net::DNS::Resolver.start(\"google.com\") header = packet.header answer = packet.answer puts \"The packet is #{packet.data.size} bytes\" puts \"It contains #{header.anCount} answer entries\" answer.any? {|ans| p ans} The output is The packet is 378 bytes It contains 3 answer entries google.com. 244 IN A 74.125.45.100 google.com. 244 IN A 74.125.67.100 google.com. 244 IN A 209.85.171.100 A better way to handle the answer section is to use the iterators directly on a Packet object: packet.each_address do |ip| puts \"#{ip} is alive\" if Ping.pingecho(ip.to_s, 10, 80) end Gives: 74.125.45.100 is alive 74.125.67.100 is alive 209.85.171.100 is alive License Net::DNS is distributed under the same license Ruby is. Authors Marco Ceresa (@bluemonk) Simone Carletti (@weppos)","title":"Net::DNS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#netdns","text":"Net::DNS is a DNS library written in pure Ruby. It started as a port of Perl Net::DNS module, but it evolved in time into a full Ruby library.","title":"Net::DNS"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#features","text":"Complete OO interface Clean and intuitive API Modular and flexible","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#requirements","text":"Ruby >= 1.8.7","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#installation","text":"The best way to install this library is via RubyGems . $ gem install net-dns You might need administrator privileges on your system to install the gem.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#api-documentation","text":"Visit the page http://rdoc.info/gems/net-dns","title":"API Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#trivial-resolver","text":"The simplest way to use the library is to invoke the Resolver() method: require 'rubygems' require 'net/dns' p Resolver(\"www.google.com\") The output is compatible with BIND zone files and it's the same you would get with the dig utility. ;; Answer received from localhost:53 (212 bytes) ;; ;; HEADER SECTION ;; id = 64075 ;; qr = 1 opCode: QUERY aa = 0 tc = 0 rd = 1 ;; ra = 1 ad = 0 cd = 0 rcode = NoError ;; qdCount = 1 anCount = 3 nsCount = 4 arCount = 4 ;; QUESTION SECTION (1 record): ;; google.com. IN A ;; ANSWER SECTION (3 records): google.com. 212 IN A 74.125.45.100 google.com. 212 IN A 74.125.67.100 google.com. 212 IN A 209.85.171.100 ;; AUTHORITY SECTION (4 records): google.com. 345512 IN NS ns1.google.com. google.com. 345512 IN NS ns4.google.com. google.com. 345512 IN NS ns2.google.com. google.com. 345512 IN NS ns3.google.com. ;; ADDITIONAL SECTION (4 records): ns1.google.com. 170275 IN A 216.239.32.10 ns2.google.com. 170275 IN A 216.239.34.10 ns3.google.com. 170275 IN A 216.239.36.10 ns4.google.com. 170275 IN A 216.239.38.10 An optional block can be passed yielding the Net::DNS::Packet object Resolver(\"www.google.com\") { |packet| puts packet.size + \" bytes\" } # => 484 bytes Same for Net::DNS::Resolver.start(): Net::DNS::Resolver.start(\"google.com\").answer.size # => 5 As optional parameters, +TYPE+ and +CLASS+ can be specified. p Net::DNS::Resolver.start(\"google.com\", Net::DNS::MX) ;; Answer received from localhost:53 (316 bytes) ;; ;; HEADER SECTION ;; id = 59980 ;; qr = 1 opCode: QUERY aa = 0 tc = 0 rd = 1 ;; ra = 1 ad = 0 cd = 0 rcode = NoError ;; qdCount = 1 anCount = 4 nsCount = 4 arCount = 8 ;; QUESTION SECTION (1 record): ;; google.com. IN MX ;; ANSWER SECTION (4 records): google.com. 10800 IN MX 10 smtp2.google.com. google.com. 10800 IN MX 10 smtp3.google.com. google.com. 10800 IN MX 10 smtp4.google.com. google.com. 10800 IN MX 10 smtp1.google.com.","title":"Trivial resolver"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#handling-the-response-packet","text":"The method Net::DNS::Resolver.start is a wrapper around Resolver.new. It returns a new Net::DNS::Packet object. A DNS packet is divided into 5 sections: header section # => a Net::DNS::Header object question section # => a Net::DNS::Question object answer section # => an Array of Net::DNS::RR objects authority section # => an Array of Net::DNS::RR objects additional section # => an Array of Net::DNS::RR objects You can access each section by calling the attribute with the same name on a Packet object: packet = Net::DNS::Resolver.start(\"google.com\") header = packet.header answer = packet.answer puts \"The packet is #{packet.data.size} bytes\" puts \"It contains #{header.anCount} answer entries\" answer.any? {|ans| p ans} The output is The packet is 378 bytes It contains 3 answer entries google.com. 244 IN A 74.125.45.100 google.com. 244 IN A 74.125.67.100 google.com. 244 IN A 209.85.171.100 A better way to handle the answer section is to use the iterators directly on a Packet object: packet.each_address do |ip| puts \"#{ip} is alive\" if Ping.pingecho(ip.to_s, 10, 80) end Gives: 74.125.45.100 is alive 74.125.67.100 is alive 209.85.171.100 is alive","title":"Handling the response packet"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#license","text":"Net::DNS is distributed under the same license Ruby is.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/#authors","text":"Marco Ceresa (@bluemonk) Simone Carletti (@weppos)","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/","text":"Changelog master FIXED: undefined local variable or method `source_address_inet6' (GH-40). [Thanks @simsicon] FIXED: Fixed bug on parsing multiple nameservers on different lines (GH-45). [Thanks @nicholasren] CHANGED: Dropped duplicate query ID filter. Query ID is now randomically generated but it's not guaranteed to be unique (GH-39). [Thanks @ebroder] CHANGED: require 'net/dns' is now the preferred way to load the library (GH-37). [Thanks @johnroa] CHANGED: Removed setup.rb installation script. Release 0.7.1 FIXED: Invalid file permissions on several files (GH-35) [Thanks @jamespharaoh] Release 0.7.0 ADDED: Added (experimental) Support for HINFO record. FIXED: Use Net::DNS::Resolver::Error class (not ResolverError, which does not exist). FIXED: Cleaned up require dependency and recursive require statements. FIXED: Use RbConfig instead of obsolete and deprecated Config (GH-28, GH-33) [Thanks @shadowbq, @eik3] FIXED: SRV record not required by Net::DNS::RR (GH-27) [Thanks @sebastian] FIXED: Resolver now supports IPv6 (GH-32) [Thanks @jamesotron] FIXED: Net::DNS::RR::PTR references an invalid parameter (GH-19) [Thanks @dd23] FIXED: Net::DNS::Question changes input arguments (GH-7) [Thanks @gfarfl] CHANGED: Refactoring unit test to follow most used Ruby conventions. CHANGED: Rewritten and simplified Net::DNS::Classes. Improved test harness. CHANGED: Removed Jeweler development dependency. CHANGED: The library is now compatible with Bundler. CHANGED: Minimum supported Ruby version changed to Ruby 1.8.7. CHANGED: Rescue NameError so unsupported record types only result in a warning. CHANGED: Renamed Net::DNS::Resolver#send to Net::DNS::Resolver#query to avoid overriding default meaning of send method. Release 0.6.1 ADDED: Net::DNS::Packet#to_s method (alias of #inspect) FIXED: typo in lib/net/dns/rr/ptr.rb [Thanks Chris Lundquist] FIXED: warning: method redefined; discarding old inspect (GH-3) [Thanks Kevin Baker] FIXED: issue with rescue ArgumentError (GH-5) and with IPAddr handling (GH-6) Release 0.6.0 *WARNING:- If you are upgrading from a previous minor release, check out the Compatibility issue list below. FIXED: Added missing #to_s method to Net::DNS::Question. FIXED: Compatibility with Ruby 1.9 FIXED: Types regexp order issue CHANGED: Refactoring unit test to follow most used Ruby conventions CHANGED: default timeout is now 5 seconds for both UDP and TCP CHANGED: Moved main dns.rb file to lib/net folder as default for GEMs. In this way it can be autoloaded when the gem is required. Compatibility issues CHANGED: RR#set_stype scope is now private to prevent invalid usage. CHANGED: DnsTimeout#timeout now raises LocalJumpError instead of DnsTimeoutArgumentError when block is missing. CHANGED: Renamed Net::DNS::RR::Types::Types to Net::DNS::RR::Types::TYPES to follow Ruby coding standards. Release 0.4 many bug fixes (thanks guys!) a whole new class Net::DNS::Header::RCode new methods in Net::DNS::Resolver class to do AXFR queries a new SRV resource record written by Dan Janowski more documentation written and corrected","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#master","text":"FIXED: undefined local variable or method `source_address_inet6' (GH-40). [Thanks @simsicon] FIXED: Fixed bug on parsing multiple nameservers on different lines (GH-45). [Thanks @nicholasren] CHANGED: Dropped duplicate query ID filter. Query ID is now randomically generated but it's not guaranteed to be unique (GH-39). [Thanks @ebroder] CHANGED: require 'net/dns' is now the preferred way to load the library (GH-37). [Thanks @johnroa] CHANGED: Removed setup.rb installation script.","title":"master"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#release-071","text":"FIXED: Invalid file permissions on several files (GH-35) [Thanks @jamespharaoh]","title":"Release 0.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#release-070","text":"ADDED: Added (experimental) Support for HINFO record. FIXED: Use Net::DNS::Resolver::Error class (not ResolverError, which does not exist). FIXED: Cleaned up require dependency and recursive require statements. FIXED: Use RbConfig instead of obsolete and deprecated Config (GH-28, GH-33) [Thanks @shadowbq, @eik3] FIXED: SRV record not required by Net::DNS::RR (GH-27) [Thanks @sebastian] FIXED: Resolver now supports IPv6 (GH-32) [Thanks @jamesotron] FIXED: Net::DNS::RR::PTR references an invalid parameter (GH-19) [Thanks @dd23] FIXED: Net::DNS::Question changes input arguments (GH-7) [Thanks @gfarfl] CHANGED: Refactoring unit test to follow most used Ruby conventions. CHANGED: Rewritten and simplified Net::DNS::Classes. Improved test harness. CHANGED: Removed Jeweler development dependency. CHANGED: The library is now compatible with Bundler. CHANGED: Minimum supported Ruby version changed to Ruby 1.8.7. CHANGED: Rescue NameError so unsupported record types only result in a warning. CHANGED: Renamed Net::DNS::Resolver#send to Net::DNS::Resolver#query to avoid overriding default meaning of send method.","title":"Release 0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#release-061","text":"ADDED: Net::DNS::Packet#to_s method (alias of #inspect) FIXED: typo in lib/net/dns/rr/ptr.rb [Thanks Chris Lundquist] FIXED: warning: method redefined; discarding old inspect (GH-3) [Thanks Kevin Baker] FIXED: issue with rescue ArgumentError (GH-5) and with IPAddr handling (GH-6)","title":"Release 0.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#release-060","text":"*WARNING:- If you are upgrading from a previous minor release, check out the Compatibility issue list below. FIXED: Added missing #to_s method to Net::DNS::Question. FIXED: Compatibility with Ruby 1.9 FIXED: Types regexp order issue CHANGED: Refactoring unit test to follow most used Ruby conventions CHANGED: default timeout is now 5 seconds for both UDP and TCP CHANGED: Moved main dns.rb file to lib/net folder as default for GEMs. In this way it can be autoloaded when the gem is required.","title":"Release 0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#compatibility-issues","text":"CHANGED: RR#set_stype scope is now private to prevent invalid usage. CHANGED: DnsTimeout#timeout now raises LocalJumpError instead of DnsTimeoutArgumentError when block is missing. CHANGED: Renamed Net::DNS::RR::Types::Types to Net::DNS::RR::Types::TYPES to follow Ruby coding standards.","title":"Compatibility issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/net-dns-0.8.0/CHANGELOG/#release-04","text":"many bug fixes (thanks guys!) a whole new class Net::DNS::Header::RCode new methods in Net::DNS::Resolver class to do AXFR queries a new SRV resource record written by Dan Janowski more documentation written and corrected","title":"Release 0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/","text":"Nokogiri Nokogiri (\u92f8) makes it easy and painless to work with XML and HTML from Ruby. It provides a sensible, easy-to-understand API for reading , writing, modifying , and querying documents. It is fast and standards-compliant by relying on native parsers like libxml2 (CRuby) and xerces (JRuby). Guiding Principles Some guiding principles Nokogiri tries to follow: be secure-by-default by treating all documents as untrusted by default be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers Features Overview DOM Parser for XML, HTML4, and HTML5 SAX Parser for XML and HTML4 Push Parser for XML and HTML4 Document search via XPath 1.0 Document search via CSS3 selectors, with some jquery-like extensions XSD Schema validation XSLT transformation \"Builder\" DSL for XML and HTML documents Status Support, Getting Help, and Reporting Issues All official documentation is posted at https://nokogiri.org (the source for which is at https://github.com/sparklemotion/nokogiri.org/, and we welcome contributions). Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often. Reading Your first stops for learning more about Nokogiri should be: API Documentation Tutorials An excellent community-maintained Cheat Sheet Ask For Help There are a few ways to ask exploratory questions: The Ruby Discord chat server is active at https://discord.gg/UyQnKrT The Nokogiri mailing list is active at https://groups.google.com/group/nokogiri-talk Open an issue using the \"Help Request\" template at https://github.com/sparklemotion/nokogiri/issues Please do not mail the maintainers at their personal addresses. Report A Bug The Nokogiri bug tracker is at https://github.com/sparklemotion/nokogiri/issues Please use the \"Bug Report\" or \"Installation Difficulties\" templates. Security and Vulnerability Reporting Please report vulnerabilities at https://hackerone.com/nokogiri Full information and description of our security policy is in SECURITY.md Semantic Versioning Policy Nokogiri follows Semantic Versioning (since 2017 or so). We bump Major.Minor.Patch versions following this guidance: Major : (we've never done this) Significant backwards-incompatible changes to the public API that would require rewriting existing application code. Some examples of backwards-incompatible changes we might someday consider for a Major release are at ROADMAP.md . Minor : Features and bugfixes. Updating packaged libraries for non-security-related reasons. Dropping support for EOLed Ruby versions. Some folks find this objectionable , but SemVer says this is OK if the public API hasn't changed . Backwards-incompatible changes to internal or private methods and constants. These are detailed in the \"Changes\" section of each changelog entry. Patch : Bugfixes. Security updates. Updating packaged libraries for security-related reasons. Installation Requirements: Ruby >= 2.6 JRuby >= 9.3.0.0 Native Gems: Faster, more reliable installation \"Native gems\" contain pre-compiled libraries for a specific machine architecture. On supported platforms, this removes the need for compiling the C extension and the packaged libraries, or for system dependencies to exist. This results in much faster installation and more reliable installation , which as you probably know are the biggest headaches for Nokogiri users. Supported Platforms Nokogiri ships pre-compiled, \"native\" gems for the following platforms: Linux: x86-linux and x86_64-linux (req: glibc >= 2.17 ), including musl platforms like Alpine Darwin/MacOS: x86_64-darwin and arm64-darwin Windows: x86-mingw32 and x64-mingw32 Java: any platform running JRuby 9.3 or higher To determine whether your system supports one of these gems, look at the output of bundle platform or ruby -e 'puts Gem::Platform.local.to_s' . If you're on a supported platform, either gem install or bundle install should install a native gem without any additional action on your part. This installation should only take a few seconds, and your output should look something like: $ gem install nokogiri Fetching nokogiri-1.11.0-x86_64-linux.gem Successfully installed nokogiri-1.11.0-x86_64-linux 1 gem installed Other Installation Options Because Nokogiri is a C extension, it requires that you have a C compiler toolchain, Ruby development header files, and some system dependencies installed. The following may work for you if you have an appropriately-configured system: gem install nokogiri If you have any issues, please visit Installing Nokogiri for more complete instructions and troubleshooting. How To Use Nokogiri Nokogiri is a large library, and so it's challenging to briefly summarize it. We've tried to provide long, real-world examples at Tutorials . Parsing and Querying Here is example usage for parsing and querying a document: #! /usr/bin/env ruby require 'nokogiri' require 'open-uri' # Fetch and parse HTML document doc = Nokogiri::HTML(URI.open('https://nokogiri.org/tutorials/installing_nokogiri.html')) # Search for nodes by css doc.css('nav ul.menu li a', 'article h2').each do |link| puts link.content end # Search for nodes by xpath doc.xpath('//nav//ul//li/a', '//article//h2').each do |link| puts link.content end # Or mix and match doc.search('nav ul.menu li a', '//article//h2').each do |link| puts link.content end Encoding Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri.XML('<foo><bar /></foo>', nil, 'EUC-JP') Technical Overview Guiding Principles As noted above, two guiding principles of the software are: be secure-by-default by treating all documents as untrusted by default be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers Notably, despite all parsers being standards-compliant, there are behavioral inconsistencies between the parsers used in the CRuby and JRuby implementations, and Nokogiri does not and should not attempt to remove these inconsistencies. Instead, we surface these differences in the test suite when they are important/semantic; or we intentionally write tests to depend only on the important/semantic bits (omitting whitespace from regex matchers on results, for example). CRuby The Ruby (a.k.a., CRuby, MRI, YARV) implementation is a C extension that depends on libxml2 and libxslt (which in turn depend on zlib and possibly libiconv). These dependencies are met by default by Nokogiri's packaged versions of the libxml2 and libxslt source code, but a configuration option --use-system-libraries is provided to allow specification of alternative library locations. See Installing Nokogiri for full documentation. We provide native gems by pre-compiling libxml2 and libxslt (and potentially zlib and libiconv) and packaging them into the gem file. In this case, no compilation is necessary at installation time, which leads to faster and more reliable installation. See LICENSE-DEPENDENCIES.md for more information on which dependencies are provided in which native and source gems. JRuby The Java (a.k.a. JRuby) implementation is a Java extension that depends primarily on Xerces and NekoHTML for parsing, though additional dependencies are on isorelax , nekodtd , jing , serializer , xalan-j , and xml-apis . These dependencies are provided by pre-compiled jar files packaged in the java platform gem. See LICENSE-DEPENDENCIES.md for more information on which dependencies are provided in which native and source gems. Contributing See CONTRIBUTING.md for an intro guide to developing Nokogiri. Code of Conduct We've adopted the Contributor Covenant code of conduct, which you can read in full in CODE_OF_CONDUCT.md . License This project is licensed under the terms of the MIT license. See this license at LICENSE.md . Dependencies Some additional libraries may be distributed with your version of Nokogiri. Please see LICENSE-DEPENDENCIES.md for a discussion of the variations as well as the licenses thereof. Authors Mike Dalessio Aaron Patterson Yoko Harada Akinori MUSHA John Shahid Karol Bucek Sam Ruby Craig Barnes Stephen Checkoway Lars Kanis Sergio Arbeo Timothy Elliott Nobuyoshi Nakada","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#nokogiri","text":"Nokogiri (\u92f8) makes it easy and painless to work with XML and HTML from Ruby. It provides a sensible, easy-to-understand API for reading , writing, modifying , and querying documents. It is fast and standards-compliant by relying on native parsers like libxml2 (CRuby) and xerces (JRuby).","title":"Nokogiri"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#guiding-principles","text":"Some guiding principles Nokogiri tries to follow: be secure-by-default by treating all documents as untrusted by default be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers","title":"Guiding Principles"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#features-overview","text":"DOM Parser for XML, HTML4, and HTML5 SAX Parser for XML and HTML4 Push Parser for XML and HTML4 Document search via XPath 1.0 Document search via CSS3 selectors, with some jquery-like extensions XSD Schema validation XSLT transformation \"Builder\" DSL for XML and HTML documents","title":"Features Overview"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#status","text":"","title":"Status"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#support-getting-help-and-reporting-issues","text":"All official documentation is posted at https://nokogiri.org (the source for which is at https://github.com/sparklemotion/nokogiri.org/, and we welcome contributions). Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often.","title":"Support, Getting Help, and Reporting Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#reading","text":"Your first stops for learning more about Nokogiri should be: API Documentation Tutorials An excellent community-maintained Cheat Sheet","title":"Reading"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#ask-for-help","text":"There are a few ways to ask exploratory questions: The Ruby Discord chat server is active at https://discord.gg/UyQnKrT The Nokogiri mailing list is active at https://groups.google.com/group/nokogiri-talk Open an issue using the \"Help Request\" template at https://github.com/sparklemotion/nokogiri/issues Please do not mail the maintainers at their personal addresses.","title":"Ask For Help"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#report-a-bug","text":"The Nokogiri bug tracker is at https://github.com/sparklemotion/nokogiri/issues Please use the \"Bug Report\" or \"Installation Difficulties\" templates.","title":"Report A Bug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#security-and-vulnerability-reporting","text":"Please report vulnerabilities at https://hackerone.com/nokogiri Full information and description of our security policy is in SECURITY.md","title":"Security and Vulnerability Reporting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#semantic-versioning-policy","text":"Nokogiri follows Semantic Versioning (since 2017 or so). We bump Major.Minor.Patch versions following this guidance: Major : (we've never done this) Significant backwards-incompatible changes to the public API that would require rewriting existing application code. Some examples of backwards-incompatible changes we might someday consider for a Major release are at ROADMAP.md . Minor : Features and bugfixes. Updating packaged libraries for non-security-related reasons. Dropping support for EOLed Ruby versions. Some folks find this objectionable , but SemVer says this is OK if the public API hasn't changed . Backwards-incompatible changes to internal or private methods and constants. These are detailed in the \"Changes\" section of each changelog entry. Patch : Bugfixes. Security updates. Updating packaged libraries for security-related reasons.","title":"Semantic Versioning Policy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#installation","text":"Requirements: Ruby >= 2.6 JRuby >= 9.3.0.0","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#native-gems-faster-more-reliable-installation","text":"\"Native gems\" contain pre-compiled libraries for a specific machine architecture. On supported platforms, this removes the need for compiling the C extension and the packaged libraries, or for system dependencies to exist. This results in much faster installation and more reliable installation , which as you probably know are the biggest headaches for Nokogiri users.","title":"Native Gems: Faster, more reliable installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#supported-platforms","text":"Nokogiri ships pre-compiled, \"native\" gems for the following platforms: Linux: x86-linux and x86_64-linux (req: glibc >= 2.17 ), including musl platforms like Alpine Darwin/MacOS: x86_64-darwin and arm64-darwin Windows: x86-mingw32 and x64-mingw32 Java: any platform running JRuby 9.3 or higher To determine whether your system supports one of these gems, look at the output of bundle platform or ruby -e 'puts Gem::Platform.local.to_s' . If you're on a supported platform, either gem install or bundle install should install a native gem without any additional action on your part. This installation should only take a few seconds, and your output should look something like: $ gem install nokogiri Fetching nokogiri-1.11.0-x86_64-linux.gem Successfully installed nokogiri-1.11.0-x86_64-linux 1 gem installed","title":"Supported Platforms"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#other-installation-options","text":"Because Nokogiri is a C extension, it requires that you have a C compiler toolchain, Ruby development header files, and some system dependencies installed. The following may work for you if you have an appropriately-configured system: gem install nokogiri If you have any issues, please visit Installing Nokogiri for more complete instructions and troubleshooting.","title":"Other Installation Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#how-to-use-nokogiri","text":"Nokogiri is a large library, and so it's challenging to briefly summarize it. We've tried to provide long, real-world examples at Tutorials .","title":"How To Use Nokogiri"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#parsing-and-querying","text":"Here is example usage for parsing and querying a document: #! /usr/bin/env ruby require 'nokogiri' require 'open-uri' # Fetch and parse HTML document doc = Nokogiri::HTML(URI.open('https://nokogiri.org/tutorials/installing_nokogiri.html')) # Search for nodes by css doc.css('nav ul.menu li a', 'article h2').each do |link| puts link.content end # Search for nodes by xpath doc.xpath('//nav//ul//li/a', '//article//h2').each do |link| puts link.content end # Or mix and match doc.search('nav ul.menu li a', '//article//h2').each do |link| puts link.content end","title":"Parsing and Querying"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#encoding","text":"Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri.XML('<foo><bar /></foo>', nil, 'EUC-JP')","title":"Encoding"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#technical-overview","text":"","title":"Technical Overview"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#guiding-principles_1","text":"As noted above, two guiding principles of the software are: be secure-by-default by treating all documents as untrusted by default be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers Notably, despite all parsers being standards-compliant, there are behavioral inconsistencies between the parsers used in the CRuby and JRuby implementations, and Nokogiri does not and should not attempt to remove these inconsistencies. Instead, we surface these differences in the test suite when they are important/semantic; or we intentionally write tests to depend only on the important/semantic bits (omitting whitespace from regex matchers on results, for example).","title":"Guiding Principles"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#cruby","text":"The Ruby (a.k.a., CRuby, MRI, YARV) implementation is a C extension that depends on libxml2 and libxslt (which in turn depend on zlib and possibly libiconv). These dependencies are met by default by Nokogiri's packaged versions of the libxml2 and libxslt source code, but a configuration option --use-system-libraries is provided to allow specification of alternative library locations. See Installing Nokogiri for full documentation. We provide native gems by pre-compiling libxml2 and libxslt (and potentially zlib and libiconv) and packaging them into the gem file. In this case, no compilation is necessary at installation time, which leads to faster and more reliable installation. See LICENSE-DEPENDENCIES.md for more information on which dependencies are provided in which native and source gems.","title":"CRuby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#jruby","text":"The Java (a.k.a. JRuby) implementation is a Java extension that depends primarily on Xerces and NekoHTML for parsing, though additional dependencies are on isorelax , nekodtd , jing , serializer , xalan-j , and xml-apis . These dependencies are provided by pre-compiled jar files packaged in the java platform gem. See LICENSE-DEPENDENCIES.md for more information on which dependencies are provided in which native and source gems.","title":"JRuby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#contributing","text":"See CONTRIBUTING.md for an intro guide to developing Nokogiri.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#code-of-conduct","text":"We've adopted the Contributor Covenant code of conduct, which you can read in full in CODE_OF_CONDUCT.md .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#license","text":"This project is licensed under the terms of the MIT license. See this license at LICENSE.md .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#dependencies","text":"Some additional libraries may be distributed with your version of Nokogiri. Please see LICENSE-DEPENDENCIES.md for a discussion of the variations as well as the licenses thereof.","title":"Dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/#authors","text":"Mike Dalessio Aaron Patterson Yoko Harada Akinori MUSHA John Shahid Karol Bucek Sam Ruby Craig Barnes Stephen Checkoway Lars Kanis Sergio Arbeo Timothy Elliott Nobuyoshi Nakada","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/","text":"Vendored Dependency Licenses Nokogiri ships with some third party dependencies, which are listed here along with their licenses. Note that this document is broken into multiple sections, each of which describes the dependencies of a different \"platform release\" of Nokogiri. Platform Releases Default platform release (\"ruby\") Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\") Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\") Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\") Java\u24c7 (JRuby) platform release (\"java\") Appendix: Dependencies' License Texts libgumbo and nokogumbo libxml2 libxslt zlib libiconv isorelax jing nekodtd nekohtml xalan xerces xml-apis Anyone consuming this file via license-tracking software should endeavor to understand which gem file you're downloading and using, so as not to misinterpret the contents of this file and the licenses of the software being distributed. You can double-check the dependencies in your gem file by examining the output of nokogiri -v after installation, which will emit the complete set of libraries in use (for versions >= 1.11.0.rc4 ). In particular, I'm sure somebody's lawyer, somewhere, is going to freak out that the LGPL appears in this file; and so I'd like to take special note that the dependency covered by LGPL, libiconv , is only being redistributed in the native Windows and native Darwin platform releases. It's not present in default, Java\u24c7, or native Linux\u24c7 releases. Platform Releases Default platform release (\"ruby\") The default platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"ruby\" for its \"platform\" attribute. Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\") The native Linux\u24c7 platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-linux\" or \"x86-linux\" for its \"platform.cpu\" attribute. Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\") The native Darwin platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib libiconv This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-darwin\" or \"arm64-darwin\" for its \"platform.cpu\" attribute. Darwin is also known more familiarly as \"OSX\" or \"macOS\u24c7\" and is the operating system for many Apple\u24c7 computers. Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\") The native Windows\u24c7 platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib libiconv This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x64-mingw32\" or \"x86-mingw32\" for its \"platform.cpu\" attribute. Java\u24c7 (JRuby) platform release (\"java\") The Java platform release distributes the following dependencies as compiled jar files: isorelax jing nekodtd nekohtml xalan xerces xml-apis This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"java\" for its \"platform.os\" attribute. Appendix: Dependencies' License Texts This section contains a subsection for each potentially-distributed dependency, which includes the name of the license and the license text. Please see previous sections to understand which of these potential dependencies is actually distributed in the gem file you're downloading and using. libgumbo and nokogumbo Apache 2.0 https://github.com/rubys/nokogumbo/blob/f6a7412/LICENSE.txt Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. libxml2 MIT http://xmlsoft.org/ Except where otherwise noted in the source code (e.g. the files hash.c, list.c and the trio files, which are covered by a similar licence but with different Copyright notices) all the files are: Copyright (C) 1998-2012 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. libxslt MIT http://xmlsoft.org/libxslt/ Licence for libxslt except libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE DANIEL VEILLARD BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of Daniel Veillard shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- Licence for libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Thomas Broyer, Charlie Bozeman and Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the authors shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- zlib zlib license http://www.zlib.net/zlib_license.html Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required. 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software. 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler jloup@gzip.org madler@alumni.caltech.edu libiconv LGPL https://www.gnu.org/software/libiconv/ GNU LIBRARY GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the library GPL. It is numbered 2 because it goes with version 2 of the ordinary GPL.] Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Library General Public License, applies to some specially designated Free Software Foundation software, and to any other libraries whose authors decide to use it. You can use it for your libraries, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library, or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link a program with the library, you must provide complete object files to the recipients so that they can relink them with the library, after making changes to the library and recompiling it. And you must show them these terms so they know their rights. Our method of protecting your rights has two steps: (1) copyright the library, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the library. Also, for each distributor's protection, we want to make certain that everyone understands that there is no warranty for this free library. If the library is modified by someone else and passed on, we want its recipients to know that what they have is not the original version, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that companies distributing free software will individually obtain patent licenses, thus in effect transforming the program into proprietary software. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License, which was designed for utility programs. This license, the GNU Library General Public License, applies to certain designated libraries. This license is quite different from the ordinary one; be sure to read it in full, and don't assume that anything in it is the same as in the ordinary license. The reason we have a separate public license for some libraries is that they blur the distinction we usually make between modifying or adding to a program and simply using it. Linking a program with a library, without changing the library, is in some sense simply using the library, and is analogous to running a utility program or application program. However, in a textual and legal sense, the linked executable is a combined work, a derivative of the original library, and the ordinary General Public License treats it as such. Because of this blurred distinction, using the ordinary General Public License for libraries did not effectively promote software sharing, because most developers did not use the libraries. We concluded that weaker conditions might promote sharing better. However, unrestricted linking of non-free programs would deprive the users of those programs of all benefit from the free status of the libraries themselves. This Library General Public License is intended to permit developers of non-free programs to use free libraries, while preserving your freedom as a user of such programs to change the free libraries that are incorporated in them. (We have not seen how to achieve this as regards changes in header files, but we have achieved it as regards changes in the actual functions of the Library.) The hope is that this will lead to faster development of free libraries. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a \"work based on the library\" and a \"work that uses the library\". The former contains code derived from the library, while the latter only works together with the library. Note that it is possible for a library to be covered by the ordinary General Public License rather than by this special one. GNU LIBRARY GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License Agreement applies to any software library which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Library General Public License (also called \"this License\"). Each licensee is addressed as \"you\". A \"library\" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The \"Library\", below, refers to any such software library or work which has been distributed under these terms. A \"work based on the Library\" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) \"Source code\" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a \"work that uses the Library\". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a \"work that uses the Library\" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a \"work that uses the library\". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a \"work that uses the Library\" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also compile or link a \"work that uses the Library\" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable \"work that uses the Library\", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. c) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. d) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the \"work that uses the Library\" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Library General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS Appendix: How to Apply These Terms to Your New Libraries If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License). To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the library's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Also add information on how to contact you by electronic and paper mail. You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the library, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker. <signature of Ty Coon>, 1 April 1990 Ty Coon, President of Vice That's all there is to it! isorelax MIT http://iso-relax.sourceforge.net/ Copyright (c) 2001-2002, SourceForge ISO-RELAX Project (ASAMI Tomoharu, Daisuke Okajima, Kohsuke Kawaguchi, and MURATA Makoto) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. jing BSD-3-Clause http://www.thaiopensource.com/relaxng/jing.html Copyright (c) 2001-2003 Thai Open Source Software Center Ltd All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the Thai Open Source Software Center Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. nekodtd Apache 1.0-derived https://people.apache.org/~andyc/neko/doc/dtd/ The CyberNeko Software License, Version 1.0 (C) Copyright 2002-2005, Andy Clark. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. The end-user documentation included with the redistribution, if any, must include the following acknowledgment: \"This product includes software developed by Andy Clark.\" Alternately, this acknowledgment may appear in the software itself, if and wherever such third-party acknowledgments normally appear. 4. The names \"CyberNeko\" and \"NekoHTML\" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact andyc@cyberneko.net. 5. Products derived from this software may not be called \"CyberNeko\", nor may \"CyberNeko\" appear in their name, without prior written permission of the author. THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR OTHER CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ==================================================================== This license is based on the Apache Software License, version 1.1. nekohtml Apache 2.0 http://nekohtml.sourceforge.net/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xalan Apache 2.0 https://xml.apache.org/xalan-j/ covers xalan.jar and serializer.jar Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xerces Apache 2.0 https://xerces.apache.org/xerces2-j/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xml-apis Apache 2.0 https://xerces.apache.org/xml-commons/ Unless otherwise noted all files in XML Commons are covered under the Apache License Version 2.0. Please read the LICENSE and NOTICE files. XML Commons contains some software and documentation that is covered under a number of different licenses. This applies particularly to the xml-commons/java/external/ directory. Most files under xml-commons/java/external/ are covered under their respective LICENSE.*.txt files; see the matching README.*.txt files for descriptions. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"Vendored Dependency Licenses"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#vendored-dependency-licenses","text":"Nokogiri ships with some third party dependencies, which are listed here along with their licenses. Note that this document is broken into multiple sections, each of which describes the dependencies of a different \"platform release\" of Nokogiri. Platform Releases Default platform release (\"ruby\") Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\") Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\") Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\") Java\u24c7 (JRuby) platform release (\"java\") Appendix: Dependencies' License Texts libgumbo and nokogumbo libxml2 libxslt zlib libiconv isorelax jing nekodtd nekohtml xalan xerces xml-apis Anyone consuming this file via license-tracking software should endeavor to understand which gem file you're downloading and using, so as not to misinterpret the contents of this file and the licenses of the software being distributed. You can double-check the dependencies in your gem file by examining the output of nokogiri -v after installation, which will emit the complete set of libraries in use (for versions >= 1.11.0.rc4 ). In particular, I'm sure somebody's lawyer, somewhere, is going to freak out that the LGPL appears in this file; and so I'd like to take special note that the dependency covered by LGPL, libiconv , is only being redistributed in the native Windows and native Darwin platform releases. It's not present in default, Java\u24c7, or native Linux\u24c7 releases.","title":"Vendored Dependency Licenses"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#platform-releases","text":"","title":"Platform Releases"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#default-platform-release-ruby","text":"The default platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"ruby\" for its \"platform\" attribute.","title":"Default platform release (\"ruby\")"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#native-linuxr-platform-releases-x86_64-linux-and-arm64-linux","text":"The native Linux\u24c7 platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-linux\" or \"x86-linux\" for its \"platform.cpu\" attribute.","title":"Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\")"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#native-darwin-macosr-platform-releases-x86_64-darwin-and-arm64-darwin","text":"The native Darwin platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib libiconv This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-darwin\" or \"arm64-darwin\" for its \"platform.cpu\" attribute. Darwin is also known more familiarly as \"OSX\" or \"macOS\u24c7\" and is the operating system for many Apple\u24c7 computers.","title":"Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\")"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#native-windowsr-platform-releases-x86-mingw32-and-x64-mingw32","text":"The native Windows\u24c7 platform release distributes the following dependencies in source form: libxml2 libxslt libgumbo and nokogumbo zlib libiconv This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x64-mingw32\" or \"x86-mingw32\" for its \"platform.cpu\" attribute.","title":"Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\")"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#javar-jruby-platform-release-java","text":"The Java platform release distributes the following dependencies as compiled jar files: isorelax jing nekodtd nekohtml xalan xerces xml-apis This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"java\" for its \"platform.os\" attribute.","title":"Java\u24c7 (JRuby) platform release (\"java\")"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#appendix-dependencies-license-texts","text":"This section contains a subsection for each potentially-distributed dependency, which includes the name of the license and the license text. Please see previous sections to understand which of these potential dependencies is actually distributed in the gem file you're downloading and using.","title":"Appendix: Dependencies' License Texts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#libgumbo-and-nokogumbo","text":"Apache 2.0 https://github.com/rubys/nokogumbo/blob/f6a7412/LICENSE.txt Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"libgumbo and nokogumbo"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#libxml2","text":"MIT http://xmlsoft.org/ Except where otherwise noted in the source code (e.g. the files hash.c, list.c and the trio files, which are covered by a similar licence but with different Copyright notices) all the files are: Copyright (C) 1998-2012 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"libxml2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#libxslt","text":"MIT http://xmlsoft.org/libxslt/ Licence for libxslt except libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE DANIEL VEILLARD BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of Daniel Veillard shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- Licence for libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Thomas Broyer, Charlie Bozeman and Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the authors shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ----------------------------------------------------------------------","title":"libxslt"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#zlib","text":"zlib license http://www.zlib.net/zlib_license.html Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler This software is provided 'as-is', without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required. 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software. 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler jloup@gzip.org madler@alumni.caltech.edu","title":"zlib"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#libiconv","text":"LGPL https://www.gnu.org/software/libiconv/ GNU LIBRARY GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the library GPL. It is numbered 2 because it goes with version 2 of the ordinary GPL.] Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Library General Public License, applies to some specially designated Free Software Foundation software, and to any other libraries whose authors decide to use it. You can use it for your libraries, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library, or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link a program with the library, you must provide complete object files to the recipients so that they can relink them with the library, after making changes to the library and recompiling it. And you must show them these terms so they know their rights. Our method of protecting your rights has two steps: (1) copyright the library, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the library. Also, for each distributor's protection, we want to make certain that everyone understands that there is no warranty for this free library. If the library is modified by someone else and passed on, we want its recipients to know that what they have is not the original version, so that any problems introduced by others will not reflect on the original authors' reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that companies distributing free software will individually obtain patent licenses, thus in effect transforming the program into proprietary software. To prevent this, we have made it clear that any patent must be licensed for everyone's free use or not licensed at all. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License, which was designed for utility programs. This license, the GNU Library General Public License, applies to certain designated libraries. This license is quite different from the ordinary one; be sure to read it in full, and don't assume that anything in it is the same as in the ordinary license. The reason we have a separate public license for some libraries is that they blur the distinction we usually make between modifying or adding to a program and simply using it. Linking a program with a library, without changing the library, is in some sense simply using the library, and is analogous to running a utility program or application program. However, in a textual and legal sense, the linked executable is a combined work, a derivative of the original library, and the ordinary General Public License treats it as such. Because of this blurred distinction, using the ordinary General Public License for libraries did not effectively promote software sharing, because most developers did not use the libraries. We concluded that weaker conditions might promote sharing better. However, unrestricted linking of non-free programs would deprive the users of those programs of all benefit from the free status of the libraries themselves. This Library General Public License is intended to permit developers of non-free programs to use free libraries, while preserving your freedom as a user of such programs to change the free libraries that are incorporated in them. (We have not seen how to achieve this as regards changes in header files, but we have achieved it as regards changes in the actual functions of the Library.) The hope is that this will lead to faster development of free libraries. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a \"work based on the library\" and a \"work that uses the library\". The former contains code derived from the library, while the latter only works together with the library. Note that it is possible for a library to be covered by the ordinary General Public License rather than by this special one. GNU LIBRARY GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License Agreement applies to any software library which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Library General Public License (also called \"this License\"). Each licensee is addressed as \"you\". A \"library\" means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The \"Library\", below, refers to any such software library or work which has been distributed under these terms. A \"work based on the Library\" means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term \"modification\".) \"Source code\" for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library's complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a \"work that uses the Library\". Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a \"work that uses the Library\" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a \"work that uses the library\". The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a \"work that uses the Library\" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also compile or link a \"work that uses the Library\" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable \"work that uses the Library\", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. c) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. d) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the \"work that uses the Library\" must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Library General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and \"any later version\", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS Appendix: How to Apply These Terms to Your New Libraries If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License). To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the library's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Also add information on how to contact you by electronic and paper mail. You should also get your employer (if you work as a programmer) or your school, if any, to sign a \"copyright disclaimer\" for the library, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob' (a library for tweaking knobs) written by James Random Hacker. <signature of Ty Coon>, 1 April 1990 Ty Coon, President of Vice That's all there is to it!","title":"libiconv"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#isorelax","text":"MIT http://iso-relax.sourceforge.net/ Copyright (c) 2001-2002, SourceForge ISO-RELAX Project (ASAMI Tomoharu, Daisuke Okajima, Kohsuke Kawaguchi, and MURATA Makoto) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"isorelax"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#jing","text":"BSD-3-Clause http://www.thaiopensource.com/relaxng/jing.html Copyright (c) 2001-2003 Thai Open Source Software Center Ltd All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the Thai Open Source Software Center Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"jing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#nekodtd","text":"Apache 1.0-derived https://people.apache.org/~andyc/neko/doc/dtd/ The CyberNeko Software License, Version 1.0 (C) Copyright 2002-2005, Andy Clark. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. The end-user documentation included with the redistribution, if any, must include the following acknowledgment: \"This product includes software developed by Andy Clark.\" Alternately, this acknowledgment may appear in the software itself, if and wherever such third-party acknowledgments normally appear. 4. The names \"CyberNeko\" and \"NekoHTML\" must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact andyc@cyberneko.net. 5. Products derived from this software may not be called \"CyberNeko\", nor may \"CyberNeko\" appear in their name, without prior written permission of the author. THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR OTHER CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ==================================================================== This license is based on the Apache Software License, version 1.1.","title":"nekodtd"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#nekohtml","text":"Apache 2.0 http://nekohtml.sourceforge.net/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"nekohtml"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#xalan","text":"Apache 2.0 https://xml.apache.org/xalan-j/ covers xalan.jar and serializer.jar Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xalan"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#xerces","text":"Apache 2.0 https://xerces.apache.org/xerces2-j/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xerces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE-DEPENDENCIES/#xml-apis","text":"Apache 2.0 https://xerces.apache.org/xml-commons/ Unless otherwise noted all files in XML Commons are covered under the Apache License Version 2.0. Please read the LICENSE and NOTICE files. XML Commons contains some software and documentation that is covered under a number of different licenses. This applies particularly to the xml-commons/java/external/ directory. Most files under xml-commons/java/external/ are covered under their respective LICENSE.*.txt files; see the matching README.*.txt files for descriptions. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. \"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. \"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. \"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. \"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License. \"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. \"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). \"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. \"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\" \"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same \"printed page\" as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xml-apis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/LICENSE/","text":"The MIT License Copyright 2008 -- 2021 by Mike Dalessio, Aaron Patterson, Yoko Harada, Akinori MUSHA, John Shahid, Karol Bucek, Sam Ruby, Craig Barnes, Stephen Checkoway, Lars Kanis, Sergio Arbeo, Timothy Elliott, Nobuyoshi Nakada, Charles Nutter, Patrick Mahoney. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/","text":"Gumbo 0.10.1 (2015-04-30) Same as 0.10.0, but with the version number bumped because the last version-number commit to v0.9.4 makes GitHub think that v0.9.4 is the latest version and so it's not highlighted on the webpage. Gumbo 0.10.0 (2015-04-30) Full support for <template> tag (kevinhendricks, nostrademons). Some fixes for <rtc> / <rt> handling (kevinhendricks, vmg). All html5lib-trunk tests pass now! (kevinhendricks, vmg, nostrademons) Support for fragment parsing (vmg) A couple additional example programs (kevinhendricks) Performance improvements totaling an estimated 30-40% total improvement (vmg, nostrademons). Gumbo 0.9.4 (2015-04-30) Additional Visual Studio fixes (lowjoel, nostrademons) Fixed some unused variable warnings. Fix for glibtoolize vs. libtoolize build errors on Mac. Fixed CDATA end tag handling. Gumbo 0.9.3 (2015-02-17) Bugfix for &AElig; entities (rgrove) Fix CDATA handling; CDATA sections now generate a GUMBO_NODE_CDATA node rather than plain text. Fix get_title example to handle whitespace nodes (gsnedders) Visual Studio compilation fixes (fishioon) Take the namespace into account when determining whether a node matches a certain tag (aroben) Replace the varargs tag functions with a tagset bytevector, for a 20-30% speedup in overall parse time (kevinhendricks, vmg) Add MacOS X support to Travis CI, and fix the deployment/DLL issues this uncovered (nostrademons, kevinhendricks, vmg) Gumbo 0.9.2 (2014-09-21) Performance improvements: Ragel-based char ref decoder and DFA-based UTF8 decoder, totaling speedups of up to 300%. Added benchmarking program and some sample data. Fixed a compiler error under Visual Studio. Fix an error in the ctypes bindings that could lead to memory corruption in the Python bindings. Fix duplicate attributes when parsing <isindex> tags. Don't leave semicolons behind when consuming entity references (rgrove) Internally rename some functions in preparation for an amalgamation file (jdeng) Add proper cflags for gyp builds (skabbes) Gumbo 0.9.1 (2014-08-07) First version listed on PyPi. Autotools files excluded from GitHub and generated via autogen.sh. (endgame) Numerous compiler warnings fixed. (bnoordhuis, craigbarnes) Google security audit passed. Gyp support (tfarina) Naming convention for structs changed to avoid C reserved words. Fix several integer and buffer overflows (Maxime2) Some Visual Studio compiler support (bugparty) Python3 compatibility for the ctypes bindings. Gumbo 0.9.0 (2013-08-13) Initial release open-sourced by Google.","title":"CHANGES"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-0101-2015-04-30","text":"Same as 0.10.0, but with the version number bumped because the last version-number commit to v0.9.4 makes GitHub think that v0.9.4 is the latest version and so it's not highlighted on the webpage.","title":"Gumbo 0.10.1 (2015-04-30)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-0100-2015-04-30","text":"Full support for <template> tag (kevinhendricks, nostrademons). Some fixes for <rtc> / <rt> handling (kevinhendricks, vmg). All html5lib-trunk tests pass now! (kevinhendricks, vmg, nostrademons) Support for fragment parsing (vmg) A couple additional example programs (kevinhendricks) Performance improvements totaling an estimated 30-40% total improvement (vmg, nostrademons).","title":"Gumbo 0.10.0 (2015-04-30)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-094-2015-04-30","text":"Additional Visual Studio fixes (lowjoel, nostrademons) Fixed some unused variable warnings. Fix for glibtoolize vs. libtoolize build errors on Mac. Fixed CDATA end tag handling.","title":"Gumbo 0.9.4 (2015-04-30)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-093-2015-02-17","text":"Bugfix for &AElig; entities (rgrove) Fix CDATA handling; CDATA sections now generate a GUMBO_NODE_CDATA node rather than plain text. Fix get_title example to handle whitespace nodes (gsnedders) Visual Studio compilation fixes (fishioon) Take the namespace into account when determining whether a node matches a certain tag (aroben) Replace the varargs tag functions with a tagset bytevector, for a 20-30% speedup in overall parse time (kevinhendricks, vmg) Add MacOS X support to Travis CI, and fix the deployment/DLL issues this uncovered (nostrademons, kevinhendricks, vmg)","title":"Gumbo 0.9.3 (2015-02-17)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-092-2014-09-21","text":"Performance improvements: Ragel-based char ref decoder and DFA-based UTF8 decoder, totaling speedups of up to 300%. Added benchmarking program and some sample data. Fixed a compiler error under Visual Studio. Fix an error in the ctypes bindings that could lead to memory corruption in the Python bindings. Fix duplicate attributes when parsing <isindex> tags. Don't leave semicolons behind when consuming entity references (rgrove) Internally rename some functions in preparation for an amalgamation file (jdeng) Add proper cflags for gyp builds (skabbes)","title":"Gumbo 0.9.2 (2014-09-21)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-091-2014-08-07","text":"First version listed on PyPi. Autotools files excluded from GitHub and generated via autogen.sh. (endgame) Numerous compiler warnings fixed. (bnoordhuis, craigbarnes) Google security audit passed. Gyp support (tfarina) Naming convention for structs changed to avoid C reserved words. Fix several integer and buffer overflows (Maxime2) Some Visual Studio compiler support (bugparty) Python3 compatibility for the ctypes bindings.","title":"Gumbo 0.9.1 (2014-08-07)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/CHANGES/#gumbo-090-2013-08-13","text":"Initial release open-sourced by Google.","title":"Gumbo 0.9.0 (2013-08-13)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/src/","text":"libgumbo This is an internal fork of the libgumbo library, which was copied and later modified under the terms of the Apache 2.0 license . See lua-gumbo commit [ 0a04728 ] for details of the original import. Since importing the code, the following notable fixes and improvements have been made: 91cef89 : Re-implement adjust_foreign_attributes() with a gperf hash b11abe7 : Pass TagSet arrays into functions by reference instead of value b73dc03 : Simplify maybe_replace_codepoint() function d5d0bb3 : Remove special handling of <menuitem> tag 7bd5162 : Remove special handling of <isindex> tag a5c1b0e : Use realloc(3) instead of malloc(3) in enlarge_vector_if_full() dcbebd7 : Use realloc(3) instead of malloc(3) in maybe_resize_string_buffer() df15262 : Make destroy_node() function non-recursive 2df37f5 : Fix signedness of some format specifiers 176553e : Add maximum element nesting limit bed0f4a : Annotate gumbo_debug() with PRINTF macro and fix warnings 7ffc218 : Annotate print_message() with PRINTF macro and fix warnings 1bd8ab5 , 9136507 , 53a1f9a : Deduplicate some identical TagSet arrays a7a9065 : Add some GCC/Clang function attributes 8d3d4e4 : Remove custom allocator support 8d3b006 : Fix recording of source positions for </form> end tags 1a8d763 : Replace linear search in maybe_replace_codepoint() with a lookup table 6dca79e : Replace strcasecmp() and strncasecmp() with ascii-only equivalents 17ab1d2 : Fix TAGSET_INCLUDES macro to work properly with multiple bit flags 7e56d45 : Re-implement gumbo_normalize_svg_tagname() with a gperf hash a518d35 : Replace linear array search in adjust_svg_attributes() with a gperf hash a4a7433 : Fix duplicate TagSet initializer being ignored in is_special_node() 8137fcd : Add support for <dialog> tag 4b35471 : Add missing static qualifiers to hide symbols that shouldn't be extern df57c59 , 03101f3 , ea62330 : Replace use of locale-dependant ctype.h functions with custom, ASCII-only equivalents","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.13.6/gumbo-parser/src/#libgumbo","text":"This is an internal fork of the libgumbo library, which was copied and later modified under the terms of the Apache 2.0 license . See lua-gumbo commit [ 0a04728 ] for details of the original import. Since importing the code, the following notable fixes and improvements have been made: 91cef89 : Re-implement adjust_foreign_attributes() with a gperf hash b11abe7 : Pass TagSet arrays into functions by reference instead of value b73dc03 : Simplify maybe_replace_codepoint() function d5d0bb3 : Remove special handling of <menuitem> tag 7bd5162 : Remove special handling of <isindex> tag a5c1b0e : Use realloc(3) instead of malloc(3) in enlarge_vector_if_full() dcbebd7 : Use realloc(3) instead of malloc(3) in maybe_resize_string_buffer() df15262 : Make destroy_node() function non-recursive 2df37f5 : Fix signedness of some format specifiers 176553e : Add maximum element nesting limit bed0f4a : Annotate gumbo_debug() with PRINTF macro and fix warnings 7ffc218 : Annotate print_message() with PRINTF macro and fix warnings 1bd8ab5 , 9136507 , 53a1f9a : Deduplicate some identical TagSet arrays a7a9065 : Add some GCC/Clang function attributes 8d3d4e4 : Remove custom allocator support 8d3b006 : Fix recording of source positions for </form> end tags 1a8d763 : Replace linear search in maybe_replace_codepoint() with a lookup table 6dca79e : Replace strcasecmp() and strncasecmp() with ascii-only equivalents 17ab1d2 : Fix TAGSET_INCLUDES macro to work properly with multiple bit flags 7e56d45 : Re-implement gumbo_normalize_svg_tagname() with a gperf hash a518d35 : Replace linear array search in adjust_svg_attributes() with a gperf hash a4a7433 : Fix duplicate TagSet initializer being ignored in is_special_node() 8137fcd : Add support for <dialog> tag 4b35471 : Add missing static qualifiers to hide symbols that shouldn't be extern df57c59 , 03101f3 , ea62330 : Replace use of locale-dependant ctype.h functions with custom, ASCII-only equivalents","title":"libgumbo"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/","text":"Nokogiri http://nokogiri.org Installation: http://nokogiri.org/tutorials/installing_nokogiri.html Tutorials: http://nokogiri.org README: https://github.com/sparklemotion/nokogiri Mailing List: https://groups.google.com/group/nokogiri-talk Bug Reports: https://github.com/sparklemotion/nokogiri/issues Status Description Nokogiri (\u92f8) is an HTML, XML, SAX, and Reader parser. Among Nokogiri's many features is the ability to search documents via XPath or CSS3 selectors. Features XML/HTML DOM parser which handles broken HTML XML/HTML SAX parser XML/HTML Push parser XPath 1.0 support for document searching CSS3 selector support for document searching XML/HTML builder XSLT transformer Nokogiri parses and searches XML/HTML using native libraries (either C or Java, depending on your Ruby), which means it's fast and standards-compliant. Installation If this doesn't work: gem install nokogiri then please start troubleshooting here: http://www.nokogiri.org/tutorials/installing_nokogiri.html There are currently 1,237 Stack Overflow questions about Nokogiri installation. The vast majority of them are out of date and therefore incorrect. Please do not use Stack Overflow. Instead, tell us when the above instructions don't work for you. This allows us to both help you directly and improve the documentation. Binary packages Binary packages are available for some distributions. Debian: https://packages.debian.org/sid/ruby-nokogiri SuSE: https://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/ Fedora: http://s390.koji.fedoraproject.org/koji/packageinfo?packageID=6756 Support There are open-source tutorials (to which we invite contributions!) here: http://nokogiri.org/tutorials The Nokogiri mailing list is active: https://groups.google.com/group/nokogiri-talk The Nokogiri bug tracker is here: https://github.com/sparklemotion/nokogiri/issues Before filing a bug report, please read our submission guidelines: http://nokogiri.org/tutorials/getting_help.html The IRC channel is #nokogiri on freenode. Synopsis Nokogiri is a large library, but here is example usage for parsing and examining a document: #! /usr/bin/env ruby require 'nokogiri' require 'open-uri' # Fetch and parse HTML document doc = Nokogiri::HTML(open('http://www.nokogiri.org/tutorials/installing_nokogiri.html')) puts \"### Search for nodes by css\" doc.css('nav ul.menu li a', 'article h2').each do |link| puts link.content end puts \"### Search for nodes by xpath\" doc.xpath('//nav//ul//li/a', '//article//h2').each do |link| puts link.content end puts \"### Or mix and match.\" doc.search('nav ul.menu li a', '//article//h2').each do |link| puts link.content end Requirements Ruby 1.9.3 or higher, including any development packages necessary to compile native extensions. In Nokogiri 1.6.0 and later libxml2 and libxslt are bundled with the gem, but if you want to use the system versions: at install time, set the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES or else use the --use-system-libraries argument. (See http://nokogiri.org/tutorials/installing_nokogiri.html#using_your_system_libraries for specifics.) libxml2 >=2.6.21 with iconv support (libxml2-dev/-devel is also required) libxslt, built with and supported by the given libxml2 (libxslt-dev/-devel is also required) Encoding Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri.XML('<foo><bar /><foo>', nil, 'EUC-JP') Development bundle install bundle exec rake License MIT. See the LICENSE.txt file.","title":"Nokogiri"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#nokogiri","text":"http://nokogiri.org Installation: http://nokogiri.org/tutorials/installing_nokogiri.html Tutorials: http://nokogiri.org README: https://github.com/sparklemotion/nokogiri Mailing List: https://groups.google.com/group/nokogiri-talk Bug Reports: https://github.com/sparklemotion/nokogiri/issues","title":"Nokogiri"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#status","text":"","title":"Status"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#description","text":"Nokogiri (\u92f8) is an HTML, XML, SAX, and Reader parser. Among Nokogiri's many features is the ability to search documents via XPath or CSS3 selectors.","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#features","text":"XML/HTML DOM parser which handles broken HTML XML/HTML SAX parser XML/HTML Push parser XPath 1.0 support for document searching CSS3 selector support for document searching XML/HTML builder XSLT transformer Nokogiri parses and searches XML/HTML using native libraries (either C or Java, depending on your Ruby), which means it's fast and standards-compliant.","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#installation","text":"If this doesn't work: gem install nokogiri then please start troubleshooting here: http://www.nokogiri.org/tutorials/installing_nokogiri.html There are currently 1,237 Stack Overflow questions about Nokogiri installation. The vast majority of them are out of date and therefore incorrect. Please do not use Stack Overflow. Instead, tell us when the above instructions don't work for you. This allows us to both help you directly and improve the documentation.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#binary-packages","text":"Binary packages are available for some distributions. Debian: https://packages.debian.org/sid/ruby-nokogiri SuSE: https://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/ Fedora: http://s390.koji.fedoraproject.org/koji/packageinfo?packageID=6756","title":"Binary packages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#support","text":"There are open-source tutorials (to which we invite contributions!) here: http://nokogiri.org/tutorials The Nokogiri mailing list is active: https://groups.google.com/group/nokogiri-talk The Nokogiri bug tracker is here: https://github.com/sparklemotion/nokogiri/issues Before filing a bug report, please read our submission guidelines: http://nokogiri.org/tutorials/getting_help.html The IRC channel is #nokogiri on freenode.","title":"Support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#synopsis","text":"Nokogiri is a large library, but here is example usage for parsing and examining a document: #! /usr/bin/env ruby require 'nokogiri' require 'open-uri' # Fetch and parse HTML document doc = Nokogiri::HTML(open('http://www.nokogiri.org/tutorials/installing_nokogiri.html')) puts \"### Search for nodes by css\" doc.css('nav ul.menu li a', 'article h2').each do |link| puts link.content end puts \"### Search for nodes by xpath\" doc.xpath('//nav//ul//li/a', '//article//h2').each do |link| puts link.content end puts \"### Or mix and match.\" doc.search('nav ul.menu li a', '//article//h2').each do |link| puts link.content end","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#requirements","text":"Ruby 1.9.3 or higher, including any development packages necessary to compile native extensions. In Nokogiri 1.6.0 and later libxml2 and libxslt are bundled with the gem, but if you want to use the system versions: at install time, set the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES or else use the --use-system-libraries argument. (See http://nokogiri.org/tutorials/installing_nokogiri.html#using_your_system_libraries for specifics.) libxml2 >=2.6.21 with iconv support (libxml2-dev/-devel is also required) libxslt, built with and supported by the given libxml2 (libxslt-dev/-devel is also required)","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#encoding","text":"Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri.XML('<foo><bar /><foo>', nil, 'EUC-JP')","title":"Encoding"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#development","text":"bundle install bundle exec rake","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/#license","text":"MIT. See the LICENSE.txt file.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/CONTRIBUTING/","text":"Issue and Pull Request Guidelines Thank you for getting involved in making Nokogiri better! Code of Conduct For best results, be nice. Remember that Nokogiri maintainers are volunteers, and treat them with respect. Do not act entitled to service. Do not be rude. Do not use judgmental or foul language. The maintainers reserve the right to delete comments that are rude, or that contain foul language. The maintainers reserve the right to delete comments that they deem harassing or offensive. Issues Please read the \"Getting Help\" tutorial at the nokogiri.org site. If you're reporting an issue, it must contain: Example code that reproduces the observed behavior. An explanation of what the expected behavior is. That's it. If you don't provide that information, we'll ask you for it, tag the story \"needs more information\", and then after a time will close it if the information isn't provided. Pull Requests Pull requests must always contain a test to prevent regressions. Preferably, the test should demonstrate the intent of the code. We may ask you for clarification if we don't understand the intent of the change.","title":"Issue and Pull Request Guidelines"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/CONTRIBUTING/#issue-and-pull-request-guidelines","text":"Thank you for getting involved in making Nokogiri better!","title":"Issue and Pull Request Guidelines"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/CONTRIBUTING/#code-of-conduct","text":"For best results, be nice. Remember that Nokogiri maintainers are volunteers, and treat them with respect. Do not act entitled to service. Do not be rude. Do not use judgmental or foul language. The maintainers reserve the right to delete comments that are rude, or that contain foul language. The maintainers reserve the right to delete comments that they deem harassing or offensive.","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/CONTRIBUTING/#issues","text":"Please read the \"Getting Help\" tutorial at the nokogiri.org site. If you're reporting an issue, it must contain: Example code that reproduces the observed behavior. An explanation of what the expected behavior is. That's it. If you don't provide that information, we'll ask you for it, tag the story \"needs more information\", and then after a time will close it if the information isn't provided.","title":"Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/CONTRIBUTING/#pull-requests","text":"Pull requests must always contain a test to prevent regressions. Preferably, the test should demonstrate the intent of the code. We may ask you for clarification if we don't understand the intent of the change.","title":"Pull Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/","text":"Roadmap for API Changes overhaul serialize/pretty printing API https://github.com/sparklemotion/nokogiri/issues/530 XHTML formatting can't be turned off https://github.com/sparklemotion/nokogiri/issues/415 XML formatting should be no formatting overhaul and optimize the SAX parsing see fairy wing throwdown - SAX parsing is wicked slow. Node should not be Enumerable; and should have a better attributes API https://github.com/sparklemotion/nokogiri/issues/679 Mixing in Enumerable has some unintended consequences; plus we want to improve the attributes API Some ideas for a better attributes API? (closed) https://github.com/sparklemotion/nokogiri/issues/666 https://github.com/sparklemotion/nokogiri/issues/765 improve CSS query parsing https://github.com/sparklemotion/nokogiri/issues/528 support :not() with a nontrivial argument, like :not(div p.c) https://github.com/sparklemotion/nokogiri/issues/451 chained :not pseudoselectors better jQuery selector and CSS pseudo-selector support: https://github.com/sparklemotion/nokogiri/issues/621 https://github.com/sparklemotion/nokogiri/issues/342 https://github.com/sparklemotion/nokogiri/issues/628 https://github.com/sparklemotion/nokogiri/issues/652 https://github.com/sparklemotion/nokogiri/issues/688 https://github.com/sparklemotion/nokogiri/issues/394 nth-of-type is wrong, and possibly other selectors as well https://github.com/sparklemotion/nokogiri/issues/309 incorrect query being executed https://github.com/sparklemotion/nokogiri/issues/350 :has is wrong? DocumentFragment there are a few tickets about searches not working properly if you use or do not use the context node as part of the search. https://github.com/sparklemotion/nokogiri/issues/213 https://github.com/sparklemotion/nokogiri/issues/370 https://github.com/sparklemotion/nokogiri/issues/454 https://github.com/sparklemotion/nokogiri/issues/572 could we fix this by making DocumentFragment be a subclass of NodeSet? Better Syntax for custom XPath function handler https://github.com/sparklemotion/nokogiri/pull/464 Better Syntax around Node#xpath and NodeSet#xpath look at those methods, and use of Node#extract_params in Node#{css,search} we should standardize on a hash of options for these and other calls what should NodeSet#xpath return? https://github.com/sparklemotion/nokogiri/issues/656 Encoding We have a lot of issues open around encoding. How bad are things? Somebody who knows encoding well should head this up. Extract EncodingReader as a real object that can be injected https://groups.google.com/forum/#!msg/nokogiri-talk/arJeAtMqvkg/tGihB-iBRSAJ Reader It's fundamentally broken, in that we can't stop people from crashing their application if they want to use object reference unsafely. Class methods that require Document There are a few methods, like Nokogiri::XML::Comment.new that require a Document object. We should probably make Document instance methods to wrap this, since it's a non-obvious expectation and thus fails as a convention. So, instead, let's make alternative methods like Nokogiri::XML::Document#new_comment , and recommend those as the proper convention. collect_namespaces is just broken collect_namespaces is returning a hash, which means it can't return namespaces with the same prefix. See this issue for background: https://github.com/sparklemotion/nokogiri/issues/885 Do we care? This seems like a useless method, but then again I hate XML, so what do I know?","title":"Roadmap for API Changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#roadmap-for-api-changes","text":"","title":"Roadmap for API Changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#overhaul-serializepretty-printing-api","text":"https://github.com/sparklemotion/nokogiri/issues/530 XHTML formatting can't be turned off https://github.com/sparklemotion/nokogiri/issues/415 XML formatting should be no formatting","title":"overhaul serialize/pretty printing API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#overhaul-and-optimize-the-sax-parsing","text":"see fairy wing throwdown - SAX parsing is wicked slow.","title":"overhaul and optimize the SAX parsing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#node-should-not-be-enumerable-and-should-have-a-better-attributes-api","text":"https://github.com/sparklemotion/nokogiri/issues/679 Mixing in Enumerable has some unintended consequences; plus we want to improve the attributes API Some ideas for a better attributes API? (closed) https://github.com/sparklemotion/nokogiri/issues/666 https://github.com/sparklemotion/nokogiri/issues/765","title":"Node should not be Enumerable; and should have a better attributes API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#improve-css-query-parsing","text":"https://github.com/sparklemotion/nokogiri/issues/528 support :not() with a nontrivial argument, like :not(div p.c) https://github.com/sparklemotion/nokogiri/issues/451 chained :not pseudoselectors better jQuery selector and CSS pseudo-selector support: https://github.com/sparklemotion/nokogiri/issues/621 https://github.com/sparklemotion/nokogiri/issues/342 https://github.com/sparklemotion/nokogiri/issues/628 https://github.com/sparklemotion/nokogiri/issues/652 https://github.com/sparklemotion/nokogiri/issues/688 https://github.com/sparklemotion/nokogiri/issues/394 nth-of-type is wrong, and possibly other selectors as well https://github.com/sparklemotion/nokogiri/issues/309 incorrect query being executed https://github.com/sparklemotion/nokogiri/issues/350 :has is wrong?","title":"improve CSS query parsing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#documentfragment","text":"there are a few tickets about searches not working properly if you use or do not use the context node as part of the search. https://github.com/sparklemotion/nokogiri/issues/213 https://github.com/sparklemotion/nokogiri/issues/370 https://github.com/sparklemotion/nokogiri/issues/454 https://github.com/sparklemotion/nokogiri/issues/572 could we fix this by making DocumentFragment be a subclass of NodeSet?","title":"DocumentFragment"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#better-syntax-for-custom-xpath-function-handler","text":"https://github.com/sparklemotion/nokogiri/pull/464","title":"Better Syntax for custom XPath function handler"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#better-syntax-around-nodexpath-and-nodesetxpath","text":"look at those methods, and use of Node#extract_params in Node#{css,search} we should standardize on a hash of options for these and other calls what should NodeSet#xpath return? https://github.com/sparklemotion/nokogiri/issues/656","title":"Better Syntax around Node#xpath and NodeSet#xpath"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#encoding","text":"We have a lot of issues open around encoding. How bad are things? Somebody who knows encoding well should head this up. Extract EncodingReader as a real object that can be injected https://groups.google.com/forum/#!msg/nokogiri-talk/arJeAtMqvkg/tGihB-iBRSAJ","title":"Encoding"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#reader","text":"It's fundamentally broken, in that we can't stop people from crashing their application if they want to use object reference unsafely.","title":"Reader"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#class-methods-that-require-document","text":"There are a few methods, like Nokogiri::XML::Comment.new that require a Document object. We should probably make Document instance methods to wrap this, since it's a non-obvious expectation and thus fails as a convention. So, instead, let's make alternative methods like Nokogiri::XML::Document#new_comment , and recommend those as the proper convention.","title":"Class methods that require Document"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/ROADMAP/#collect_namespaces-is-just-broken","text":"collect_namespaces is returning a hash, which means it can't return namespaces with the same prefix. See this issue for background: https://github.com/sparklemotion/nokogiri/issues/885 Do we care? This seems like a useless method, but then again I hate XML, so what do I know?","title":"collect_namespaces is just broken"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/STANDARD_RESPONSES/","text":"Standard Responses to Requests These responses are needed often enough that I figured, let's just check them in for future reference and use. Not enough information to help Hello! Thanks for asking this question! However, without more information, Team Nokogiri cannot reproduce your issue, and so we cannot offer much help. Please provide us with: A self-contained script (one that we can run without modification, and preferably without making external network connections). Please note that you need to include the XML/HTML that you are operating on. The output of nokogiri -v , which will provide details about your platform and versions of ruby, libxml2 and nokogiri. For more information about requesting help or reporting bugs, please take a look at http://bit.ly/nokohelp Thank you so much! Not a bug Hello! Thanks for asking this question! Your request for assistance using Nokogiri will not go unanswered! However, Nokogiri's Github Issues is reserved for reporting bugs or submitting patches. If you ask your question on the mailing list, Team Nokogiri promises someone will provide you with an answer in a timely manner. If you'd like to read up on Team Nokogiri's rationale for this policy, please go to http://bit.ly/nokohelp. Thank you so much for understanding! And thank you for using Nokogiri.","title":"Standard Responses to Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/STANDARD_RESPONSES/#standard-responses-to-requests","text":"These responses are needed often enough that I figured, let's just check them in for future reference and use.","title":"Standard Responses to Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/STANDARD_RESPONSES/#not-enough-information-to-help","text":"Hello! Thanks for asking this question! However, without more information, Team Nokogiri cannot reproduce your issue, and so we cannot offer much help. Please provide us with: A self-contained script (one that we can run without modification, and preferably without making external network connections). Please note that you need to include the XML/HTML that you are operating on. The output of nokogiri -v , which will provide details about your platform and versions of ruby, libxml2 and nokogiri. For more information about requesting help or reporting bugs, please take a look at http://bit.ly/nokohelp Thank you so much!","title":"Not enough information to help"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/STANDARD_RESPONSES/#not-a-bug","text":"Hello! Thanks for asking this question! Your request for assistance using Nokogiri will not go unanswered! However, Nokogiri's Github Issues is reserved for reporting bugs or submitting patches. If you ask your question on the mailing list, Team Nokogiri promises someone will provide you with an answer in a timely manner. If you'd like to read up on Team Nokogiri's rationale for this policy, please go to http://bit.ly/nokohelp. Thank you so much for understanding! And thank you for using Nokogiri.","title":"Not a bug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/","text":"(note: this was originally a blog post published at http://blog.flavorjon.es/2012/03/y-u-no-gemspec.html) tl;dr Team Nokogiri are not 10-foot-tall code-crunching robots, so master is usually unstable. Unstable code can corrupt your data and crash your application, which would make everybody look bad. Therefore, the risk associated with using unstable code is severe; for you and for Team Nokogiri. The absence of a gemspec is a risk mitigation tactic. You can always ask for an RC release. Why Isn't There a Gemspec!? OHAI! Thank you for asking this question! Team Nokogiri gets asked this pretty frequently. Just a sample from the historical record: Issue #274 Issue #371 A commit removing nokogiri.gemspec A nokogiri-talk thread Another nokogiri-talk thread Sometimes people imply that we've forgotten, or that we don't how to properly manage our codebase. Those people are super fun to respond to! We've gone back and forth a couple of times over the past few years, but the current policy of Team Nokogiri is to not provide a gemspec in the Github repo. This is a conscious choice, not an oversight. But You Didn't Answer the Question! Ah, I was hoping you wouldn't notice. Well, OK, let's do this, if you're serious about it. I'd like to start by talking about risk . Specifically, the risk associated with using a known-unstable version of Nokogiri. Risk One common way to evaluate the risk of an incident is: risk = probability x impact You can read more about this on the internets . The risk associated with a Nokogiri bug could be loosely defined by answering the questions: \"How likely is it that a bug exists?\" (probability) \"How severe will the consequences of a bug be?\" (impact) Probability The master branch should be considered unstable. Team Nokogiri are not 10-foot-tall code-crunching robots; we are humans. We make mistakes, and as a result, any arbitrary commit on master is likely to contain bugs. Just as an example, Nokogiri master was unstable for about five months between November 2011 and March 2012. It was unstable not because we were sloppy, or didn't care, but because the fixes were hard and unobvious. When we release Nokogiri, we test for memory leaks and invalid memory access on all kinds of platforms with many flavors of Ruby and lots of versions of libxml2. Because these tests are time-consuming, we don't run them on every commit. We run them often when preparing a release. If we're releasing Nokogiri, it means we think it's rock solid. And if we're not releasing it, it means there are probably bugs. Impact Nokogiri is a gem with native extensions. This means it's not pure Ruby -- there's C or Java code being compiled and run, which means that there's always a chance that the gem will crash your application, or worse. Possible outcomes include: leaking memory corrupting data making benign code crash (due to memory corruption) So, then, a bug in a native extension can have much worse downside than you might think. It's not just going to do something unexpected; it's possibly going to do terrible, awful things to your application and data. Nobody wants that to happen. Especially Team Nokogiri. Risk, Redux So, if you accept the equation risk = probability x impact and you believe me when I say that: the probablility of a bug in unreleased code is high, and the impact of a bug is likely to be severe, then you should easily see that the risk associated with a bug in Nokogiri is quite high. Part of Team Nokogiri's job is to try to mitigate this risk. We have a number of tactics that we use to accomplish this: we respond quickly to bug reports, particularly when they are possible memory issues we review each others' commits we have a thorough test suite, and we test-drive new features we discuss code design and issues on a core developer mailing list we use valgrind to test for memory issues (leaks and invalid access) on multiple combinations of OS, libxml2 and Ruby we package release candidates, and encourage devs to use them we do NOT commit a gemspec in our git repository Yes, that's right, the absence of a gemspec is a risk mitigation tactic. Not only does Team Nokogiri not want to imply support for master , we want to actively discourage people from using it. Because it's not stable. But I Want to Do It Anyway Another option, is to email the nokogiri-talk list and ask for a release candidate to be built. We're pretty accommodating if there's a bugfix that's a blocker for you. And if we can't release an RC, we'll tell you why. And in the end, nothing is stopping you from cloning the repo and generating a private gemspec. This is an extra step or two, but it has the benefit of making sure developers have thought through the costs and risks involved; and it tends to select for developers who know what they're doing. In Conclusion Team Nokogiri takes stability very seriously. We want everybody who uses Nokogiri to have a pleasant experience. And so we want to make sure that you're using the best software we can make. Please keep in mind that we're trying very hard to do the right thing for all Nokogiri users out there in Rubyland. Nokogiri loves you very much, and we hope you love it back.","title":"Y U NO GEMSPEC"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#tldr","text":"Team Nokogiri are not 10-foot-tall code-crunching robots, so master is usually unstable. Unstable code can corrupt your data and crash your application, which would make everybody look bad. Therefore, the risk associated with using unstable code is severe; for you and for Team Nokogiri. The absence of a gemspec is a risk mitigation tactic. You can always ask for an RC release.","title":"tl;dr"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#why-isnt-there-a-gemspec","text":"OHAI! Thank you for asking this question! Team Nokogiri gets asked this pretty frequently. Just a sample from the historical record: Issue #274 Issue #371 A commit removing nokogiri.gemspec A nokogiri-talk thread Another nokogiri-talk thread Sometimes people imply that we've forgotten, or that we don't how to properly manage our codebase. Those people are super fun to respond to! We've gone back and forth a couple of times over the past few years, but the current policy of Team Nokogiri is to not provide a gemspec in the Github repo. This is a conscious choice, not an oversight.","title":"Why Isn't There a Gemspec!?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#but-you-didnt-answer-the-question","text":"Ah, I was hoping you wouldn't notice. Well, OK, let's do this, if you're serious about it. I'd like to start by talking about risk . Specifically, the risk associated with using a known-unstable version of Nokogiri.","title":"But You Didn't Answer the Question!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#risk","text":"One common way to evaluate the risk of an incident is: risk = probability x impact You can read more about this on the internets . The risk associated with a Nokogiri bug could be loosely defined by answering the questions: \"How likely is it that a bug exists?\" (probability) \"How severe will the consequences of a bug be?\" (impact)","title":"Risk"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#probability","text":"The master branch should be considered unstable. Team Nokogiri are not 10-foot-tall code-crunching robots; we are humans. We make mistakes, and as a result, any arbitrary commit on master is likely to contain bugs. Just as an example, Nokogiri master was unstable for about five months between November 2011 and March 2012. It was unstable not because we were sloppy, or didn't care, but because the fixes were hard and unobvious. When we release Nokogiri, we test for memory leaks and invalid memory access on all kinds of platforms with many flavors of Ruby and lots of versions of libxml2. Because these tests are time-consuming, we don't run them on every commit. We run them often when preparing a release. If we're releasing Nokogiri, it means we think it's rock solid. And if we're not releasing it, it means there are probably bugs.","title":"Probability"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#impact","text":"Nokogiri is a gem with native extensions. This means it's not pure Ruby -- there's C or Java code being compiled and run, which means that there's always a chance that the gem will crash your application, or worse. Possible outcomes include: leaking memory corrupting data making benign code crash (due to memory corruption) So, then, a bug in a native extension can have much worse downside than you might think. It's not just going to do something unexpected; it's possibly going to do terrible, awful things to your application and data. Nobody wants that to happen. Especially Team Nokogiri.","title":"Impact"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#risk-redux","text":"So, if you accept the equation risk = probability x impact and you believe me when I say that: the probablility of a bug in unreleased code is high, and the impact of a bug is likely to be severe, then you should easily see that the risk associated with a bug in Nokogiri is quite high. Part of Team Nokogiri's job is to try to mitigate this risk. We have a number of tactics that we use to accomplish this: we respond quickly to bug reports, particularly when they are possible memory issues we review each others' commits we have a thorough test suite, and we test-drive new features we discuss code design and issues on a core developer mailing list we use valgrind to test for memory issues (leaks and invalid access) on multiple combinations of OS, libxml2 and Ruby we package release candidates, and encourage devs to use them we do NOT commit a gemspec in our git repository Yes, that's right, the absence of a gemspec is a risk mitigation tactic. Not only does Team Nokogiri not want to imply support for master , we want to actively discourage people from using it. Because it's not stable.","title":"Risk, Redux"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#but-i-want-to-do-it-anyway","text":"Another option, is to email the nokogiri-talk list and ask for a release candidate to be built. We're pretty accommodating if there's a bugfix that's a blocker for you. And if we can't release an RC, we'll tell you why. And in the end, nothing is stopping you from cloning the repo and generating a private gemspec. This is an extra step or two, but it has the benefit of making sure developers have thought through the costs and risks involved; and it tends to select for developers who know what they're doing.","title":"But I Want to Do It Anyway"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/nokogiri-1.6.8/Y_U_NO_GEMSPEC/#in-conclusion","text":"Team Nokogiri takes stability very seriously. We want everybody who uses Nokogiri to have a pleasant experience. And so we want to make sure that you're using the best software we can make. Please keep in mind that we're trying very hard to do the right thing for all Nokogiri users out there in Rubyland. Nokogiri loves you very much, and we hope you love it back.","title":"In Conclusion"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/","text":"Octokit Ruby toolkit for the GitHub API. Upgrading? Check the Upgrade Guide before bumping to a new major version . Table of Contents Philosophy Quick start Making requests Consuming resources Accessing HTTP responses Authentication Basic Authentication OAuth access tokens Two-Factor Authentication Using a .netrc file Application authentication Pagination Auto pagination Working with GitHub Enterprise Interacting with the GitHub.com APIs in GitHub Enterprise Interacting with the GitHub Enterprise Admin APIs Interacting with the GitHub Enterprise Management Console APIs SSL Connection Errors Configuration and defaults Configuring module defaults Using ENV variables Timeouts Hypermedia agent Hypermedia in Octokit URI templates The Full Hypermedia Experience\u2122 Upgrading guide Upgrading from 1.x.x Advanced usage Debugging Caching Hacking on Octokit.rb Code of Conduct Running and writing new tests Supported Ruby Versions Versioning Making Repeating Requests License Philosophy API wrappers should reflect the idioms of the language in which they were written . Octokit.rb wraps the GitHub API in a flat API client that follows Ruby conventions and requires little knowledge of REST. Most methods have positional arguments for required input and an options hash for optional parameters, headers, or other options: client = Octokit::Client.new # Fetch a README with Accept header for HTML format client.readme 'al3x/sovereign', :accept => 'application/vnd.github.html' Quick start Install via Rubygems gem install octokit ... or add to your Gemfile gem \"octokit\", \"~> 4.0\" Access the library in Ruby: require 'octokit' Making requests API methods are available as client instance methods. # Provide authentication credentials client = Octokit::Client.new(:access_token => 'personal_access_token') # You can still use the username/password syntax by replacing the password value with your PAT. # client = Octokit::Client.new(:login => 'defunkt', :password => 'personal_access_token') # Fetch the current user client.user Additional Query Parameters When passing additional parameters to GET based request use the following syntax: # query: { parameter_name: 'value' } # Example: Get repository listing by owner in ascending order client.repos({}, query: {type: 'owner', sort: 'asc'}) # Example: Get contents of a repository by ref # https://api.github.com/repos/octokit/octokit.rb/contents/path/to/file.rb?ref=some-other-branch client.contents('octokit/octokit.rb', path: 'path/to/file.rb', query: {ref: 'some-other-branch'}) Consuming resources Most methods return a Resource object which provides dot notation and [] access for fields returned in the API response. client = Octokit::Client.new # Fetch a user user = client.user 'jbarnette' puts user.name # => \"John Barnette\" puts user.fields # => <Set: {:login, :id, :gravatar_id, :type, :name, :company, :blog, :location, :email, :hireable, :bio, :public_repos, :followers, :following, :created_at, :updated_at, :public_gists}> puts user[:company] # => \"GitHub\" user.rels[:gists].href # => \"https://api.github.com/users/jbarnette/gists\" Note: URL fields are culled into a separate .rels collection for easier Hypermedia support. Accessing HTTP responses While most methods return a Resource object or a Boolean, sometimes you may need access to the raw HTTP response headers. You can access the last HTTP response with Client#last_response : user = client.user 'andrewpthorp' response = client.last_response etag = response.headers[:etag] Authentication Octokit supports the various authentication methods supported by the GitHub API : Basic Authentication Using your GitHub username and password is the easiest way to get started making authenticated requests: client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') user = client.user user.login # => \"defunkt\" While Basic Authentication allows you to get started quickly, OAuth access tokens are the preferred way to authenticate on behalf of users. OAuth access tokens OAuth access tokens provide two main benefits over using your username and password: Revokable access . Access tokens can be revoked, removing access for only that token without having to change your password everywhere. Limited access . Access tokens have access scopes which allow for more granular access to API resources. For instance, you can grant a third party access to your gists but not your private repositories. To use an access token with the Octokit client, pass your token in the :access_token options parameter in lieu of your username and password: client = Octokit::Client.new(:access_token => \"<your 40 char token>\") user = client.user user.login # => \"defunkt\" You can create access tokens through your GitHub Account Settings or with a basic authenticated Octokit client: client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\") # => <your new oauth token> Two-Factor Authentication Two-Factor Authentication brings added security to the account by requiring more information to login. Using two-factor authentication for API calls is as simple as adding the required header as an option: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user(\"defunkt\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) As you can imagine, this gets annoying quick since two-factor auth tokens are very short lived. So it is recommended to create an oauth token for the user to communicate with the API: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) # => <your new oauth token> Using a .netrc file Octokit supports reading credentials from a netrc file (defaulting to ~/.netrc ). Given these lines in your netrc: machine api.github.com login defunkt password c0d3b4ssssss! You can now create a client with those credentials: client = Octokit::Client.new(:netrc => true) client.login # => \"defunkt\" But I want to use OAuth you say. Since the GitHub API supports using an OAuth token as a Basic password, you totally can: machine api.github.com login defunkt password <your 40 char token> Note: Support for netrc requires adding the netrc gem to your Gemfile or .gemspec . Application authentication Octokit also supports application-only authentication using OAuth application client credentials . Using application credentials will result in making anonymous API calls on behalf of an application in order to take advantage of the higher rate limit. client = Octokit::Client.new \\ :client_id => \"<your 20 char id>\", :client_secret => \"<your 40 char secret>\" user = client.user 'defunkt' Default results per_page Default results from the GitHub API are 30, if you wish to add more you must do so during Octokit configuration. Octokit::Client.new(access_token: \"<your 40 char token>\", per_page: 100) Pagination Many GitHub API resources are paginated . While you may be tempted to start adding :page parameters to your calls, the API returns links to the next, previous, and last pages for you in the Link response header as Hypermedia link relations . issues = client.issues 'rails/rails' issues.concat client.get(client.last_response.rels[:next].href) Auto pagination For smallish resource lists, Octokit provides auto pagination. When this is enabled, calls for paginated resources will fetch and concatenate the results from every page into a single array: client.auto_paginate = true issues = client.issues 'rails/rails' issues.length # => 702 You can also enable auto pagination for all Octokit client instances: Octokit.configure do |c| c.auto_paginate = true end Note: While Octokit auto pagination will set the page size to the maximum 100 , and seek to not overstep your rate limit, you probably want to use a custom pattern for traversing large lists. Working with GitHub Enterprise With a bit of setup, you can also use Octokit with your GitHub Enterprise instance. Interacting with the GitHub.com APIs in GitHub Enterprise To interact with the \"regular\" GitHub.com APIs in GitHub Enterprise, simply configure the api_endpoint to match your hostname. For example: Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" end client = Octokit::Client.new(:access_token => \"<your 40 char token>\") Interacting with the GitHub Enterprise Admin APIs The GitHub Enterprise Admin APIs are under a different client: EnterpriseAdminClient . You'll need to have an administrator account in order to use these APIs. admin_client = Octokit::EnterpriseAdminClient.new( :access_token => \"<your 40 char token>\", :api_endpoint => \"https://<hostname>/api/v3/\" ) # or Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" c.access_token = \"<your 40 char token>\" end admin_client = Octokit.enterprise_admin_client.new Interacting with the GitHub Enterprise Management Console APIs The GitHub Enterprise Management Console APIs are also under a separate client: EnterpriseManagementConsoleClient . In order to use it, you'll need to provide both your management console password as well as the endpoint to your management console. This is different than the API endpoint provided above. management_console_client = Octokit::EnterpriseManagementConsoleClient.new( :management_console_password => \"secret\", :management_console_endpoint = \"https://hostname:8633\" ) # or Octokit.configure do |c| c.management_console_endpoint = \"https://hostname:8633\" c.management_console_password = \"secret\" end management_console_client = Octokit.enterprise_management_console_client.new SSL Connection Errors You may need to disable SSL temporarily while first setting up your GitHub Enterprise install. You can do that with the following configuration: client.connection_options[:ssl] = { :verify => false } Do remember to turn :verify back to true , as it's important for secure communication. Configuration and defaults While Octokit::Client accepts a range of options when creating a new client instance, Octokit's configuration API allows you to set your configuration options at the module level. This is particularly handy if you're creating a number of client instances based on some shared defaults. Changing options affects new instances only and will not modify existing Octokit::Client instances created with previous options. Configuring module defaults Every writable attribute in {Octokit::Configurable} can be set one at a time: Octokit.api_endpoint = 'http://api.github.dev' Octokit.web_endpoint = 'http://github.dev' or in batch: Octokit.configure do |c| c.api_endpoint = 'http://api.github.dev' c.web_endpoint = 'http://github.dev' end Using ENV variables Default configuration values are specified in {Octokit::Default}. Many attributes will look for a default value from the ENV before returning Octokit's default. # Given $OCTOKIT_API_ENDPOINT is \"http://api.github.dev\" client.api_endpoint # => \"http://api.github.dev\" Deprecation warnings and API endpoints in development preview warnings are printed to STDOUT by default, these can be disabled by setting the ENV OCTOKIT_SILENT=true . Timeouts By default, Octokit does not timeout network requests. To set a timeout, pass in Faraday timeout settings to Octokit's connection_options setting. Octokit.configure do |c| c.api_endpoint = ENV.fetch('GITHUB_API_ENDPOINT', 'https://api.github.com/') c.connection_options = { request: { open_timeout: 5, timeout: 5 } } end You should set a timeout in order to avoid Ruby\u2019s Timeout module, which can hose your server. Here are some resources for more information on this: The Oldest Bug In Ruby - Why Rack::Timeout Might Hose your Server Timeout: Ruby's Most Dangerous API The Ultimate Guide to Ruby Timeouts Hypermedia agent Starting in version 2.0, Octokit is hypermedia -enabled. Under the hood, {Octokit::Client} uses Sawyer , a hypermedia client built on Faraday . Hypermedia in Octokit Resources returned by Octokit methods contain not only data but hypermedia link relations: user = client.user 'technoweenie' # Get the repos rel, returned from the API # as repos_url in the resource user.rels[:repos].href # => \"https://api.github.com/users/technoweenie/repos\" repos = user.rels[:repos].get.data repos.last.name # => \"faraday-zeromq\" When processing API responses, all *_url attributes are culled in to the link relations collection. Any url attribute becomes .rels[:self] . URI templates You might notice many link relations have variable placeholders. Octokit supports URI Templates for parameterized URI expansion: repo = client.repo 'pengwynn/pingwynn' rel = repo.rels[:issues] # => #<Sawyer::Relation: issues: get https://api.github.com/repos/pengwynn/pingwynn/issues{/number}> # Get a page of issues rel.get.data # Get issue #2 rel.get(:uri => {:number => 2}).data The Full Hypermedia Experience\u2122 If you want to use Octokit as a pure hypermedia API client, you can start at the API root and follow link relations from there: root = client.root root.rels[:repository].get :uri => {:owner => \"octokit\", :repo => \"octokit.rb\" } root.rels[:user_repositories].get :uri => { :user => \"octokit\" }, :query => { :type => \"owner\" } Octokit 3.0 aims to be hypermedia-driven, removing the internal URL construction currently used throughout the client. Upgrading guide Version 4.0 removes support for a long-deprecated overload for passing state as a positional argument when listing pull requests. Instead, pass state in the method options. drops support for Ruby < 2.0 . adds support for new Enterprise-only APIs . adds support for Repository redirects . Version 3.0 includes a couple breaking changes when upgrading from v2.x.x: The default media type is now v3 instead of beta . If you need to request the older media type, you can set the default media type for the client: Octokit.default_media_type = \"application/vnd.github.beta+json\" or per-request client.emails(:accept => \"application/vnd.github.beta+json\") The long-deprecated Octokit::Client#create_download method has been removed. Upgrading from 1.x.x Version 2.0 includes a completely rewritten Client factory that now memoizes client instances based on unique configuration options. Breaking changes also include: :oauth_token is now :access_token :auto_traversal is now :auto_paginate Hashie::Mash has been removed. Responses now return a Sawyer::Resource object. This new type behaves mostly like a Ruby Hash , but does not fully support the Hashie::Mash API. Two new client error types are raised where appropriate: Octokit::TooManyRequests and Octokit::TooManyLoginAttempts The search_* methods from v1.x are now found at legacy_search_* Support for netrc requires including the netrc gem in your Gemfile or gemspec. DateTime fields are now proper DateTime objects. Previous versions outputted DateTime fields as 'String' objects. Advanced usage Since Octokit employs Faraday under the hood, some behavior can be extended via middleware. Debugging Often, it helps to know what Octokit is doing under the hood. You can add a logger to the middleware that enables you to peek into the underlying HTTP traffic: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::Request::Retry, exceptions: [Octokit::ServerError] builder.use Octokit::Middleware::FollowRedirects builder.use Octokit::Response::RaiseError builder.use Octokit::Response::FeedParser builder.response :logger do |logger| logger.filter(/(Authorization: \"(token|Bearer) )(\\w+)/, '\\1[REMOVED]') end builder.adapter Faraday.default_adapter end Octokit.middleware = stack client = Octokit::Client.new client.user 'pengwynn' I, [2013-08-22T15:54:38.583300 #88227] INFO -- : get https://api.github.com/users/pengwynn D, [2013-08-22T15:54:38.583401 #88227] DEBUG -- request: Accept: \"application/vnd.github.beta+json\" User-Agent: \"Octokit Ruby Gem 2.0.0.rc4\" I, [2013-08-22T15:54:38.843313 #88227] INFO -- Status: 200 D, [2013-08-22T15:54:38.843459 #88227] DEBUG -- response: server: \"GitHub.com\" date: \"Thu, 22 Aug 2013 20:54:40 GMT\" content-type: \"application/json; charset=utf-8\" transfer-encoding: \"chunked\" connection: \"close\" status: \"200 OK\" x-ratelimit-limit: \"60\" x-ratelimit-remaining: \"39\" x-ratelimit-reset: \"1377205443\" ... See the Faraday README for more middleware magic. Caching If you want to boost performance, stretch your API rate limit, or avoid paying the hypermedia tax, you can use Faraday Http Cache . Add the gem to your Gemfile gem 'faraday-http-cache' Next, construct your own Faraday middleware: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::HttpCache, serializer: Marshal, shared_cache: false builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Once configured, the middleware will store responses in cache based on ETag fingerprint and serve those back up for future 304 responses for the same resource. See the project README for advanced usage. Hacking on Octokit.rb If you want to hack on Octokit locally, we try to make bootstrapping the project as painless as possible. To start hacking, clone and run: script/bootstrap This will install project dependencies and get you up and running. If you want to run a Ruby console to poke on Octokit, you can crank one up with: script/console Using the scripts in ./script instead of bundle exec rspec , bundle console , etc. ensures your dependencies are up-to-date. Code of Conduct We want both the Octokit.rb and larger Octokit communities to be an open and welcoming environments. Please read and follow both in spirit and letter Code of Conduct . Running and writing new tests Octokit uses VCR for recording and playing back API fixtures during test runs. These cassettes (fixtures) are part of the Git project in the spec/cassettes folder. If you're not recording new cassettes you can run the specs with existing cassettes with: script/test Octokit uses environmental variables for storing credentials used in testing. If you are testing an API endpoint that doesn't require authentication, you can get away without any additional configuration. For the most part, tests use an authenticated client, using a token stored in ENV['OCTOKIT_TEST_GITHUB_TOKEN'] . There are several different authenticating method's used across the api. Here is the full list of configurable environmental variables for testing Octokit: ENV Variable Description OCTOKIT_TEST_GITHUB_LOGIN GitHub login name (preferably one created specifically for testing against). OCTOKIT_TEST_GITHUB_PASSWORD Password for the test GitHub login. OCTOKIT_TEST_GITHUB_TOKEN Personal Access Token for the test GitHub login. OCTOKIT_TEST_GITHUB_CLIENT_ID Test OAuth application client id. OCTOKIT_TEST_GITHUB_CLIENT_SECRET Test OAuth application client secret. OCTOKIT_TEST_GITHUB_REPOSITORY Test repository to perform destructive actions against, this should not be set to any repository of importance. Automatically created by the test suite if nonexistent Default: api-sandbox OCTOKIT_TEST_GITHUB_ORGANIZATION Test organization. OCTOKIT_TEST_GITHUB_ENTERPRISE_LOGIN GitHub Enterprise login name. OCTOKIT_TEST_GITHUB_ENTERPRISE_TOKEN GitHub Enterprise token. OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_PASSWORD GitHub Enterprise management console password. OCTOKIT_TEST_GITHUB_ENTERPRISE_ENDPOINT GitHub Enterprise hostname. OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_ENDPOINT GitHub Enterprise Management Console endpoint. OCTOKIT_TEST_GITHUB_INTEGRATION GitHub Integration owned by your test organization. OCTOKIT_TEST_GITHUB_INTEGRATION_INSTALLATION Installation of the GitHub Integration specified above. OCTOKIT_TEST_INTEGRATION_PEM_KEY File path to the private key generated from your integration. Since we periodically refresh our cassettes, please keep some points in mind when writing new specs. Specs should be idempotent . The HTTP calls made during a spec should be able to be run over and over. This means deleting a known resource prior to creating it if the name has to be unique. Specs should be able to be run in random order. If a spec depends on another resource as a fixture, make sure that's created in the scope of the spec and not depend on a previous spec to create the data needed. Do not depend on authenticated user info. Instead of asserting actual values in resources, try to assert the existence of a key or that a response is an Array. We're testing the client, not the API. Supported Ruby Versions This library aims to support and is tested against the following Ruby implementations: Ruby 2.5 Ruby 2.6 Ruby 2.7 If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, but support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped. Versioning This library aims to adhere to Semantic Versioning 2.0.0 . Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the Pessimistic Version Constraint with two digits of precision. For example: spec.add_dependency 'octokit', '~> 3.0' The changes made between versions can be seen on the project releases page . Making Repeating Requests In most cases it would be best to use a webhooks , but sometimes webhooks don't provide all of the information needed. In those cases where one might need to poll for progress or retry a request on failure, we designed Octopoller . Octopoller is a micro gem perfect for making repeating requests. Octopoller.poll(timeout: 15.seconds) do begin client.request_progress # ex. request a long running job's status rescue Error :re_poll end end This is useful when making requests for a long running job's progress (ex. requesting a Source Import's progress ). License Copyright (c) 2009-2014 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#octokit","text":"Ruby toolkit for the GitHub API. Upgrading? Check the Upgrade Guide before bumping to a new major version .","title":"Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#table-of-contents","text":"Philosophy Quick start Making requests Consuming resources Accessing HTTP responses Authentication Basic Authentication OAuth access tokens Two-Factor Authentication Using a .netrc file Application authentication Pagination Auto pagination Working with GitHub Enterprise Interacting with the GitHub.com APIs in GitHub Enterprise Interacting with the GitHub Enterprise Admin APIs Interacting with the GitHub Enterprise Management Console APIs SSL Connection Errors Configuration and defaults Configuring module defaults Using ENV variables Timeouts Hypermedia agent Hypermedia in Octokit URI templates The Full Hypermedia Experience\u2122 Upgrading guide Upgrading from 1.x.x Advanced usage Debugging Caching Hacking on Octokit.rb Code of Conduct Running and writing new tests Supported Ruby Versions Versioning Making Repeating Requests License","title":"Table of Contents"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#philosophy","text":"API wrappers should reflect the idioms of the language in which they were written . Octokit.rb wraps the GitHub API in a flat API client that follows Ruby conventions and requires little knowledge of REST. Most methods have positional arguments for required input and an options hash for optional parameters, headers, or other options: client = Octokit::Client.new # Fetch a README with Accept header for HTML format client.readme 'al3x/sovereign', :accept => 'application/vnd.github.html'","title":"Philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#quick-start","text":"Install via Rubygems gem install octokit ... or add to your Gemfile gem \"octokit\", \"~> 4.0\" Access the library in Ruby: require 'octokit'","title":"Quick start"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#making-requests","text":"API methods are available as client instance methods. # Provide authentication credentials client = Octokit::Client.new(:access_token => 'personal_access_token') # You can still use the username/password syntax by replacing the password value with your PAT. # client = Octokit::Client.new(:login => 'defunkt', :password => 'personal_access_token') # Fetch the current user client.user","title":"Making requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#additional-query-parameters","text":"When passing additional parameters to GET based request use the following syntax: # query: { parameter_name: 'value' } # Example: Get repository listing by owner in ascending order client.repos({}, query: {type: 'owner', sort: 'asc'}) # Example: Get contents of a repository by ref # https://api.github.com/repos/octokit/octokit.rb/contents/path/to/file.rb?ref=some-other-branch client.contents('octokit/octokit.rb', path: 'path/to/file.rb', query: {ref: 'some-other-branch'})","title":"Additional Query Parameters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#consuming-resources","text":"Most methods return a Resource object which provides dot notation and [] access for fields returned in the API response. client = Octokit::Client.new # Fetch a user user = client.user 'jbarnette' puts user.name # => \"John Barnette\" puts user.fields # => <Set: {:login, :id, :gravatar_id, :type, :name, :company, :blog, :location, :email, :hireable, :bio, :public_repos, :followers, :following, :created_at, :updated_at, :public_gists}> puts user[:company] # => \"GitHub\" user.rels[:gists].href # => \"https://api.github.com/users/jbarnette/gists\" Note: URL fields are culled into a separate .rels collection for easier Hypermedia support.","title":"Consuming resources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#accessing-http-responses","text":"While most methods return a Resource object or a Boolean, sometimes you may need access to the raw HTTP response headers. You can access the last HTTP response with Client#last_response : user = client.user 'andrewpthorp' response = client.last_response etag = response.headers[:etag]","title":"Accessing HTTP responses"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#authentication","text":"Octokit supports the various authentication methods supported by the GitHub API :","title":"Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#basic-authentication","text":"Using your GitHub username and password is the easiest way to get started making authenticated requests: client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') user = client.user user.login # => \"defunkt\" While Basic Authentication allows you to get started quickly, OAuth access tokens are the preferred way to authenticate on behalf of users.","title":"Basic Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#oauth-access-tokens","text":"OAuth access tokens provide two main benefits over using your username and password: Revokable access . Access tokens can be revoked, removing access for only that token without having to change your password everywhere. Limited access . Access tokens have access scopes which allow for more granular access to API resources. For instance, you can grant a third party access to your gists but not your private repositories. To use an access token with the Octokit client, pass your token in the :access_token options parameter in lieu of your username and password: client = Octokit::Client.new(:access_token => \"<your 40 char token>\") user = client.user user.login # => \"defunkt\" You can create access tokens through your GitHub Account Settings or with a basic authenticated Octokit client: client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\") # => <your new oauth token>","title":"OAuth access tokens"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#two-factor-authentication","text":"Two-Factor Authentication brings added security to the account by requiring more information to login. Using two-factor authentication for API calls is as simple as adding the required header as an option: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user(\"defunkt\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) As you can imagine, this gets annoying quick since two-factor auth tokens are very short lived. So it is recommended to create an oauth token for the user to communicate with the API: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) # => <your new oauth token>","title":"Two-Factor Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#using-a-netrc-file","text":"Octokit supports reading credentials from a netrc file (defaulting to ~/.netrc ). Given these lines in your netrc: machine api.github.com login defunkt password c0d3b4ssssss! You can now create a client with those credentials: client = Octokit::Client.new(:netrc => true) client.login # => \"defunkt\" But I want to use OAuth you say. Since the GitHub API supports using an OAuth token as a Basic password, you totally can: machine api.github.com login defunkt password <your 40 char token> Note: Support for netrc requires adding the netrc gem to your Gemfile or .gemspec .","title":"Using a .netrc file"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#application-authentication","text":"Octokit also supports application-only authentication using OAuth application client credentials . Using application credentials will result in making anonymous API calls on behalf of an application in order to take advantage of the higher rate limit. client = Octokit::Client.new \\ :client_id => \"<your 20 char id>\", :client_secret => \"<your 40 char secret>\" user = client.user 'defunkt'","title":"Application authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#default-results-per_page","text":"Default results from the GitHub API are 30, if you wish to add more you must do so during Octokit configuration. Octokit::Client.new(access_token: \"<your 40 char token>\", per_page: 100)","title":"Default results per_page"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#pagination","text":"Many GitHub API resources are paginated . While you may be tempted to start adding :page parameters to your calls, the API returns links to the next, previous, and last pages for you in the Link response header as Hypermedia link relations . issues = client.issues 'rails/rails' issues.concat client.get(client.last_response.rels[:next].href)","title":"Pagination"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#auto-pagination","text":"For smallish resource lists, Octokit provides auto pagination. When this is enabled, calls for paginated resources will fetch and concatenate the results from every page into a single array: client.auto_paginate = true issues = client.issues 'rails/rails' issues.length # => 702 You can also enable auto pagination for all Octokit client instances: Octokit.configure do |c| c.auto_paginate = true end Note: While Octokit auto pagination will set the page size to the maximum 100 , and seek to not overstep your rate limit, you probably want to use a custom pattern for traversing large lists.","title":"Auto pagination"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#working-with-github-enterprise","text":"With a bit of setup, you can also use Octokit with your GitHub Enterprise instance.","title":"Working with GitHub Enterprise"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#interacting-with-the-githubcom-apis-in-github-enterprise","text":"To interact with the \"regular\" GitHub.com APIs in GitHub Enterprise, simply configure the api_endpoint to match your hostname. For example: Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" end client = Octokit::Client.new(:access_token => \"<your 40 char token>\")","title":"Interacting with the GitHub.com APIs in GitHub Enterprise"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#interacting-with-the-github-enterprise-admin-apis","text":"The GitHub Enterprise Admin APIs are under a different client: EnterpriseAdminClient . You'll need to have an administrator account in order to use these APIs. admin_client = Octokit::EnterpriseAdminClient.new( :access_token => \"<your 40 char token>\", :api_endpoint => \"https://<hostname>/api/v3/\" ) # or Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" c.access_token = \"<your 40 char token>\" end admin_client = Octokit.enterprise_admin_client.new","title":"Interacting with the GitHub Enterprise Admin APIs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#interacting-with-the-github-enterprise-management-console-apis","text":"The GitHub Enterprise Management Console APIs are also under a separate client: EnterpriseManagementConsoleClient . In order to use it, you'll need to provide both your management console password as well as the endpoint to your management console. This is different than the API endpoint provided above. management_console_client = Octokit::EnterpriseManagementConsoleClient.new( :management_console_password => \"secret\", :management_console_endpoint = \"https://hostname:8633\" ) # or Octokit.configure do |c| c.management_console_endpoint = \"https://hostname:8633\" c.management_console_password = \"secret\" end management_console_client = Octokit.enterprise_management_console_client.new","title":"Interacting with the GitHub Enterprise Management Console APIs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#ssl-connection-errors","text":"You may need to disable SSL temporarily while first setting up your GitHub Enterprise install. You can do that with the following configuration: client.connection_options[:ssl] = { :verify => false } Do remember to turn :verify back to true , as it's important for secure communication.","title":"SSL Connection Errors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#configuration-and-defaults","text":"While Octokit::Client accepts a range of options when creating a new client instance, Octokit's configuration API allows you to set your configuration options at the module level. This is particularly handy if you're creating a number of client instances based on some shared defaults. Changing options affects new instances only and will not modify existing Octokit::Client instances created with previous options.","title":"Configuration and defaults"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#configuring-module-defaults","text":"Every writable attribute in {Octokit::Configurable} can be set one at a time: Octokit.api_endpoint = 'http://api.github.dev' Octokit.web_endpoint = 'http://github.dev' or in batch: Octokit.configure do |c| c.api_endpoint = 'http://api.github.dev' c.web_endpoint = 'http://github.dev' end","title":"Configuring module defaults"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#using-env-variables","text":"Default configuration values are specified in {Octokit::Default}. Many attributes will look for a default value from the ENV before returning Octokit's default. # Given $OCTOKIT_API_ENDPOINT is \"http://api.github.dev\" client.api_endpoint # => \"http://api.github.dev\" Deprecation warnings and API endpoints in development preview warnings are printed to STDOUT by default, these can be disabled by setting the ENV OCTOKIT_SILENT=true .","title":"Using ENV variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#timeouts","text":"By default, Octokit does not timeout network requests. To set a timeout, pass in Faraday timeout settings to Octokit's connection_options setting. Octokit.configure do |c| c.api_endpoint = ENV.fetch('GITHUB_API_ENDPOINT', 'https://api.github.com/') c.connection_options = { request: { open_timeout: 5, timeout: 5 } } end You should set a timeout in order to avoid Ruby\u2019s Timeout module, which can hose your server. Here are some resources for more information on this: The Oldest Bug In Ruby - Why Rack::Timeout Might Hose your Server Timeout: Ruby's Most Dangerous API The Ultimate Guide to Ruby Timeouts","title":"Timeouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#hypermedia-agent","text":"Starting in version 2.0, Octokit is hypermedia -enabled. Under the hood, {Octokit::Client} uses Sawyer , a hypermedia client built on Faraday .","title":"Hypermedia agent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#hypermedia-in-octokit","text":"Resources returned by Octokit methods contain not only data but hypermedia link relations: user = client.user 'technoweenie' # Get the repos rel, returned from the API # as repos_url in the resource user.rels[:repos].href # => \"https://api.github.com/users/technoweenie/repos\" repos = user.rels[:repos].get.data repos.last.name # => \"faraday-zeromq\" When processing API responses, all *_url attributes are culled in to the link relations collection. Any url attribute becomes .rels[:self] .","title":"Hypermedia in Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#uri-templates","text":"You might notice many link relations have variable placeholders. Octokit supports URI Templates for parameterized URI expansion: repo = client.repo 'pengwynn/pingwynn' rel = repo.rels[:issues] # => #<Sawyer::Relation: issues: get https://api.github.com/repos/pengwynn/pingwynn/issues{/number}> # Get a page of issues rel.get.data # Get issue #2 rel.get(:uri => {:number => 2}).data","title":"URI templates"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#the-full-hypermedia-experiencetm","text":"If you want to use Octokit as a pure hypermedia API client, you can start at the API root and follow link relations from there: root = client.root root.rels[:repository].get :uri => {:owner => \"octokit\", :repo => \"octokit.rb\" } root.rels[:user_repositories].get :uri => { :user => \"octokit\" }, :query => { :type => \"owner\" } Octokit 3.0 aims to be hypermedia-driven, removing the internal URL construction currently used throughout the client.","title":"The Full Hypermedia Experience\u2122"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#upgrading-guide","text":"Version 4.0 removes support for a long-deprecated overload for passing state as a positional argument when listing pull requests. Instead, pass state in the method options. drops support for Ruby < 2.0 . adds support for new Enterprise-only APIs . adds support for Repository redirects . Version 3.0 includes a couple breaking changes when upgrading from v2.x.x: The default media type is now v3 instead of beta . If you need to request the older media type, you can set the default media type for the client: Octokit.default_media_type = \"application/vnd.github.beta+json\" or per-request client.emails(:accept => \"application/vnd.github.beta+json\") The long-deprecated Octokit::Client#create_download method has been removed.","title":"Upgrading guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#upgrading-from-1xx","text":"Version 2.0 includes a completely rewritten Client factory that now memoizes client instances based on unique configuration options. Breaking changes also include: :oauth_token is now :access_token :auto_traversal is now :auto_paginate Hashie::Mash has been removed. Responses now return a Sawyer::Resource object. This new type behaves mostly like a Ruby Hash , but does not fully support the Hashie::Mash API. Two new client error types are raised where appropriate: Octokit::TooManyRequests and Octokit::TooManyLoginAttempts The search_* methods from v1.x are now found at legacy_search_* Support for netrc requires including the netrc gem in your Gemfile or gemspec. DateTime fields are now proper DateTime objects. Previous versions outputted DateTime fields as 'String' objects.","title":"Upgrading from 1.x.x"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#advanced-usage","text":"Since Octokit employs Faraday under the hood, some behavior can be extended via middleware.","title":"Advanced usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#debugging","text":"Often, it helps to know what Octokit is doing under the hood. You can add a logger to the middleware that enables you to peek into the underlying HTTP traffic: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::Request::Retry, exceptions: [Octokit::ServerError] builder.use Octokit::Middleware::FollowRedirects builder.use Octokit::Response::RaiseError builder.use Octokit::Response::FeedParser builder.response :logger do |logger| logger.filter(/(Authorization: \"(token|Bearer) )(\\w+)/, '\\1[REMOVED]') end builder.adapter Faraday.default_adapter end Octokit.middleware = stack client = Octokit::Client.new client.user 'pengwynn' I, [2013-08-22T15:54:38.583300 #88227] INFO -- : get https://api.github.com/users/pengwynn D, [2013-08-22T15:54:38.583401 #88227] DEBUG -- request: Accept: \"application/vnd.github.beta+json\" User-Agent: \"Octokit Ruby Gem 2.0.0.rc4\" I, [2013-08-22T15:54:38.843313 #88227] INFO -- Status: 200 D, [2013-08-22T15:54:38.843459 #88227] DEBUG -- response: server: \"GitHub.com\" date: \"Thu, 22 Aug 2013 20:54:40 GMT\" content-type: \"application/json; charset=utf-8\" transfer-encoding: \"chunked\" connection: \"close\" status: \"200 OK\" x-ratelimit-limit: \"60\" x-ratelimit-remaining: \"39\" x-ratelimit-reset: \"1377205443\" ... See the Faraday README for more middleware magic.","title":"Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#caching","text":"If you want to boost performance, stretch your API rate limit, or avoid paying the hypermedia tax, you can use Faraday Http Cache . Add the gem to your Gemfile gem 'faraday-http-cache' Next, construct your own Faraday middleware: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::HttpCache, serializer: Marshal, shared_cache: false builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Once configured, the middleware will store responses in cache based on ETag fingerprint and serve those back up for future 304 responses for the same resource. See the project README for advanced usage.","title":"Caching"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#hacking-on-octokitrb","text":"If you want to hack on Octokit locally, we try to make bootstrapping the project as painless as possible. To start hacking, clone and run: script/bootstrap This will install project dependencies and get you up and running. If you want to run a Ruby console to poke on Octokit, you can crank one up with: script/console Using the scripts in ./script instead of bundle exec rspec , bundle console , etc. ensures your dependencies are up-to-date.","title":"Hacking on Octokit.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#code-of-conduct","text":"We want both the Octokit.rb and larger Octokit communities to be an open and welcoming environments. Please read and follow both in spirit and letter Code of Conduct .","title":"Code of Conduct"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#running-and-writing-new-tests","text":"Octokit uses VCR for recording and playing back API fixtures during test runs. These cassettes (fixtures) are part of the Git project in the spec/cassettes folder. If you're not recording new cassettes you can run the specs with existing cassettes with: script/test Octokit uses environmental variables for storing credentials used in testing. If you are testing an API endpoint that doesn't require authentication, you can get away without any additional configuration. For the most part, tests use an authenticated client, using a token stored in ENV['OCTOKIT_TEST_GITHUB_TOKEN'] . There are several different authenticating method's used across the api. Here is the full list of configurable environmental variables for testing Octokit: ENV Variable Description OCTOKIT_TEST_GITHUB_LOGIN GitHub login name (preferably one created specifically for testing against). OCTOKIT_TEST_GITHUB_PASSWORD Password for the test GitHub login. OCTOKIT_TEST_GITHUB_TOKEN Personal Access Token for the test GitHub login. OCTOKIT_TEST_GITHUB_CLIENT_ID Test OAuth application client id. OCTOKIT_TEST_GITHUB_CLIENT_SECRET Test OAuth application client secret. OCTOKIT_TEST_GITHUB_REPOSITORY Test repository to perform destructive actions against, this should not be set to any repository of importance. Automatically created by the test suite if nonexistent Default: api-sandbox OCTOKIT_TEST_GITHUB_ORGANIZATION Test organization. OCTOKIT_TEST_GITHUB_ENTERPRISE_LOGIN GitHub Enterprise login name. OCTOKIT_TEST_GITHUB_ENTERPRISE_TOKEN GitHub Enterprise token. OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_PASSWORD GitHub Enterprise management console password. OCTOKIT_TEST_GITHUB_ENTERPRISE_ENDPOINT GitHub Enterprise hostname. OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_ENDPOINT GitHub Enterprise Management Console endpoint. OCTOKIT_TEST_GITHUB_INTEGRATION GitHub Integration owned by your test organization. OCTOKIT_TEST_GITHUB_INTEGRATION_INSTALLATION Installation of the GitHub Integration specified above. OCTOKIT_TEST_INTEGRATION_PEM_KEY File path to the private key generated from your integration. Since we periodically refresh our cassettes, please keep some points in mind when writing new specs. Specs should be idempotent . The HTTP calls made during a spec should be able to be run over and over. This means deleting a known resource prior to creating it if the name has to be unique. Specs should be able to be run in random order. If a spec depends on another resource as a fixture, make sure that's created in the scope of the spec and not depend on a previous spec to create the data needed. Do not depend on authenticated user info. Instead of asserting actual values in resources, try to assert the existence of a key or that a response is an Array. We're testing the client, not the API.","title":"Running and writing new tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#supported-ruby-versions","text":"This library aims to support and is tested against the following Ruby implementations: Ruby 2.5 Ruby 2.6 Ruby 2.7 If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, but support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.","title":"Supported Ruby Versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#versioning","text":"This library aims to adhere to Semantic Versioning 2.0.0 . Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the Pessimistic Version Constraint with two digits of precision. For example: spec.add_dependency 'octokit', '~> 3.0' The changes made between versions can be seen on the project releases page .","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#making-repeating-requests","text":"In most cases it would be best to use a webhooks , but sometimes webhooks don't provide all of the information needed. In those cases where one might need to poll for progress or retry a request on failure, we designed Octopoller . Octopoller is a micro gem perfect for making repeating requests. Octopoller.poll(timeout: 15.seconds) do begin client.request_progress # ex. request a long running job's status rescue Error :re_poll end end This is useful when making requests for a long running job's progress (ex. requesting a Source Import's progress ).","title":"Making Repeating Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/#license","text":"Copyright (c) 2009-2014 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/CONTRIBUTING/","text":"Submitting a Pull Request Read our Code of Conduct . Check out Hacking on Octokit in the README for bootstrapping the project for local development. Fork the repository. Create a topic branch. Add specs for your unimplemented feature or bug fix. Run script/test . If your specs pass, return to step 3. Implement your feature or bug fix. Run script/test . If your specs fail, return to step 5. Run open coverage/index.html . If your changes are not completely covered by your tests, return to step 4. Add documentation for your feature or bug fix. Run bundle exec rake doc:yard . If your changes are not 100% documented, go back to step 8. Add, commit, and push your changes. For documentation-only fixes, please add \"[ci skip]\" to your commit message to avoid needless CI builds. Submit a pull request.","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/CONTRIBUTING/#submitting-a-pull-request","text":"Read our Code of Conduct . Check out Hacking on Octokit in the README for bootstrapping the project for local development. Fork the repository. Create a topic branch. Add specs for your unimplemented feature or bug fix. Run script/test . If your specs pass, return to step 3. Implement your feature or bug fix. Run script/test . If your specs fail, return to step 5. Run open coverage/index.html . If your changes are not completely covered by your tests, return to step 4. Add documentation for your feature or bug fix. Run bundle exec rake doc:yard . If your changes are not 100% documented, go back to step 8. Add, commit, and push your changes. For documentation-only fixes, please add \"[ci skip]\" to your commit message to avoid needless CI builds. Submit a pull request.","title":"Submitting a Pull Request"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.22.0/LICENSE/","text":"Copyright (c) 2009-2017 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/","text":"Octokit Ruby toolkit for the GitHub API. Upgrading? Check the Upgrade Guide before bumping to a new major version . Philosophy API wrappers should reflect the idioms of the language in which they were written . Octokit.rb wraps the GitHub API in a flat API client that follows Ruby conventions and requires little knowledge of REST. Most methods have positional arguments for required input and an options hash for optional parameters, headers, or other options: # Fetch a README with Accept header for HTML format Octokit.readme 'al3x/sovereign', :accept => 'application/vnd.github.html' Quick start Install via Rubygems gem install octokit ... or add to your Gemfile gem \"octokit\", \"~> 4.0\" Making requests API methods are available as module methods (consuming module-level configuration) or as client instance methods. # Provide authentication credentials Octokit.configure do |c| c.login = 'defunkt' c.password = 'c0d3b4ssssss!' end # Fetch the current user Octokit.user or # Provide authentication credentials client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') # Fetch the current user client.user Consuming resources Most methods return a Resource object which provides dot notation and [] access for fields returned in the API response. # Fetch a user user = Octokit.user 'jbarnette' puts user.name # => \"John Barnette\" puts user.fields # => <Set: {:login, :id, :gravatar_id, :type, :name, :company, :blog, :location, :email, :hireable, :bio, :public_repos, :followers, :following, :created_at, :updated_at, :public_gists}> puts user[:company] # => \"GitHub\" user.rels[:gists].href # => \"https://api.github.com/users/jbarnette/gists\" Note: URL fields are culled into a separate .rels collection for easier Hypermedia support. Accessing HTTP responses While most methods return a Resource object or a Boolean, sometimes you may need access to the raw HTTP response headers. You can access the last HTTP response with Client#last_response : user = Octokit.user 'andrewpthorp' response = Octokit.last_response etag = response.headers[:etag] Authentication Octokit supports the various authentication methods supported by the GitHub API : Basic Authentication Using your GitHub username and password is the easiest way to get started making authenticated requests: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user user.login # => \"defunkt\" While Basic Authentication allows you to get started quickly, OAuth access tokens are the preferred way to authenticate on behalf of users. OAuth access tokens OAuth access tokens provide two main benefits over using your username and password: Revokable access . Access tokens can be revoked, removing access for only that token without having to change your password everywhere. Limited access . Access tokens have access scopes which allow for more granular access to API resources. For instance, you can grant a third party access to your gists but not your private repositories. To use an access token with the Octokit client, pass your token in the :access_token options parameter in lieu of your username and password: client = Octokit::Client.new(:access_token => \"<your 40 char token>\") user = client.user user.login # => \"defunkt\" You can create access tokens through your GitHub Account Settings or with a basic authenticated Octokit client: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\") # => <your new oauth token> Two-Factor Authentication Two-Factor Authentication brings added security to the account by requiring more information to login. Using two-factor authentication for API calls is as simple as adding the required header as an option: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user(\"defunkt\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) As you can imagine, this gets annoying quick since two-factor auth tokens are very short lived. So it is recommended to create an oauth token for the user to communicate with the API: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) # => <your new oauth token> Using a .netrc file Octokit supports reading credentials from a netrc file (defaulting to ~/.netrc ). Given these lines in your netrc: machine api.github.com login defunkt password c0d3b4ssssss! You can now create a client with those credentials: client = Octokit::Client.new(:netrc => true) client.login # => \"defunkt\" But I want to use OAuth you say. Since the GitHub API supports using an OAuth token as a Basic password, you totally can: machine api.github.com login defunkt password <your 40 char token> Note: Support for netrc requires adding the netrc gem to your Gemfile or .gemspec . Application authentication Octokit also supports application-only authentication using OAuth application client credentials . Using application credentials will result in making anonymous API calls on behalf of an application in order to take advantage of the higher rate limit. client = Octokit::Client.new \\ :client_id => \"<your 20 char id>\", :client_secret => \"<your 40 char secret>\" user = client.user 'defunkt' Pagination Many GitHub API resources are paginated . While you may be tempted to start adding :page parameters to your calls, the API returns links to the next, previous, and last pages for you in the Link response header as Hypermedia link relations . issues = Octokit.issues 'rails/rails', :per_page => 100 issues.concat Octokit.last_response.rels[:next].get.data Auto pagination For smallish resource lists, Octokit provides auto pagination. When this is enabled, calls for paginated resources will fetch and concatenate the results from every page into a single array: Octokit.auto_paginate = true issues = Octokit.issues 'rails/rails' issues.length # => 702 Note: While Octokit auto pagination will set the page size to the maximum 100 , and seek to not overstep your rate limit, you probably want to use a custom pattern for traversing large lists. Working with GitHub Enterprise With a bit of setup, you can also use Octokit with your Github Enterprise instance. Interacting with the GitHub.com APIs in GitHub Enterprise To interact with the \"regular\" GitHub.com APIs in GitHub Enterprise, simply configure the api_endpoint to match your hostname. For example: Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" end client = Octokit::Client.new(:access_token => \"<your 40 char token>\") Interacting with the GitHub Enterprise Admin APIs The GitHub Enterprise Admin APIs are under a different client: EnterpriseAdminClient . You'll need to have an administrator account in order to use these APIs. admin_client = Octokit::EnterpriseAdminClient.new \\ :access_token => \"<your 40 char token>\", :api_endpoint = \"https://<hostname>/api/v3/\" # or Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" c.access_token = \"<your 40 char token>\" end admin_client = Octokit.enterprise_admin_client Interacting with the GitHub Enterprise Management Console APIs The GitHub Enterprise Management Console APIs are also under a separate client: EnterpriseManagementConsoleClient . In order to use it, you'll need to provide both your management console password as well as the endpoint to your management console. This is different than the API endpoint provided above. management_console_client = Octokit::EnterpriseManagementConsoleClient.new \\ :management_console_password => \"secret\", :management_console_endpoint = \"https://hostname:8633\" # or Octokit.configure do |c| c.management_console_endpoint = \"https://hostname:8633\" c.management_console_password = \"secret\" end management_console_client = Octokit.enterprise_management_console_client SSL Connection Errors You may need to disable SSL temporarily while first setting up your GitHub Enterprise install. You can do that with the following configuration: client.connection_options[:ssl] = { :verify => false } Do remember to turn :verify back to true , as it's important for secure communication. Configuration and defaults While Octokit::Client accepts a range of options when creating a new client instance, Octokit's configuration API allows you to set your configuration options at the module level. This is particularly handy if you're creating a number of client instances based on some shared defaults. Changing options affects new instances only and will not modify existing Octokit::Client instances created with previous options. Configuring module defaults Every writable attribute in {Octokit::Configurable} can be set one at a time: Octokit.api_endpoint = 'http://api.github.dev' Octokit.web_endpoint = 'http://github.dev' or in batch: Octokit.configure do |c| c.api_endpoint = 'http://api.github.dev' c.web_endpoint = 'http://github.dev' end Using ENV variables Default configuration values are specified in {Octokit::Default}. Many attributes will look for a default value from the ENV before returning Octokit's default. # Given $OCTOKIT_API_ENDPOINT is \"http://api.github.dev\" Octokit.api_endpoint # => \"http://api.github.dev\" Deprecation warnings and API endpoints in development preview warnings are printed to STDOUT by default, these can be disabled by setting the ENV OCTOKIT_SILENT=true . Hypermedia agent Starting in version 2.0, Octokit is hypermedia -enabled. Under the hood, {Octokit::Client} uses Sawyer , a hypermedia client built on Faraday . Hypermedia in Octokit Resources returned by Octokit methods contain not only data but hypermedia link relations: user = Octokit.user 'technoweenie' # Get the repos rel, returned from the API # as repos_url in the resource user.rels[:repos].href # => \"https://api.github.com/users/technoweenie/repos\" repos = user.rels[:repos].get.data repos.last.name # => \"faraday-zeromq\" When processing API responses, all *_url attributes are culled in to the link relations collection. Any url attribute becomes .rels[:self] . URI templates You might notice many link relations have variable placeholders. Octokit supports URI Templates for parameterized URI expansion: repo = Octokit.repo 'pengwynn/pingwynn' rel = repo.rels[:issues] # => #<Sawyer::Relation: issues: get https://api.github.com/repos/pengwynn/pingwynn/issues{/number}> # Get a page of issues rel.get.data # Get issue #2 rel.get(:uri => {:number => 2}).data The Full Hypermedia Experience\u2122 If you want to use Octokit as a pure hypermedia API client, you can start at the API root and follow link relations from there: root = Octokit.root root.rels[:repository].get :uri => {:owner => \"octokit\", :repo => \"octokit.rb\" } root.rels[:user_repositories].get :uri => { :user => \"octokit\" }, :query => { :type => \"owner\" } Octokit 3.0 aims to be hypermedia-driven, removing the internal URL construction currently used throughout the client. Upgrading guide Version 4.0 removes support for a long-deprecated overload for passing state as a positional argument when listing pull requests. Instead, pass state in the method options. drops support for Ruby < 2.0 . adds support for new Enterprise-only APIs . adds support for Repository redirects . Version 3.0 includes a couple breaking changes when upgrading from v2.x.x: The default media type is now v3 instead of beta . If you need to request the older media type, you can set the default media type for the client: Octokit.default_media_type = \"application/vnd.github.beta+json\" or per-request Octokit.emails(:accept => \"application/vnd.github.beta+json\") The long-deprecated Octokit::Client#create_download method has been removed. Upgrading from 1.x.x Version 2.0 includes a completely rewritten Client factory that now memoizes client instances based on unique configuration options. Breaking changes also include: :oauth_token is now :access_token :auto_traversal is now :auto_paginate Hashie::Mash has been removed. Responses now return a Sawyer::Resource object. This new type behaves mostly like a Ruby Hash , but does not fully support the Hashie::Mash API. Two new client error types are raised where appropriate: Octokit::TooManyRequests and Octokit::TooManyLoginAttempts The search_* methods from v1.x are now found at legacy_search_* Support for netrc requires including the netrc gem in your Gemfile or gemspec. DateTime fields are now proper DateTime objects. Previous versions outputted DateTime fields as 'String' objects. Advanced usage Since Octokit employs Faraday under the hood, some behavior can be extended via middleware. Debugging Often, it helps to know what Octokit is doing under the hood. You can add a logger to the middleware that enables you to peek into the underlying HTTP traffic: stack = Faraday::RackBuilder.new do |builder| builder.response :logger builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Octokit.user 'pengwynn' I, [2013-08-22T15:54:38.583300 #88227] INFO -- : get https://api.github.com/users/pengwynn D, [2013-08-22T15:54:38.583401 #88227] DEBUG -- request: Accept: \"application/vnd.github.beta+json\" User-Agent: \"Octokit Ruby Gem 2.0.0.rc4\" I, [2013-08-22T15:54:38.843313 #88227] INFO -- Status: 200 D, [2013-08-22T15:54:38.843459 #88227] DEBUG -- response: server: \"GitHub.com\" date: \"Thu, 22 Aug 2013 20:54:40 GMT\" content-type: \"application/json; charset=utf-8\" transfer-encoding: \"chunked\" connection: \"close\" status: \"200 OK\" x-ratelimit-limit: \"60\" x-ratelimit-remaining: \"39\" x-ratelimit-reset: \"1377205443\" ... See the Faraday README for more middleware magic. Caching If you want to boost performance, stretch your API rate limit, or avoid paying the hypermedia tax, you can use Faraday Http Cache . Add the gem to your Gemfile gem 'faraday-http-cache' Next, construct your own Faraday middleware: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::HttpCache builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Once configured, the middleware will store responses in cache based on ETag fingerprint and serve those back up for future 304 responses for the same resource. See the project README for advanced usage. Hacking on Octokit.rb If you want to hack on Octokit locally, we try to make bootstrapping the project as painless as possible. To start hacking, clone and run: script/bootstrap This will install project dependencies and get you up and running. If you want to run a Ruby console to poke on Octokit, you can crank one up with: script/console Using the scripts in ./scripts instead of bundle exec rspec , bundle console , etc. ensures your dependencies are up-to-date. Running and writing new tests Octokit uses VCR for recording and playing back API fixtures during test runs. These cassettes (fixtures) are part of the Git project in the spec/cassettes folder. If you're not recording new cassettes you can run the specs with existing cassettes with: script/test Octokit uses environmental variables for storing credentials used in testing. If you are testing an API endpoint that doesn't require authentication, you can get away without any additional configuration. For the most part, tests use an authenticated client, using a token stored in ENV['OCTOKIT_TEST_GITHUB_TOKEN'] . There are several different authenticating method's used across the api. Here is the full list of configurable environmental variables for testing Octokit: ENV Variable Description OCTOKIT_TEST_GITHUB_LOGIN GitHub login name (preferably one created specifically for testing against). OCTOKIT_TEST_GITHUB_PASSWORD Password for the test GitHub login. OCTOKIT_TEST_GITHUB_TOKEN Personal Access Token for the test GitHub login. OCTOKIT_TEST_GITHUB_CLIENT_ID Test OAuth application client id. OCTOKIT_TEST_GITHUB_CLIENT_SECRET Test OAuth application client secret. OCTOKIT_TEST_GITHUB_REPOSITORY Test repository to perform destructive actions against, this should not be set to any repository of importance. Automatically created by the test suite if nonexistent Default: api-sandbox OCTOKIT_TEST_GITHUB_ORGANIZATION Test organization. OCTOKIT_TEST_GITHUB_ENTERPRISE_LOGIN GitHub Enterprise login name OCTOKIT_TEST_GITHUB_ENTERPRISE_TOKEN GitHub Enterprise token OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_PASSWORD GitHub Enterprise management console password OCTOKIT_TEST_GITHUB_ENTERPRISE_ENDPOINT GitHub Enterprise hostname OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_ENDPOINT GitHub Enterprise Management Console endpoint Since we periodically refresh our cassettes, please keep some points in mind when writing new specs. Specs should be idempotent . The HTTP calls made during a spec should be able to be run over and over. This means deleting a known resource prior to creating it if the name has to be unique. Specs should be able to be run in random order. If a spec depends on another resource as a fixture, make sure that's created in the scope of the spec and not depend on a previous spec to create the data needed. Do not depend on authenticated user info. Instead of asserting actual values in resources, try to assert the existence of a key or that a response is an Array. We're testing the client, not the API. Supported Ruby Versions This library aims to support and is tested against the following Ruby implementations: Ruby 2.0 Ruby 2.1 Ruby 2.2 If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, but support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped. Versioning This library aims to adhere to Semantic Versioning 2.0.0 . Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the Pessimistic Version Constraint with two digits of precision. For example: spec.add_dependency 'octokit', '~> 3.0' The changes made between versions can be seen on the project releases page . License Copyright (c) 2009-2014 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#octokit","text":"Ruby toolkit for the GitHub API. Upgrading? Check the Upgrade Guide before bumping to a new major version .","title":"Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#philosophy","text":"API wrappers should reflect the idioms of the language in which they were written . Octokit.rb wraps the GitHub API in a flat API client that follows Ruby conventions and requires little knowledge of REST. Most methods have positional arguments for required input and an options hash for optional parameters, headers, or other options: # Fetch a README with Accept header for HTML format Octokit.readme 'al3x/sovereign', :accept => 'application/vnd.github.html'","title":"Philosophy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#quick-start","text":"Install via Rubygems gem install octokit ... or add to your Gemfile gem \"octokit\", \"~> 4.0\"","title":"Quick start"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#making-requests","text":"API methods are available as module methods (consuming module-level configuration) or as client instance methods. # Provide authentication credentials Octokit.configure do |c| c.login = 'defunkt' c.password = 'c0d3b4ssssss!' end # Fetch the current user Octokit.user or # Provide authentication credentials client = Octokit::Client.new(:login => 'defunkt', :password => 'c0d3b4ssssss!') # Fetch the current user client.user","title":"Making requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#consuming-resources","text":"Most methods return a Resource object which provides dot notation and [] access for fields returned in the API response. # Fetch a user user = Octokit.user 'jbarnette' puts user.name # => \"John Barnette\" puts user.fields # => <Set: {:login, :id, :gravatar_id, :type, :name, :company, :blog, :location, :email, :hireable, :bio, :public_repos, :followers, :following, :created_at, :updated_at, :public_gists}> puts user[:company] # => \"GitHub\" user.rels[:gists].href # => \"https://api.github.com/users/jbarnette/gists\" Note: URL fields are culled into a separate .rels collection for easier Hypermedia support.","title":"Consuming resources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#accessing-http-responses","text":"While most methods return a Resource object or a Boolean, sometimes you may need access to the raw HTTP response headers. You can access the last HTTP response with Client#last_response : user = Octokit.user 'andrewpthorp' response = Octokit.last_response etag = response.headers[:etag]","title":"Accessing HTTP responses"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#authentication","text":"Octokit supports the various authentication methods supported by the GitHub API :","title":"Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#basic-authentication","text":"Using your GitHub username and password is the easiest way to get started making authenticated requests: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user user.login # => \"defunkt\" While Basic Authentication allows you to get started quickly, OAuth access tokens are the preferred way to authenticate on behalf of users.","title":"Basic Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#oauth-access-tokens","text":"OAuth access tokens provide two main benefits over using your username and password: Revokable access . Access tokens can be revoked, removing access for only that token without having to change your password everywhere. Limited access . Access tokens have access scopes which allow for more granular access to API resources. For instance, you can grant a third party access to your gists but not your private repositories. To use an access token with the Octokit client, pass your token in the :access_token options parameter in lieu of your username and password: client = Octokit::Client.new(:access_token => \"<your 40 char token>\") user = client.user user.login # => \"defunkt\" You can create access tokens through your GitHub Account Settings or with a basic authenticated Octokit client: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\") # => <your new oauth token>","title":"OAuth access tokens"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#two-factor-authentication","text":"Two-Factor Authentication brings added security to the account by requiring more information to login. Using two-factor authentication for API calls is as simple as adding the required header as an option: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' user = client.user(\"defunkt\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) As you can imagine, this gets annoying quick since two-factor auth tokens are very short lived. So it is recommended to create an oauth token for the user to communicate with the API: client = Octokit::Client.new \\ :login => 'defunkt', :password => 'c0d3b4ssssss!' client.create_authorization(:scopes => [\"user\"], :note => \"Name of token\", :headers => { \"X-GitHub-OTP\" => \"<your 2FA token>\" }) # => <your new oauth token>","title":"Two-Factor Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#using-a-netrc-file","text":"Octokit supports reading credentials from a netrc file (defaulting to ~/.netrc ). Given these lines in your netrc: machine api.github.com login defunkt password c0d3b4ssssss! You can now create a client with those credentials: client = Octokit::Client.new(:netrc => true) client.login # => \"defunkt\" But I want to use OAuth you say. Since the GitHub API supports using an OAuth token as a Basic password, you totally can: machine api.github.com login defunkt password <your 40 char token> Note: Support for netrc requires adding the netrc gem to your Gemfile or .gemspec .","title":"Using a .netrc file"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#application-authentication","text":"Octokit also supports application-only authentication using OAuth application client credentials . Using application credentials will result in making anonymous API calls on behalf of an application in order to take advantage of the higher rate limit. client = Octokit::Client.new \\ :client_id => \"<your 20 char id>\", :client_secret => \"<your 40 char secret>\" user = client.user 'defunkt'","title":"Application authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#pagination","text":"Many GitHub API resources are paginated . While you may be tempted to start adding :page parameters to your calls, the API returns links to the next, previous, and last pages for you in the Link response header as Hypermedia link relations . issues = Octokit.issues 'rails/rails', :per_page => 100 issues.concat Octokit.last_response.rels[:next].get.data","title":"Pagination"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#auto-pagination","text":"For smallish resource lists, Octokit provides auto pagination. When this is enabled, calls for paginated resources will fetch and concatenate the results from every page into a single array: Octokit.auto_paginate = true issues = Octokit.issues 'rails/rails' issues.length # => 702 Note: While Octokit auto pagination will set the page size to the maximum 100 , and seek to not overstep your rate limit, you probably want to use a custom pattern for traversing large lists.","title":"Auto pagination"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#working-with-github-enterprise","text":"With a bit of setup, you can also use Octokit with your Github Enterprise instance.","title":"Working with GitHub Enterprise"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#interacting-with-the-githubcom-apis-in-github-enterprise","text":"To interact with the \"regular\" GitHub.com APIs in GitHub Enterprise, simply configure the api_endpoint to match your hostname. For example: Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" end client = Octokit::Client.new(:access_token => \"<your 40 char token>\")","title":"Interacting with the GitHub.com APIs in GitHub Enterprise"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#interacting-with-the-github-enterprise-admin-apis","text":"The GitHub Enterprise Admin APIs are under a different client: EnterpriseAdminClient . You'll need to have an administrator account in order to use these APIs. admin_client = Octokit::EnterpriseAdminClient.new \\ :access_token => \"<your 40 char token>\", :api_endpoint = \"https://<hostname>/api/v3/\" # or Octokit.configure do |c| c.api_endpoint = \"https://<hostname>/api/v3/\" c.access_token = \"<your 40 char token>\" end admin_client = Octokit.enterprise_admin_client","title":"Interacting with the GitHub Enterprise Admin APIs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#interacting-with-the-github-enterprise-management-console-apis","text":"The GitHub Enterprise Management Console APIs are also under a separate client: EnterpriseManagementConsoleClient . In order to use it, you'll need to provide both your management console password as well as the endpoint to your management console. This is different than the API endpoint provided above. management_console_client = Octokit::EnterpriseManagementConsoleClient.new \\ :management_console_password => \"secret\", :management_console_endpoint = \"https://hostname:8633\" # or Octokit.configure do |c| c.management_console_endpoint = \"https://hostname:8633\" c.management_console_password = \"secret\" end management_console_client = Octokit.enterprise_management_console_client","title":"Interacting with the GitHub Enterprise Management Console APIs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#ssl-connection-errors","text":"You may need to disable SSL temporarily while first setting up your GitHub Enterprise install. You can do that with the following configuration: client.connection_options[:ssl] = { :verify => false } Do remember to turn :verify back to true , as it's important for secure communication.","title":"SSL Connection Errors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#configuration-and-defaults","text":"While Octokit::Client accepts a range of options when creating a new client instance, Octokit's configuration API allows you to set your configuration options at the module level. This is particularly handy if you're creating a number of client instances based on some shared defaults. Changing options affects new instances only and will not modify existing Octokit::Client instances created with previous options.","title":"Configuration and defaults"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#configuring-module-defaults","text":"Every writable attribute in {Octokit::Configurable} can be set one at a time: Octokit.api_endpoint = 'http://api.github.dev' Octokit.web_endpoint = 'http://github.dev' or in batch: Octokit.configure do |c| c.api_endpoint = 'http://api.github.dev' c.web_endpoint = 'http://github.dev' end","title":"Configuring module defaults"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#using-env-variables","text":"Default configuration values are specified in {Octokit::Default}. Many attributes will look for a default value from the ENV before returning Octokit's default. # Given $OCTOKIT_API_ENDPOINT is \"http://api.github.dev\" Octokit.api_endpoint # => \"http://api.github.dev\" Deprecation warnings and API endpoints in development preview warnings are printed to STDOUT by default, these can be disabled by setting the ENV OCTOKIT_SILENT=true .","title":"Using ENV variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#hypermedia-agent","text":"Starting in version 2.0, Octokit is hypermedia -enabled. Under the hood, {Octokit::Client} uses Sawyer , a hypermedia client built on Faraday .","title":"Hypermedia agent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#hypermedia-in-octokit","text":"Resources returned by Octokit methods contain not only data but hypermedia link relations: user = Octokit.user 'technoweenie' # Get the repos rel, returned from the API # as repos_url in the resource user.rels[:repos].href # => \"https://api.github.com/users/technoweenie/repos\" repos = user.rels[:repos].get.data repos.last.name # => \"faraday-zeromq\" When processing API responses, all *_url attributes are culled in to the link relations collection. Any url attribute becomes .rels[:self] .","title":"Hypermedia in Octokit"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#uri-templates","text":"You might notice many link relations have variable placeholders. Octokit supports URI Templates for parameterized URI expansion: repo = Octokit.repo 'pengwynn/pingwynn' rel = repo.rels[:issues] # => #<Sawyer::Relation: issues: get https://api.github.com/repos/pengwynn/pingwynn/issues{/number}> # Get a page of issues rel.get.data # Get issue #2 rel.get(:uri => {:number => 2}).data","title":"URI templates"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#the-full-hypermedia-experiencetm","text":"If you want to use Octokit as a pure hypermedia API client, you can start at the API root and follow link relations from there: root = Octokit.root root.rels[:repository].get :uri => {:owner => \"octokit\", :repo => \"octokit.rb\" } root.rels[:user_repositories].get :uri => { :user => \"octokit\" }, :query => { :type => \"owner\" } Octokit 3.0 aims to be hypermedia-driven, removing the internal URL construction currently used throughout the client.","title":"The Full Hypermedia Experience\u2122"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#upgrading-guide","text":"Version 4.0 removes support for a long-deprecated overload for passing state as a positional argument when listing pull requests. Instead, pass state in the method options. drops support for Ruby < 2.0 . adds support for new Enterprise-only APIs . adds support for Repository redirects . Version 3.0 includes a couple breaking changes when upgrading from v2.x.x: The default media type is now v3 instead of beta . If you need to request the older media type, you can set the default media type for the client: Octokit.default_media_type = \"application/vnd.github.beta+json\" or per-request Octokit.emails(:accept => \"application/vnd.github.beta+json\") The long-deprecated Octokit::Client#create_download method has been removed.","title":"Upgrading guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#upgrading-from-1xx","text":"Version 2.0 includes a completely rewritten Client factory that now memoizes client instances based on unique configuration options. Breaking changes also include: :oauth_token is now :access_token :auto_traversal is now :auto_paginate Hashie::Mash has been removed. Responses now return a Sawyer::Resource object. This new type behaves mostly like a Ruby Hash , but does not fully support the Hashie::Mash API. Two new client error types are raised where appropriate: Octokit::TooManyRequests and Octokit::TooManyLoginAttempts The search_* methods from v1.x are now found at legacy_search_* Support for netrc requires including the netrc gem in your Gemfile or gemspec. DateTime fields are now proper DateTime objects. Previous versions outputted DateTime fields as 'String' objects.","title":"Upgrading from 1.x.x"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#advanced-usage","text":"Since Octokit employs Faraday under the hood, some behavior can be extended via middleware.","title":"Advanced usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#debugging","text":"Often, it helps to know what Octokit is doing under the hood. You can add a logger to the middleware that enables you to peek into the underlying HTTP traffic: stack = Faraday::RackBuilder.new do |builder| builder.response :logger builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Octokit.user 'pengwynn' I, [2013-08-22T15:54:38.583300 #88227] INFO -- : get https://api.github.com/users/pengwynn D, [2013-08-22T15:54:38.583401 #88227] DEBUG -- request: Accept: \"application/vnd.github.beta+json\" User-Agent: \"Octokit Ruby Gem 2.0.0.rc4\" I, [2013-08-22T15:54:38.843313 #88227] INFO -- Status: 200 D, [2013-08-22T15:54:38.843459 #88227] DEBUG -- response: server: \"GitHub.com\" date: \"Thu, 22 Aug 2013 20:54:40 GMT\" content-type: \"application/json; charset=utf-8\" transfer-encoding: \"chunked\" connection: \"close\" status: \"200 OK\" x-ratelimit-limit: \"60\" x-ratelimit-remaining: \"39\" x-ratelimit-reset: \"1377205443\" ... See the Faraday README for more middleware magic.","title":"Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#caching","text":"If you want to boost performance, stretch your API rate limit, or avoid paying the hypermedia tax, you can use Faraday Http Cache . Add the gem to your Gemfile gem 'faraday-http-cache' Next, construct your own Faraday middleware: stack = Faraday::RackBuilder.new do |builder| builder.use Faraday::HttpCache builder.use Octokit::Response::RaiseError builder.adapter Faraday.default_adapter end Octokit.middleware = stack Once configured, the middleware will store responses in cache based on ETag fingerprint and serve those back up for future 304 responses for the same resource. See the project README for advanced usage.","title":"Caching"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#hacking-on-octokitrb","text":"If you want to hack on Octokit locally, we try to make bootstrapping the project as painless as possible. To start hacking, clone and run: script/bootstrap This will install project dependencies and get you up and running. If you want to run a Ruby console to poke on Octokit, you can crank one up with: script/console Using the scripts in ./scripts instead of bundle exec rspec , bundle console , etc. ensures your dependencies are up-to-date.","title":"Hacking on Octokit.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#running-and-writing-new-tests","text":"Octokit uses VCR for recording and playing back API fixtures during test runs. These cassettes (fixtures) are part of the Git project in the spec/cassettes folder. If you're not recording new cassettes you can run the specs with existing cassettes with: script/test Octokit uses environmental variables for storing credentials used in testing. If you are testing an API endpoint that doesn't require authentication, you can get away without any additional configuration. For the most part, tests use an authenticated client, using a token stored in ENV['OCTOKIT_TEST_GITHUB_TOKEN'] . There are several different authenticating method's used across the api. Here is the full list of configurable environmental variables for testing Octokit: ENV Variable Description OCTOKIT_TEST_GITHUB_LOGIN GitHub login name (preferably one created specifically for testing against). OCTOKIT_TEST_GITHUB_PASSWORD Password for the test GitHub login. OCTOKIT_TEST_GITHUB_TOKEN Personal Access Token for the test GitHub login. OCTOKIT_TEST_GITHUB_CLIENT_ID Test OAuth application client id. OCTOKIT_TEST_GITHUB_CLIENT_SECRET Test OAuth application client secret. OCTOKIT_TEST_GITHUB_REPOSITORY Test repository to perform destructive actions against, this should not be set to any repository of importance. Automatically created by the test suite if nonexistent Default: api-sandbox OCTOKIT_TEST_GITHUB_ORGANIZATION Test organization. OCTOKIT_TEST_GITHUB_ENTERPRISE_LOGIN GitHub Enterprise login name OCTOKIT_TEST_GITHUB_ENTERPRISE_TOKEN GitHub Enterprise token OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_PASSWORD GitHub Enterprise management console password OCTOKIT_TEST_GITHUB_ENTERPRISE_ENDPOINT GitHub Enterprise hostname OCTOKIT_TEST_GITHUB_ENTERPRISE_MANAGEMENT_CONSOLE_ENDPOINT GitHub Enterprise Management Console endpoint Since we periodically refresh our cassettes, please keep some points in mind when writing new specs. Specs should be idempotent . The HTTP calls made during a spec should be able to be run over and over. This means deleting a known resource prior to creating it if the name has to be unique. Specs should be able to be run in random order. If a spec depends on another resource as a fixture, make sure that's created in the scope of the spec and not depend on a previous spec to create the data needed. Do not depend on authenticated user info. Instead of asserting actual values in resources, try to assert the existence of a key or that a response is an Array. We're testing the client, not the API.","title":"Running and writing new tests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#supported-ruby-versions","text":"This library aims to support and is tested against the following Ruby implementations: Ruby 2.0 Ruby 2.1 Ruby 2.2 If something doesn't work on one of these Ruby versions, it's a bug. This library may inadvertently work (or seem to work) on other Ruby implementations, but support will only be provided for the versions listed above. If you would like this library to support another Ruby version, you may volunteer to be a maintainer. Being a maintainer entails making sure all tests run and pass on that implementation. When something breaks on your implementation, you will be responsible for providing patches in a timely fashion. If critical issues for a particular implementation exist at the time of a major release, support for that Ruby version may be dropped.","title":"Supported Ruby Versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#versioning","text":"This library aims to adhere to Semantic Versioning 2.0.0 . Violations of this scheme should be reported as bugs. Specifically, if a minor or patch version is released that breaks backward compatibility, that version should be immediately yanked and/or a new version should be immediately released that restores compatibility. Breaking changes to the public API will only be introduced with new major versions. As a result of this policy, you can (and should) specify a dependency on this gem using the Pessimistic Version Constraint with two digits of precision. For example: spec.add_dependency 'octokit', '~> 3.0' The changes made between versions can be seen on the project releases page .","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/#license","text":"Copyright (c) 2009-2014 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/CONTRIBUTING/","text":"Submitting a Pull Request Check out Hacking on Octokit in the README guide for bootstrapping the project for local development. Fork the repository. Create a topic branch. Add specs for your unimplemented feature or bug fix. Run script/test . If your specs pass, return to step 3. Implement your feature or bug fix. Run script/test . If your specs fail, return to step 5. Run open coverage/index.html . If your changes are not completely covered by your tests, return to step 4. Add documentation for your feature or bug fix. Run bundle exec rake doc:yard . If your changes are not 100% documented, go back to step 8. Add, commit, and push your changes. For documentation-only fixes, please add \"[ci skip]\" to your commit message to avoid needless CI builds. Submit a pull request.","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/CONTRIBUTING/#submitting-a-pull-request","text":"Check out Hacking on Octokit in the README guide for bootstrapping the project for local development. Fork the repository. Create a topic branch. Add specs for your unimplemented feature or bug fix. Run script/test . If your specs pass, return to step 3. Implement your feature or bug fix. Run script/test . If your specs fail, return to step 5. Run open coverage/index.html . If your changes are not completely covered by your tests, return to step 4. Add documentation for your feature or bug fix. Run bundle exec rake doc:yard . If your changes are not 100% documented, go back to step 8. Add, commit, and push your changes. For documentation-only fixes, please add \"[ci skip]\" to your commit message to avoid needless CI builds. Submit a pull request.","title":"Submitting a Pull Request"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/octokit-4.3.0/LICENSE/","text":"Copyright (c) 2009-2016 Wynn Netherland, Adam Stacoviak, Erik Michaels-Ober Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/","text":"Public Suffix List PublicSuffix is a Ruby domain name parser based on the Public Suffix List . What is the Public Suffix List? The Public Suffix List is a cross-vendor initiative to provide an accurate list of domain name suffixes. The Public Suffix List is an initiative of the Mozilla Project, but is maintained as a community resource. It is available for use in any software, but was originally created to meet the needs of browser manufacturers. A \"public suffix\" is one under which Internet users can directly register names. Some examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The Public Suffix List is a list of all known public suffixes. Source: http://publicsuffix.org Why the Public Suffix List is better than any available Regular Expression parser? Previously, browsers used an algorithm which basically only denied setting wide-ranging cookies for top-level domains with no dots (e.g. com or org). However, this did not work for top-level domains where only third-level registrations are allowed (e.g. co.uk). In these cases, websites could set a cookie for co.uk which will be passed onto every website registered under co.uk. Clearly, this was a security risk as it allowed websites other than the one setting the cookie to read it, and therefore potentially extract sensitive information. Since there is no algorithmic method of finding the highest level at which a domain may be registered for a particular top-level domain (the policies differ with each registry), the only method is to create a list of all top-level domains and the level at which domains can be registered. This is the aim of the effective TLD list. As well as being used to prevent cookies from being set where they shouldn't be, the list can also potentially be used for other applications where the registry controlled and privately controlled parts of a domain name need to be known, for example when grouping by top-level domains. Source: https://wiki.mozilla.org/Public_Suffix_List Not convinced yet? Check out this real world example . Requirements Ruby >= 2.0 For an older versions of Ruby use a previous release. We also support several Ruby implementations . Installation The best way to install PublicSuffix is via RubyGems . $ gem install public_suffix You might need administrator privileges on your system to install the gem. Basic Usage Example domain without subdomains. domain = PublicSuffix.parse(\"google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => nil domain.domain # => \"google.com\" domain.subdomain # => nil Example domain with subdomains. domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => \"www\" domain.domain # => \"google.com\" domain.subdomain # => \"www.google.com\" Simple validation example. PublicSuffix.valid?(\"google.com\") # => true PublicSuffix.valid?(\"www.google.com\") # => true PublicSuffix.valid?(\"x.yz\") # => false Fully Qualified Domain Names This library automatically recognizes Fully Qualified Domain Names. A FQDN is a domain name that end with a trailing dot. # Parse a standard domain name domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" # Parse a fully qualified domain name domain = PublicSuffix.parse(\"www.google.com.\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" Private domains This library has support for switching off support for private (non-ICANN) domains # Parse a domain on a private TLD domain = PublicSuffix.parse(\"something.blogspot.com\") # => #<PublicSuffix::Domain> domain.tld # => \"blogspot.com\" # Disable support for private TLDs PublicSuffix::List.private_domains = false # => #<PublicSuffix::List> domain = PublicSuffix.parse(\"something.blogspot.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" Feedback and bug reports If you use this library and find yourself missing any functionality, please let me know . Pull requests are very welcome! Please include tests and/or feature coverage for every patch, and create a topic branch for every separate change you make. Report issues or feature requests to GitHub Issues . More Homepage Repository API Documentation Introducing the Public Suffix List library for Ruby Changelog See the CHANGELOG.md file for details. License Copyright (c) 2009-2015 Simone Carletti. This is Free Software distributed under the MIT license.","title":"Public Suffix List"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#public-suffix-list","text":"PublicSuffix is a Ruby domain name parser based on the Public Suffix List .","title":"Public Suffix List"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#what-is-the-public-suffix-list","text":"The Public Suffix List is a cross-vendor initiative to provide an accurate list of domain name suffixes. The Public Suffix List is an initiative of the Mozilla Project, but is maintained as a community resource. It is available for use in any software, but was originally created to meet the needs of browser manufacturers. A \"public suffix\" is one under which Internet users can directly register names. Some examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The Public Suffix List is a list of all known public suffixes. Source: http://publicsuffix.org","title":"What is the Public Suffix List?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#why-the-public-suffix-list-is-better-than-any-available-regular-expression-parser","text":"Previously, browsers used an algorithm which basically only denied setting wide-ranging cookies for top-level domains with no dots (e.g. com or org). However, this did not work for top-level domains where only third-level registrations are allowed (e.g. co.uk). In these cases, websites could set a cookie for co.uk which will be passed onto every website registered under co.uk. Clearly, this was a security risk as it allowed websites other than the one setting the cookie to read it, and therefore potentially extract sensitive information. Since there is no algorithmic method of finding the highest level at which a domain may be registered for a particular top-level domain (the policies differ with each registry), the only method is to create a list of all top-level domains and the level at which domains can be registered. This is the aim of the effective TLD list. As well as being used to prevent cookies from being set where they shouldn't be, the list can also potentially be used for other applications where the registry controlled and privately controlled parts of a domain name need to be known, for example when grouping by top-level domains. Source: https://wiki.mozilla.org/Public_Suffix_List Not convinced yet? Check out this real world example .","title":"Why the Public Suffix List is better than any available Regular Expression parser?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#requirements","text":"Ruby >= 2.0 For an older versions of Ruby use a previous release. We also support several Ruby implementations .","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#installation","text":"The best way to install PublicSuffix is via RubyGems . $ gem install public_suffix You might need administrator privileges on your system to install the gem.","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#basic-usage","text":"Example domain without subdomains. domain = PublicSuffix.parse(\"google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => nil domain.domain # => \"google.com\" domain.subdomain # => nil Example domain with subdomains. domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => \"www\" domain.domain # => \"google.com\" domain.subdomain # => \"www.google.com\" Simple validation example. PublicSuffix.valid?(\"google.com\") # => true PublicSuffix.valid?(\"www.google.com\") # => true PublicSuffix.valid?(\"x.yz\") # => false","title":"Basic Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#fully-qualified-domain-names","text":"This library automatically recognizes Fully Qualified Domain Names. A FQDN is a domain name that end with a trailing dot. # Parse a standard domain name domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" # Parse a fully qualified domain name domain = PublicSuffix.parse(\"www.google.com.\") # => #<PublicSuffix::Domain> domain.tld # => \"com\"","title":"Fully Qualified Domain Names"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#private-domains","text":"This library has support for switching off support for private (non-ICANN) domains # Parse a domain on a private TLD domain = PublicSuffix.parse(\"something.blogspot.com\") # => #<PublicSuffix::Domain> domain.tld # => \"blogspot.com\" # Disable support for private TLDs PublicSuffix::List.private_domains = false # => #<PublicSuffix::List> domain = PublicSuffix.parse(\"something.blogspot.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\"","title":"Private domains"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#feedback-and-bug-reports","text":"If you use this library and find yourself missing any functionality, please let me know . Pull requests are very welcome! Please include tests and/or feature coverage for every patch, and create a topic branch for every separate change you make. Report issues or feature requests to GitHub Issues .","title":"Feedback and bug reports"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#more","text":"Homepage Repository API Documentation Introducing the Public Suffix List library for Ruby","title":"More"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#changelog","text":"See the CHANGELOG.md file for details.","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/#license","text":"Copyright (c) 2009-2015 Simone Carletti. This is Free Software distributed under the MIT license.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/","text":"Changelog Release 1.5.3 FIXED: Don't duplicate rule indices when creating index (GH-77). [Thanks @ags] CHANGED: Updated definitions. Release 1.5.2 CHANGED: Updated definitions. Release 1.5.1 FIXED: Ignore case for parsing and validating (GH-62) CHANGED: Updated definitions. Release 1.5.0 CHANGED: Dropped support for Ruby < 2.0 CHANGED: Updated definitions. Release 1.4.6 CHANGED: Updated definitions. Release 1.4.5 CHANGED: Updated definitions. Release 1.4.4 CHANGED: Updated definitions. Release 1.4.3 CHANGED: Updated definitions. Release 1.4.2 CHANGED: Updated definitions. Release 1.4.1 CHANGED: Updated definitions. Release 1.4.0 CHANGED: Moved the definitions in the lib folder. CHANGED: Updated definitions. Release 1.3.3 CHANGED: Updated definitions. Release 1.3.2 CHANGED: Updated definitions. Release 1.3.1 CHANGED: Updated definitions. Release 1.3.0 NEW: Ability to skip Private Domains (GH-28). [Thanks @rb2k] CHANGED: Updated definitions. Release 1.2.1 CHANGED: Updated definitions. Release 1.2.0 NEW: Allow a custom List on PublicSuffix.parse (GH-26). [Thanks @itspriddle] FIXED: PublicSuffix.parse and PublicSuffix.valid? crashes when input is nil (GH-20). CHANGED: Updated definitions. Release 1.1.3 CHANGED: Updated definitions. Release 1.1.2 CHANGED: Updated definitions. Release 1.1.1 CHANGED: Updated definitions. Release 1.1.0 FIXED: #valid? and #parse consider URIs as valid domains (GH-15) CHANGED: Updated definitions. CHANGED: Removed deprecatd PublicSuffixService::RuleList. Release 1.0.0 CHANGED: Updated definitions. Release 1.0.0.rc1 The library is now known as PublicSuffix. Release 0.9.1 CHANGED: Renamed PublicSuffixService::RuleList to PublicSuffixService::List. CHANGED: Renamed PublicSuffixService::List#list to PublicSuffixService::List#rules. CHANGED: Renamed PublicSuffixService to PublicSuffix. CHANGED: Updated definitions. Release 0.9.0 CHANGED: Minimum Ruby version increased to Ruby 1.8.7. CHANGED: rake/gempackagetask is deprecated. Use rubygems/package_task instead. Release 0.8.4 FIXED: Reverted bugfix for issue #12 for Ruby 1.8.6. This is the latest version compatible with Ruby 1.8.6. Release 0.8.3 FIXED: Fixed ArgumentError: invalid byte sequence in US-ASCII with Ruby 1.9.2 (#12). CHANGED: Updated definitions (#11). CHANGED: Renamed definitions.txt to definitions.dat. Release 0.8.2 NEW: Added support for rubygems-test. CHANGED: Integrated Bundler. CHANGED: Updated definitions. Release 0.8.1 FIXED: The files in the release 0.8.0 have wrong permission 600 and can't be loaded (#10). Release 0.8.0 CHANGED: Update public suffix list to d1a5599b49fa 2010-10-25 15:10 +0100 (#9) NEW: Add support for Fully Qualified Domain Names (#7) Release 0.7.0 CHANGED: Using YARD to document the code instead of RDoc. FIXED: RuleList cache is not recreated when a new rule is appended to the list (#6) FIXED: PublicSuffixService.valid? should return false if the domain is not defined or not allowed (#4, #5) Release 0.6.0 NEW: PublicSuffixService.parse raises DomainNotAllowed when trying to parse a domain name which exists, but is not allowed by the current definition list (#3) PublicSuffixService.parse(\"nic.do\") # => PublicSuffixService::DomainNotAllowed CHANGED: Renamed PublicSuffixService::InvalidDomain to PublicSuffixService::DomainInvalid Release 0.5.2 CHANGED: Update public suffix list to 248ea690d671 2010-09-16 18:02 +0100 Release 0.5.1 CHANGED: Update public suffix list to 14dc66dd53c1 2010-09-15 17:09 +0100 Release 0.5.0 CHANGED: Improve documentation for Domain#domain and Domain#subdomain (#1). CHANGED: Performance improvements (#2). Release 0.4.0 CHANGED: Rename library from DomainName to PublicSuffixService to reduce the probability of name conflicts. Release 0.3.1 Deprecated DomainName library. Release 0.3.0 CHANGED: DomainName#domain and DomainName#subdomain are no longer alias of Domain#sld and Domain#tld. CHANGED: Removed DomainName#labels and decoupled Rule from DomainName. CHANGED: DomainName#valid? no longer instantiates new DomainName objects. This means less overhead. CHANGED: Refactoring the entire DomainName API. Removed the internal on-the-fly parsing. Added a bunch of new methods to check and validate the DomainName. Release 0.2.0 NEW: DomainName#valid? NEW: DomainName#parse and DomainName#parse! NEW: DomainName#valid_domain? and DomainName#valid_subdomain? CHANGED: Make sure RuleList lookup is only performed once. Release 0.1.0 Initial version","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-153","text":"FIXED: Don't duplicate rule indices when creating index (GH-77). [Thanks @ags] CHANGED: Updated definitions.","title":"Release 1.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-152","text":"CHANGED: Updated definitions.","title":"Release 1.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-151","text":"FIXED: Ignore case for parsing and validating (GH-62) CHANGED: Updated definitions.","title":"Release 1.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-150","text":"CHANGED: Dropped support for Ruby < 2.0 CHANGED: Updated definitions.","title":"Release 1.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-146","text":"CHANGED: Updated definitions.","title":"Release 1.4.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-145","text":"CHANGED: Updated definitions.","title":"Release 1.4.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-144","text":"CHANGED: Updated definitions.","title":"Release 1.4.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-143","text":"CHANGED: Updated definitions.","title":"Release 1.4.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-142","text":"CHANGED: Updated definitions.","title":"Release 1.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-141","text":"CHANGED: Updated definitions.","title":"Release 1.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-140","text":"CHANGED: Moved the definitions in the lib folder. CHANGED: Updated definitions.","title":"Release 1.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-133","text":"CHANGED: Updated definitions.","title":"Release 1.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-132","text":"CHANGED: Updated definitions.","title":"Release 1.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-131","text":"CHANGED: Updated definitions.","title":"Release 1.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-130","text":"NEW: Ability to skip Private Domains (GH-28). [Thanks @rb2k] CHANGED: Updated definitions.","title":"Release 1.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-121","text":"CHANGED: Updated definitions.","title":"Release 1.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-120","text":"NEW: Allow a custom List on PublicSuffix.parse (GH-26). [Thanks @itspriddle] FIXED: PublicSuffix.parse and PublicSuffix.valid? crashes when input is nil (GH-20). CHANGED: Updated definitions.","title":"Release 1.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-113","text":"CHANGED: Updated definitions.","title":"Release 1.1.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-112","text":"CHANGED: Updated definitions.","title":"Release 1.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-111","text":"CHANGED: Updated definitions.","title":"Release 1.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-110","text":"FIXED: #valid? and #parse consider URIs as valid domains (GH-15) CHANGED: Updated definitions. CHANGED: Removed deprecatd PublicSuffixService::RuleList.","title":"Release 1.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-100","text":"CHANGED: Updated definitions.","title":"Release 1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-100rc1","text":"The library is now known as PublicSuffix.","title":"Release 1.0.0.rc1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-091","text":"CHANGED: Renamed PublicSuffixService::RuleList to PublicSuffixService::List. CHANGED: Renamed PublicSuffixService::List#list to PublicSuffixService::List#rules. CHANGED: Renamed PublicSuffixService to PublicSuffix. CHANGED: Updated definitions.","title":"Release 0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-090","text":"CHANGED: Minimum Ruby version increased to Ruby 1.8.7. CHANGED: rake/gempackagetask is deprecated. Use rubygems/package_task instead.","title":"Release 0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-084","text":"FIXED: Reverted bugfix for issue #12 for Ruby 1.8.6. This is the latest version compatible with Ruby 1.8.6.","title":"Release 0.8.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-083","text":"FIXED: Fixed ArgumentError: invalid byte sequence in US-ASCII with Ruby 1.9.2 (#12). CHANGED: Updated definitions (#11). CHANGED: Renamed definitions.txt to definitions.dat.","title":"Release 0.8.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-082","text":"NEW: Added support for rubygems-test. CHANGED: Integrated Bundler. CHANGED: Updated definitions.","title":"Release 0.8.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-081","text":"FIXED: The files in the release 0.8.0 have wrong permission 600 and can't be loaded (#10).","title":"Release 0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-080","text":"CHANGED: Update public suffix list to d1a5599b49fa 2010-10-25 15:10 +0100 (#9) NEW: Add support for Fully Qualified Domain Names (#7)","title":"Release 0.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-070","text":"CHANGED: Using YARD to document the code instead of RDoc. FIXED: RuleList cache is not recreated when a new rule is appended to the list (#6) FIXED: PublicSuffixService.valid? should return false if the domain is not defined or not allowed (#4, #5)","title":"Release 0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-060","text":"NEW: PublicSuffixService.parse raises DomainNotAllowed when trying to parse a domain name which exists, but is not allowed by the current definition list (#3) PublicSuffixService.parse(\"nic.do\") # => PublicSuffixService::DomainNotAllowed CHANGED: Renamed PublicSuffixService::InvalidDomain to PublicSuffixService::DomainInvalid","title":"Release 0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-052","text":"CHANGED: Update public suffix list to 248ea690d671 2010-09-16 18:02 +0100","title":"Release 0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-051","text":"CHANGED: Update public suffix list to 14dc66dd53c1 2010-09-15 17:09 +0100","title":"Release 0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-050","text":"CHANGED: Improve documentation for Domain#domain and Domain#subdomain (#1). CHANGED: Performance improvements (#2).","title":"Release 0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-040","text":"CHANGED: Rename library from DomainName to PublicSuffixService to reduce the probability of name conflicts.","title":"Release 0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-031","text":"Deprecated DomainName library.","title":"Release 0.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-030","text":"CHANGED: DomainName#domain and DomainName#subdomain are no longer alias of Domain#sld and Domain#tld. CHANGED: Removed DomainName#labels and decoupled Rule from DomainName. CHANGED: DomainName#valid? no longer instantiates new DomainName objects. This means less overhead. CHANGED: Refactoring the entire DomainName API. Removed the internal on-the-fly parsing. Added a bunch of new methods to check and validate the DomainName.","title":"Release 0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-020","text":"NEW: DomainName#valid? NEW: DomainName#parse and DomainName#parse! NEW: DomainName#valid_domain? and DomainName#valid_subdomain? CHANGED: Make sure RuleList lookup is only performed once.","title":"Release 0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-1.5.3/CHANGELOG/#release-010","text":"Initial version","title":"Release 0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/","text":"Public Suffix for Ruby PublicSuffix is a Ruby domain name parser based on the Public Suffix List . Links Homepage Repository API Documentation Introducing the Public Suffix List library for Ruby Requirements PublicSuffix requires Ruby >= 2.3 . For an older versions of Ruby use a previous release. Installation You can install the gem manually: gem install public_suffix Or use Bundler and define it as a dependency in your Gemfile : gem 'public_suffix' If you are upgrading to 2.0, see 2.0-Upgrade.md . Usage Extract the domain out from a name: PublicSuffix.domain(\"google.com\") # => \"google.com\" PublicSuffix.domain(\"www.google.com\") # => \"google.com\" PublicSuffix.domain(\"www.google.co.uk\") # => \"google.co.uk\" Parse a domain without subdomains: domain = PublicSuffix.parse(\"google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => nil domain.domain # => \"google.com\" domain.subdomain # => nil Parse a domain with subdomains: domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => \"www\" domain.domain # => \"google.com\" domain.subdomain # => \"www.google.com\" Simple validation example: PublicSuffix.valid?(\"google.com\") # => true PublicSuffix.valid?(\"www.google.com\") # => true # Explicitly forbidden, it is listed as a private domain PublicSuffix.valid?(\"blogspot.com\") # => false # Unknown/not-listed TLD domains are valid by default PublicSuffix.valid?(\"example.tldnotlisted\") # => true Strict validation (without applying the default * rule): PublicSuffix.valid?(\"example.tldnotlisted\", default_rule: nil) # => false Fully Qualified Domain Names This library automatically recognizes Fully Qualified Domain Names. A FQDN is a domain name that end with a trailing dot. # Parse a standard domain name PublicSuffix.domain(\"www.google.com\") # => \"google.com\" # Parse a fully qualified domain name PublicSuffix.domain(\"www.google.com.\") # => \"google.com\" Private domains This library has support for switching off support for private (non-ICANN). # Extract a domain including private domains (by default) PublicSuffix.domain(\"something.blogspot.com\") # => \"something.blogspot.com\" # Extract a domain excluding private domains PublicSuffix.domain(\"something.blogspot.com\", ignore_private: true) # => \"blogspot.com\" # It also works for #parse and #valid? PublicSuffix.parse(\"something.blogspot.com\", ignore_private: true) PublicSuffix.valid?(\"something.blogspot.com\", ignore_private: true) If you don't care about private domains at all, it's more efficient to exclude them when the list is parsed: # Disable support for private TLDs PublicSuffix::List.default = PublicSuffix::List.parse(File.read(PublicSuffix::List::DEFAULT_LIST_PATH), private_domains: false) # => \"blogspot.com\" PublicSuffix.domain(\"something.blogspot.com\") # => \"blogspot.com\" What is the Public Suffix List? The Public Suffix List is a cross-vendor initiative to provide an accurate list of domain name suffixes. The Public Suffix List is an initiative of the Mozilla Project, but is maintained as a community resource. It is available for use in any software, but was originally created to meet the needs of browser manufacturers. A \"public suffix\" is one under which Internet users can directly register names. Some examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The Public Suffix List is a list of all known public suffixes. Why the Public Suffix List is better than any available Regular Expression parser? Previously, browsers used an algorithm which basically only denied setting wide-ranging cookies for top-level domains with no dots (e.g. com or org). However, this did not work for top-level domains where only third-level registrations are allowed (e.g. co.uk). In these cases, websites could set a cookie for co.uk which will be passed onto every website registered under co.uk. Clearly, this was a security risk as it allowed websites other than the one setting the cookie to read it, and therefore potentially extract sensitive information. Since there is no algorithmic method of finding the highest level at which a domain may be registered for a particular top-level domain (the policies differ with each registry), the only method is to create a list of all top-level domains and the level at which domains can be registered. This is the aim of the effective TLD list. As well as being used to prevent cookies from being set where they shouldn't be, the list can also potentially be used for other applications where the registry controlled and privately controlled parts of a domain name need to be known, for example when grouping by top-level domains. Source: https://wiki.mozilla.org/Public_Suffix_List Not convinced yet? Check out this real world example . Does PublicSuffix make requests to Public Suffix List website? No. PublicSuffix comes with a bundled list. It does not make any HTTP requests to parse or validate a domain. Support Library documentation is auto-generated from the README and the source code, and it's available at https://rubydoc.info/gems/public_suffix. The PublicSuffix bug tracker is here: https://github.com/weppos/publicsuffix-ruby/issues The PublicSuffix code repository is here: https://github.com/weppos/publicsuffix-ruby. Contributions are welcome! Please include tests and/or feature coverage for every patch, and create a topic branch for every separate change you make. Consider subscribing to Tidelift which provides Enterprise support for this project as part of the Tidelift Subscription. Tidelift subscriptions also help the maintainers by funding the project, which in turn allows us to ship releases, bugfixes, and security updates more often. Security and Vulnerability Reporting Full information and description of our security policy please visit SECURITY.md Changelog See the CHANGELOG.md file for details. License Copyright (c) 2009-2022 Simone Carletti. This is Free Software distributed under the MIT license. The Public Suffix List source is subject to the terms of the Mozilla Public License, v. 2.0. Definitions tld = Top level domain, this is in reference to the last segment of a domain, sometimes the part that is directly after the \"dot\" symbol. For example, mozilla.org , the .org portion is the tld. sld = Second level domain, a domain that is directly below a top-level domain. For example, in https://www.mozilla.org/en-US/ , mozilla is the second-level domain of the .org tld. trd = Transit routing domain, or known as a subdomain. This is the part of the domain that is before the sld or root domain. For example, in https://www.mozilla.org/en-US/ , www is the trd. FQDN = Fully Qualified Domain Names, are domain names that are written with the hostname and the domain name, and include the top-level domain, the format looks like [hostname].[domain].[tld]. for ex. [www].[mozilla].[org] .","title":"Public Suffix <small>for Ruby</small>"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#public-suffix-for-ruby","text":"PublicSuffix is a Ruby domain name parser based on the Public Suffix List .","title":"Public Suffix for Ruby"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#links","text":"Homepage Repository API Documentation Introducing the Public Suffix List library for Ruby","title":"Links"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#requirements","text":"PublicSuffix requires Ruby >= 2.3 . For an older versions of Ruby use a previous release.","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#installation","text":"You can install the gem manually: gem install public_suffix Or use Bundler and define it as a dependency in your Gemfile : gem 'public_suffix' If you are upgrading to 2.0, see 2.0-Upgrade.md .","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#usage","text":"Extract the domain out from a name: PublicSuffix.domain(\"google.com\") # => \"google.com\" PublicSuffix.domain(\"www.google.com\") # => \"google.com\" PublicSuffix.domain(\"www.google.co.uk\") # => \"google.co.uk\" Parse a domain without subdomains: domain = PublicSuffix.parse(\"google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => nil domain.domain # => \"google.com\" domain.subdomain # => nil Parse a domain with subdomains: domain = PublicSuffix.parse(\"www.google.com\") # => #<PublicSuffix::Domain> domain.tld # => \"com\" domain.sld # => \"google\" domain.trd # => \"www\" domain.domain # => \"google.com\" domain.subdomain # => \"www.google.com\" Simple validation example: PublicSuffix.valid?(\"google.com\") # => true PublicSuffix.valid?(\"www.google.com\") # => true # Explicitly forbidden, it is listed as a private domain PublicSuffix.valid?(\"blogspot.com\") # => false # Unknown/not-listed TLD domains are valid by default PublicSuffix.valid?(\"example.tldnotlisted\") # => true Strict validation (without applying the default * rule): PublicSuffix.valid?(\"example.tldnotlisted\", default_rule: nil) # => false","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#fully-qualified-domain-names","text":"This library automatically recognizes Fully Qualified Domain Names. A FQDN is a domain name that end with a trailing dot. # Parse a standard domain name PublicSuffix.domain(\"www.google.com\") # => \"google.com\" # Parse a fully qualified domain name PublicSuffix.domain(\"www.google.com.\") # => \"google.com\"","title":"Fully Qualified Domain Names"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#private-domains","text":"This library has support for switching off support for private (non-ICANN). # Extract a domain including private domains (by default) PublicSuffix.domain(\"something.blogspot.com\") # => \"something.blogspot.com\" # Extract a domain excluding private domains PublicSuffix.domain(\"something.blogspot.com\", ignore_private: true) # => \"blogspot.com\" # It also works for #parse and #valid? PublicSuffix.parse(\"something.blogspot.com\", ignore_private: true) PublicSuffix.valid?(\"something.blogspot.com\", ignore_private: true) If you don't care about private domains at all, it's more efficient to exclude them when the list is parsed: # Disable support for private TLDs PublicSuffix::List.default = PublicSuffix::List.parse(File.read(PublicSuffix::List::DEFAULT_LIST_PATH), private_domains: false) # => \"blogspot.com\" PublicSuffix.domain(\"something.blogspot.com\") # => \"blogspot.com\"","title":"Private domains"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#what-is-the-public-suffix-list","text":"The Public Suffix List is a cross-vendor initiative to provide an accurate list of domain name suffixes. The Public Suffix List is an initiative of the Mozilla Project, but is maintained as a community resource. It is available for use in any software, but was originally created to meet the needs of browser manufacturers. A \"public suffix\" is one under which Internet users can directly register names. Some examples of public suffixes are \".com\", \".co.uk\" and \"pvt.k12.wy.us\". The Public Suffix List is a list of all known public suffixes.","title":"What is the Public Suffix List?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#why-the-public-suffix-list-is-better-than-any-available-regular-expression-parser","text":"Previously, browsers used an algorithm which basically only denied setting wide-ranging cookies for top-level domains with no dots (e.g. com or org). However, this did not work for top-level domains where only third-level registrations are allowed (e.g. co.uk). In these cases, websites could set a cookie for co.uk which will be passed onto every website registered under co.uk. Clearly, this was a security risk as it allowed websites other than the one setting the cookie to read it, and therefore potentially extract sensitive information. Since there is no algorithmic method of finding the highest level at which a domain may be registered for a particular top-level domain (the policies differ with each registry), the only method is to create a list of all top-level domains and the level at which domains can be registered. This is the aim of the effective TLD list. As well as being used to prevent cookies from being set where they shouldn't be, the list can also potentially be used for other applications where the registry controlled and privately controlled parts of a domain name need to be known, for example when grouping by top-level domains. Source: https://wiki.mozilla.org/Public_Suffix_List Not convinced yet? Check out this real world example .","title":"Why the Public Suffix List is better than any available Regular Expression parser?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#does-publicsuffix-make-requests-to-public-suffix-list-website","text":"No. PublicSuffix comes with a bundled list. It does not make any HTTP requests to parse or validate a domain.","title":"Does PublicSuffix make requests to Public Suffix List website?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#support","text":"Library documentation is auto-generated from the README and the source code, and it's available at https://rubydoc.info/gems/public_suffix. The PublicSuffix bug tracker is here: https://github.com/weppos/publicsuffix-ruby/issues The PublicSuffix code repository is here: https://github.com/weppos/publicsuffix-ruby. Contributions are welcome! Please include tests and/or feature coverage for every patch, and create a topic branch for every separate change you make. Consider subscribing to Tidelift which provides Enterprise support for this project as part of the Tidelift Subscription. Tidelift subscriptions also help the maintainers by funding the project, which in turn allows us to ship releases, bugfixes, and security updates more often.","title":"Support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#security-and-vulnerability-reporting","text":"Full information and description of our security policy please visit SECURITY.md","title":"Security and Vulnerability Reporting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#changelog","text":"See the CHANGELOG.md file for details.","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#license","text":"Copyright (c) 2009-2022 Simone Carletti. This is Free Software distributed under the MIT license. The Public Suffix List source is subject to the terms of the Mozilla Public License, v. 2.0.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/#definitions","text":"tld = Top level domain, this is in reference to the last segment of a domain, sometimes the part that is directly after the \"dot\" symbol. For example, mozilla.org , the .org portion is the tld. sld = Second level domain, a domain that is directly below a top-level domain. For example, in https://www.mozilla.org/en-US/ , mozilla is the second-level domain of the .org tld. trd = Transit routing domain, or known as a subdomain. This is the part of the domain that is before the sld or root domain. For example, in https://www.mozilla.org/en-US/ , www is the trd. FQDN = Fully Qualified Domain Names, are domain names that are written with the hostname and the domain name, and include the top-level domain, the format looks like [hostname].[domain].[tld]. for ex. [www].[mozilla].[org] .","title":"Definitions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/","text":"Welcome to PublicSuffix 2.0! PublicSuffix 2.0 contains a rewritten internal representation and comparison logic, that drastically increases the lookup performance. The new version also changes several internal and external API. This document documents the most relevant changes to help you upgrading from PublicSuffix 1.0 to 2.0. What's New The library is now 100% compliants with the official PublicSuffix tests. The major breaking change you may experience, is that if a domain passed as input doesn't match any rule, the rule * is assumed. You can override this behavior by passing a custom default rule with the default_rule option. The old behavior can be restored by passing default_rule: nil . PublicSuffix.domain is a new method that parses the input and returns the domain (combination of second level domain + suffix). This is a convenient helper to parse a domain name, for example when you need to determine the cookie or SSL scope. Added the ability to disable the use of private domains either at runtime, in addition to the ability to not load the private domains section when reading the list ( private_domains: false ). This feature also superseded the private_domains class-level attribute, that is no longer available. Upgrade When upgrading, here's the most relevant changes to keep an eye on: Several futile utility helpers were removed, such as Domain#rule , Domain#is_a_domain? , Domain#is_a_subdomain? , Domain#valid? . You can easily obtain the same result by having a custom method that reconstructs the logic, and/or calling PublicSuffix.{domain|parse}(domain.to_s) . PublicSuffix::List.private_domains is no longer available. Instead, you now have two ways to enable/disable the private domains: At runtime, by using the ignore_private option ruby PublicSuffix.domain(\"something.blogspot.com\", ignore_private: true) Loading a filtered list: ```ruby Disable support for private TLDs PublicSuffix::List.default = PublicSuffix::List.parse(File.read(PublicSuffix::List::DEFAULT_LIST_PATH), private_domains: false) => \"blogspot.com\" PublicSuffix.domain(\"something.blogspot.com\") => \"blogspot.com\" `` - Now that the library is 100% compliant with the official PublicSuffix algorithm, if a domain passed as input doesn't match any rule, the wildcard rule *` is assumed. This means that unlisted TLDs will be considered valid by default, when they would have been invalid in 1.x. However, you can override this behavior to emulate the 1.x behavior if needed: ```ruby 1.x: PublicSuffix.valid?(\"google.commm\") => false 2.x: PublicSuffix.valid?(\"google.commm\") => true Overriding 2.x behavior if needed: PublicSuffix.valid?(\"google.commm\", default_rule: nil) => false ````","title":"Welcome to PublicSuffix 2.0!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#welcome-to-publicsuffix-20","text":"PublicSuffix 2.0 contains a rewritten internal representation and comparison logic, that drastically increases the lookup performance. The new version also changes several internal and external API. This document documents the most relevant changes to help you upgrading from PublicSuffix 1.0 to 2.0.","title":"Welcome to PublicSuffix 2.0!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#whats-new","text":"The library is now 100% compliants with the official PublicSuffix tests. The major breaking change you may experience, is that if a domain passed as input doesn't match any rule, the rule * is assumed. You can override this behavior by passing a custom default rule with the default_rule option. The old behavior can be restored by passing default_rule: nil . PublicSuffix.domain is a new method that parses the input and returns the domain (combination of second level domain + suffix). This is a convenient helper to parse a domain name, for example when you need to determine the cookie or SSL scope. Added the ability to disable the use of private domains either at runtime, in addition to the ability to not load the private domains section when reading the list ( private_domains: false ). This feature also superseded the private_domains class-level attribute, that is no longer available.","title":"What's New"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#upgrade","text":"When upgrading, here's the most relevant changes to keep an eye on: Several futile utility helpers were removed, such as Domain#rule , Domain#is_a_domain? , Domain#is_a_subdomain? , Domain#valid? . You can easily obtain the same result by having a custom method that reconstructs the logic, and/or calling PublicSuffix.{domain|parse}(domain.to_s) . PublicSuffix::List.private_domains is no longer available. Instead, you now have two ways to enable/disable the private domains: At runtime, by using the ignore_private option ruby PublicSuffix.domain(\"something.blogspot.com\", ignore_private: true) Loading a filtered list: ```ruby","title":"Upgrade"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#disable-support-for-private-tlds","text":"PublicSuffix::List.default = PublicSuffix::List.parse(File.read(PublicSuffix::List::DEFAULT_LIST_PATH), private_domains: false)","title":"Disable support for private TLDs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#blogspotcom","text":"PublicSuffix.domain(\"something.blogspot.com\")","title":"=&gt; \"blogspot.com\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#blogspotcom_1","text":"`` - Now that the library is 100% compliant with the official PublicSuffix algorithm, if a domain passed as input doesn't match any rule, the wildcard rule *` is assumed. This means that unlisted TLDs will be considered valid by default, when they would have been invalid in 1.x. However, you can override this behavior to emulate the 1.x behavior if needed: ```ruby","title":"=&gt; \"blogspot.com\""},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#1x","text":"PublicSuffix.valid?(\"google.commm\")","title":"1.x:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#false","text":"","title":"=&gt; false"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#2x","text":"PublicSuffix.valid?(\"google.commm\")","title":"2.x:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#true","text":"","title":"=&gt; true"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#overriding-2x-behavior-if-needed","text":"PublicSuffix.valid?(\"google.commm\", default_rule: nil)","title":"Overriding 2.x behavior if needed:"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/2.0-Upgrade/#false_1","text":"````","title":"=&gt; false"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/","text":"Changelog This project uses Semantic Versioning 2.0.0 . 4.0.7 Fixes Fixed YARD rake task (GH-179) Changed Updated definitions. 4.0.6 Changed Updated definitions. 4.0.5 Changed Updated definitions. 4.0.4 Changed Updated definitions. 4.0.3 Fixed Fixed 2.7 deprecations and warnings (GH-167). [Thanks @BrianHawley] 4.0.2 Changed Updated definitions. 4.0.1 Changed Updated definitions. 4.0.0 Changed Minimum Ruby version is 2.3 Release 3.1.1 CHANGED: Updated definitions. CHANGED: Rolled back support for Ruby 2.3 (GH-161, GH-162) IMPORTANT: 3.x is the latest version compatible with Ruby 2.1 and Ruby 2.2. Release 3.1.0 CHANGED: Updated definitions. CHANGED: Minimum Ruby version is 2.3 CHANGED: Upgraded to Bundler 2.x Release 3.0.3 CHANGED: Updated definitions. Release 3.0.2 CHANGED: Updated definitions. Release 3.0.1 CHANGED: Updated definitions. CHANGED: Improve performance and avoid allocation (GH-146). [Thanks @robholland] Release 3.0.0 This new version includes a major redesign of the library internals, with the goal to drastically improve the lookup time while reducing storage space. For this reason, several public methods that are no longer applicable have been deprecated and/or removed. You can find more information at GH-133. CHANGED: Updated definitions. CHANGED: Dropped support for Ruby < 2.1 CHANGED: PublicSuffix::List#rules is now protected. You should not rely on it as the internal rule representation is subject to change to optimize performances. CHANGED: Removed PublicSuffix::List.clear , it was an unnecessary accessor method. Use PublicSuffix::List.default = nil if you really need to reset the default list. You shouldn't. CHANGED: PublicSuffix::List#select is now private. You should not use it, instead use PublicSuffix::List#find . CHANGED: PublicSuffix::List no longer implements Enumerable. Instead, use #each to loop over, or get an Enumerator. CHANGED: Redesigned internal list storage and lookup algorithm to achieve O(1) lookup time (see GH-133). Release 2.0.5 CHANGED: Updated definitions. CHANGED: Initialization performance improvements (GH-128). [Thanks @casperisfine] Release 2.0.4 FIXED: Fix a bug that caused the GEM to be published with the wrong version number in the gemspec (GH-121). CHANGED: Updated definitions. Release 2.0.3 CHANGED: Updated definitions. Release 2.0.2 CHANGED: Updated definitions. Release 2.0.1 FIXED: Fix bug that prevented .valid? to reset the default rule Release 2.0.0 NEW: Added PublicSuffix.domain # => sld.tld NEW: Added the ability to disable the use of private domains either at runtime, in addition to the ability to not load the private domains section when reading the list ( private_domains: false ). This feature also superseded the private_domains class-level attribute, that is no longer available. CHANGED: Considerable performance improvements (GH-92) CHANGED: Updated definitions. CHANGED: Removed deprecated PublicSuffix::InvalidDomain exception CHANGED: If the suffix is now listed, then the prevaling rule is \"*\" as defined by the PSL algorithm (GH-91) CHANGED: Input validation is performed only if you call PublicSuffix.parse or PublicSuffix.list CHANGED: Input with leading dot is invalid per PSL acceptance tests CHANGED: Removed private_domains class-level attribute. It is replaced by the private_domains: false option in the list parse method. CHANGED: The default list now assumes you use UTF-8 for reading the input (GH-94), REMOVED: Removed futile utility helpers such as Domain#rule , Domain#is_a_domain? , Domain#is_a_subdomain? , Domain#valid? . You can easily obtain the same result by having a custom method that reconstructs the logic, and/or calling PublicSuffix.{domain|parse}(domain.to_s) . Release 1.5.3 FIXED: Don't duplicate rule indices when creating index (GH-77). [Thanks @ags] CHANGED: Updated definitions. Release 1.5.2 CHANGED: Updated definitions. Release 1.5.1 FIXED: Ignore case for parsing and validating (GH-62) CHANGED: Updated definitions. Release 1.5.0 CHANGED: Dropped support for Ruby < 2.0 CHANGED: Updated definitions. Release 1.4.6 CHANGED: Updated definitions. Release 1.4.5 CHANGED: Updated definitions. Release 1.4.4 CHANGED: Updated definitions. Release 1.4.3 CHANGED: Updated definitions. Release 1.4.2 CHANGED: Updated definitions. Release 1.4.1 CHANGED: Updated definitions. Release 1.4.0 CHANGED: Moved the definitions in the lib folder. CHANGED: Updated definitions. Release 1.3.3 CHANGED: Updated definitions. Release 1.3.2 CHANGED: Updated definitions. Release 1.3.1 CHANGED: Updated definitions. Release 1.3.0 NEW: Ability to skip Private Domains (GH-28). [Thanks @rb2k] CHANGED: Updated definitions. Release 1.2.1 CHANGED: Updated definitions. Release 1.2.0 NEW: Allow a custom List on PublicSuffix.parse (GH-26). [Thanks @itspriddle] FIXED: PublicSuffix.parse and PublicSuffix.valid? crashes when input is nil (GH-20). CHANGED: Updated definitions. Release 1.1.3 CHANGED: Updated definitions. Release 1.1.2 CHANGED: Updated definitions. Release 1.1.1 CHANGED: Updated definitions. Release 1.1.0 FIXED: #valid? and #parse consider URIs as valid domains (GH-15) CHANGED: Updated definitions. CHANGED: Removed deprecatd PublicSuffixService::RuleList. Release 1.0.0 CHANGED: Updated definitions. Release 1.0.0.rc1 The library is now known as PublicSuffix. Release 0.9.1 CHANGED: Renamed PublicSuffixService::RuleList to PublicSuffixService::List. CHANGED: Renamed PublicSuffixService::List#list to PublicSuffixService::List#rules. CHANGED: Renamed PublicSuffixService to PublicSuffix. CHANGED: Updated definitions. Release 0.9.0 CHANGED: Minimum Ruby version increased to Ruby 1.8.7. CHANGED: rake/gempackagetask is deprecated. Use rubygems/package_task instead. Release 0.8.4 FIXED: Reverted bugfix for issue #12 for Ruby 1.8.6. This is the latest version compatible with Ruby 1.8.6. Release 0.8.3 FIXED: Fixed ArgumentError: invalid byte sequence in US-ASCII with Ruby 1.9.2 (#12). CHANGED: Updated definitions (#11). CHANGED: Renamed definitions.txt to definitions.dat. Release 0.8.2 NEW: Added support for rubygems-test. CHANGED: Integrated Bundler. CHANGED: Updated definitions. Release 0.8.1 FIXED: The files in the release 0.8.0 have wrong permission 600 and can't be loaded (#10). Release 0.8.0 CHANGED: Update public suffix list to d1a5599b49fa 2010-10-25 15:10 +0100 (#9) NEW: Add support for Fully Qualified Domain Names (#7) Release 0.7.0 CHANGED: Using YARD to document the code instead of RDoc. FIXED: RuleList cache is not recreated when a new rule is appended to the list (#6) FIXED: PublicSuffixService.valid? should return false if the domain is not defined or not allowed (#4, #5) Release 0.6.0 NEW: PublicSuffixService.parse raises DomainNotAllowed when trying to parse a domain name which exists, but is not allowed by the current definition list (#3) PublicSuffixService.parse(\"nic.do\") # => PublicSuffixService::DomainNotAllowed CHANGED: Renamed PublicSuffixService::InvalidDomain to PublicSuffixService::DomainInvalid Release 0.5.2 CHANGED: Update public suffix list to 248ea690d671 2010-09-16 18:02 +0100 Release 0.5.1 CHANGED: Update public suffix list to 14dc66dd53c1 2010-09-15 17:09 +0100 Release 0.5.0 CHANGED: Improve documentation for Domain#domain and Domain#subdomain (#1). CHANGED: Performance improvements (#2). Release 0.4.0 CHANGED: Rename library from DomainName to PublicSuffixService to reduce the probability of name conflicts. Release 0.3.1 Deprecated DomainName library. Release 0.3.0 CHANGED: DomainName#domain and DomainName#subdomain are no longer alias of Domain#sld and Domain#tld. CHANGED: Removed DomainName#labels and decoupled Rule from DomainName. CHANGED: DomainName#valid? no longer instantiates new DomainName objects. This means less overhead. CHANGED: Refactoring the entire DomainName API. Removed the internal on-the-fly parsing. Added a bunch of new methods to check and validate the DomainName. Release 0.2.0 NEW: DomainName#valid? NEW: DomainName#parse and DomainName#parse! NEW: DomainName#valid_domain? and DomainName#valid_subdomain? CHANGED: Make sure RuleList lookup is only performed once. Release 0.1.0 Initial version","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changelog","text":"This project uses Semantic Versioning 2.0.0 .","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#407","text":"","title":"4.0.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#fixes","text":"Fixed YARD rake task (GH-179)","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#406","text":"","title":"4.0.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_1","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#405","text":"","title":"4.0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_2","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#404","text":"","title":"4.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_3","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#403","text":"","title":"4.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#fixed","text":"Fixed 2.7 deprecations and warnings (GH-167). [Thanks @BrianHawley]","title":"Fixed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#402","text":"","title":"4.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_4","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#401","text":"","title":"4.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_5","text":"Updated definitions.","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#400","text":"","title":"4.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#changed_6","text":"Minimum Ruby version is 2.3","title":"Changed"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-311","text":"CHANGED: Updated definitions. CHANGED: Rolled back support for Ruby 2.3 (GH-161, GH-162) IMPORTANT: 3.x is the latest version compatible with Ruby 2.1 and Ruby 2.2.","title":"Release 3.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-310","text":"CHANGED: Updated definitions. CHANGED: Minimum Ruby version is 2.3 CHANGED: Upgraded to Bundler 2.x","title":"Release 3.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-303","text":"CHANGED: Updated definitions.","title":"Release 3.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-302","text":"CHANGED: Updated definitions.","title":"Release 3.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-301","text":"CHANGED: Updated definitions. CHANGED: Improve performance and avoid allocation (GH-146). [Thanks @robholland]","title":"Release 3.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-300","text":"This new version includes a major redesign of the library internals, with the goal to drastically improve the lookup time while reducing storage space. For this reason, several public methods that are no longer applicable have been deprecated and/or removed. You can find more information at GH-133. CHANGED: Updated definitions. CHANGED: Dropped support for Ruby < 2.1 CHANGED: PublicSuffix::List#rules is now protected. You should not rely on it as the internal rule representation is subject to change to optimize performances. CHANGED: Removed PublicSuffix::List.clear , it was an unnecessary accessor method. Use PublicSuffix::List.default = nil if you really need to reset the default list. You shouldn't. CHANGED: PublicSuffix::List#select is now private. You should not use it, instead use PublicSuffix::List#find . CHANGED: PublicSuffix::List no longer implements Enumerable. Instead, use #each to loop over, or get an Enumerator. CHANGED: Redesigned internal list storage and lookup algorithm to achieve O(1) lookup time (see GH-133).","title":"Release 3.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-205","text":"CHANGED: Updated definitions. CHANGED: Initialization performance improvements (GH-128). [Thanks @casperisfine]","title":"Release 2.0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-204","text":"FIXED: Fix a bug that caused the GEM to be published with the wrong version number in the gemspec (GH-121). CHANGED: Updated definitions.","title":"Release 2.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-203","text":"CHANGED: Updated definitions.","title":"Release 2.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-202","text":"CHANGED: Updated definitions.","title":"Release 2.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-201","text":"FIXED: Fix bug that prevented .valid? to reset the default rule","title":"Release 2.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-200","text":"NEW: Added PublicSuffix.domain # => sld.tld NEW: Added the ability to disable the use of private domains either at runtime, in addition to the ability to not load the private domains section when reading the list ( private_domains: false ). This feature also superseded the private_domains class-level attribute, that is no longer available. CHANGED: Considerable performance improvements (GH-92) CHANGED: Updated definitions. CHANGED: Removed deprecated PublicSuffix::InvalidDomain exception CHANGED: If the suffix is now listed, then the prevaling rule is \"*\" as defined by the PSL algorithm (GH-91) CHANGED: Input validation is performed only if you call PublicSuffix.parse or PublicSuffix.list CHANGED: Input with leading dot is invalid per PSL acceptance tests CHANGED: Removed private_domains class-level attribute. It is replaced by the private_domains: false option in the list parse method. CHANGED: The default list now assumes you use UTF-8 for reading the input (GH-94), REMOVED: Removed futile utility helpers such as Domain#rule , Domain#is_a_domain? , Domain#is_a_subdomain? , Domain#valid? . You can easily obtain the same result by having a custom method that reconstructs the logic, and/or calling PublicSuffix.{domain|parse}(domain.to_s) .","title":"Release 2.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-153","text":"FIXED: Don't duplicate rule indices when creating index (GH-77). [Thanks @ags] CHANGED: Updated definitions.","title":"Release 1.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-152","text":"CHANGED: Updated definitions.","title":"Release 1.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-151","text":"FIXED: Ignore case for parsing and validating (GH-62) CHANGED: Updated definitions.","title":"Release 1.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-150","text":"CHANGED: Dropped support for Ruby < 2.0 CHANGED: Updated definitions.","title":"Release 1.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-146","text":"CHANGED: Updated definitions.","title":"Release 1.4.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-145","text":"CHANGED: Updated definitions.","title":"Release 1.4.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-144","text":"CHANGED: Updated definitions.","title":"Release 1.4.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-143","text":"CHANGED: Updated definitions.","title":"Release 1.4.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-142","text":"CHANGED: Updated definitions.","title":"Release 1.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-141","text":"CHANGED: Updated definitions.","title":"Release 1.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-140","text":"CHANGED: Moved the definitions in the lib folder. CHANGED: Updated definitions.","title":"Release 1.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-133","text":"CHANGED: Updated definitions.","title":"Release 1.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-132","text":"CHANGED: Updated definitions.","title":"Release 1.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-131","text":"CHANGED: Updated definitions.","title":"Release 1.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-130","text":"NEW: Ability to skip Private Domains (GH-28). [Thanks @rb2k] CHANGED: Updated definitions.","title":"Release 1.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-121","text":"CHANGED: Updated definitions.","title":"Release 1.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-120","text":"NEW: Allow a custom List on PublicSuffix.parse (GH-26). [Thanks @itspriddle] FIXED: PublicSuffix.parse and PublicSuffix.valid? crashes when input is nil (GH-20). CHANGED: Updated definitions.","title":"Release 1.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-113","text":"CHANGED: Updated definitions.","title":"Release 1.1.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-112","text":"CHANGED: Updated definitions.","title":"Release 1.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-111","text":"CHANGED: Updated definitions.","title":"Release 1.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-110","text":"FIXED: #valid? and #parse consider URIs as valid domains (GH-15) CHANGED: Updated definitions. CHANGED: Removed deprecatd PublicSuffixService::RuleList.","title":"Release 1.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-100","text":"CHANGED: Updated definitions.","title":"Release 1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-100rc1","text":"The library is now known as PublicSuffix.","title":"Release 1.0.0.rc1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-091","text":"CHANGED: Renamed PublicSuffixService::RuleList to PublicSuffixService::List. CHANGED: Renamed PublicSuffixService::List#list to PublicSuffixService::List#rules. CHANGED: Renamed PublicSuffixService to PublicSuffix. CHANGED: Updated definitions.","title":"Release 0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-090","text":"CHANGED: Minimum Ruby version increased to Ruby 1.8.7. CHANGED: rake/gempackagetask is deprecated. Use rubygems/package_task instead.","title":"Release 0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-084","text":"FIXED: Reverted bugfix for issue #12 for Ruby 1.8.6. This is the latest version compatible with Ruby 1.8.6.","title":"Release 0.8.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-083","text":"FIXED: Fixed ArgumentError: invalid byte sequence in US-ASCII with Ruby 1.9.2 (#12). CHANGED: Updated definitions (#11). CHANGED: Renamed definitions.txt to definitions.dat.","title":"Release 0.8.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-082","text":"NEW: Added support for rubygems-test. CHANGED: Integrated Bundler. CHANGED: Updated definitions.","title":"Release 0.8.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-081","text":"FIXED: The files in the release 0.8.0 have wrong permission 600 and can't be loaded (#10).","title":"Release 0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-080","text":"CHANGED: Update public suffix list to d1a5599b49fa 2010-10-25 15:10 +0100 (#9) NEW: Add support for Fully Qualified Domain Names (#7)","title":"Release 0.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-070","text":"CHANGED: Using YARD to document the code instead of RDoc. FIXED: RuleList cache is not recreated when a new rule is appended to the list (#6) FIXED: PublicSuffixService.valid? should return false if the domain is not defined or not allowed (#4, #5)","title":"Release 0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-060","text":"NEW: PublicSuffixService.parse raises DomainNotAllowed when trying to parse a domain name which exists, but is not allowed by the current definition list (#3) PublicSuffixService.parse(\"nic.do\") # => PublicSuffixService::DomainNotAllowed CHANGED: Renamed PublicSuffixService::InvalidDomain to PublicSuffixService::DomainInvalid","title":"Release 0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-052","text":"CHANGED: Update public suffix list to 248ea690d671 2010-09-16 18:02 +0100","title":"Release 0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-051","text":"CHANGED: Update public suffix list to 14dc66dd53c1 2010-09-15 17:09 +0100","title":"Release 0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-050","text":"CHANGED: Improve documentation for Domain#domain and Domain#subdomain (#1). CHANGED: Performance improvements (#2).","title":"Release 0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-040","text":"CHANGED: Rename library from DomainName to PublicSuffixService to reduce the probability of name conflicts.","title":"Release 0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-031","text":"Deprecated DomainName library.","title":"Release 0.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-030","text":"CHANGED: DomainName#domain and DomainName#subdomain are no longer alias of Domain#sld and Domain#tld. CHANGED: Removed DomainName#labels and decoupled Rule from DomainName. CHANGED: DomainName#valid? no longer instantiates new DomainName objects. This means less overhead. CHANGED: Refactoring the entire DomainName API. Removed the internal on-the-fly parsing. Added a bunch of new methods to check and validate the DomainName.","title":"Release 0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-020","text":"NEW: DomainName#valid? NEW: DomainName#parse and DomainName#parse! NEW: DomainName#valid_domain? and DomainName#valid_subdomain? CHANGED: Make sure RuleList lookup is only performed once.","title":"Release 0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/CHANGELOG/#release-010","text":"Initial version","title":"Release 0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/SECURITY/","text":"Security Policy Supported Versions Security updates are provided only for the current minor version. If you are using a previous minor version, we recommend to upgrade to the current minor version. This project uses semantic versioning , therefore you can upgrade to a more recent minor version without incurring into breaking changes. Exceptionally, we may support previous minor versions upon request if there are significant reasons preventing to immediately switch the latest minor version. Older major versions are no longer supported. Reporting a Vulnerability To make a report, please email weppos@weppos.net. Please consider encrypting your report with GPG using the key 0x420da82a989398df . -----BEGIN PGP PUBLIC KEY BLOCK----- xsBNBE/QiI0BCACtBbjJnJIzaLb4NfjaljzT/+dvodst+wyDRE8Vwc6ujwboZjr2 0QwXScNzObPazyvkSZVh3g6PveneeSD0dSw2XDqKbbtLMg/Ss12yqXJfjavH/zjk 6Xq+nnbSnxBPzwFAAEaEFIc6H6BygJ7zHPP5WEY5QIMqifEAX//aBqHi4GXHJiHE 237Zqufdry23jBYjY7wGXAa11VsU9Iwqh6LPB9/hc1KtzjAuvvm5ufeT/iVjxGQX te1OZZk6n8xSVYeLsn97PfgYs0yauhexwD9dG7FbRCB379JxPRn5akr391qXcVOG ZA3yBXUSPOL6D1+TS1S0su5zbw2AEp4+z3SpABEBAAHNIlNpbW9uZSBDYXJsZXR0 aSA8d2VwcG9zQGdtYWlsLmNvbT7CwHcEEwEKACEFAlXH0UQCGy8FCwkIBwMFFQoJ CAsFFgIDAQACHgECF4AACgkQQg2oKpiTmN9BOQf/UHd+bmww71MkbS38KkowDu+0 1VH35aL8sFcAMUSEA4I5oPWZoBtYYPGpALLxtrSNW+SCnmmeCQVfVmLedUVHwDZo TS4qiynpqnz+Cnq4KRC8VMIyaFoiT5Vg6MLtau8hJtqZn1Wv68g0nXuprsCuf9vs z7DDZ36z8em6OJQJQ/FQ4BGogzyYHa90cJnIM6BeLiRUUpFTl1tHLlw4JFUNi8sx 6VQ1/nhcr3OyskAix5TytRnJ8uIn22m25GGdTF2WQPNfkWJQVT4ZDbCxT20acRp0 l3x1DAk3Eel8gOKzgOboB3bkI5/l1XZvNL0YWGZeyfp8I7ZqpXg/m4qLDkYU2cLA egQTAQoAJAIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAUCVf6KvAIZAQAKCRBC DagqmJOY34ABB/9WbNAh0l07UN1ePfVm6Brg2Yt8k6Q2lIRUG2xAeQj/+Kx/4lAL oY6F0jJ44kIDZqZdNA0QIqYzZRBV4iW+cQrsBUUyM+chiA3RuOsDG18sfvkyPvRy ecOVubHCN+nK2GKy1oHQkCpVFIeetr0ugB/j+xNDKJ3Oa5dGBKF29ZH5Pxg7cqwH cdkhBGMpPbBYq5pJtYGggqypELzFTG292StbtV837Eze+clWRTKtMBOHke/oKBCr YYic2fmipGC9XUiqvMEMAKYq5WWWXIlcSVSnBDdxq41tXjKK4XMVgoOboZCcNFvh 0NxuDQATk1YruRZOS4SpBPXykEA1pK/zm3WmzSNTaW1vbmUgQ2FybGV0dGkgPHdl cHBvc0B3ZXBwb3MubmV0PsLAeQQTAQIAIwUCT9CIjQIbLwcLCQgHAwIBBhUIAgkK CwQWAgMBAh4BAheAAAoJEEINqCqYk5jfGWcH/Ax3EhAckGeCqNYE5BTx94bKB1LL vUjeUoImMtGGFxQu2jNOAjtpuyjihm9uHBZ+dxaxHHrhE11f+0sDcwvW8qtKEzOs GESr01VqTaVFS2JOEHhLphXseaLXJe32Osz0kHCZmrz1fCwv3b8QuWBifn8oVzcV vrE7lGC6pGwaiUvMsvA++RUquTlNVlh8uRrqcQCU8Ne9lSoDWHlUJes5s4FoCh3R oVBcKPsx3m/P9+GlEgTDqYP+WU3sfSfJYERH0r0NAYP96m2e7UQrqdgvMTVVDkPB UB9efZzgkL7u9IAqmLU2klSGdEZnJ8t1AsjEyHXMztC7ICUhRFCeXHdTNhHCwHwE EwEKACYCGy8HCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAUCVcfRaQIZAQAKCRBC DagqmJOY31y1B/41I/SsWwDqJP/Y3LzzatGmIv/gy+LkJBBTr/NV0NYzKV2XJ1BG ese2ZE4tKKdG4HDwF+IwFLBHcPZRv358IwwTRPnzeO23mxpTYAnRCdg/pcaYIJ9r OxIOP+R52YbgGrNKcezVA+7TY9za072P7Bk85jTM2FNfqevaf/YQ4GRcGLQ3JI8N tBUdvrOEETDpR0QFTr22Wv1C7UfPDsSf7ZUM7zJ38CmDji8JSlr6y75/LYSY50BB 8EHb03QxyePe98A3WzvOoqamiCIe9bRzH5IqRAtJYDX8cK4PZmp43bQhrjdjawCc AU/OY9iz+zCw00+b6CNiRb59N+OwpNJh5iNNwsB5BBMBCgAjAhsvBwsJCAcDAgEG FQgCCQoLBBYCAwECHgECF4AFAlX+iq0ACgkQQg2oKpiTmN/z2gf/VbcQHgTlXFYa Sq/dE7S54uGFrdzHOV3IJyl+ByMwVoKn6zdpksRoyt7jPV3RonrUO7jEcrt7VKCU 2KC7/MZMDoUsn9BXXTtUk+uTCNh8qllR0Fo/FvWM9RJKmcDMKwAJwcKIgbfUBJGx 1N6pP2DUc+YCnEerRbnQ1DWJUM7BaOEN6bvPxuGblPst1l6S5VktFj3gZGYItHrs pit5pesILP8K6B6VCNP2WXXYvYQo7yyYcG8WBWXin8/SdNwU68lUbfhhQVIKv6LU h0wvgG97NsBPrFbij0K6O63FufnNr9WLMZhAzi0h6gNK2HKAyw9AZNKpPccwg+mX Huc/4CPRlM0uU2ltb25lIENhcmxldHRpIDxzaW1vbmUuY2FybGV0dGlAZG5zaW1w bGUuY29tPsLAdwQTAQoAIQUCVh4ipAIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIX gAAKCRBCDagqmJOY329iCACpOY5SV7hwOZ8VqmRfxRoHQFQe9Owr+hD3eL0AKZaJ V918dCPrrxbAmwwMAC8pS8J4CmrrTR27kxcUgVwcfyydFPrgST5pg+H7UTrBR045 4Npw1+m99I2Pyyl3oaym4lKJFbp2c2DGODEzTg8kKfjk0cb8bd+MJrXqFyod1z5r 0pfexwaLVt1Hz+ZsmFIPO1ISHYBPV8OkpL8Kgb8WtY6REntgNjfcmtHNi0VWQ7+N vgeYqdhscX8c9ROe26BiiiGXphRlAsCU/VLHOJkzoW3f9QLy4z01Xj/7OaD0JkHS HrES1ye3ZDxnjnTRdh4U8ntJ+L+xnePcFQA2t0eCbPwIzSZTaW1vbmUgQ2FybGV0 dGkgPHNpbW9uZUBjYXJsZXR0aS5uYW1lPsLAdwQTAQoAIQUCVf7gmwIbLwULCQgH AwUVCgkICwUWAgMBAAIeAQIXgAAKCRBCDagqmJOY37L+B/45pWT3wgm43+kzHVOT j63m4zmRb53TGZToRSxz3acyuVSuqU9Tv010F0ZV9ccb0NDeN+88s9tEisuoO0Rz 5vhC8AtwRUyR3ADE9pBtvvxT+4R9y8yYNTCIX45VPG9ZPp9+7i+XCdKtz30KIV7r smktd2FrK16r/KUN8+03iZSgzQ9lsTmXK5L7zH/f3Tqhbfvybr4+M71KGnSoP+iP vwfsoBb5rhijQLOykTb+VzdDpHQbupwxwm/3S4nsA4U6tonIywlJgBDSjgDjQj0i Ez+Db2Wt59y6LoksRQogvJqm0nuxFUWMZc47zdhsRnqmxUYTNpKaJPWc6pfxsQPK ZvTjzsBNBE/QiI0BCACsaNbG6kyKJBWL5jPhebsijk8PCfSHte1jNCA5l/NvaImZ 6ORq9f8S9MWlYxmzyUkVJaWrv+9p5zmjwcaegjerj6ggjPDEXlZG41Z4YE1/R8pf wkSvrkLziBxZDB1aYplg8kgXkaIf2yi2FrMPSi04sjvQbBSCcIJeh6+vGK8tIJTn e0tQbEvRorTwBAPAFlpx/bdk1wZYu11vFKbckhKWou7f8XSdn9ng9cY5uK+xBlFU 2ORgL1ygeIoY9uRvNZG2ncvCvxUPgOqbo31R8KPyvV4rNNvGBOfxQER9LbieBF2I 5I1gpyboGWKcXu1eV7tOpjtW6LHt+6NHhE6L1Lw1ABEBAAHCwX4EGAECAAkFAk/Q iI0CGy4BKQkQQg2oKpiTmN/AXSAEGQECAAYFAk/QiI0ACgkQcBROh493BN9hdwf9 GjiF1GcQN+3TZkXdr2WY0AlbcA/wBp6+ShnqcoU5XLuA0RY3+rWGuaSc2buLke6Y 2MhMAYcgmPdG+WTBoW5dWQGXBZ1IHYVR8HLGaF+Vate1MofE1BNHXhnilIMMfH4G Tcr3Z3/FaSk9OdHlyiE/Jo7++8PQ+auHVyjtqry+/ysAnyr+lnCn+K4E0PQ1fYpP fiawKtfSqk9h6HjjMyx9Adrz+ljXh+NyVqYZUfRytjgO+v+dAQmMczT1EawLTdX+ trx1tHR549pEey7in5QKsje3GLH4zq4mCdWBlivQxmmmlvR07DysLADMbcpjKK2g utfzygZHCU9hWGR3wbWZ7lXjB/0ZzutNaNYzSCkiC8PIWH1bG+TJO9pslHwP+aBJ NGAmcwyOH9Bub2CSXikQFZNUmVRwtl7mN4bVAHI8zbMd6xdlX22yDgQei54dPXDw UYsvGE4zmrD97he1EYcIOKMFHzlJNcWK+uR7lEq6mv7SFGnBr8qTYZRi1bySRgwd UORuDV12GKTen9WectKtepW0fgYSz+udbDKQyyRef+7xGtCErWRL7f1qr8xm60da +gSwyD/WkPTY8SP2mdq4u+6m4dWS26kKoENwuL7jUktl/C/EG7NmUKURbXG8lmeu q59MIs/Fb3SgaO+zN2FZTYp6dyRJHbeEz55JdOu6F+6ihZYH =j6Xr -----END PGP PUBLIC KEY BLOCK----- Tracking Security Updates Information about security vulnerabilities are published in the Security Advisories page.","title":"Security Policy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/SECURITY/#security-policy","text":"","title":"Security Policy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/SECURITY/#supported-versions","text":"Security updates are provided only for the current minor version. If you are using a previous minor version, we recommend to upgrade to the current minor version. This project uses semantic versioning , therefore you can upgrade to a more recent minor version without incurring into breaking changes. Exceptionally, we may support previous minor versions upon request if there are significant reasons preventing to immediately switch the latest minor version. Older major versions are no longer supported.","title":"Supported Versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/SECURITY/#reporting-a-vulnerability","text":"To make a report, please email weppos@weppos.net. Please consider encrypting your report with GPG using the key 0x420da82a989398df . -----BEGIN PGP PUBLIC KEY BLOCK----- xsBNBE/QiI0BCACtBbjJnJIzaLb4NfjaljzT/+dvodst+wyDRE8Vwc6ujwboZjr2 0QwXScNzObPazyvkSZVh3g6PveneeSD0dSw2XDqKbbtLMg/Ss12yqXJfjavH/zjk 6Xq+nnbSnxBPzwFAAEaEFIc6H6BygJ7zHPP5WEY5QIMqifEAX//aBqHi4GXHJiHE 237Zqufdry23jBYjY7wGXAa11VsU9Iwqh6LPB9/hc1KtzjAuvvm5ufeT/iVjxGQX te1OZZk6n8xSVYeLsn97PfgYs0yauhexwD9dG7FbRCB379JxPRn5akr391qXcVOG ZA3yBXUSPOL6D1+TS1S0su5zbw2AEp4+z3SpABEBAAHNIlNpbW9uZSBDYXJsZXR0 aSA8d2VwcG9zQGdtYWlsLmNvbT7CwHcEEwEKACEFAlXH0UQCGy8FCwkIBwMFFQoJ CAsFFgIDAQACHgECF4AACgkQQg2oKpiTmN9BOQf/UHd+bmww71MkbS38KkowDu+0 1VH35aL8sFcAMUSEA4I5oPWZoBtYYPGpALLxtrSNW+SCnmmeCQVfVmLedUVHwDZo TS4qiynpqnz+Cnq4KRC8VMIyaFoiT5Vg6MLtau8hJtqZn1Wv68g0nXuprsCuf9vs z7DDZ36z8em6OJQJQ/FQ4BGogzyYHa90cJnIM6BeLiRUUpFTl1tHLlw4JFUNi8sx 6VQ1/nhcr3OyskAix5TytRnJ8uIn22m25GGdTF2WQPNfkWJQVT4ZDbCxT20acRp0 l3x1DAk3Eel8gOKzgOboB3bkI5/l1XZvNL0YWGZeyfp8I7ZqpXg/m4qLDkYU2cLA egQTAQoAJAIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIXgAUCVf6KvAIZAQAKCRBC DagqmJOY34ABB/9WbNAh0l07UN1ePfVm6Brg2Yt8k6Q2lIRUG2xAeQj/+Kx/4lAL oY6F0jJ44kIDZqZdNA0QIqYzZRBV4iW+cQrsBUUyM+chiA3RuOsDG18sfvkyPvRy ecOVubHCN+nK2GKy1oHQkCpVFIeetr0ugB/j+xNDKJ3Oa5dGBKF29ZH5Pxg7cqwH cdkhBGMpPbBYq5pJtYGggqypELzFTG292StbtV837Eze+clWRTKtMBOHke/oKBCr YYic2fmipGC9XUiqvMEMAKYq5WWWXIlcSVSnBDdxq41tXjKK4XMVgoOboZCcNFvh 0NxuDQATk1YruRZOS4SpBPXykEA1pK/zm3WmzSNTaW1vbmUgQ2FybGV0dGkgPHdl cHBvc0B3ZXBwb3MubmV0PsLAeQQTAQIAIwUCT9CIjQIbLwcLCQgHAwIBBhUIAgkK CwQWAgMBAh4BAheAAAoJEEINqCqYk5jfGWcH/Ax3EhAckGeCqNYE5BTx94bKB1LL vUjeUoImMtGGFxQu2jNOAjtpuyjihm9uHBZ+dxaxHHrhE11f+0sDcwvW8qtKEzOs GESr01VqTaVFS2JOEHhLphXseaLXJe32Osz0kHCZmrz1fCwv3b8QuWBifn8oVzcV vrE7lGC6pGwaiUvMsvA++RUquTlNVlh8uRrqcQCU8Ne9lSoDWHlUJes5s4FoCh3R oVBcKPsx3m/P9+GlEgTDqYP+WU3sfSfJYERH0r0NAYP96m2e7UQrqdgvMTVVDkPB UB9efZzgkL7u9IAqmLU2klSGdEZnJ8t1AsjEyHXMztC7ICUhRFCeXHdTNhHCwHwE EwEKACYCGy8HCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAUCVcfRaQIZAQAKCRBC DagqmJOY31y1B/41I/SsWwDqJP/Y3LzzatGmIv/gy+LkJBBTr/NV0NYzKV2XJ1BG ese2ZE4tKKdG4HDwF+IwFLBHcPZRv358IwwTRPnzeO23mxpTYAnRCdg/pcaYIJ9r OxIOP+R52YbgGrNKcezVA+7TY9za072P7Bk85jTM2FNfqevaf/YQ4GRcGLQ3JI8N tBUdvrOEETDpR0QFTr22Wv1C7UfPDsSf7ZUM7zJ38CmDji8JSlr6y75/LYSY50BB 8EHb03QxyePe98A3WzvOoqamiCIe9bRzH5IqRAtJYDX8cK4PZmp43bQhrjdjawCc AU/OY9iz+zCw00+b6CNiRb59N+OwpNJh5iNNwsB5BBMBCgAjAhsvBwsJCAcDAgEG FQgCCQoLBBYCAwECHgECF4AFAlX+iq0ACgkQQg2oKpiTmN/z2gf/VbcQHgTlXFYa Sq/dE7S54uGFrdzHOV3IJyl+ByMwVoKn6zdpksRoyt7jPV3RonrUO7jEcrt7VKCU 2KC7/MZMDoUsn9BXXTtUk+uTCNh8qllR0Fo/FvWM9RJKmcDMKwAJwcKIgbfUBJGx 1N6pP2DUc+YCnEerRbnQ1DWJUM7BaOEN6bvPxuGblPst1l6S5VktFj3gZGYItHrs pit5pesILP8K6B6VCNP2WXXYvYQo7yyYcG8WBWXin8/SdNwU68lUbfhhQVIKv6LU h0wvgG97NsBPrFbij0K6O63FufnNr9WLMZhAzi0h6gNK2HKAyw9AZNKpPccwg+mX Huc/4CPRlM0uU2ltb25lIENhcmxldHRpIDxzaW1vbmUuY2FybGV0dGlAZG5zaW1w bGUuY29tPsLAdwQTAQoAIQUCVh4ipAIbLwULCQgHAwUVCgkICwUWAgMBAAIeAQIX gAAKCRBCDagqmJOY329iCACpOY5SV7hwOZ8VqmRfxRoHQFQe9Owr+hD3eL0AKZaJ V918dCPrrxbAmwwMAC8pS8J4CmrrTR27kxcUgVwcfyydFPrgST5pg+H7UTrBR045 4Npw1+m99I2Pyyl3oaym4lKJFbp2c2DGODEzTg8kKfjk0cb8bd+MJrXqFyod1z5r 0pfexwaLVt1Hz+ZsmFIPO1ISHYBPV8OkpL8Kgb8WtY6REntgNjfcmtHNi0VWQ7+N vgeYqdhscX8c9ROe26BiiiGXphRlAsCU/VLHOJkzoW3f9QLy4z01Xj/7OaD0JkHS HrES1ye3ZDxnjnTRdh4U8ntJ+L+xnePcFQA2t0eCbPwIzSZTaW1vbmUgQ2FybGV0 dGkgPHNpbW9uZUBjYXJsZXR0aS5uYW1lPsLAdwQTAQoAIQUCVf7gmwIbLwULCQgH AwUVCgkICwUWAgMBAAIeAQIXgAAKCRBCDagqmJOY37L+B/45pWT3wgm43+kzHVOT j63m4zmRb53TGZToRSxz3acyuVSuqU9Tv010F0ZV9ccb0NDeN+88s9tEisuoO0Rz 5vhC8AtwRUyR3ADE9pBtvvxT+4R9y8yYNTCIX45VPG9ZPp9+7i+XCdKtz30KIV7r smktd2FrK16r/KUN8+03iZSgzQ9lsTmXK5L7zH/f3Tqhbfvybr4+M71KGnSoP+iP vwfsoBb5rhijQLOykTb+VzdDpHQbupwxwm/3S4nsA4U6tonIywlJgBDSjgDjQj0i Ez+Db2Wt59y6LoksRQogvJqm0nuxFUWMZc47zdhsRnqmxUYTNpKaJPWc6pfxsQPK ZvTjzsBNBE/QiI0BCACsaNbG6kyKJBWL5jPhebsijk8PCfSHte1jNCA5l/NvaImZ 6ORq9f8S9MWlYxmzyUkVJaWrv+9p5zmjwcaegjerj6ggjPDEXlZG41Z4YE1/R8pf wkSvrkLziBxZDB1aYplg8kgXkaIf2yi2FrMPSi04sjvQbBSCcIJeh6+vGK8tIJTn e0tQbEvRorTwBAPAFlpx/bdk1wZYu11vFKbckhKWou7f8XSdn9ng9cY5uK+xBlFU 2ORgL1ygeIoY9uRvNZG2ncvCvxUPgOqbo31R8KPyvV4rNNvGBOfxQER9LbieBF2I 5I1gpyboGWKcXu1eV7tOpjtW6LHt+6NHhE6L1Lw1ABEBAAHCwX4EGAECAAkFAk/Q iI0CGy4BKQkQQg2oKpiTmN/AXSAEGQECAAYFAk/QiI0ACgkQcBROh493BN9hdwf9 GjiF1GcQN+3TZkXdr2WY0AlbcA/wBp6+ShnqcoU5XLuA0RY3+rWGuaSc2buLke6Y 2MhMAYcgmPdG+WTBoW5dWQGXBZ1IHYVR8HLGaF+Vate1MofE1BNHXhnilIMMfH4G Tcr3Z3/FaSk9OdHlyiE/Jo7++8PQ+auHVyjtqry+/ysAnyr+lnCn+K4E0PQ1fYpP fiawKtfSqk9h6HjjMyx9Adrz+ljXh+NyVqYZUfRytjgO+v+dAQmMczT1EawLTdX+ trx1tHR549pEey7in5QKsje3GLH4zq4mCdWBlivQxmmmlvR07DysLADMbcpjKK2g utfzygZHCU9hWGR3wbWZ7lXjB/0ZzutNaNYzSCkiC8PIWH1bG+TJO9pslHwP+aBJ NGAmcwyOH9Bub2CSXikQFZNUmVRwtl7mN4bVAHI8zbMd6xdlX22yDgQei54dPXDw UYsvGE4zmrD97he1EYcIOKMFHzlJNcWK+uR7lEq6mv7SFGnBr8qTYZRi1bySRgwd UORuDV12GKTen9WectKtepW0fgYSz+udbDKQyyRef+7xGtCErWRL7f1qr8xm60da +gSwyD/WkPTY8SP2mdq4u+6m4dWS26kKoENwuL7jUktl/C/EG7NmUKURbXG8lmeu q59MIs/Fb3SgaO+zN2FZTYp6dyRJHbeEz55JdOu6F+6ihZYH =j6Xr -----END PGP PUBLIC KEY BLOCK-----","title":"Reporting a Vulnerability"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/public_suffix-4.0.7/SECURITY/#tracking-security-updates","text":"Information about security vulnerabilities are published in the Security Advisories page.","title":"Tracking Security Updates"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/","text":"rb-fsevent Very simple & usable Mac OSX FSEvents API Signals are working (really) Tested on MRI 2.4.1, RBX 3.72, JRuby 1.7.26 and 9.1.8.0 Tested on 10.8 HFS+ filename corruption bug There is a very long-standing (since 2011) OSX bug where sometimes the filename metadata for HFS+ filesystems will get corrupted, resulting in some APIs returning one case for a file, and other APIs returning another. The result is that sometimes, for no visible reason to the user , fsevents would simply not work. As of rb-fsevent 0.9.5 this issue is properly detected and an insanely hacky (but effective) workaround is used that replaces the system realpath() with a custom implementation that should almost always return the same value as the kernel reporting (thus fixing fsevents). The major flaw in the workaround is that it may return the wrong path for hard links. Please note that this doesn't repair the underlying issue on disk. Other apps and libraries using fsevents will continue to break with no warning. There may be other issues unrelated to fsevents. This bug is resolved in MacOS 10.12 and all users are strongly encouraged to upgrade. Install gem install rb-fsevent re-compilation rb-fsevent comes with a pre-compiled fsevent_watch binary supporting x86_64 on 10.9 and above. The binary is codesigned with my (Travis Tilley) Developer ID as an extra precaution when distributing pre-compiled code and contains an embedded plist describing its build environment. This should be sufficient for most users, but if you need to use rb-fsevent on 10.8 or lower then recompilation is necessary. This can be done by entering the installed gem's ext directory and running: MACOSX_DEPLOYMENT_TARGET=\"10.7\" rake replace_exe The following ENV vars are recognized: CC CFLAGS ARCHFLAGS MACOSX_DEPLOYMENT_TARGET FWDEBUG (enables debug mode, printing an obscene number of informational messages to STDERR) embedded plist You can retrieve the values in the embedded plist via the CLI: fsevent_watch --show-plist The output is essentially formatted as \"#{key}:\\n #{value}\\n\" to make it easier to read than plist style xml. The result looks like this: DTSDKName: macosx10.5 FSEWBuildTriple: i386-apple-darwin10.8.0 FSEWCC: /usr/bin/gcc-4.2 DTSDKPath: /Developer/SDKs/MacOSX10.5.sdk FSEWCCVersion: i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5666) (dot 3) FSEWCFLAGS: -fconstant-cfstrings -fno-strict-aliasing -Wall -mmacosx-version-min=10.5 -O3 If, for some perverse reason, you prefer to look at the xml... it can be retrieved via: otool -s __TEXT __info_plist ./bin/fsevent_watch | grep ^0 | xxd -r - codesign You can verify code signing information for a specific fsevent_watch via: codesign -d -vvv ./bin/fsevent_watch If you're using the pre-compiled binary, then the output should contain something to the effect of: Authority=Developer ID Application: Travis Tilley Authority=Developer ID Certification Authority Authority=Apple Root CA Timestamp=Dec 31, 2012 12:49:13 PM Usage Singular path require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] fsevent = FSEvent.new fsevent.watch paths do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths and additional options as a Hash require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = {:latency => 1.5, :no_defer => true } fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths and additional options as an Array require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = ['--latency', 1.5, '--no-defer'] fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Using full event information require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |paths, event_meta| event_meta['events'].each do |event| puts \"event ID: #{event['id']}\" puts \"path: #{event['path']}\" puts \"c flags: #{event['cflags']}\" puts \"named flags: #{event['flags'].join(', ')}\" # named flags will include strings such as `ItemInodeMetaMod` or `OwnEvent` end end fsevent.run Options When defining options using a hash or hash-like object, it gets checked for validity and converted to the appropriate fsevent_watch commandline arguments array when the FSEvent class is instantiated. This is obviously the safest and preferred method of passing in options. You may, however, choose to pass in an array of commandline arguments as your options value and it will be passed on, unmodified, to the fsevent_watch binary when called. So far, the following options are supported: :latency => 0.5 # in seconds :no_defer => true :watch_root => true :since_when => 18446744073709551615 # an FSEventStreamEventId :file_events => true Latency The :latency parameter determines how long the service should wait after the first event before passing that information along to the client. If your latency is set to 4 seconds, and 300 changes occur in the first three, then the callback will be fired only once. If latency is set to 0.1 in the exact same scenario, you will see that callback fire somewhere closer to between 25 and 30 times. Setting a higher latency value allows for more effective temporal coalescing, resulting in fewer callbacks and greater overall efficiency... at the cost of apparent responsiveness. Setting this to a reasonably high value (and NOT setting :no_defer) is particularly well suited for background, daemon, or batch processing applications. Implementation note: It appears that FSEvents will only coalesce events from a maximum of 32 distinct subpaths, making the above completely accurate only when events are to fewer than 32 subpaths. Creating 300 files in one directory, for example, or 30 files in 10 subdirectories, but not 300 files within 300 subdirectories. In the latter case, you may receive 31 callbacks in one go after the latency period. As this appears to be an implementation detail, the number could potentially differ across OS revisions. It is entirely possible that this number is somehow configurable, but I have not yet discovered an accepted method of doing so. NoDefer The :no_defer option changes the behavior of the latency parameter completely. Rather than waiting for $latency period of time before sending along events in an attempt to coalesce a potential deluge ahead of time, that first event is sent along to the client immediately and is followed by a $latency period of silence before sending along any additional events that occurred within that period. This behavior is particularly useful for interactive applications where that feeling of apparent responsiveness is most important, but you still don't want to get overwhelmed by a series of events that occur in rapid succession. WatchRoot The :watch_root option allows for catching the scenario where you start watching \"~/src/demo_project\" and either it is later renamed to \"~/src/awesome_sauce_3000\" or the path changes in such a manner that the original directory is now at \"~/clients/foo/iteration4/demo_project\". Unfortunately, while this behavior is somewhat supported in the fsevent_watch binary built as part of this project, support for passing across detailed metadata is not (yet). As a result, you would not receive the appropriate RootChanged event and be able to react appropriately. Also, since the C code doesn't open watched directories and retain that file descriptor as part of path-specific callback metadata, we are unable to issue an F_GETPATH fcntl() to determine the directory's new path. Please do not use this option until proper support is added (or, even better, add it and submit a pull request). SinceWhen The FSEventStreamEventId passed in to :since_when is used as a base for reacting to historic events. Unfortunately, not only is the metadata for transitioning from historic to live events not currently passed along, but it is incorrectly passed as a change event on the root path, and only per-host event streams are currently supported. When using per-host event streams, the event IDs are not guaranteed to be unique or contiguous when shared volumes (firewire/USB/net/etc) are used on multiple macs. Please do not use this option until proper support is added, unless it's acceptable for you to receive that one fake event that's handled incorrectly when events transition from historical to live. Even in that scenario, there's no metadata available for determining the FSEventStreamEventId of the last received event. WARNING: passing in 0 as the parameter to :since_when will return events for every directory modified since \"the beginning of time\". FileEvents Prepare yourself for an obscene number of callbacks. Realistically, an \"Atomic Save\" could easily fire maybe 6 events for the combination of creating the new file, changing metadata/permissions, writing content, swapping out the old file for the new may itself result in multiple events being fired, and so forth. By the time you get the event for the temporary file being created as part of the atomic save, it will already be gone and swapped with the original file. This and issues of a similar nature have prevented me from adding the option to the ruby code despite the fsevent_watch binary supporting file level events for quite some time now. Mountain Lion seems to be better at coalescing needless events, but that might just be my imagination. Debugging output If the gem is re-compiled with the environment variable FWDEBUG set, then fsevent_watch will be built with its various DEBUG sections defined, and the output to STDERR is truly verbose (and hopefully helpful in debugging your application and not just fsevent_watch itself). If enough people find this to be directly useful when developing code that makes use of rb-fsevent, then it wouldn't be hard to clean this up and make it a feature enabled by a commandline argument instead. Until somebody files an issue, however, I will assume otherwise. append_path called for: /tmp/moo/cow/ resolved path to: /private/tmp/moo/cow config.sinceWhen 18446744073709551615 config.latency 0.300000 config.flags 00000000 config.paths /private/tmp/moo/cow FSEventStreamRef @ 0x100108540: allocator = 0x7fff705a4ee0 callback = 0x10000151e context = {0, 0x0, 0x0, 0x0, 0x0} numPathsToWatch = 1 pathsToWatch = 0x7fff705a4ee0 pathsToWatch[0] = '/private/tmp/moo/cow' latestEventId = -1 latency = 300000 (microseconds) flags = 0x00000000 runLoop = 0x0 runLoopMode = 0x0 FSEventStreamCallback fired! numEvents: 32 event path: /private/tmp/moo/cow/1/a/ event flags: 00000000 event ID: 1023767 event path: /private/tmp/moo/cow/1/b/ event flags: 00000000 event ID: 1023782 event path: /private/tmp/moo/cow/1/c/ event flags: 00000000 event ID: 1023797 event path: /private/tmp/moo/cow/1/d/ event flags: 00000000 event ID: 1023812 [etc] Development Source hosted at GitHub Report issues/Questions/Feature requests on GitHub Issues Pull requests are quite welcome! Please ensure that your commits are in a topic branch for each individual changeset that can be reasonably isolated. It is also important to ensure that your changes are well tested... whether that means new tests, modified tests, or fixing a scenario where the existing tests currently fail. If you have rbenv and ruby-build, we have a helper task for running the testsuite in all of them: rake spec:portability The list of tested targets is currently: %w[2.4.1 rbx-3.72 jruby-1.7.26 jruby-9.1.8.0] Authors Travis Tilley Thibaud Guillaume-Gentil Andrey Tarantsov","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#rb-fsevent","text":"Very simple & usable Mac OSX FSEvents API Signals are working (really) Tested on MRI 2.4.1, RBX 3.72, JRuby 1.7.26 and 9.1.8.0 Tested on 10.8","title":"rb-fsevent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#hfs-filename-corruption-bug","text":"There is a very long-standing (since 2011) OSX bug where sometimes the filename metadata for HFS+ filesystems will get corrupted, resulting in some APIs returning one case for a file, and other APIs returning another. The result is that sometimes, for no visible reason to the user , fsevents would simply not work. As of rb-fsevent 0.9.5 this issue is properly detected and an insanely hacky (but effective) workaround is used that replaces the system realpath() with a custom implementation that should almost always return the same value as the kernel reporting (thus fixing fsevents). The major flaw in the workaround is that it may return the wrong path for hard links. Please note that this doesn't repair the underlying issue on disk. Other apps and libraries using fsevents will continue to break with no warning. There may be other issues unrelated to fsevents. This bug is resolved in MacOS 10.12 and all users are strongly encouraged to upgrade.","title":"HFS+ filename corruption bug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#install","text":"gem install rb-fsevent","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#re-compilation","text":"rb-fsevent comes with a pre-compiled fsevent_watch binary supporting x86_64 on 10.9 and above. The binary is codesigned with my (Travis Tilley) Developer ID as an extra precaution when distributing pre-compiled code and contains an embedded plist describing its build environment. This should be sufficient for most users, but if you need to use rb-fsevent on 10.8 or lower then recompilation is necessary. This can be done by entering the installed gem's ext directory and running: MACOSX_DEPLOYMENT_TARGET=\"10.7\" rake replace_exe The following ENV vars are recognized: CC CFLAGS ARCHFLAGS MACOSX_DEPLOYMENT_TARGET FWDEBUG (enables debug mode, printing an obscene number of informational messages to STDERR)","title":"re-compilation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#embedded-plist","text":"You can retrieve the values in the embedded plist via the CLI: fsevent_watch --show-plist The output is essentially formatted as \"#{key}:\\n #{value}\\n\" to make it easier to read than plist style xml. The result looks like this: DTSDKName: macosx10.5 FSEWBuildTriple: i386-apple-darwin10.8.0 FSEWCC: /usr/bin/gcc-4.2 DTSDKPath: /Developer/SDKs/MacOSX10.5.sdk FSEWCCVersion: i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5666) (dot 3) FSEWCFLAGS: -fconstant-cfstrings -fno-strict-aliasing -Wall -mmacosx-version-min=10.5 -O3 If, for some perverse reason, you prefer to look at the xml... it can be retrieved via: otool -s __TEXT __info_plist ./bin/fsevent_watch | grep ^0 | xxd -r -","title":"embedded plist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#codesign","text":"You can verify code signing information for a specific fsevent_watch via: codesign -d -vvv ./bin/fsevent_watch If you're using the pre-compiled binary, then the output should contain something to the effect of: Authority=Developer ID Application: Travis Tilley Authority=Developer ID Certification Authority Authority=Apple Root CA Timestamp=Dec 31, 2012 12:49:13 PM","title":"codesign"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#singular-path","text":"require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Singular path"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#multiple-paths","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] fsevent = FSEvent.new fsevent.watch paths do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#multiple-paths-and-additional-options-as-a-hash","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = {:latency => 1.5, :no_defer => true } fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths and additional options as a Hash"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#multiple-paths-and-additional-options-as-an-array","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = ['--latency', 1.5, '--no-defer'] fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths and additional options as an Array"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#using-full-event-information","text":"require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |paths, event_meta| event_meta['events'].each do |event| puts \"event ID: #{event['id']}\" puts \"path: #{event['path']}\" puts \"c flags: #{event['cflags']}\" puts \"named flags: #{event['flags'].join(', ')}\" # named flags will include strings such as `ItemInodeMetaMod` or `OwnEvent` end end fsevent.run","title":"Using full event information"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#options","text":"When defining options using a hash or hash-like object, it gets checked for validity and converted to the appropriate fsevent_watch commandline arguments array when the FSEvent class is instantiated. This is obviously the safest and preferred method of passing in options. You may, however, choose to pass in an array of commandline arguments as your options value and it will be passed on, unmodified, to the fsevent_watch binary when called. So far, the following options are supported: :latency => 0.5 # in seconds :no_defer => true :watch_root => true :since_when => 18446744073709551615 # an FSEventStreamEventId :file_events => true","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#latency","text":"The :latency parameter determines how long the service should wait after the first event before passing that information along to the client. If your latency is set to 4 seconds, and 300 changes occur in the first three, then the callback will be fired only once. If latency is set to 0.1 in the exact same scenario, you will see that callback fire somewhere closer to between 25 and 30 times. Setting a higher latency value allows for more effective temporal coalescing, resulting in fewer callbacks and greater overall efficiency... at the cost of apparent responsiveness. Setting this to a reasonably high value (and NOT setting :no_defer) is particularly well suited for background, daemon, or batch processing applications. Implementation note: It appears that FSEvents will only coalesce events from a maximum of 32 distinct subpaths, making the above completely accurate only when events are to fewer than 32 subpaths. Creating 300 files in one directory, for example, or 30 files in 10 subdirectories, but not 300 files within 300 subdirectories. In the latter case, you may receive 31 callbacks in one go after the latency period. As this appears to be an implementation detail, the number could potentially differ across OS revisions. It is entirely possible that this number is somehow configurable, but I have not yet discovered an accepted method of doing so.","title":"Latency"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#nodefer","text":"The :no_defer option changes the behavior of the latency parameter completely. Rather than waiting for $latency period of time before sending along events in an attempt to coalesce a potential deluge ahead of time, that first event is sent along to the client immediately and is followed by a $latency period of silence before sending along any additional events that occurred within that period. This behavior is particularly useful for interactive applications where that feeling of apparent responsiveness is most important, but you still don't want to get overwhelmed by a series of events that occur in rapid succession.","title":"NoDefer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#watchroot","text":"The :watch_root option allows for catching the scenario where you start watching \"~/src/demo_project\" and either it is later renamed to \"~/src/awesome_sauce_3000\" or the path changes in such a manner that the original directory is now at \"~/clients/foo/iteration4/demo_project\". Unfortunately, while this behavior is somewhat supported in the fsevent_watch binary built as part of this project, support for passing across detailed metadata is not (yet). As a result, you would not receive the appropriate RootChanged event and be able to react appropriately. Also, since the C code doesn't open watched directories and retain that file descriptor as part of path-specific callback metadata, we are unable to issue an F_GETPATH fcntl() to determine the directory's new path. Please do not use this option until proper support is added (or, even better, add it and submit a pull request).","title":"WatchRoot"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#sincewhen","text":"The FSEventStreamEventId passed in to :since_when is used as a base for reacting to historic events. Unfortunately, not only is the metadata for transitioning from historic to live events not currently passed along, but it is incorrectly passed as a change event on the root path, and only per-host event streams are currently supported. When using per-host event streams, the event IDs are not guaranteed to be unique or contiguous when shared volumes (firewire/USB/net/etc) are used on multiple macs. Please do not use this option until proper support is added, unless it's acceptable for you to receive that one fake event that's handled incorrectly when events transition from historical to live. Even in that scenario, there's no metadata available for determining the FSEventStreamEventId of the last received event. WARNING: passing in 0 as the parameter to :since_when will return events for every directory modified since \"the beginning of time\".","title":"SinceWhen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#fileevents","text":"Prepare yourself for an obscene number of callbacks. Realistically, an \"Atomic Save\" could easily fire maybe 6 events for the combination of creating the new file, changing metadata/permissions, writing content, swapping out the old file for the new may itself result in multiple events being fired, and so forth. By the time you get the event for the temporary file being created as part of the atomic save, it will already be gone and swapped with the original file. This and issues of a similar nature have prevented me from adding the option to the ruby code despite the fsevent_watch binary supporting file level events for quite some time now. Mountain Lion seems to be better at coalescing needless events, but that might just be my imagination.","title":"FileEvents"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#debugging-output","text":"If the gem is re-compiled with the environment variable FWDEBUG set, then fsevent_watch will be built with its various DEBUG sections defined, and the output to STDERR is truly verbose (and hopefully helpful in debugging your application and not just fsevent_watch itself). If enough people find this to be directly useful when developing code that makes use of rb-fsevent, then it wouldn't be hard to clean this up and make it a feature enabled by a commandline argument instead. Until somebody files an issue, however, I will assume otherwise. append_path called for: /tmp/moo/cow/ resolved path to: /private/tmp/moo/cow config.sinceWhen 18446744073709551615 config.latency 0.300000 config.flags 00000000 config.paths /private/tmp/moo/cow FSEventStreamRef @ 0x100108540: allocator = 0x7fff705a4ee0 callback = 0x10000151e context = {0, 0x0, 0x0, 0x0, 0x0} numPathsToWatch = 1 pathsToWatch = 0x7fff705a4ee0 pathsToWatch[0] = '/private/tmp/moo/cow' latestEventId = -1 latency = 300000 (microseconds) flags = 0x00000000 runLoop = 0x0 runLoopMode = 0x0 FSEventStreamCallback fired! numEvents: 32 event path: /private/tmp/moo/cow/1/a/ event flags: 00000000 event ID: 1023767 event path: /private/tmp/moo/cow/1/b/ event flags: 00000000 event ID: 1023782 event path: /private/tmp/moo/cow/1/c/ event flags: 00000000 event ID: 1023797 event path: /private/tmp/moo/cow/1/d/ event flags: 00000000 event ID: 1023812 [etc]","title":"Debugging output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#development","text":"Source hosted at GitHub Report issues/Questions/Feature requests on GitHub Issues Pull requests are quite welcome! Please ensure that your commits are in a topic branch for each individual changeset that can be reasonably isolated. It is also important to ensure that your changes are well tested... whether that means new tests, modified tests, or fixing a scenario where the existing tests currently fail. If you have rbenv and ruby-build, we have a helper task for running the testsuite in all of them: rake spec:portability The list of tested targets is currently: %w[2.4.1 rbx-3.72 jruby-1.7.26 jruby-9.1.8.0]","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.11.1/#authors","text":"Travis Tilley Thibaud Guillaume-Gentil Andrey Tarantsov","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/","text":"rb-fsevent Very simple & usable Mac OSX FSEvents API RubyCocoa not required! Signals are working (really) Tested on MRI 2.1, RBX 2.5, JRuby Tested on 10.10 HFS+ filename corruption bug There is a very long-standing (since 2011) OSX bug where sometimes the filename metadata for HFS+ filesystems will get corrupted, resulting in some APIs returning one case for a file, and other APIs returning another. This corruption is not currently fixed by their tools, though Apple has been made aware of the issue and are working on it (as of may 2015). The result is that sometimes, for no visible reason to the user , fsevents would simply not work. As of rb-fsevent 0.9.5 this issue is properly detected and an insanely hacky (but effective) workaround is used that replaces the system realpath() with a custom implementation that should always return the same value as the kernel reporting (thus fixing fsevents). Please note that this doesn't repair the underlying issue on disk. Other apps and libraries using fsevents will continue to break with no warning. There may be other issues unrelated to fsevents. Install gem install rb-fsevent re-compilation rb-fsevent comes with a pre-compiled fsevent_watch binary supporting x86_64 on 10.9 and above. The binary is codesigned with my (Travis Tilley) Developer ID as an extra precaution when distributing pre-compiled code and contains an embedded plist describing its build environment. This should be sufficient for most users, but if you need to use rb-fsevent on 10.8 or lower then recompilation is necessary. This can be done by entering the installed gem's ext directory and running: MACOSX_DEPLOYMENT_TARGET=\"10.7\" rake replace_exe The following ENV vars are recognized: CC CFLAGS ARCHFLAGS MACOSX_DEPLOYMENT_TARGET FWDEBUG (enables debug mode, printing an obscene number of informational messages to STDERR) embedded plist You can retrieve the values in the embedded plist via the CLI: fsevent_watch --show-plist The output is essentially formatted as \"#{key}:\\n #{value}\\n\" to make it easier to read than plist style xml. The result looks like this: DTSDKName: macosx10.5 FSEWBuildTriple: i386-apple-darwin10.8.0 FSEWCC: /usr/bin/gcc-4.2 DTSDKPath: /Developer/SDKs/MacOSX10.5.sdk FSEWCCVersion: i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5666) (dot 3) FSEWCFLAGS: -fconstant-cfstrings -fno-strict-aliasing -Wall -mmacosx-version-min=10.5 -O3 If, for some perverse reason, you prefer to look at the xml... it can be retrieved via: otool -s __TEXT __info_plist ./bin/fsevent_watch | grep ^0 | xxd -r - codesign You can verify code signing information for a specific fsevent_watch via: codesign -d -vvv ./bin/fsevent_watch If you're using the pre-compiled binary, then the output should contain something to the effect of: Authority=Developer ID Application: Travis Tilley Authority=Developer ID Certification Authority Authority=Apple Root CA Timestamp=Dec 31, 2012 12:49:13 PM Usage Singular path require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] fsevent = FSEvent.new fsevent.watch paths do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths and additional options as a Hash require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = {:latency => 1.5, :no_defer => true } fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Multiple paths and additional options as an Array require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = ['--latency', 1.5, '--no-defer'] fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run Options When defining options using a hash or hash-like object, it gets checked for validity and converted to the appropriate fsevent_watch commandline arguments array when the FSEvent class is instantiated. This is obviously the safest and preferred method of passing in options. You may, however, choose to pass in an array of commandline arguments as your options value and it will be passed on, unmodified, to the fsevent_watch binary when called. So far, the following options are supported: :latency => 0.5 # in seconds :no_defer => true :watch_root => true :since_when => 18446744073709551615 # an FSEventStreamEventId :file_events => true Latency The :latency parameter determines how long the service should wait after the first event before passing that information along to the client. If your latency is set to 4 seconds, and 300 changes occur in the first three, then the callback will be fired only once. If latency is set to 0.1 in the exact same scenario, you will see that callback fire somewhere closer to between 25 and 30 times. Setting a higher latency value allows for more effective temporal coalescing, resulting in fewer callbacks and greater overall efficiency... at the cost of apparent responsiveness. Setting this to a reasonably high value (and NOT setting :no_defer) is particularly well suited for background, daemon, or batch processing applications. Implementation note: It appears that FSEvents will only coalesce events from a maximum of 32 distinct subpaths, making the above completely accurate only when events are to fewer than 32 subpaths. Creating 300 files in one directory, for example, or 30 files in 10 subdirectories, but not 300 files within 300 subdirectories. In the latter case, you may receive 31 callbacks in one go after the latency period. As this appears to be an implementation detail, the number could potentially differ across OS revisions. It is entirely possible that this number is somehow configurable, but I have not yet discovered an accepted method of doing so. NoDefer The :no_defer option changes the behavior of the latency parameter completely. Rather than waiting for $latency period of time before sending along events in an attempt to coalesce a potential deluge ahead of time, that first event is sent along to the client immediately and is followed by a $latency period of silence before sending along any additional events that occurred within that period. This behavior is particularly useful for interactive applications where that feeling of apparent responsiveness is most important, but you still don't want to get overwhelmed by a series of events that occur in rapid succession. WatchRoot The :watch_root option allows for catching the scenario where you start watching \"~/src/demo_project\" and either it is later renamed to \"~/src/awesome_sauce_3000\" or the path changes in such a manner that the original directory is now at \"~/clients/foo/iteration4/demo_project\". Unfortunately, while this behavior is somewhat supported in the fsevent_watch binary built as part of this project, support for passing across detailed metadata is not (yet). As a result, you would not receive the appropriate RootChanged event and be able to react appropriately. Also, since the C code doesn't open watched directories and retain that file descriptor as part of path-specific callback metadata, we are unable to issue an F_GETPATH fcntl() to determine the directory's new path. Please do not use this option until proper support is added (or, even better, add it and submit a pull request). SinceWhen The FSEventStreamEventId passed in to :since_when is used as a base for reacting to historic events. Unfortunately, not only is the metadata for transitioning from historic to live events not currently passed along, but it is incorrectly passed as a change event on the root path, and only per-host event streams are currently supported. When using per-host event streams, the event IDs are not guaranteed to be unique or contiguous when shared volumes (firewire/USB/net/etc) are used on multiple macs. Please do not use this option until proper support is added, unless it's acceptable for you to receive that one fake event that's handled incorrectly when events transition from historical to live. Even in that scenario, there's no metadata available for determining the FSEventStreamEventId of the last received event. WARNING: passing in 0 as the parameter to :since_when will return events for every directory modified since \"the beginning of time\". FileEvents Prepare yourself for an obscene number of callbacks. Realistically, an \"Atomic Save\" could easily fire maybe 6 events for the combination of creating the new file, changing metadata/permissions, writing content, swapping out the old file for the new may itself result in multiple events being fired, and so forth. By the time you get the event for the temporary file being created as part of the atomic save, it will already be gone and swapped with the original file. This and issues of a similar nature have prevented me from adding the option to the ruby code despite the fsevent_watch binary supporting file level events for quite some time now. Mountain Lion seems to be better at coalescing needless events, but that might just be my imagination. Debugging output If the gem is re-compiled with the environment variable FWDEBUG set, then fsevent_watch will be built with its various DEBUG sections defined, and the output to STDERR is truly verbose (and hopefully helpful in debugging your application and not just fsevent_watch itself). If enough people find this to be directly useful when developing code that makes use of rb-fsevent, then it wouldn't be hard to clean this up and make it a feature enabled by a commandline argument instead. Until somebody files an issue, however, I will assume otherwise. append_path called for: /tmp/moo/cow/ resolved path to: /private/tmp/moo/cow config.sinceWhen 18446744073709551615 config.latency 0.300000 config.flags 00000000 config.paths /private/tmp/moo/cow FSEventStreamRef @ 0x100108540: allocator = 0x7fff705a4ee0 callback = 0x10000151e context = {0, 0x0, 0x0, 0x0, 0x0} numPathsToWatch = 1 pathsToWatch = 0x7fff705a4ee0 pathsToWatch[0] = '/private/tmp/moo/cow' latestEventId = -1 latency = 300000 (microseconds) flags = 0x00000000 runLoop = 0x0 runLoopMode = 0x0 FSEventStreamCallback fired! numEvents: 32 event path: /private/tmp/moo/cow/1/a/ event flags: 00000000 event ID: 1023767 event path: /private/tmp/moo/cow/1/b/ event flags: 00000000 event ID: 1023782 event path: /private/tmp/moo/cow/1/c/ event flags: 00000000 event ID: 1023797 event path: /private/tmp/moo/cow/1/d/ event flags: 00000000 event ID: 1023812 [etc] Development Source hosted at GitHub Report issues/Questions/Feature requests on GitHub Issues Pull requests are quite welcome! Please ensure that your commits are in a topic branch for each individual changeset that can be reasonably isolated. It is also important to ensure that your changes are well tested... whether that means new tests, modified tests, or fixing a scenario where the existing tests currently fail. If you have rbenv and ruby-build, we have a helper task for running the testsuite in all of them: rake spec:portability The list of tested targets is currently: %w[2.2.2 2.3.0-dev rbx-2.5.5 jruby-1.7.9] Authors Travis Tilley Thibaud Guillaume-Gentil Andrey Tarantsov","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#rb-fsevent","text":"Very simple & usable Mac OSX FSEvents API RubyCocoa not required! Signals are working (really) Tested on MRI 2.1, RBX 2.5, JRuby Tested on 10.10","title":"rb-fsevent"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#hfs-filename-corruption-bug","text":"There is a very long-standing (since 2011) OSX bug where sometimes the filename metadata for HFS+ filesystems will get corrupted, resulting in some APIs returning one case for a file, and other APIs returning another. This corruption is not currently fixed by their tools, though Apple has been made aware of the issue and are working on it (as of may 2015). The result is that sometimes, for no visible reason to the user , fsevents would simply not work. As of rb-fsevent 0.9.5 this issue is properly detected and an insanely hacky (but effective) workaround is used that replaces the system realpath() with a custom implementation that should always return the same value as the kernel reporting (thus fixing fsevents). Please note that this doesn't repair the underlying issue on disk. Other apps and libraries using fsevents will continue to break with no warning. There may be other issues unrelated to fsevents.","title":"HFS+ filename corruption bug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#install","text":"gem install rb-fsevent","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#re-compilation","text":"rb-fsevent comes with a pre-compiled fsevent_watch binary supporting x86_64 on 10.9 and above. The binary is codesigned with my (Travis Tilley) Developer ID as an extra precaution when distributing pre-compiled code and contains an embedded plist describing its build environment. This should be sufficient for most users, but if you need to use rb-fsevent on 10.8 or lower then recompilation is necessary. This can be done by entering the installed gem's ext directory and running: MACOSX_DEPLOYMENT_TARGET=\"10.7\" rake replace_exe The following ENV vars are recognized: CC CFLAGS ARCHFLAGS MACOSX_DEPLOYMENT_TARGET FWDEBUG (enables debug mode, printing an obscene number of informational messages to STDERR)","title":"re-compilation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#embedded-plist","text":"You can retrieve the values in the embedded plist via the CLI: fsevent_watch --show-plist The output is essentially formatted as \"#{key}:\\n #{value}\\n\" to make it easier to read than plist style xml. The result looks like this: DTSDKName: macosx10.5 FSEWBuildTriple: i386-apple-darwin10.8.0 FSEWCC: /usr/bin/gcc-4.2 DTSDKPath: /Developer/SDKs/MacOSX10.5.sdk FSEWCCVersion: i686-apple-darwin10-gcc-4.2.1 (GCC) 4.2.1 (Apple Inc. build 5666) (dot 3) FSEWCFLAGS: -fconstant-cfstrings -fno-strict-aliasing -Wall -mmacosx-version-min=10.5 -O3 If, for some perverse reason, you prefer to look at the xml... it can be retrieved via: otool -s __TEXT __info_plist ./bin/fsevent_watch | grep ^0 | xxd -r -","title":"embedded plist"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#codesign","text":"You can verify code signing information for a specific fsevent_watch via: codesign -d -vvv ./bin/fsevent_watch If you're using the pre-compiled binary, then the output should contain something to the effect of: Authority=Developer ID Application: Travis Tilley Authority=Developer ID Certification Authority Authority=Apple Root CA Timestamp=Dec 31, 2012 12:49:13 PM","title":"codesign"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#singular-path","text":"require 'rb-fsevent' fsevent = FSEvent.new fsevent.watch Dir.pwd do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Singular path"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#multiple-paths","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] fsevent = FSEvent.new fsevent.watch paths do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#multiple-paths-and-additional-options-as-a-hash","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = {:latency => 1.5, :no_defer => true } fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths and additional options as a Hash"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#multiple-paths-and-additional-options-as-an-array","text":"require 'rb-fsevent' paths = ['/tmp/path/one', '/tmp/path/two', Dir.pwd] options = ['--latency', 1.5, '--no-defer'] fsevent = FSEvent.new fsevent.watch paths, options do |directories| puts \"Detected change inside: #{directories.inspect}\" end fsevent.run","title":"Multiple paths and additional options as an Array"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#options","text":"When defining options using a hash or hash-like object, it gets checked for validity and converted to the appropriate fsevent_watch commandline arguments array when the FSEvent class is instantiated. This is obviously the safest and preferred method of passing in options. You may, however, choose to pass in an array of commandline arguments as your options value and it will be passed on, unmodified, to the fsevent_watch binary when called. So far, the following options are supported: :latency => 0.5 # in seconds :no_defer => true :watch_root => true :since_when => 18446744073709551615 # an FSEventStreamEventId :file_events => true","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#latency","text":"The :latency parameter determines how long the service should wait after the first event before passing that information along to the client. If your latency is set to 4 seconds, and 300 changes occur in the first three, then the callback will be fired only once. If latency is set to 0.1 in the exact same scenario, you will see that callback fire somewhere closer to between 25 and 30 times. Setting a higher latency value allows for more effective temporal coalescing, resulting in fewer callbacks and greater overall efficiency... at the cost of apparent responsiveness. Setting this to a reasonably high value (and NOT setting :no_defer) is particularly well suited for background, daemon, or batch processing applications. Implementation note: It appears that FSEvents will only coalesce events from a maximum of 32 distinct subpaths, making the above completely accurate only when events are to fewer than 32 subpaths. Creating 300 files in one directory, for example, or 30 files in 10 subdirectories, but not 300 files within 300 subdirectories. In the latter case, you may receive 31 callbacks in one go after the latency period. As this appears to be an implementation detail, the number could potentially differ across OS revisions. It is entirely possible that this number is somehow configurable, but I have not yet discovered an accepted method of doing so.","title":"Latency"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#nodefer","text":"The :no_defer option changes the behavior of the latency parameter completely. Rather than waiting for $latency period of time before sending along events in an attempt to coalesce a potential deluge ahead of time, that first event is sent along to the client immediately and is followed by a $latency period of silence before sending along any additional events that occurred within that period. This behavior is particularly useful for interactive applications where that feeling of apparent responsiveness is most important, but you still don't want to get overwhelmed by a series of events that occur in rapid succession.","title":"NoDefer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#watchroot","text":"The :watch_root option allows for catching the scenario where you start watching \"~/src/demo_project\" and either it is later renamed to \"~/src/awesome_sauce_3000\" or the path changes in such a manner that the original directory is now at \"~/clients/foo/iteration4/demo_project\". Unfortunately, while this behavior is somewhat supported in the fsevent_watch binary built as part of this project, support for passing across detailed metadata is not (yet). As a result, you would not receive the appropriate RootChanged event and be able to react appropriately. Also, since the C code doesn't open watched directories and retain that file descriptor as part of path-specific callback metadata, we are unable to issue an F_GETPATH fcntl() to determine the directory's new path. Please do not use this option until proper support is added (or, even better, add it and submit a pull request).","title":"WatchRoot"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#sincewhen","text":"The FSEventStreamEventId passed in to :since_when is used as a base for reacting to historic events. Unfortunately, not only is the metadata for transitioning from historic to live events not currently passed along, but it is incorrectly passed as a change event on the root path, and only per-host event streams are currently supported. When using per-host event streams, the event IDs are not guaranteed to be unique or contiguous when shared volumes (firewire/USB/net/etc) are used on multiple macs. Please do not use this option until proper support is added, unless it's acceptable for you to receive that one fake event that's handled incorrectly when events transition from historical to live. Even in that scenario, there's no metadata available for determining the FSEventStreamEventId of the last received event. WARNING: passing in 0 as the parameter to :since_when will return events for every directory modified since \"the beginning of time\".","title":"SinceWhen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#fileevents","text":"Prepare yourself for an obscene number of callbacks. Realistically, an \"Atomic Save\" could easily fire maybe 6 events for the combination of creating the new file, changing metadata/permissions, writing content, swapping out the old file for the new may itself result in multiple events being fired, and so forth. By the time you get the event for the temporary file being created as part of the atomic save, it will already be gone and swapped with the original file. This and issues of a similar nature have prevented me from adding the option to the ruby code despite the fsevent_watch binary supporting file level events for quite some time now. Mountain Lion seems to be better at coalescing needless events, but that might just be my imagination.","title":"FileEvents"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#debugging-output","text":"If the gem is re-compiled with the environment variable FWDEBUG set, then fsevent_watch will be built with its various DEBUG sections defined, and the output to STDERR is truly verbose (and hopefully helpful in debugging your application and not just fsevent_watch itself). If enough people find this to be directly useful when developing code that makes use of rb-fsevent, then it wouldn't be hard to clean this up and make it a feature enabled by a commandline argument instead. Until somebody files an issue, however, I will assume otherwise. append_path called for: /tmp/moo/cow/ resolved path to: /private/tmp/moo/cow config.sinceWhen 18446744073709551615 config.latency 0.300000 config.flags 00000000 config.paths /private/tmp/moo/cow FSEventStreamRef @ 0x100108540: allocator = 0x7fff705a4ee0 callback = 0x10000151e context = {0, 0x0, 0x0, 0x0, 0x0} numPathsToWatch = 1 pathsToWatch = 0x7fff705a4ee0 pathsToWatch[0] = '/private/tmp/moo/cow' latestEventId = -1 latency = 300000 (microseconds) flags = 0x00000000 runLoop = 0x0 runLoopMode = 0x0 FSEventStreamCallback fired! numEvents: 32 event path: /private/tmp/moo/cow/1/a/ event flags: 00000000 event ID: 1023767 event path: /private/tmp/moo/cow/1/b/ event flags: 00000000 event ID: 1023782 event path: /private/tmp/moo/cow/1/c/ event flags: 00000000 event ID: 1023797 event path: /private/tmp/moo/cow/1/d/ event flags: 00000000 event ID: 1023812 [etc]","title":"Debugging output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#development","text":"Source hosted at GitHub Report issues/Questions/Feature requests on GitHub Issues Pull requests are quite welcome! Please ensure that your commits are in a topic branch for each individual changeset that can be reasonably isolated. It is also important to ensure that your changes are well tested... whether that means new tests, modified tests, or fixing a scenario where the existing tests currently fail. If you have rbenv and ruby-build, we have a helper task for running the testsuite in all of them: rake spec:portability The list of tested targets is currently: %w[2.2.2 2.3.0-dev rbx-2.5.5 jruby-1.7.9]","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-fsevent-0.9.7/#authors","text":"Travis Tilley Thibaud Guillaume-Gentil Andrey Tarantsov","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/","text":"rb-inotify This is a simple wrapper over the inotify Linux kernel subsystem for monitoring changes to files and directories. It uses the FFI gem to avoid having to compile a C extension. API documentation is available on rdoc.info . Usage The API is similar to the inotify C API, but with a more Rubyish feel. First, create a notifier: notifier = INotify::Notifier.new Then, tell it to watch the paths you're interested in for the events you care about: notifier.watch(\"path/to/foo.txt\", :modify) {puts \"foo.txt was modified!\"} notifier.watch(\"path/to/bar\", :moved_to, :create) do |event| puts \"#{event.name} is now in path/to/bar!\" end Inotify can watch directories or individual files. It can pay attention to all sorts of events; for a full list, see the inotify man page . Finally, you get at the events themselves: notifier.run This will loop infinitely, calling the appropriate callbacks when the files are changed. If you don't want infinite looping, you can also block until there are available events, process them all at once, and then continue on your merry way: notifier.process Advanced Usage Sometimes it's necessary to have finer control over the underlying IO operations than is provided by the simple callback API. The trick to this is that the {INotify::Notifier#to_io Notifier#to_io} method returns a fully-functional IO object, with a file descriptor and everything. This means, for example, that it can be passed to IO#select : # Wait 10 seconds for an event then give up if IO.select([notifier.to_io], [], [], 10) notifier.process end It can even be used with EventMachine: require 'eventmachine' EM.run do EM.watch notifier.to_io do notifier.process end end Unfortunately, this currently doesn't work under JRuby. JRuby currently doesn't use native file descriptors for the IO object, so we can't use the notifier's file descriptor as a stand-in. Resource Limits If you get an error like inotify event queue has overflowed you might be running into system limits. You can add the following to your /etc/sysctl.conf to increase the number of files that can be monitored: fs.inotify.max_user_watches = 100000 fs.inotify.max_queued_events = 100000 fs.inotify.max_user_instances = 100000 Contributing Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request License Released under the MIT license. Copyright, 2009, by Natalie Weizenbaum . Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"rb-inotify"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#rb-inotify","text":"This is a simple wrapper over the inotify Linux kernel subsystem for monitoring changes to files and directories. It uses the FFI gem to avoid having to compile a C extension. API documentation is available on rdoc.info .","title":"rb-inotify"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#usage","text":"The API is similar to the inotify C API, but with a more Rubyish feel. First, create a notifier: notifier = INotify::Notifier.new Then, tell it to watch the paths you're interested in for the events you care about: notifier.watch(\"path/to/foo.txt\", :modify) {puts \"foo.txt was modified!\"} notifier.watch(\"path/to/bar\", :moved_to, :create) do |event| puts \"#{event.name} is now in path/to/bar!\" end Inotify can watch directories or individual files. It can pay attention to all sorts of events; for a full list, see the inotify man page . Finally, you get at the events themselves: notifier.run This will loop infinitely, calling the appropriate callbacks when the files are changed. If you don't want infinite looping, you can also block until there are available events, process them all at once, and then continue on your merry way: notifier.process","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#advanced-usage","text":"Sometimes it's necessary to have finer control over the underlying IO operations than is provided by the simple callback API. The trick to this is that the {INotify::Notifier#to_io Notifier#to_io} method returns a fully-functional IO object, with a file descriptor and everything. This means, for example, that it can be passed to IO#select : # Wait 10 seconds for an event then give up if IO.select([notifier.to_io], [], [], 10) notifier.process end It can even be used with EventMachine: require 'eventmachine' EM.run do EM.watch notifier.to_io do notifier.process end end Unfortunately, this currently doesn't work under JRuby. JRuby currently doesn't use native file descriptors for the IO object, so we can't use the notifier's file descriptor as a stand-in.","title":"Advanced Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#resource-limits","text":"If you get an error like inotify event queue has overflowed you might be running into system limits. You can add the following to your /etc/sysctl.conf to increase the number of files that can be monitored: fs.inotify.max_user_watches = 100000 fs.inotify.max_queued_events = 100000 fs.inotify.max_user_instances = 100000","title":"Resource Limits"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#contributing","text":"Fork it Create your feature branch ( git checkout -b my-new-feature ) Commit your changes ( git commit -am 'Add some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/#license","text":"Released under the MIT license. Copyright, 2009, by Natalie Weizenbaum . Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/LICENSE/","text":"The MIT License Copyright, 2009, by Natalie Weizenbaum . Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.10.1/LICENSE/#the-mit-license","text":"Copyright, 2009, by Natalie Weizenbaum . Copyright, 2017, by Samuel G. D. Williams . Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"The MIT License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.9.7/","text":"rb-inotify This is a simple wrapper over the inotify Linux kernel subsystem for monitoring changes to files and directories. It uses the FFI gem to avoid having to compile a C extension. API documentation is available on rdoc.info . Basic Usage The API is similar to the inotify C API, but with a more Rubyish feel. First, create a notifier: notifier = INotify::Notifier.new Then, tell it to watch the paths you're interested in for the events you care about: notifier.watch(\"path/to/foo.txt\", :modify) {puts \"foo.txt was modified!\"} notifier.watch(\"path/to/bar\", :moved_to, :create) do |event| puts \"#{event.name} is now in path/to/bar!\" end Inotify can watch directories or individual files. It can pay attention to all sorts of events; for a full list, see the inotify man page . Finally, you get at the events themselves: notifier.run This will loop infinitely, calling the appropriate callbacks when the files are changed. If you don't want infinite looping, you can also block until there are available events, process them all at once, and then continue on your merry way: notifier.process Advanced Usage Sometimes it's necessary to have finer control over the underlying IO operations than is provided by the simple callback API. The trick to this is that the {INotify::Notifier#to_io Notifier#to_io} method returns a fully-functional IO object, with a file descriptor and everything. This means, for example, that it can be passed to IO#select : # Wait 10 seconds for an event then give up if IO.select([notifier.to_io], [], [], 10) notifier.process end It can even be used with EventMachine: require 'eventmachine' EM.run do EM.watch notifier.to_io do notifier.process end end Unfortunately, this currently doesn't work under JRuby. JRuby currently doesn't use native file descriptors for the IO object, so we can't use the notifier's file descriptor as a stand-in.","title":"rb-inotify"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.9.7/#rb-inotify","text":"This is a simple wrapper over the inotify Linux kernel subsystem for monitoring changes to files and directories. It uses the FFI gem to avoid having to compile a C extension. API documentation is available on rdoc.info .","title":"rb-inotify"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.9.7/#basic-usage","text":"The API is similar to the inotify C API, but with a more Rubyish feel. First, create a notifier: notifier = INotify::Notifier.new Then, tell it to watch the paths you're interested in for the events you care about: notifier.watch(\"path/to/foo.txt\", :modify) {puts \"foo.txt was modified!\"} notifier.watch(\"path/to/bar\", :moved_to, :create) do |event| puts \"#{event.name} is now in path/to/bar!\" end Inotify can watch directories or individual files. It can pay attention to all sorts of events; for a full list, see the inotify man page . Finally, you get at the events themselves: notifier.run This will loop infinitely, calling the appropriate callbacks when the files are changed. If you don't want infinite looping, you can also block until there are available events, process them all at once, and then continue on your merry way: notifier.process","title":"Basic Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rb-inotify-0.9.7/#advanced-usage","text":"Sometimes it's necessary to have finer control over the underlying IO operations than is provided by the simple callback API. The trick to this is that the {INotify::Notifier#to_io Notifier#to_io} method returns a fully-functional IO object, with a file descriptor and everything. This means, for example, that it can be passed to IO#select : # Wait 10 seconds for an event then give up if IO.select([notifier.to_io], [], [], 10) notifier.process end It can even be used with EventMachine: require 'eventmachine' EM.run do EM.watch notifier.to_io do notifier.process end end Unfortunately, this currently doesn't work under JRuby. JRuby currently doesn't use native file descriptors for the IO object, so we can't use the notifier's file descriptor as a stand-in.","title":"Advanced Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/","text":"REXML REXML was inspired by the Electric XML library for Java, which features an easy-to-use API, small size, and speed. Hopefully, REXML, designed with the same philosophy, has these same features. I've tried to keep the API as intuitive as possible, and have followed the Ruby methodology for method naming and code flow, rather than mirroring the Java API. REXML supports both tree and stream document parsing. Stream parsing is faster (about 1.5 times as fast). However, with stream parsing, you don't get access to features such as XPath. API See the {API documentation}[https://ruby.github.io/rexml/] Usage We'll start with parsing an XML document require \"rexml/document\" file = File.new( \"mydoc.xml\" ) doc = REXML::Document.new file Line 3 creates a new document and parses the supplied file. You can also do the following require \"rexml/document\" include REXML # so that we don't have to prefix everything with REXML::... string = <<EOF <mydoc> <someelement attribute=\"nanoo\">Text, text, text</someelement> </mydoc> EOF doc = Document.new string So parsing a string is just as easy as parsing a file. Development After checking out the repo, run rake test to run the tests. To install this gem onto your local machine, run bundle exec rake install . To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Bug reports and pull requests are welcome on GitHub at https://github.com/ruby/rexml. License The gem is available as open source under the terms of the BSD-2-Clause .","title":"REXML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#rexml","text":"REXML was inspired by the Electric XML library for Java, which features an easy-to-use API, small size, and speed. Hopefully, REXML, designed with the same philosophy, has these same features. I've tried to keep the API as intuitive as possible, and have followed the Ruby methodology for method naming and code flow, rather than mirroring the Java API. REXML supports both tree and stream document parsing. Stream parsing is faster (about 1.5 times as fast). However, with stream parsing, you don't get access to features such as XPath.","title":"REXML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#api","text":"See the {API documentation}[https://ruby.github.io/rexml/]","title":"API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#usage","text":"We'll start with parsing an XML document require \"rexml/document\" file = File.new( \"mydoc.xml\" ) doc = REXML::Document.new file Line 3 creates a new document and parses the supplied file. You can also do the following require \"rexml/document\" include REXML # so that we don't have to prefix everything with REXML::... string = <<EOF <mydoc> <someelement attribute=\"nanoo\">Text, text, text</someelement> </mydoc> EOF doc = Document.new string So parsing a string is just as easy as parsing a file.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#development","text":"After checking out the repo, run rake test to run the tests. To install this gem onto your local machine, run bundle exec rake install . To release a new version, update the version number in version.rb , and then run bundle exec rake release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#contributing","text":"Bug reports and pull requests are welcome on GitHub at https://github.com/ruby/rexml.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/#license","text":"The gem is available as open source under the terms of the BSD-2-Clause .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/","text":"News 3.2.5 - 2021-04-05 {#version-3-2-5} Improvements Add more validations to XPath parser. require \"rexml/docuemnt\" by default. [GitHub#36][Patch by Koichi ITO] Don't add #dcloe method to core classes globally. [GitHub#37][Patch by Akira Matsuda] Add more documentations. [Patch by Burdette Lamar] Added REXML::Elements#parent . [GitHub#52][Patch by Burdette Lamar] Fixes Fixed a bug that REXML::DocType#clone doesn't copy external ID information. Fixed round-trip vulnerability bugs. See also: https://www.ruby-lang.org/en/news/2021/04/05/xml-round-trip-vulnerability-in-rexml-cve-2021-28965/ [HackerOne#1104077][CVE-2021-28965][Reported by Juho Nurminen] Thanks Koichi ITO Akira Matsuda Burdette Lamar Juho Nurminen 3.2.4 - 2020-01-31 {#version-3-2-4} Improvements Don't use taint with Ruby 2.7 or later. [GitHub#21][Patch by Jeremy Evans] Fixes Fixed a elsif typo. [GitHub#22][Patch by Nobuyoshi Nakada] Thanks Jeremy Evans Nobuyoshi Nakada 3.2.3 - 2019-10-12 {#version-3-2-3} Fixes Fixed a bug that REXML::XMLDecl#close doesn't copy @writethis . [GitHub#20][Patch by hirura] Thanks hirura 3.2.2 - 2019-06-03 {#version-3-2-2} Fixes xpath: Fixed a bug for equality and relational expressions. [GitHub#17][Reported by Mirko Budszuhn] xpath: Fixed boolean() implementation. xpath: Fixed local_name() with nonexistent node. xpath: Fixed number() implementation with node set. [GitHub#18][Reported by Mirko Budszuhn] Thanks Mirko Budszuhn 3.2.1 - 2019-05-04 {#version-3-2-1} Improvements Improved error message. [GitHub#12][Patch by FUJI Goro] Improved error message. [GitHub#16][Patch by ujihisa] Improved documentation markup. [GitHub#14][Patch by Alyssa Ross] Fixes Fixed a bug that nil variable value raises an unexpected exception. [GitHub#13][Patch by Alyssa Ross] Thanks FUJI Goro Alyssa Ross ujihisa 3.2.0 - 2019-01-01 {#version-3-2-0} Fixes Fixed a bug that no namespace attribute isn't matched with prefix. [ruby-list:50731][Reported by Yasuhiro KIMURA] Fixed a bug that the default namespace is applied to attribute names. NOTE: It's a backward incompatible change. If your program has any problem with this change, please report it. We may revert this fix. REXML::Attribute#prefix returns \"\" for no namespace attribute. REXML::Attribute#namespace returns \"\" for no namespace attribute. Thanks Yasuhiro KIMURA 3.1.9 - 2018-12-20 {#version-3-1-9} Improvements Improved backward compatibility. Restored REXML::Parsers::BaseParser::UNQME_STR because it's used by kramdown. 3.1.8 - 2018-12-20 {#version-3-1-8} Improvements Added support for customizing quote character in prologue. [GitHub#8][Bug #9367][Reported by Takashi Oguma] You can use \" as quote character by specifying :quote to REXML::Document#context[:prologue_quote] . You can use ' as quote character by specifying :apostrophe to REXML::Document#context[:prologue_quote] . Added processing instruction target check. The target must not nil. [GitHub#7][Reported by Ariel Zelivansky] Added name check for element and attribute. [GitHub#7][Reported by Ariel Zelivansky] Stopped to use Exception . [GitHub#9][Patch by Jean Boussier] Fixes Fixed a bug that REXML::Text#clone escapes value twice. [ruby-dev:50626][Bug #15058][Reported by Ryosuke Nanba] Thanks Takashi Oguma Ariel Zelivansky Jean Boussier Ryosuke Nanba","title":"News"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#news","text":"","title":"News"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#325-2021-04-05-version-3-2-5","text":"","title":"3.2.5 - 2021-04-05 {#version-3-2-5}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#improvements","text":"Add more validations to XPath parser. require \"rexml/docuemnt\" by default. [GitHub#36][Patch by Koichi ITO] Don't add #dcloe method to core classes globally. [GitHub#37][Patch by Akira Matsuda] Add more documentations. [Patch by Burdette Lamar] Added REXML::Elements#parent . [GitHub#52][Patch by Burdette Lamar]","title":"Improvements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes","text":"Fixed a bug that REXML::DocType#clone doesn't copy external ID information. Fixed round-trip vulnerability bugs. See also: https://www.ruby-lang.org/en/news/2021/04/05/xml-round-trip-vulnerability-in-rexml-cve-2021-28965/ [HackerOne#1104077][CVE-2021-28965][Reported by Juho Nurminen]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks","text":"Koichi ITO Akira Matsuda Burdette Lamar Juho Nurminen","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#324-2020-01-31-version-3-2-4","text":"","title":"3.2.4 - 2020-01-31 {#version-3-2-4}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#improvements_1","text":"Don't use taint with Ruby 2.7 or later. [GitHub#21][Patch by Jeremy Evans]","title":"Improvements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_1","text":"Fixed a elsif typo. [GitHub#22][Patch by Nobuyoshi Nakada]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_1","text":"Jeremy Evans Nobuyoshi Nakada","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#323-2019-10-12-version-3-2-3","text":"","title":"3.2.3 - 2019-10-12 {#version-3-2-3}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_2","text":"Fixed a bug that REXML::XMLDecl#close doesn't copy @writethis . [GitHub#20][Patch by hirura]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_2","text":"hirura","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#322-2019-06-03-version-3-2-2","text":"","title":"3.2.2 - 2019-06-03 {#version-3-2-2}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_3","text":"xpath: Fixed a bug for equality and relational expressions. [GitHub#17][Reported by Mirko Budszuhn] xpath: Fixed boolean() implementation. xpath: Fixed local_name() with nonexistent node. xpath: Fixed number() implementation with node set. [GitHub#18][Reported by Mirko Budszuhn]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_3","text":"Mirko Budszuhn","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#321-2019-05-04-version-3-2-1","text":"","title":"3.2.1 - 2019-05-04 {#version-3-2-1}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#improvements_2","text":"Improved error message. [GitHub#12][Patch by FUJI Goro] Improved error message. [GitHub#16][Patch by ujihisa] Improved documentation markup. [GitHub#14][Patch by Alyssa Ross]","title":"Improvements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_4","text":"Fixed a bug that nil variable value raises an unexpected exception. [GitHub#13][Patch by Alyssa Ross]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_4","text":"FUJI Goro Alyssa Ross ujihisa","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#320-2019-01-01-version-3-2-0","text":"","title":"3.2.0 - 2019-01-01 {#version-3-2-0}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_5","text":"Fixed a bug that no namespace attribute isn't matched with prefix. [ruby-list:50731][Reported by Yasuhiro KIMURA] Fixed a bug that the default namespace is applied to attribute names. NOTE: It's a backward incompatible change. If your program has any problem with this change, please report it. We may revert this fix. REXML::Attribute#prefix returns \"\" for no namespace attribute. REXML::Attribute#namespace returns \"\" for no namespace attribute.","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_5","text":"Yasuhiro KIMURA","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#319-2018-12-20-version-3-1-9","text":"","title":"3.1.9 - 2018-12-20 {#version-3-1-9}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#improvements_3","text":"Improved backward compatibility. Restored REXML::Parsers::BaseParser::UNQME_STR because it's used by kramdown.","title":"Improvements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#318-2018-12-20-version-3-1-8","text":"","title":"3.1.8 - 2018-12-20 {#version-3-1-8}"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#improvements_4","text":"Added support for customizing quote character in prologue. [GitHub#8][Bug #9367][Reported by Takashi Oguma] You can use \" as quote character by specifying :quote to REXML::Document#context[:prologue_quote] . You can use ' as quote character by specifying :apostrophe to REXML::Document#context[:prologue_quote] . Added processing instruction target check. The target must not nil. [GitHub#7][Reported by Ariel Zelivansky] Added name check for element and attribute. [GitHub#7][Reported by Ariel Zelivansky] Stopped to use Exception . [GitHub#9][Patch by Jean Boussier]","title":"Improvements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#fixes_6","text":"Fixed a bug that REXML::Text#clone escapes value twice. [ruby-dev:50626][Bug #15058][Reported by Ryosuke Nanba]","title":"Fixes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rexml-3.2.5/NEWS/#thanks_6","text":"Takashi Oguma Ariel Zelivansky Jean Boussier Ryosuke Nanba","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/","text":"ruby2_keywords Provides empty Module#ruby2_keywords method, for the forward source-level compatibility against ruby2.7 and ruby3. Installation Add this line to your application's Gemfile: gem 'ruby2_keywords' And then execute: $ bundle Or install it yourself as: $ gem install ruby2_keywords Usage For class/module instance methods: require 'ruby2_keywords' module YourModule ruby2_keywords def delegating_method(*args) other_method(*args) end end For global methods: require 'ruby2_keywords' ruby2_keywords def oldstyle_keywords(options = {}) end You can do the same for a method defined by Module#define_method : define_method :delegating_method do |*args, &block| other_method(*args, &block) end ruby2_keywords :delegating_method Contributing Bug reports and pull requests are welcome on GitHub or Ruby Issue Tracking System . Development After checking out the repo, run bundle install to install dependencies. Then, run bundle exec rake test to run the tests. To test on older Ruby versions, you can use docker. E.g. to test on Ruby 2.0, use docker-compose run ruby-2.0 . License The gem is available as open source under the terms of the Ruby License or the 2-Clause BSD License .","title":"ruby2_keywords"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#ruby2_keywords","text":"Provides empty Module#ruby2_keywords method, for the forward source-level compatibility against ruby2.7 and ruby3.","title":"ruby2_keywords"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#installation","text":"Add this line to your application's Gemfile: gem 'ruby2_keywords' And then execute: $ bundle Or install it yourself as: $ gem install ruby2_keywords","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#usage","text":"For class/module instance methods: require 'ruby2_keywords' module YourModule ruby2_keywords def delegating_method(*args) other_method(*args) end end For global methods: require 'ruby2_keywords' ruby2_keywords def oldstyle_keywords(options = {}) end You can do the same for a method defined by Module#define_method : define_method :delegating_method do |*args, &block| other_method(*args, &block) end ruby2_keywords :delegating_method","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#contributing","text":"Bug reports and pull requests are welcome on GitHub or Ruby Issue Tracking System .","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#development","text":"After checking out the repo, run bundle install to install dependencies. Then, run bundle exec rake test to run the tests. To test on older Ruby versions, you can use docker. E.g. to test on Ruby 2.0, use docker-compose run ruby-2.0 .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/ruby2_keywords-0.0.5/#license","text":"The gem is available as open source under the terms of the Ruby License or the 2-Clause BSD License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/","text":"rubyzip Rubyzip is a ruby library for reading and writing zip files. Important note The Rubyzip interface has changed!!! No need to do require \"zip/zip\" and Zip prefix in class names removed. If you have issues with any third-party gems that require an old version of rubyzip, you can use this workaround: gem 'rubyzip', '>= 1.0.0' # will load new rubyzip version gem 'zip-zip' # will load compatibility for old rubyzip API. Requirements Ruby 2.4 or greater (for rubyzip 2.0; use 1.x for older rubies) Installation Rubyzip is available on RubyGems: gem install rubyzip Or in your Gemfile: gem 'rubyzip' Usage Basic zip archive creation require 'rubygems' require 'zip' folder = \"Users/me/Desktop/stuff_to_zip\" input_filenames = ['image.jpg', 'description.txt', 'stats.csv'] zipfile_name = \"/Users/me/Desktop/archive.zip\" Zip::File.open(zipfile_name, Zip::File::CREATE) do |zipfile| input_filenames.each do |filename| # Two arguments: # - The name of the file as it will appear in the archive # - The original file, including the path to find it zipfile.add(filename, File.join(folder, filename)) end zipfile.get_output_stream(\"myFile\") { |f| f.write \"myFile contains just this\" } end Zipping a directory recursively Copy from here require 'zip' # This is a simple example which uses rubyzip to # recursively generate a zip file from the contents of # a specified directory. The directory itself is not # included in the archive, rather just its contents. # # Usage: # directory_to_zip = \"/tmp/input\" # output_file = \"/tmp/out.zip\" # zf = ZipFileGenerator.new(directory_to_zip, output_file) # zf.write() class ZipFileGenerator # Initialize with the directory to zip and the location of the output archive. def initialize(input_dir, output_file) @input_dir = input_dir @output_file = output_file end # Zip the input directory. def write entries = Dir.entries(@input_dir) - %w[. ..] ::Zip::File.open(@output_file, ::Zip::File::CREATE) do |zipfile| write_entries entries, '', zipfile end end private # A helper method to make the recursion work. def write_entries(entries, path, zipfile) entries.each do |e| zipfile_path = path == '' ? e : File.join(path, e) disk_file_path = File.join(@input_dir, zipfile_path) if File.directory? disk_file_path recursively_deflate_directory(disk_file_path, zipfile, zipfile_path) else put_into_archive(disk_file_path, zipfile, zipfile_path) end end end def recursively_deflate_directory(disk_file_path, zipfile, zipfile_path) zipfile.mkdir zipfile_path subdir = Dir.entries(disk_file_path) - %w[. ..] write_entries subdir, zipfile_path, zipfile end def put_into_archive(disk_file_path, zipfile, zipfile_path) zipfile.add(zipfile_path, disk_file_path) end end Save zip archive entries in sorted by name state To save zip archives in sorted order like below, you need to set ::Zip.sort_entries to true Vegetable/ Vegetable/bean Vegetable/carrot Vegetable/celery fruit/ fruit/apple fruit/kiwi fruit/mango fruit/orange After this, entries in the zip archive will be saved in ordered state. Default permissions of zip archives On Posix file systems the default file permissions applied to a new archive are (0666 - umask), which mimics the behavior of standard tools such as touch . On Windows the default file permissions are set to 0644 as suggested by the Ruby File documentation . When modifying a zip archive the file permissions of the archive are preserved. Reading a Zip file MAX_SIZE = 1024**2 # 1MiB (but of course you can increase this) Zip::File.open('foo.zip') do |zip_file| # Handle entries one by one zip_file.each do |entry| puts \"Extracting #{entry.name}\" raise 'File too large when extracted' if entry.size > MAX_SIZE # Extract to file or directory based on name in the archive entry.extract # Read into memory content = entry.get_input_stream.read end # Find specific entry entry = zip_file.glob('*.csv').first raise 'File too large when extracted' if entry.size > MAX_SIZE puts entry.get_input_stream.read end Notice about ::Zip::InputStream ::Zip::InputStream usable for fast reading zip file content because it not read Central directory. But there is one exception when it is not working - General Purpose Flag Bit 3. If bit 3 (0x08) of the general-purpose flags field is set, then the CRC-32 and file sizes are not known when the header is written. The fields in the local header are filled with zero, and the CRC-32 and size are appended in a 12-byte structure (optionally preceded by a 4-byte signature) immediately after the compressed data If ::Zip::InputStream finds such entry in the zip archive it will raise an exception. Password Protection (Experimental) Rubyzip supports reading/writing zip files with traditional zip encryption (a.k.a. \"ZipCrypto\"). AES encryption is not yet supported. It can be used with buffer streams, e.g.: Zip::OutputStream.write_buffer(::StringIO.new(''), Zip::TraditionalEncrypter.new('password')) do |out| out.put_next_entry(\"my_file.txt\") out.write my_data end.string This is an experimental feature and the interface for encryption may change in future versions. Known issues Modify docx file with rubyzip Use write_buffer instead open . Thanks to @jondruse buffer = Zip::OutputStream.write_buffer do |out| @zip_file.entries.each do |e| unless [DOCUMENT_FILE_PATH, RELS_FILE_PATH].include?(e.name) out.put_next_entry(e.name) out.write e.get_input_stream.read end end out.put_next_entry(DOCUMENT_FILE_PATH) out.write xml_doc.to_xml(:indent => 0).gsub(\"\\n\",\"\") out.put_next_entry(RELS_FILE_PATH) out.write rels.to_xml(:indent => 0).gsub(\"\\n\",\"\") end File.open(new_path, \"wb\") {|f| f.write(buffer.string) } Configuration Existing Files By default, rubyzip will not overwrite files if they already exist inside of the extracted path. To change this behavior, you may specify a configuration option like so: Zip.on_exists_proc = true If you're using rubyzip with rails, consider placing this snippet of code in an initializer file such as config/initializers/rubyzip.rb Additionally, if you want to configure rubyzip to overwrite existing files while creating a .zip file, you can do so with the following: Zip.continue_on_exists_proc = true Non-ASCII Names If you want to store non-english names and want to open them on Windows(pre 7) you need to set this option: Zip.unicode_names = true Sometimes file names inside zip contain non-ASCII characters. If you can assume which encoding was used for such names and want to be able to find such entries using find_entry then you can force assumed encoding like so: Zip.force_entry_names_encoding = 'UTF-8' Allowed encoding names are the same as accepted by String#force_encoding Date Validation Some zip files might have an invalid date format, which will raise a warning. You can hide this warning with the following setting: Zip.warn_invalid_date = false Size Validation By default (in rubyzip >= 2.0), rubyzip's extract method checks that an entry's reported uncompressed size is not (significantly) smaller than its actual size. This is to help you protect your application against zip bombs . Before extract ing an entry, you should check that its size is in the range you expect. For example, if your application supports processing up to 100 files at once, each up to 10MiB, your zip extraction code might look like: MAX_FILE_SIZE = 10 * 1024**2 # 10MiB MAX_FILES = 100 Zip::File.open('foo.zip') do |zip_file| num_files = 0 zip_file.each do |entry| num_files += 1 if entry.file? raise 'Too many extracted files' if num_files > MAX_FILES raise 'File too large when extracted' if entry.size > MAX_FILE_SIZE entry.extract end end If you need to extract zip files that report incorrect uncompressed sizes and you really trust them not too be too large, you can disable this setting with Zip.validate_entry_sizes = false Note that if you use the lower level Zip::InputStream interface, rubyzip does not check the entry size s. In this case, the caller is responsible for making sure it does not read more data than expected from the input stream. Default Compression You can set the default compression level like so: Zip.default_compression = Zlib::DEFAULT_COMPRESSION It defaults to Zlib::DEFAULT_COMPRESSION . Possible values are Zlib::BEST_COMPRESSION , Zlib::DEFAULT_COMPRESSION and Zlib::NO_COMPRESSION Zip64 Support By default, Zip64 support is disabled for writing. To enable it do this: Zip.write_zip64_support = true NOTE : If you will enable Zip64 writing then you will need zip extractor with Zip64 support to extract archive. Block Form You can set multiple settings at the same time by using a block: Zip.setup do |c| c.on_exists_proc = true c.continue_on_exists_proc = true c.unicode_names = true c.default_compression = Zlib::BEST_COMPRESSION end Developing To run the test you need to do this: bundle install rake Website and Project Home http://github.com/rubyzip/rubyzip http://rdoc.info/github/rubyzip/rubyzip/master/frames Authors Alexander Simonov ( alex at simonov.me) Alan Harper ( alan at aussiegeek.net) Thomas Sondergaard (thomas at sondergaard.cc) Technorama Ltd. (oss-ruby-zip at technorama.net) extra-field support contributed by Tatsuki Sugiura (sugi at nemui.org) License Rubyzip is distributed under the same license as ruby. See http://www.ruby-lang.org/en/LICENSE.txt","title":"rubyzip"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#rubyzip","text":"Rubyzip is a ruby library for reading and writing zip files.","title":"rubyzip"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#important-note","text":"The Rubyzip interface has changed!!! No need to do require \"zip/zip\" and Zip prefix in class names removed. If you have issues with any third-party gems that require an old version of rubyzip, you can use this workaround: gem 'rubyzip', '>= 1.0.0' # will load new rubyzip version gem 'zip-zip' # will load compatibility for old rubyzip API.","title":"Important note"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#requirements","text":"Ruby 2.4 or greater (for rubyzip 2.0; use 1.x for older rubies)","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#installation","text":"Rubyzip is available on RubyGems: gem install rubyzip Or in your Gemfile: gem 'rubyzip'","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#basic-zip-archive-creation","text":"require 'rubygems' require 'zip' folder = \"Users/me/Desktop/stuff_to_zip\" input_filenames = ['image.jpg', 'description.txt', 'stats.csv'] zipfile_name = \"/Users/me/Desktop/archive.zip\" Zip::File.open(zipfile_name, Zip::File::CREATE) do |zipfile| input_filenames.each do |filename| # Two arguments: # - The name of the file as it will appear in the archive # - The original file, including the path to find it zipfile.add(filename, File.join(folder, filename)) end zipfile.get_output_stream(\"myFile\") { |f| f.write \"myFile contains just this\" } end","title":"Basic zip archive creation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#zipping-a-directory-recursively","text":"Copy from here require 'zip' # This is a simple example which uses rubyzip to # recursively generate a zip file from the contents of # a specified directory. The directory itself is not # included in the archive, rather just its contents. # # Usage: # directory_to_zip = \"/tmp/input\" # output_file = \"/tmp/out.zip\" # zf = ZipFileGenerator.new(directory_to_zip, output_file) # zf.write() class ZipFileGenerator # Initialize with the directory to zip and the location of the output archive. def initialize(input_dir, output_file) @input_dir = input_dir @output_file = output_file end # Zip the input directory. def write entries = Dir.entries(@input_dir) - %w[. ..] ::Zip::File.open(@output_file, ::Zip::File::CREATE) do |zipfile| write_entries entries, '', zipfile end end private # A helper method to make the recursion work. def write_entries(entries, path, zipfile) entries.each do |e| zipfile_path = path == '' ? e : File.join(path, e) disk_file_path = File.join(@input_dir, zipfile_path) if File.directory? disk_file_path recursively_deflate_directory(disk_file_path, zipfile, zipfile_path) else put_into_archive(disk_file_path, zipfile, zipfile_path) end end end def recursively_deflate_directory(disk_file_path, zipfile, zipfile_path) zipfile.mkdir zipfile_path subdir = Dir.entries(disk_file_path) - %w[. ..] write_entries subdir, zipfile_path, zipfile end def put_into_archive(disk_file_path, zipfile, zipfile_path) zipfile.add(zipfile_path, disk_file_path) end end","title":"Zipping a directory recursively"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#save-zip-archive-entries-in-sorted-by-name-state","text":"To save zip archives in sorted order like below, you need to set ::Zip.sort_entries to true Vegetable/ Vegetable/bean Vegetable/carrot Vegetable/celery fruit/ fruit/apple fruit/kiwi fruit/mango fruit/orange After this, entries in the zip archive will be saved in ordered state.","title":"Save zip archive entries in sorted by name state"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#default-permissions-of-zip-archives","text":"On Posix file systems the default file permissions applied to a new archive are (0666 - umask), which mimics the behavior of standard tools such as touch . On Windows the default file permissions are set to 0644 as suggested by the Ruby File documentation . When modifying a zip archive the file permissions of the archive are preserved.","title":"Default permissions of zip archives"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#reading-a-zip-file","text":"MAX_SIZE = 1024**2 # 1MiB (but of course you can increase this) Zip::File.open('foo.zip') do |zip_file| # Handle entries one by one zip_file.each do |entry| puts \"Extracting #{entry.name}\" raise 'File too large when extracted' if entry.size > MAX_SIZE # Extract to file or directory based on name in the archive entry.extract # Read into memory content = entry.get_input_stream.read end # Find specific entry entry = zip_file.glob('*.csv').first raise 'File too large when extracted' if entry.size > MAX_SIZE puts entry.get_input_stream.read end","title":"Reading a Zip file"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#notice-about-zipinputstream","text":"::Zip::InputStream usable for fast reading zip file content because it not read Central directory. But there is one exception when it is not working - General Purpose Flag Bit 3. If bit 3 (0x08) of the general-purpose flags field is set, then the CRC-32 and file sizes are not known when the header is written. The fields in the local header are filled with zero, and the CRC-32 and size are appended in a 12-byte structure (optionally preceded by a 4-byte signature) immediately after the compressed data If ::Zip::InputStream finds such entry in the zip archive it will raise an exception.","title":"Notice about ::Zip::InputStream"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#password-protection-experimental","text":"Rubyzip supports reading/writing zip files with traditional zip encryption (a.k.a. \"ZipCrypto\"). AES encryption is not yet supported. It can be used with buffer streams, e.g.: Zip::OutputStream.write_buffer(::StringIO.new(''), Zip::TraditionalEncrypter.new('password')) do |out| out.put_next_entry(\"my_file.txt\") out.write my_data end.string This is an experimental feature and the interface for encryption may change in future versions.","title":"Password Protection (Experimental)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#known-issues","text":"","title":"Known issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#modify-docx-file-with-rubyzip","text":"Use write_buffer instead open . Thanks to @jondruse buffer = Zip::OutputStream.write_buffer do |out| @zip_file.entries.each do |e| unless [DOCUMENT_FILE_PATH, RELS_FILE_PATH].include?(e.name) out.put_next_entry(e.name) out.write e.get_input_stream.read end end out.put_next_entry(DOCUMENT_FILE_PATH) out.write xml_doc.to_xml(:indent => 0).gsub(\"\\n\",\"\") out.put_next_entry(RELS_FILE_PATH) out.write rels.to_xml(:indent => 0).gsub(\"\\n\",\"\") end File.open(new_path, \"wb\") {|f| f.write(buffer.string) }","title":"Modify docx file with rubyzip"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#configuration","text":"","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#existing-files","text":"By default, rubyzip will not overwrite files if they already exist inside of the extracted path. To change this behavior, you may specify a configuration option like so: Zip.on_exists_proc = true If you're using rubyzip with rails, consider placing this snippet of code in an initializer file such as config/initializers/rubyzip.rb Additionally, if you want to configure rubyzip to overwrite existing files while creating a .zip file, you can do so with the following: Zip.continue_on_exists_proc = true","title":"Existing Files"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#non-ascii-names","text":"If you want to store non-english names and want to open them on Windows(pre 7) you need to set this option: Zip.unicode_names = true Sometimes file names inside zip contain non-ASCII characters. If you can assume which encoding was used for such names and want to be able to find such entries using find_entry then you can force assumed encoding like so: Zip.force_entry_names_encoding = 'UTF-8' Allowed encoding names are the same as accepted by String#force_encoding","title":"Non-ASCII Names"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#date-validation","text":"Some zip files might have an invalid date format, which will raise a warning. You can hide this warning with the following setting: Zip.warn_invalid_date = false","title":"Date Validation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#size-validation","text":"By default (in rubyzip >= 2.0), rubyzip's extract method checks that an entry's reported uncompressed size is not (significantly) smaller than its actual size. This is to help you protect your application against zip bombs . Before extract ing an entry, you should check that its size is in the range you expect. For example, if your application supports processing up to 100 files at once, each up to 10MiB, your zip extraction code might look like: MAX_FILE_SIZE = 10 * 1024**2 # 10MiB MAX_FILES = 100 Zip::File.open('foo.zip') do |zip_file| num_files = 0 zip_file.each do |entry| num_files += 1 if entry.file? raise 'Too many extracted files' if num_files > MAX_FILES raise 'File too large when extracted' if entry.size > MAX_FILE_SIZE entry.extract end end If you need to extract zip files that report incorrect uncompressed sizes and you really trust them not too be too large, you can disable this setting with Zip.validate_entry_sizes = false Note that if you use the lower level Zip::InputStream interface, rubyzip does not check the entry size s. In this case, the caller is responsible for making sure it does not read more data than expected from the input stream.","title":"Size Validation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#default-compression","text":"You can set the default compression level like so: Zip.default_compression = Zlib::DEFAULT_COMPRESSION It defaults to Zlib::DEFAULT_COMPRESSION . Possible values are Zlib::BEST_COMPRESSION , Zlib::DEFAULT_COMPRESSION and Zlib::NO_COMPRESSION","title":"Default Compression"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#zip64-support","text":"By default, Zip64 support is disabled for writing. To enable it do this: Zip.write_zip64_support = true NOTE : If you will enable Zip64 writing then you will need zip extractor with Zip64 support to extract archive.","title":"Zip64 Support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#block-form","text":"You can set multiple settings at the same time by using a block: Zip.setup do |c| c.on_exists_proc = true c.continue_on_exists_proc = true c.unicode_names = true c.default_compression = Zlib::BEST_COMPRESSION end","title":"Block Form"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#developing","text":"To run the test you need to do this: bundle install rake","title":"Developing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#website-and-project-home","text":"http://github.com/rubyzip/rubyzip http://rdoc.info/github/rubyzip/rubyzip/master/frames","title":"Website and Project Home"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#authors","text":"Alexander Simonov ( alex at simonov.me) Alan Harper ( alan at aussiegeek.net) Thomas Sondergaard (thomas at sondergaard.cc) Technorama Ltd. (oss-ruby-zip at technorama.net) extra-field support contributed by Tatsuki Sugiura (sugi at nemui.org)","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/rubyzip-2.3.2/#license","text":"Rubyzip is distributed under the same license as ruby. See http://www.ruby-lang.org/en/LICENSE.txt","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/","text":"SafeYAML The SafeYAML gem provides an alternative implementation of YAML.load suitable for accepting user input in Ruby applications. Unlike Ruby's built-in implementation of YAML.load , SafeYAML's version will not expose apps to arbitrary code execution exploits (such as the ones discovered in Rails in early 2013 ). If you encounter any issues with SafeYAML, check out the 'Common Issues' section below. If you don't see anything that addresses the problem you're experiencing, by all means, create an issue ! Installation Add this line to your application's Gemfile: gem \"safe_yaml\" Configuration If all you do is add SafeYAML to your project, then YAML.load will operate in \"safe\" mode, which means it won't deserialize arbitrary objects. However, it will issue a warning the first time you call it because you haven't explicitly specified whether you want safe or unsafe behavior by default. To specify this behavior (e.g., in a Rails initializer): SafeYAML::OPTIONS[:default_mode] = :safe # or :unsafe Another important option you might want to specify on startup is whether or not to allow symbols to be deserialized. The default setting is false , since symbols are not garbage collected in Ruby and so deserializing them from YAML may render your application vulnerable to a DOS (denial of service) attack. To allow symbol deserialization by default: SafeYAML::OPTIONS[:deserialize_symbols] = true For more information on these and other options, see the \"Usage\" section down below. What is this gem for, exactly? Suppose your application were to use a popular open source library which contained code like this: class ClassBuilder def []=(key, value) @class ||= Class.new @class.class_eval <<-EOS def #{key} #{value} end EOS end def create @class.new end end Now, if you were to use YAML.load on user input anywhere in your application without the SafeYAML gem installed, an attacker who suspected you were using this library could send a request with a carefully-crafted YAML string to execute arbitrary code (yes, including system(\"unix command\") ) on your servers. This simple example demonstrates the vulnerability: yaml = <<-EOYAML --- !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.load(yaml) I'm in yr system! => #<ClassBuilder:0x007fdbbe2e25d8 @class=#<Class:0x007fdbbe2e2510>> With SafeYAML, the same attacker would be thwarted: > require \"safe_yaml\" => true > YAML.load(yaml, :safe => true) => {\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"} Usage When you require the safe_yaml gem in your project, YAML.load is patched to accept one additional (optional) options parameter. This changes the method signature as follows: for Syck and Psych prior to Ruby 1.9.3: YAML.load(yaml, options={}) for Psych in 1.9.3 and later: YAML.load(yaml, filename=nil, options={}) The most important option is the :safe option (default: true ), which controls whether or not to deserialize arbitrary objects when parsing a YAML document. The other options, along with explanations, are as follows. :deserialize_symbols (default: false ): Controls whether or not YAML will deserialize symbols. It is probably best to only enable this option where necessary, e.g. to make trusted libraries work. Symbols receive special treatment in Ruby and are not garbage collected, which means deserializing them indiscriminately may render your site vulnerable to a DOS attack. :whitelisted_tags : Accepts an array of YAML tags that designate trusted types, e.g., ones that can be deserialized without worrying about any resulting security vulnerabilities. When any of the given tags are encountered in a YAML document, the associated data will be parsed by the underlying YAML engine (Syck or Psych) for the version of Ruby you are using. See the \"Whitelisting Trusted Types\" section below for more information. :custom_initializers : Similar to the :whitelisted_tags option, but allows you to provide your own initializers for specified tags rather than using Syck or Psyck. Accepts a hash with string tags for keys and lambdas for values. :raise_on_unknown_tag (default: false ): Represents the highest possible level of paranoia. If the YAML engine encounters any tag other than ones that are automatically trusted by SafeYAML or that you've explicitly whitelisted, it will raise an exception. This may be a good choice if you expect to always be dealing with perfectly safe YAML and want your application to fail loudly upon encountering questionable data. All of the above options can be set at the global level via SafeYAML::OPTIONS . You can also set each one individually per call to YAML.load ; an option explicitly passed to load will take precedence over an option specified globally. What if I don't want to patch YAML ? Excellent question ! You can also get the methods SafeYAML.load and SafeYAML.load_file without touching the YAML module at all like this: require \"safe_yaml/load\" # instead of require \"safe_yaml\" This way, you can use SafeYAML.load to parse YAML that you don't trust, without affecting the rest of an application (if you're developing a library, for example). Supported Types The way that SafeYAML works is by restricting the kinds of objects that can be deserialized via YAML.load . More specifically, only the following types of objects can be deserialized by default: Hashes Arrays Strings Numbers Dates Times Booleans Nils Again, deserialization of symbols can be enabled globally by setting SafeYAML::OPTIONS[:deserialize_symbols] = true , or in a specific call to YAML.load([some yaml], :deserialize_symbols => true) . Whitelisting Trusted Types SafeYAML supports whitelisting certain YAML tags for trusted types. This is handy when your application uses YAML to serialize and deserialize certain types not listed above, which you know to be free of any deserialization-related vulnerabilities. The easiest way to whitelist types is by calling SafeYAML.whitelist! , which can accept a variable number of safe types, e.g.: SafeYAML.whitelist!(Foo, Bar) You can also whitelist YAML tags via the :whitelisted_tags option: # Using Syck SafeYAML::OPTIONS[:whitelisted_tags] = [\"tag:ruby.yaml.org,2002:object:OpenStruct\"] # Using Psych SafeYAML::OPTIONS[:whitelisted_tags] = [\"!ruby/object:OpenStruct\"] And in case you were wondering: no, this feature will not allow would-be attackers to embed untrusted types within trusted types: yaml = <<-EOYAML --- !ruby/object:OpenStruct table: :backdoor: !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.safe_load(yaml) => #<OpenStruct :backdoor={\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}> Known Issues If you add SafeYAML to your project and start seeing any errors about missing keys, or you notice mysterious strings that look like \":foo\" (i.e., start with a colon), it's likely you're seeing errors from symbols being saved in YAML format. If you are able to modify the offending code, you might want to consider changing your YAML content to use plain vanilla strings instead of symbols. If not, you may need to set the :deserialize_symbols option to true , either in calls to YAML.load or---as a last resort---globally, with SafeYAML::OPTIONS[:deserialize_symbols] . Also be aware that some Ruby libraries, particularly those requiring inter-process communication, leverage YAML's object deserialization functionality and therefore may break or otherwise be impacted by SafeYAML. The following list includes known instances of SafeYAML's interaction with other Ruby gems: ActiveRecord : uses YAML to control serialization of model objects using the serialize class method. If you find that accessing serialized properties on your ActiveRecord models is causing errors, chances are you may need to: set the :deserialize_symbols option to true , whitelist some of the types in your serialized data via SafeYAML.whitelist! or the :whitelisted_tags option, or both delayed_job : Uses YAML to serialize the objects on which delayed methods are invoked (with delay ). The safest solution in this case is to use SafeYAML.whitelist! to whitelist the types you need to serialize. Guard : Uses YAML as a serialization format for notifications. The data serialized uses symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true is necessary to allow Guard to work. sidekiq : Uses a YAML configiuration file with symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true should allow it to work. The above list will grow over time, as more issues are discovered. Versioning SafeYAML will follow semantic versioning so any updates to the first major version will maintain backwards compatability. So expect primarily bug fixes and feature enhancements (if anything!) from here on out... unless it makes sense to break the interface at some point and introduce a version 2.0, which I honestly think is unlikely. Requirements SafeYAML requires Ruby 1.8.7 or newer and works with both Syck and Psych . If you are using a version of Ruby where Psych is the default YAML engine (e.g., 1.9.3) but you want to use Syck, be sure to set YAML::ENGINE.yamler = \"syck\" before requiring the safe_yaml gem.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#safeyaml","text":"The SafeYAML gem provides an alternative implementation of YAML.load suitable for accepting user input in Ruby applications. Unlike Ruby's built-in implementation of YAML.load , SafeYAML's version will not expose apps to arbitrary code execution exploits (such as the ones discovered in Rails in early 2013 ). If you encounter any issues with SafeYAML, check out the 'Common Issues' section below. If you don't see anything that addresses the problem you're experiencing, by all means, create an issue !","title":"SafeYAML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#installation","text":"Add this line to your application's Gemfile: gem \"safe_yaml\"","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#configuration","text":"If all you do is add SafeYAML to your project, then YAML.load will operate in \"safe\" mode, which means it won't deserialize arbitrary objects. However, it will issue a warning the first time you call it because you haven't explicitly specified whether you want safe or unsafe behavior by default. To specify this behavior (e.g., in a Rails initializer): SafeYAML::OPTIONS[:default_mode] = :safe # or :unsafe Another important option you might want to specify on startup is whether or not to allow symbols to be deserialized. The default setting is false , since symbols are not garbage collected in Ruby and so deserializing them from YAML may render your application vulnerable to a DOS (denial of service) attack. To allow symbol deserialization by default: SafeYAML::OPTIONS[:deserialize_symbols] = true For more information on these and other options, see the \"Usage\" section down below.","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#what-is-this-gem-for-exactly","text":"Suppose your application were to use a popular open source library which contained code like this: class ClassBuilder def []=(key, value) @class ||= Class.new @class.class_eval <<-EOS def #{key} #{value} end EOS end def create @class.new end end Now, if you were to use YAML.load on user input anywhere in your application without the SafeYAML gem installed, an attacker who suspected you were using this library could send a request with a carefully-crafted YAML string to execute arbitrary code (yes, including system(\"unix command\") ) on your servers. This simple example demonstrates the vulnerability: yaml = <<-EOYAML --- !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.load(yaml) I'm in yr system! => #<ClassBuilder:0x007fdbbe2e25d8 @class=#<Class:0x007fdbbe2e2510>> With SafeYAML, the same attacker would be thwarted: > require \"safe_yaml\" => true > YAML.load(yaml, :safe => true) => {\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}","title":"What is this gem for, exactly?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#usage","text":"When you require the safe_yaml gem in your project, YAML.load is patched to accept one additional (optional) options parameter. This changes the method signature as follows: for Syck and Psych prior to Ruby 1.9.3: YAML.load(yaml, options={}) for Psych in 1.9.3 and later: YAML.load(yaml, filename=nil, options={}) The most important option is the :safe option (default: true ), which controls whether or not to deserialize arbitrary objects when parsing a YAML document. The other options, along with explanations, are as follows. :deserialize_symbols (default: false ): Controls whether or not YAML will deserialize symbols. It is probably best to only enable this option where necessary, e.g. to make trusted libraries work. Symbols receive special treatment in Ruby and are not garbage collected, which means deserializing them indiscriminately may render your site vulnerable to a DOS attack. :whitelisted_tags : Accepts an array of YAML tags that designate trusted types, e.g., ones that can be deserialized without worrying about any resulting security vulnerabilities. When any of the given tags are encountered in a YAML document, the associated data will be parsed by the underlying YAML engine (Syck or Psych) for the version of Ruby you are using. See the \"Whitelisting Trusted Types\" section below for more information. :custom_initializers : Similar to the :whitelisted_tags option, but allows you to provide your own initializers for specified tags rather than using Syck or Psyck. Accepts a hash with string tags for keys and lambdas for values. :raise_on_unknown_tag (default: false ): Represents the highest possible level of paranoia. If the YAML engine encounters any tag other than ones that are automatically trusted by SafeYAML or that you've explicitly whitelisted, it will raise an exception. This may be a good choice if you expect to always be dealing with perfectly safe YAML and want your application to fail loudly upon encountering questionable data. All of the above options can be set at the global level via SafeYAML::OPTIONS . You can also set each one individually per call to YAML.load ; an option explicitly passed to load will take precedence over an option specified globally.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#what-if-i-dont-want-to-patch-yaml","text":"Excellent question ! You can also get the methods SafeYAML.load and SafeYAML.load_file without touching the YAML module at all like this: require \"safe_yaml/load\" # instead of require \"safe_yaml\" This way, you can use SafeYAML.load to parse YAML that you don't trust, without affecting the rest of an application (if you're developing a library, for example).","title":"What if I don't want to patch YAML?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#supported-types","text":"The way that SafeYAML works is by restricting the kinds of objects that can be deserialized via YAML.load . More specifically, only the following types of objects can be deserialized by default: Hashes Arrays Strings Numbers Dates Times Booleans Nils Again, deserialization of symbols can be enabled globally by setting SafeYAML::OPTIONS[:deserialize_symbols] = true , or in a specific call to YAML.load([some yaml], :deserialize_symbols => true) .","title":"Supported Types"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#whitelisting-trusted-types","text":"SafeYAML supports whitelisting certain YAML tags for trusted types. This is handy when your application uses YAML to serialize and deserialize certain types not listed above, which you know to be free of any deserialization-related vulnerabilities. The easiest way to whitelist types is by calling SafeYAML.whitelist! , which can accept a variable number of safe types, e.g.: SafeYAML.whitelist!(Foo, Bar) You can also whitelist YAML tags via the :whitelisted_tags option: # Using Syck SafeYAML::OPTIONS[:whitelisted_tags] = [\"tag:ruby.yaml.org,2002:object:OpenStruct\"] # Using Psych SafeYAML::OPTIONS[:whitelisted_tags] = [\"!ruby/object:OpenStruct\"] And in case you were wondering: no, this feature will not allow would-be attackers to embed untrusted types within trusted types: yaml = <<-EOYAML --- !ruby/object:OpenStruct table: :backdoor: !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.safe_load(yaml) => #<OpenStruct :backdoor={\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}>","title":"Whitelisting Trusted Types"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#known-issues","text":"If you add SafeYAML to your project and start seeing any errors about missing keys, or you notice mysterious strings that look like \":foo\" (i.e., start with a colon), it's likely you're seeing errors from symbols being saved in YAML format. If you are able to modify the offending code, you might want to consider changing your YAML content to use plain vanilla strings instead of symbols. If not, you may need to set the :deserialize_symbols option to true , either in calls to YAML.load or---as a last resort---globally, with SafeYAML::OPTIONS[:deserialize_symbols] . Also be aware that some Ruby libraries, particularly those requiring inter-process communication, leverage YAML's object deserialization functionality and therefore may break or otherwise be impacted by SafeYAML. The following list includes known instances of SafeYAML's interaction with other Ruby gems: ActiveRecord : uses YAML to control serialization of model objects using the serialize class method. If you find that accessing serialized properties on your ActiveRecord models is causing errors, chances are you may need to: set the :deserialize_symbols option to true , whitelist some of the types in your serialized data via SafeYAML.whitelist! or the :whitelisted_tags option, or both delayed_job : Uses YAML to serialize the objects on which delayed methods are invoked (with delay ). The safest solution in this case is to use SafeYAML.whitelist! to whitelist the types you need to serialize. Guard : Uses YAML as a serialization format for notifications. The data serialized uses symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true is necessary to allow Guard to work. sidekiq : Uses a YAML configiuration file with symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true should allow it to work. The above list will grow over time, as more issues are discovered.","title":"Known Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#versioning","text":"SafeYAML will follow semantic versioning so any updates to the first major version will maintain backwards compatability. So expect primarily bug fixes and feature enhancements (if anything!) from here on out... unless it makes sense to break the interface at some point and introduce a version 2.0, which I honestly think is unlikely.","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/#requirements","text":"SafeYAML requires Ruby 1.8.7 or newer and works with both Syck and Psych . If you are using a version of Ruby where Psych is the default YAML engine (e.g., 1.9.3) but you want to use Syck, be sure to set YAML::ENGINE.yamler = \"syck\" before requiring the safe_yaml gem.","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/","text":"1.0.2 added warning when using Psych + an older version of libyaml 1.0.1 fixed handling for strings that look like (invalid) dates 1.0.0 updated date parsing to use local timezone now requiring \"safe_yaml/load\" provides SafeYAML.load without clobbering YAML fixed handling of empty files fixed some (edge case) integer parsing bugs fixed some JRuby-specific issues 0.9.7 made handling of document frontmatter more robust added more descriptive message to the warning for omitting the :safe option 0.9.6 fixed handling of files with trailing content (after closing --- ) 0.9.5 fixed permissions AGAIN 0.9.4 corrected handling of symbols 0.9.3 fixed permissions :( 0.9.2 fixed error w/ parsing \"!\" when whitelisting tags fixed parsing of the number 0 (d'oh!) 0.9.1 added Yecht support (JRuby) more bug fixes 0.9.0 added whitelist! method for easily whitelisting tags added support for call-specific options removed deprecated methods 0.8.6 fixed bug in float matcher 0.8.5 performance improvements made less verbose by default bug fixes 0.8.4 enhancements to parsing of integers, floats, and dates updated built-in whitelist more bug fixes 0.8.3 fixed exception on parsing empty document fixed handling of octal & hexadecimal numbers 0.8.2 bug fixes 0.8.1 added :raise_on_unknown_tag option renamed reset_defaults! to restore_defaults! 0.8 added tag whitelisting more API changes 0.7 separated YAML engine support from Ruby version added support for binary scalars numerous bug fixes and enhancements 0.6 several API changes added SafeYAML::OPTIONS for specifying default behavior 0.5 Added support for dates 0.4 efficiency improvements made YAML.load use YAML.safe_load by default made symbol deserialization optional 0.3 Added Syck support 0.2 Added support for: anchors & aliases booleans nils 0.1 Initial release","title":"CHANGES"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#102","text":"added warning when using Psych + an older version of libyaml","title":"1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#101","text":"fixed handling for strings that look like (invalid) dates","title":"1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#100","text":"updated date parsing to use local timezone now requiring \"safe_yaml/load\" provides SafeYAML.load without clobbering YAML fixed handling of empty files fixed some (edge case) integer parsing bugs fixed some JRuby-specific issues","title":"1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#097","text":"made handling of document frontmatter more robust added more descriptive message to the warning for omitting the :safe option","title":"0.9.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#096","text":"fixed handling of files with trailing content (after closing --- )","title":"0.9.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#095","text":"fixed permissions AGAIN","title":"0.9.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#094","text":"corrected handling of symbols","title":"0.9.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#093","text":"fixed permissions :(","title":"0.9.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#092","text":"fixed error w/ parsing \"!\" when whitelisting tags fixed parsing of the number 0 (d'oh!)","title":"0.9.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#091","text":"added Yecht support (JRuby) more bug fixes","title":"0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#090","text":"added whitelist! method for easily whitelisting tags added support for call-specific options removed deprecated methods","title":"0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#086","text":"fixed bug in float matcher","title":"0.8.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#085","text":"performance improvements made less verbose by default bug fixes","title":"0.8.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#084","text":"enhancements to parsing of integers, floats, and dates updated built-in whitelist more bug fixes","title":"0.8.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#083","text":"fixed exception on parsing empty document fixed handling of octal & hexadecimal numbers","title":"0.8.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#082","text":"bug fixes","title":"0.8.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#081","text":"added :raise_on_unknown_tag option renamed reset_defaults! to restore_defaults!","title":"0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#08","text":"added tag whitelisting more API changes","title":"0.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#07","text":"separated YAML engine support from Ruby version added support for binary scalars numerous bug fixes and enhancements","title":"0.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#06","text":"several API changes added SafeYAML::OPTIONS for specifying default behavior","title":"0.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#05","text":"Added support for dates","title":"0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#04","text":"efficiency improvements made YAML.load use YAML.safe_load by default made symbol deserialization optional","title":"0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#03","text":"Added Syck support","title":"0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#02","text":"Added support for: anchors & aliases booleans nils","title":"0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.4/CHANGES/#01","text":"Initial release","title":"0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/","text":"SafeYAML The SafeYAML gem provides an alternative implementation of YAML.load suitable for accepting user input in Ruby applications. Unlike Ruby's built-in implementation of YAML.load , SafeYAML's version will not expose apps to arbitrary code execution exploits (such as the ones discovered in Rails in early 2013 ). If you encounter any issues with SafeYAML, check out the 'Common Issues' section below. If you don't see anything that addresses the problem you're experiencing, by all means, create an issue ! Installation Add this line to your application's Gemfile: gem \"safe_yaml\" Configuration If all you do is add SafeYAML to your project, then YAML.load will operate in \"safe\" mode, which means it won't deserialize arbitrary objects. However, it will issue a warning the first time you call it because you haven't explicitly specified whether you want safe or unsafe behavior by default. To specify this behavior (e.g., in a Rails initializer): SafeYAML::OPTIONS[:default_mode] = :safe # or :unsafe Another important option you might want to specify on startup is whether or not to allow symbols to be deserialized. The default setting is false , since symbols are not garbage collected in Ruby and so deserializing them from YAML may render your application vulnerable to a DOS (denial of service) attack. To allow symbol deserialization by default: SafeYAML::OPTIONS[:deserialize_symbols] = true For more information on these and other options, see the \"Usage\" section down below. What is this gem for, exactly? Suppose your application were to use a popular open source library which contained code like this: class ClassBuilder def []=(key, value) @class ||= Class.new @class.class_eval <<-EOS def #{key} #{value} end EOS end def create @class.new end end Now, if you were to use YAML.load on user input anywhere in your application without the SafeYAML gem installed, an attacker who suspected you were using this library could send a request with a carefully-crafted YAML string to execute arbitrary code (yes, including system(\"unix command\") ) on your servers. This simple example demonstrates the vulnerability: yaml = <<-EOYAML --- !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.load(yaml) I'm in yr system! => #<ClassBuilder:0x007fdbbe2e25d8 @class=#<Class:0x007fdbbe2e2510>> With SafeYAML, the same attacker would be thwarted: > require \"safe_yaml\" => true > YAML.load(yaml, :safe => true) => {\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"} Usage When you require the safe_yaml gem in your project, YAML.load is patched to accept one additional (optional) options parameter. This changes the method signature as follows: for Syck and Psych prior to Ruby 1.9.3: YAML.load(yaml, options={}) for Psych in 1.9.3 and later: YAML.load(yaml, filename=nil, options={}) The most important option is the :safe option (default: true ), which controls whether or not to deserialize arbitrary objects when parsing a YAML document. The other options, along with explanations, are as follows. :deserialize_symbols (default: false ): Controls whether or not YAML will deserialize symbols. It is probably best to only enable this option where necessary, e.g. to make trusted libraries work. Symbols receive special treatment in Ruby and are not garbage collected, which means deserializing them indiscriminately may render your site vulnerable to a DOS attack. :whitelisted_tags : Accepts an array of YAML tags that designate trusted types, e.g., ones that can be deserialized without worrying about any resulting security vulnerabilities. When any of the given tags are encountered in a YAML document, the associated data will be parsed by the underlying YAML engine (Syck or Psych) for the version of Ruby you are using. See the \"Whitelisting Trusted Types\" section below for more information. :custom_initializers : Similar to the :whitelisted_tags option, but allows you to provide your own initializers for specified tags rather than using Syck or Psyck. Accepts a hash with string tags for keys and lambdas for values. :raise_on_unknown_tag (default: false ): Represents the highest possible level of paranoia. If the YAML engine encounters any tag other than ones that are automatically trusted by SafeYAML or that you've explicitly whitelisted, it will raise an exception. This may be a good choice if you expect to always be dealing with perfectly safe YAML and want your application to fail loudly upon encountering questionable data. All of the above options can be set at the global level via SafeYAML::OPTIONS . You can also set each one individually per call to YAML.load ; an option explicitly passed to load will take precedence over an option specified globally. What if I don't want to patch YAML ? Excellent question ! You can also get the methods SafeYAML.load and SafeYAML.load_file without touching the YAML module at all like this: require \"safe_yaml/load\" # instead of require \"safe_yaml\" This way, you can use SafeYAML.load to parse YAML that you don't trust, without affecting the rest of an application (if you're developing a library, for example). Supported Types The way that SafeYAML works is by restricting the kinds of objects that can be deserialized via YAML.load . More specifically, only the following types of objects can be deserialized by default: Hashes Arrays Strings Numbers Dates Times Booleans Nils Again, deserialization of symbols can be enabled globally by setting SafeYAML::OPTIONS[:deserialize_symbols] = true , or in a specific call to YAML.load([some yaml], :deserialize_symbols => true) . Whitelisting Trusted Types SafeYAML supports whitelisting certain YAML tags for trusted types. This is handy when your application uses YAML to serialize and deserialize certain types not listed above, which you know to be free of any deserialization-related vulnerabilities. The easiest way to whitelist types is by calling SafeYAML.whitelist! , which can accept a variable number of safe types, e.g.: SafeYAML.whitelist!(Foo, Bar) You can also whitelist YAML tags via the :whitelisted_tags option: # Using Syck SafeYAML::OPTIONS[:whitelisted_tags] = [\"tag:ruby.yaml.org,2002:object:OpenStruct\"] # Using Psych SafeYAML::OPTIONS[:whitelisted_tags] = [\"!ruby/object:OpenStruct\"] And in case you were wondering: no, this feature will not allow would-be attackers to embed untrusted types within trusted types: yaml = <<-EOYAML --- !ruby/object:OpenStruct table: :backdoor: !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.safe_load(yaml) => #<OpenStruct :backdoor={\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}> Known Issues If you add SafeYAML to your project and start seeing any errors about missing keys, or you notice mysterious strings that look like \":foo\" (i.e., start with a colon), it's likely you're seeing errors from symbols being saved in YAML format. If you are able to modify the offending code, you might want to consider changing your YAML content to use plain vanilla strings instead of symbols. If not, you may need to set the :deserialize_symbols option to true , either in calls to YAML.load or---as a last resort---globally, with SafeYAML::OPTIONS[:deserialize_symbols] . Also be aware that some Ruby libraries, particularly those requiring inter-process communication, leverage YAML's object deserialization functionality and therefore may break or otherwise be impacted by SafeYAML. The following list includes known instances of SafeYAML's interaction with other Ruby gems: ActiveRecord : uses YAML to control serialization of model objects using the serialize class method. If you find that accessing serialized properties on your ActiveRecord models is causing errors, chances are you may need to: set the :deserialize_symbols option to true , whitelist some of the types in your serialized data via SafeYAML.whitelist! or the :whitelisted_tags option, or both delayed_job : Uses YAML to serialize the objects on which delayed methods are invoked (with delay ). The safest solution in this case is to use SafeYAML.whitelist! to whitelist the types you need to serialize. Guard : Uses YAML as a serialization format for notifications. The data serialized uses symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true is necessary to allow Guard to work. sidekiq : Uses a YAML configiuration file with symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true should allow it to work. The above list will grow over time, as more issues are discovered. Versioning SafeYAML will follow semantic versioning so any updates to the first major version will maintain backwards compatability. So expect primarily bug fixes and feature enhancements (if anything!) from here on out... unless it makes sense to break the interface at some point and introduce a version 2.0, which I honestly think is unlikely. Requirements SafeYAML requires Ruby 1.8.7 or newer and works with both Syck and Psych . If you are using a version of Ruby where Psych is the default YAML engine (e.g., 1.9.3) but you want to use Syck, be sure to set YAML::ENGINE.yamler = \"syck\" before requiring the safe_yaml gem.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#safeyaml","text":"The SafeYAML gem provides an alternative implementation of YAML.load suitable for accepting user input in Ruby applications. Unlike Ruby's built-in implementation of YAML.load , SafeYAML's version will not expose apps to arbitrary code execution exploits (such as the ones discovered in Rails in early 2013 ). If you encounter any issues with SafeYAML, check out the 'Common Issues' section below. If you don't see anything that addresses the problem you're experiencing, by all means, create an issue !","title":"SafeYAML"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#installation","text":"Add this line to your application's Gemfile: gem \"safe_yaml\"","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#configuration","text":"If all you do is add SafeYAML to your project, then YAML.load will operate in \"safe\" mode, which means it won't deserialize arbitrary objects. However, it will issue a warning the first time you call it because you haven't explicitly specified whether you want safe or unsafe behavior by default. To specify this behavior (e.g., in a Rails initializer): SafeYAML::OPTIONS[:default_mode] = :safe # or :unsafe Another important option you might want to specify on startup is whether or not to allow symbols to be deserialized. The default setting is false , since symbols are not garbage collected in Ruby and so deserializing them from YAML may render your application vulnerable to a DOS (denial of service) attack. To allow symbol deserialization by default: SafeYAML::OPTIONS[:deserialize_symbols] = true For more information on these and other options, see the \"Usage\" section down below.","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#what-is-this-gem-for-exactly","text":"Suppose your application were to use a popular open source library which contained code like this: class ClassBuilder def []=(key, value) @class ||= Class.new @class.class_eval <<-EOS def #{key} #{value} end EOS end def create @class.new end end Now, if you were to use YAML.load on user input anywhere in your application without the SafeYAML gem installed, an attacker who suspected you were using this library could send a request with a carefully-crafted YAML string to execute arbitrary code (yes, including system(\"unix command\") ) on your servers. This simple example demonstrates the vulnerability: yaml = <<-EOYAML --- !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.load(yaml) I'm in yr system! => #<ClassBuilder:0x007fdbbe2e25d8 @class=#<Class:0x007fdbbe2e2510>> With SafeYAML, the same attacker would be thwarted: > require \"safe_yaml\" => true > YAML.load(yaml, :safe => true) => {\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}","title":"What is this gem for, exactly?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#usage","text":"When you require the safe_yaml gem in your project, YAML.load is patched to accept one additional (optional) options parameter. This changes the method signature as follows: for Syck and Psych prior to Ruby 1.9.3: YAML.load(yaml, options={}) for Psych in 1.9.3 and later: YAML.load(yaml, filename=nil, options={}) The most important option is the :safe option (default: true ), which controls whether or not to deserialize arbitrary objects when parsing a YAML document. The other options, along with explanations, are as follows. :deserialize_symbols (default: false ): Controls whether or not YAML will deserialize symbols. It is probably best to only enable this option where necessary, e.g. to make trusted libraries work. Symbols receive special treatment in Ruby and are not garbage collected, which means deserializing them indiscriminately may render your site vulnerable to a DOS attack. :whitelisted_tags : Accepts an array of YAML tags that designate trusted types, e.g., ones that can be deserialized without worrying about any resulting security vulnerabilities. When any of the given tags are encountered in a YAML document, the associated data will be parsed by the underlying YAML engine (Syck or Psych) for the version of Ruby you are using. See the \"Whitelisting Trusted Types\" section below for more information. :custom_initializers : Similar to the :whitelisted_tags option, but allows you to provide your own initializers for specified tags rather than using Syck or Psyck. Accepts a hash with string tags for keys and lambdas for values. :raise_on_unknown_tag (default: false ): Represents the highest possible level of paranoia. If the YAML engine encounters any tag other than ones that are automatically trusted by SafeYAML or that you've explicitly whitelisted, it will raise an exception. This may be a good choice if you expect to always be dealing with perfectly safe YAML and want your application to fail loudly upon encountering questionable data. All of the above options can be set at the global level via SafeYAML::OPTIONS . You can also set each one individually per call to YAML.load ; an option explicitly passed to load will take precedence over an option specified globally.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#what-if-i-dont-want-to-patch-yaml","text":"Excellent question ! You can also get the methods SafeYAML.load and SafeYAML.load_file without touching the YAML module at all like this: require \"safe_yaml/load\" # instead of require \"safe_yaml\" This way, you can use SafeYAML.load to parse YAML that you don't trust, without affecting the rest of an application (if you're developing a library, for example).","title":"What if I don't want to patch YAML?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#supported-types","text":"The way that SafeYAML works is by restricting the kinds of objects that can be deserialized via YAML.load . More specifically, only the following types of objects can be deserialized by default: Hashes Arrays Strings Numbers Dates Times Booleans Nils Again, deserialization of symbols can be enabled globally by setting SafeYAML::OPTIONS[:deserialize_symbols] = true , or in a specific call to YAML.load([some yaml], :deserialize_symbols => true) .","title":"Supported Types"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#whitelisting-trusted-types","text":"SafeYAML supports whitelisting certain YAML tags for trusted types. This is handy when your application uses YAML to serialize and deserialize certain types not listed above, which you know to be free of any deserialization-related vulnerabilities. The easiest way to whitelist types is by calling SafeYAML.whitelist! , which can accept a variable number of safe types, e.g.: SafeYAML.whitelist!(Foo, Bar) You can also whitelist YAML tags via the :whitelisted_tags option: # Using Syck SafeYAML::OPTIONS[:whitelisted_tags] = [\"tag:ruby.yaml.org,2002:object:OpenStruct\"] # Using Psych SafeYAML::OPTIONS[:whitelisted_tags] = [\"!ruby/object:OpenStruct\"] And in case you were wondering: no, this feature will not allow would-be attackers to embed untrusted types within trusted types: yaml = <<-EOYAML --- !ruby/object:OpenStruct table: :backdoor: !ruby/hash:ClassBuilder \"foo; end; puts %(I'm in yr system!); def bar\": \"baz\" EOYAML > YAML.safe_load(yaml) => #<OpenStruct :backdoor={\"foo; end; puts %(I'm in yr system!); def bar\"=>\"baz\"}>","title":"Whitelisting Trusted Types"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#known-issues","text":"If you add SafeYAML to your project and start seeing any errors about missing keys, or you notice mysterious strings that look like \":foo\" (i.e., start with a colon), it's likely you're seeing errors from symbols being saved in YAML format. If you are able to modify the offending code, you might want to consider changing your YAML content to use plain vanilla strings instead of symbols. If not, you may need to set the :deserialize_symbols option to true , either in calls to YAML.load or---as a last resort---globally, with SafeYAML::OPTIONS[:deserialize_symbols] . Also be aware that some Ruby libraries, particularly those requiring inter-process communication, leverage YAML's object deserialization functionality and therefore may break or otherwise be impacted by SafeYAML. The following list includes known instances of SafeYAML's interaction with other Ruby gems: ActiveRecord : uses YAML to control serialization of model objects using the serialize class method. If you find that accessing serialized properties on your ActiveRecord models is causing errors, chances are you may need to: set the :deserialize_symbols option to true , whitelist some of the types in your serialized data via SafeYAML.whitelist! or the :whitelisted_tags option, or both delayed_job : Uses YAML to serialize the objects on which delayed methods are invoked (with delay ). The safest solution in this case is to use SafeYAML.whitelist! to whitelist the types you need to serialize. Guard : Uses YAML as a serialization format for notifications. The data serialized uses symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true is necessary to allow Guard to work. sidekiq : Uses a YAML configiuration file with symbolic keys, so setting SafeYAML::OPTIONS[:deserialize_symbols] = true should allow it to work. The above list will grow over time, as more issues are discovered.","title":"Known Issues"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#versioning","text":"SafeYAML will follow semantic versioning so any updates to the first major version will maintain backwards compatability. So expect primarily bug fixes and feature enhancements (if anything!) from here on out... unless it makes sense to break the interface at some point and introduce a version 2.0, which I honestly think is unlikely.","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/#requirements","text":"SafeYAML requires Ruby 1.8.7 or newer and works with both Syck and Psych . If you are using a version of Ruby where Psych is the default YAML engine (e.g., 1.9.3) but you want to use Syck, be sure to set YAML::ENGINE.yamler = \"syck\" before requiring the safe_yaml gem.","title":"Requirements"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/","text":"1.0.5 fixed #80 : uninitialized constant DateTime 1.0.2 added warning when using Psych + an older version of libyaml 1.0.1 fixed handling for strings that look like (invalid) dates 1.0.0 updated date parsing to use local timezone now requiring \"safe_yaml/load\" provides SafeYAML.load without clobbering YAML fixed handling of empty files fixed some (edge case) integer parsing bugs fixed some JRuby-specific issues 0.9.7 made handling of document frontmatter more robust added more descriptive message to the warning for omitting the :safe option 0.9.6 fixed handling of files with trailing content (after closing --- ) 0.9.5 fixed permissions AGAIN 0.9.4 corrected handling of symbols 0.9.3 fixed permissions :( 0.9.2 fixed error w/ parsing \"!\" when whitelisting tags fixed parsing of the number 0 (d'oh!) 0.9.1 added Yecht support (JRuby) more bug fixes 0.9.0 added whitelist! method for easily whitelisting tags added support for call-specific options removed deprecated methods 0.8.6 fixed bug in float matcher 0.8.5 performance improvements made less verbose by default bug fixes 0.8.4 enhancements to parsing of integers, floats, and dates updated built-in whitelist more bug fixes 0.8.3 fixed exception on parsing empty document fixed handling of octal & hexadecimal numbers 0.8.2 bug fixes 0.8.1 added :raise_on_unknown_tag option renamed reset_defaults! to restore_defaults! 0.8 added tag whitelisting more API changes 0.7 separated YAML engine support from Ruby version added support for binary scalars numerous bug fixes and enhancements 0.6 several API changes added SafeYAML::OPTIONS for specifying default behavior 0.5 Added support for dates 0.4 efficiency improvements made YAML.load use YAML.safe_load by default made symbol deserialization optional 0.3 Added Syck support 0.2 Added support for: anchors & aliases booleans nils 0.1 Initial release","title":"CHANGES"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#105","text":"fixed #80 : uninitialized constant DateTime","title":"1.0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#102","text":"added warning when using Psych + an older version of libyaml","title":"1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#101","text":"fixed handling for strings that look like (invalid) dates","title":"1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#100","text":"updated date parsing to use local timezone now requiring \"safe_yaml/load\" provides SafeYAML.load without clobbering YAML fixed handling of empty files fixed some (edge case) integer parsing bugs fixed some JRuby-specific issues","title":"1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#097","text":"made handling of document frontmatter more robust added more descriptive message to the warning for omitting the :safe option","title":"0.9.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#096","text":"fixed handling of files with trailing content (after closing --- )","title":"0.9.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#095","text":"fixed permissions AGAIN","title":"0.9.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#094","text":"corrected handling of symbols","title":"0.9.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#093","text":"fixed permissions :(","title":"0.9.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#092","text":"fixed error w/ parsing \"!\" when whitelisting tags fixed parsing of the number 0 (d'oh!)","title":"0.9.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#091","text":"added Yecht support (JRuby) more bug fixes","title":"0.9.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#090","text":"added whitelist! method for easily whitelisting tags added support for call-specific options removed deprecated methods","title":"0.9.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#086","text":"fixed bug in float matcher","title":"0.8.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#085","text":"performance improvements made less verbose by default bug fixes","title":"0.8.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#084","text":"enhancements to parsing of integers, floats, and dates updated built-in whitelist more bug fixes","title":"0.8.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#083","text":"fixed exception on parsing empty document fixed handling of octal & hexadecimal numbers","title":"0.8.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#082","text":"bug fixes","title":"0.8.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#081","text":"added :raise_on_unknown_tag option renamed reset_defaults! to restore_defaults!","title":"0.8.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#08","text":"added tag whitelisting more API changes","title":"0.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#07","text":"separated YAML engine support from Ruby version added support for binary scalars numerous bug fixes and enhancements","title":"0.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#06","text":"several API changes added SafeYAML::OPTIONS for specifying default behavior","title":"0.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#05","text":"Added support for dates","title":"0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#04","text":"efficiency improvements made YAML.load use YAML.safe_load by default made symbol deserialization optional","title":"0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#03","text":"Added Syck support","title":"0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#02","text":"Added support for: anchors & aliases booleans nils","title":"0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/safe_yaml-1.0.5/CHANGES/#01","text":"Initial release","title":"0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/","text":"Sass Sass makes CSS fun again . Sass is an extension of CSS, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin. Sass has two syntaxes. The new main syntax (as of Sass 3) is known as \"SCSS\" (for \"Sassy CSS\"), and is a superset of CSS's syntax. This means that every valid CSS stylesheet is valid SCSS as well. SCSS files use the extension .scss . The second, older syntax is known as the indented syntax (or just \"Sass\"). Inspired by Haml's terseness, it's intended for people who prefer conciseness over similarity to CSS. Instead of brackets and semicolons, it uses the indentation of lines to specify blocks. Although no longer the primary syntax, the indented syntax will continue to be supported. Files in the indented syntax use the extension .sass . Using Sass can be used from the command line or as part of a web framework. The first step is to install the gem: gem install sass After you convert some CSS to Sass, you can run sass style.scss to compile it back to CSS. For more information on these commands, check out sass --help To install Sass in Rails 2, just add config.gem \"sass\" to config/environment.rb . In Rails 3, add gem \"sass\" to your Gemfile instead. .sass or .scss files should be placed in public/stylesheets/sass , where they'll be automatically compiled to corresponding CSS files in public/stylesheets when needed (the Sass template directory is customizable... see the Sass reference for details). Sass can also be used with any Rack-enabled web framework. To do so, just add require 'sass/plugin/rack' use Sass::Plugin::Rack to config.ru . Then any Sass files in public/stylesheets/sass will be compiled into CSS files in public/stylesheets on every request. To use Sass programmatically, check out the YARD documentation . Formatting Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use variables , nested rules , mixins , inline imports , and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of the Compass style library . Sass has two syntaxes. The one presented here, known as \"SCSS\" (for \"Sassy CSS\"), is fully CSS-compatible. The other (older) syntax, known as the indented syntax or just \"Sass\", is whitespace-sensitive and indentation-based. For more information, see the reference documentation . To run the following examples and see the CSS they produce, put them in a file called test.scss and run sass test.scss . Nesting Sass avoids repetition by nesting selectors within one another. The same thing works for properties. table.hl { margin: 2em 0; td.ln { text-align: right; } } li { font: { family: serif; weight: bold; size: 1.2em; } } Variables Use the same color all over the place? Need to do some math with height and width and text size? Sass supports variables, math operations, and many useful functions. $blue: #3bbfce; $margin: 16px; .content_navigation { border-color: $blue; color: darken($blue, 10%); } .border { padding: $margin / 2; margin: $margin / 2; border-color: $blue; } Mixins Even more powerful than variables, mixins allow you to re-use whole chunks of CSS, properties or selectors. You can even give them arguments. @mixin table-scaffolding { th { text-align: center; font-weight: bold; } td, th { padding: 2px; } } @mixin left($dist) { float: left; margin-left: $dist; } #data { @include left(10px); @include table-scaffolding; } A comprehensive list of features is available in the Sass reference . Executables The Sass gem includes several executables that are useful for dealing with Sass from the command line. sass The sass executable transforms a source Sass file into CSS. See sass --help for further information and options. sass-convert The sass-convert executable converts between CSS, Sass, and SCSS. When converting from CSS to Sass or SCSS, nesting is applied where appropriate. See sass-convert --help for further information and options. Running locally To run the Sass executables from a source checkout instead of from rubygems: $ cd <SASS_CHECKOUT_DIRECTORY> $ bundle $ bundle exec sass ... $ bundle exec scss ... $ bundle exec sass-convert ... Authors Sass was envisioned by Hampton Catlin (@hcatlin). However, Hampton doesn't even know his way around the code anymore and now occasionally consults on the language issues. Hampton lives in San Francisco, California and works as VP of Technology at Moovweb . Natalie Weizenbaum is the primary developer and architect of Sass. Her hard work has kept the project alive by endlessly answering forum posts, fixing bugs, refactoring, finding speed improvements, writing documentation, implementing new features, and getting Hampton coffee (a fitting task for a girl genius). Natalie lives in Seattle, Washington and works on Dart application libraries at Google. Chris Eppstein is a core contributor to Sass and the creator of Compass , the first Sass-based framework, and Eyeglass , a node-sass plugin ecosystem for NPM. Chris focuses on making Sass more powerful, easy to use, and on ways to speed its adoption through the web development community. Chris lives in San Jose, California with his wife and two children. He is an Engineer for LinkedIn.com , where his primary responsibility is to maintain Sass and many other Sass-related open source projects. If you use this software, we'd be truly honored if you'd make a tax-deductible donation to a non-profit organization and then let us know on twitter , so that we can thank you. Here's a few that we endorse: Trans Justice Funding Project United Mitochondrial Disease Foundation Girl Develop It Sass is licensed under the MIT License.","title":"Sass [![Gem Version](https://badge.fury.io/rb/sass.png)](http://badge.fury.io/rb/sass) [![Inline docs](http://inch-ci.org/github/sass/sass.svg)](http://inch-ci.org/github/sass/sass)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#sass","text":"Sass makes CSS fun again . Sass is an extension of CSS, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin. Sass has two syntaxes. The new main syntax (as of Sass 3) is known as \"SCSS\" (for \"Sassy CSS\"), and is a superset of CSS's syntax. This means that every valid CSS stylesheet is valid SCSS as well. SCSS files use the extension .scss . The second, older syntax is known as the indented syntax (or just \"Sass\"). Inspired by Haml's terseness, it's intended for people who prefer conciseness over similarity to CSS. Instead of brackets and semicolons, it uses the indentation of lines to specify blocks. Although no longer the primary syntax, the indented syntax will continue to be supported. Files in the indented syntax use the extension .sass .","title":"Sass"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#using","text":"Sass can be used from the command line or as part of a web framework. The first step is to install the gem: gem install sass After you convert some CSS to Sass, you can run sass style.scss to compile it back to CSS. For more information on these commands, check out sass --help To install Sass in Rails 2, just add config.gem \"sass\" to config/environment.rb . In Rails 3, add gem \"sass\" to your Gemfile instead. .sass or .scss files should be placed in public/stylesheets/sass , where they'll be automatically compiled to corresponding CSS files in public/stylesheets when needed (the Sass template directory is customizable... see the Sass reference for details). Sass can also be used with any Rack-enabled web framework. To do so, just add require 'sass/plugin/rack' use Sass::Plugin::Rack to config.ru . Then any Sass files in public/stylesheets/sass will be compiled into CSS files in public/stylesheets on every request. To use Sass programmatically, check out the YARD documentation .","title":"Using"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#formatting","text":"Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use variables , nested rules , mixins , inline imports , and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of the Compass style library . Sass has two syntaxes. The one presented here, known as \"SCSS\" (for \"Sassy CSS\"), is fully CSS-compatible. The other (older) syntax, known as the indented syntax or just \"Sass\", is whitespace-sensitive and indentation-based. For more information, see the reference documentation . To run the following examples and see the CSS they produce, put them in a file called test.scss and run sass test.scss .","title":"Formatting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#nesting","text":"Sass avoids repetition by nesting selectors within one another. The same thing works for properties. table.hl { margin: 2em 0; td.ln { text-align: right; } } li { font: { family: serif; weight: bold; size: 1.2em; } }","title":"Nesting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#variables","text":"Use the same color all over the place? Need to do some math with height and width and text size? Sass supports variables, math operations, and many useful functions. $blue: #3bbfce; $margin: 16px; .content_navigation { border-color: $blue; color: darken($blue, 10%); } .border { padding: $margin / 2; margin: $margin / 2; border-color: $blue; }","title":"Variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#mixins","text":"Even more powerful than variables, mixins allow you to re-use whole chunks of CSS, properties or selectors. You can even give them arguments. @mixin table-scaffolding { th { text-align: center; font-weight: bold; } td, th { padding: 2px; } } @mixin left($dist) { float: left; margin-left: $dist; } #data { @include left(10px); @include table-scaffolding; } A comprehensive list of features is available in the Sass reference .","title":"Mixins"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#executables","text":"The Sass gem includes several executables that are useful for dealing with Sass from the command line.","title":"Executables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#sass_1","text":"The sass executable transforms a source Sass file into CSS. See sass --help for further information and options.","title":"sass"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#sass-convert","text":"The sass-convert executable converts between CSS, Sass, and SCSS. When converting from CSS to Sass or SCSS, nesting is applied where appropriate. See sass-convert --help for further information and options.","title":"sass-convert"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#running-locally","text":"To run the Sass executables from a source checkout instead of from rubygems: $ cd <SASS_CHECKOUT_DIRECTORY> $ bundle $ bundle exec sass ... $ bundle exec scss ... $ bundle exec sass-convert ...","title":"Running locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/#authors","text":"Sass was envisioned by Hampton Catlin (@hcatlin). However, Hampton doesn't even know his way around the code anymore and now occasionally consults on the language issues. Hampton lives in San Francisco, California and works as VP of Technology at Moovweb . Natalie Weizenbaum is the primary developer and architect of Sass. Her hard work has kept the project alive by endlessly answering forum posts, fixing bugs, refactoring, finding speed improvements, writing documentation, implementing new features, and getting Hampton coffee (a fitting task for a girl genius). Natalie lives in Seattle, Washington and works on Dart application libraries at Google. Chris Eppstein is a core contributor to Sass and the creator of Compass , the first Sass-based framework, and Eyeglass , a node-sass plugin ecosystem for NPM. Chris focuses on making Sass more powerful, easy to use, and on ways to speed its adoption through the web development community. Chris lives in San Jose, California with his wife and two children. He is an Engineer for LinkedIn.com , where his primary responsibility is to maintain Sass and many other Sass-related open source projects. If you use this software, we'd be truly honored if you'd make a tax-deductible donation to a non-profit organization and then let us know on twitter , so that we can thank you. Here's a few that we endorse: Trans Justice Funding Project United Mitochondrial Disease Foundation Girl Develop It Sass is licensed under the MIT License.","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CODE_OF_CONDUCT/","text":"Sass is more than a technology; Sass is driven by the community of individuals that power its development and use every day. As a community, we want to embrace the very differences that have made our collaboration so powerful, and work together to provide the best environment for learning, growing, and sharing of ideas. It is imperative that we keep Sass a fun, welcoming, challenging, and fair place to play. The full community guidelines can be found on the Sass website.","title":"CODE OF CONDUCT"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/","text":"Contributions are welcomed. Please see the following site for guidelines: http://sass-lang.com/community#Contribute Branches Feature Branches Experimental Branches Old Stable Branches Versioning Making Breaking Changes Exceptional Breakages Branches The Sass repository has three primary development branches, each of which tracks a different line of releases (see versioning below). Each branch is regularly merged into the one below: stable into next , next into master . The stable branch is the default\u2014it's what GitHub shows if you go to sass/sass , and it's the default place for pull requests to go. This branch is where we work on the next patch release. Bug fixes and documentation improvements belong here, but not new features. The next branch is where we work on the next minor release. It's where most new features go, as long as they're not breaking changes. Very occasionally breaking changes will go here as well\u2014see exceptional breakages below for details. The master branch is where we work on the next major release. It's where breaking changes go. We also occasionally decide that a non-breaking feature is big enough to warrant saving until the next major release, in which case it will also be developed here. Ideally, pull requests would be made against the appropriate branch, but don't worry about it too much; if you make a request against the wrong branch, the maintainer will take responsibility for rebasing it before merging. Feature Branches Sometimes it won't be possible to merge a new feature into next or master immediately. It may require longer-term work before it's complete, or we may not want to release it as part of any alpha releases of the branch in question. Branches like this are labeled feature.#{name} and stay on GitHub until they're ready to be merged. Experimental Branches Not all features pan out, and not all code is a good fit for merging into the main codebase. Usually when this happens the code is just discarded, but every so often it's interesting or promising enough that it's worth keeping around. This is what experimental branches (labeled experimental.#{name} ) are for. While they're not currently in use, they contain code that might be useful in the future. Old Stable Branches Usually Sass doesn't have the development time to do long-term maintenance of old release. But occasionally, very rarely, it becomes necessary. In cases like that, a branch named stable_#{version} will be created, starting from the last tag in that version series. Versioning Starting with version 3.5.0, Sass uses semantic versioning to indicate the evolution of its language semantics as much as possible. This means that patch releases (such as 3.5.3) contain only bug fixes, minor releases (such as 3.6.0) contain backwards-compatible features, and only major releases (such as 4.0.0) are allowed to have backwards-incompatible behavior. There are exceptions , but we try to follow this rule as closely as possible. Note, however, that the semantic versioning applies only to the language's semantics, not to the Ruby APIs. Although we try hard to keep widely-used APIs like Sass::Engine stable, we don't have a strong distinction between public and private APIs and we need to be able to freely refactor our code. Making Breaking Changes Sometimes the old way of doing something just isn't going to work anymore, and the new way just can't be made backwards-compatible. In that case, a breaking change is necessary. These changes are rarely pleasant, but they contribute to making the language better in the long term. Our breaking change process tries to make such changes as clear to users and as easy to adapt to as possible. We want to ensure that there's a clear path forward for users using functionality that will no longer exist, and that they are able to understand what's changing and what they need to do. We've developed the following process for this: Deprecate the old behavior in stable . At minimum, deprecating some behavior involves printing a warning when that behavior is used explaining that it's going to go away in the future. Ideally, this message will also include code that will do the same thing in a non-deprecated way. If there's a thorough prose explanation of the change available online, the message should link to that as well. If possible, make sass-convert (also in stable ) convert the deprecated behavior into a non-deprecated form. This allows users to run sass-convert -R -i to automatically update their stylesheets. Implement the new behavior in master . The sooner this happens, the better: it may be unclear exactly what needs to be deprecated until the new implementation exists. Release an alpha version of master that includes the new behavior. This allows users who are dissatisfied with the workaround to use the new behavior early. Normally a maintainer will take care of this. Exceptional Breakages Because Sass's syntax and semantics are closely tied to those of CSS, there are occasionally times when CSS syntax is introduced that overlaps with previously-valid Sass. In this case in particular, we may introduce a breaking change in a minor version to get back to CSS compatibility as soon as possible. Exceptional breakages still require the full deprecation process; the only change is that the new behavior is implemented in next rather than master . Because there are no minor releases between the deprecation and the removal of the old behavior, the deprecation warning should be introduced soon as it becomes clear that an exceptional breakage is necessary.","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#branches","text":"The Sass repository has three primary development branches, each of which tracks a different line of releases (see versioning below). Each branch is regularly merged into the one below: stable into next , next into master . The stable branch is the default\u2014it's what GitHub shows if you go to sass/sass , and it's the default place for pull requests to go. This branch is where we work on the next patch release. Bug fixes and documentation improvements belong here, but not new features. The next branch is where we work on the next minor release. It's where most new features go, as long as they're not breaking changes. Very occasionally breaking changes will go here as well\u2014see exceptional breakages below for details. The master branch is where we work on the next major release. It's where breaking changes go. We also occasionally decide that a non-breaking feature is big enough to warrant saving until the next major release, in which case it will also be developed here. Ideally, pull requests would be made against the appropriate branch, but don't worry about it too much; if you make a request against the wrong branch, the maintainer will take responsibility for rebasing it before merging.","title":"Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#feature-branches","text":"Sometimes it won't be possible to merge a new feature into next or master immediately. It may require longer-term work before it's complete, or we may not want to release it as part of any alpha releases of the branch in question. Branches like this are labeled feature.#{name} and stay on GitHub until they're ready to be merged.","title":"Feature Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#experimental-branches","text":"Not all features pan out, and not all code is a good fit for merging into the main codebase. Usually when this happens the code is just discarded, but every so often it's interesting or promising enough that it's worth keeping around. This is what experimental branches (labeled experimental.#{name} ) are for. While they're not currently in use, they contain code that might be useful in the future.","title":"Experimental Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#old-stable-branches","text":"Usually Sass doesn't have the development time to do long-term maintenance of old release. But occasionally, very rarely, it becomes necessary. In cases like that, a branch named stable_#{version} will be created, starting from the last tag in that version series.","title":"Old Stable Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#versioning","text":"Starting with version 3.5.0, Sass uses semantic versioning to indicate the evolution of its language semantics as much as possible. This means that patch releases (such as 3.5.3) contain only bug fixes, minor releases (such as 3.6.0) contain backwards-compatible features, and only major releases (such as 4.0.0) are allowed to have backwards-incompatible behavior. There are exceptions , but we try to follow this rule as closely as possible. Note, however, that the semantic versioning applies only to the language's semantics, not to the Ruby APIs. Although we try hard to keep widely-used APIs like Sass::Engine stable, we don't have a strong distinction between public and private APIs and we need to be able to freely refactor our code.","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#making-breaking-changes","text":"Sometimes the old way of doing something just isn't going to work anymore, and the new way just can't be made backwards-compatible. In that case, a breaking change is necessary. These changes are rarely pleasant, but they contribute to making the language better in the long term. Our breaking change process tries to make such changes as clear to users and as easy to adapt to as possible. We want to ensure that there's a clear path forward for users using functionality that will no longer exist, and that they are able to understand what's changing and what they need to do. We've developed the following process for this: Deprecate the old behavior in stable . At minimum, deprecating some behavior involves printing a warning when that behavior is used explaining that it's going to go away in the future. Ideally, this message will also include code that will do the same thing in a non-deprecated way. If there's a thorough prose explanation of the change available online, the message should link to that as well. If possible, make sass-convert (also in stable ) convert the deprecated behavior into a non-deprecated form. This allows users to run sass-convert -R -i to automatically update their stylesheets. Implement the new behavior in master . The sooner this happens, the better: it may be unclear exactly what needs to be deprecated until the new implementation exists. Release an alpha version of master that includes the new behavior. This allows users who are dissatisfied with the workaround to use the new behavior early. Normally a maintainer will take care of this.","title":"Making Breaking Changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/CONTRIBUTING/#exceptional-breakages","text":"Because Sass's syntax and semantics are closely tied to those of CSS, there are occasionally times when CSS syntax is introduced that overlaps with previously-valid Sass. In this case in particular, we may introduce a breaking change in a minor version to get back to CSS compatibility as soon as possible. Exceptional breakages still require the full deprecation process; the only change is that the new behavior is implemented in next rather than master . Because there are no minor releases between the deprecation and the removal of the old behavior, the deprecation warning should be introduced soon as it becomes clear that an exceptional breakage is necessary.","title":"Exceptional Breakages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/","text":"Listen The Listen gem listens to file modifications and notifies you about the changes. Features Works everywhere! Supports watching multiple directories from a single listener. OS-specific adapters for Mac OS X 10.6+, Linux, *BSD and Windows. Automatic fallback to polling if OS-specific adapter doesn't work. Detects file modification, addition and removal. File content checksum comparison for modifications made under the same second. Allows supplying regexp-patterns to ignore and filter paths for better results. Tested on all Ruby environments via Travis CI . Pending features Still not implemented, pull requests are welcome. Symlinks support. #25 Signal handling. #105 Non-recursive directory scanning. #111 Install Using Bundler The simplest way to install Listen is to use Bundler. Add Listen to your Gemfile: group :development do gem 'listen' end and install it by running Bundler: $ bundle Install the gem with RubyGems $ gem install listen On Windows If your are on Windows and using Ruby MRI >= 1.9.2 you can try to use the wdm instead of polling. Please add the following to your Gemfile: require 'rbconfig' gem 'wdm', '>= 0.1.0' if RbConfig::CONFIG['target_os'] =~ /mswin|mingw/i Usage There are two ways to use Listen: Block API: Call Listen.to / Listen.to! with either a single directory or multiple directories, then define the change callback in a block. \"Object\" API: Create a listener object and use it in a chainable way. Block API # Listen to a single directory. Listen.to('dir/path/to/listen', :filter => /\\.rb$/, :ignore => %r{ignored/path/}) do |modified, added, removed| # ... end # Listen to multiple directories. Listen.to('dir/to/awesome_app', 'dir/to/other_app', :filter => /\\.rb$/, :latency => 0.1) do |modified, added, removed| # ... end \"Object\" API listener = Listen.to('dir/path/to/listen') listener = listener.ignore(%r{^ignored/path/}) listener = listener.filter(/\\.rb$/) listener = listener.latency(0.5) listener = listener.force_polling(true) listener = listener.polling_fallback_message(false) listener = listener.force_adapter(Listen::Adapters::Linux) listener = listener.change(&callback) listener.start Note : All the \"Object\" API methods except start / start! return the listener and are thus chainable: Listen.to('dir/path/to/listen') .ignore(%r{^ignored/path/}) .filter(/\\.rb$/) .latency(0.5) .force_polling(true) .polling_fallback_message('custom message') .change(&callback) .start Pause/Unpause Listener can also easily be paused/unpaused: listener = Listen.to('dir/path/to/listen') listener.start # non-blocking mode listener.pause # stop listening to changes listener.paused? # => true listener.unpause # start listening to changes again listener.stop # stop completely the listener Changes callback Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified_paths , added_paths and removed_paths in that particular order. You can register a callback in two ways. The first way is by passing a block when calling the Listen.to / Listen.to! method or when initializing a listener object: Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end # or ... listener = Listen::Listener.new('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end The second way to register a callback is by calling the #change method on a listener passing it a block: # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir') listener.change(&callback) # convert the callback to a block and register it listener.start Paths in callbacks Listeners invoke callbacks passing them absolute paths by default: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css') do |modified, added, removed| modified.inspect # => ['/home/user/app/css/style.css'] end Relative paths in callbacks When creating a listener for a single path (more specifically a Listen::Listener instance), you can pass :relative_paths => true as an option to get relative paths in your callback: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css', :relative_paths => true) do |modified, added, removed| modified.inspect # => ['style.css'] end Passing the :relative_paths => true option won't work when listening to multiple directories: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css', '/home/user/app/js', :relative_paths => true) do |modified, added, removed| modified.inspect # => ['/home/user/app/css/style.css'] end Options All the following options can be set through the Listen.to / Listen.to! params or via \"Object\" API methods: :ignore => %r{app/CMake/}, /\\.pid$/ # Ignore a list of paths (root directory or sub-dir) # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::DirectoryRecord :filter => /\\.rb$/, /\\.coffee$/ # Filter files to listen to via a regexps list. # default: none :latency => 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) :force_adapter => Listen::Adapters::Linux # Force the use of a particular adapter class # default: none :force_polling => true # Force the use of the polling adapter # default: none :polling_fallback_message => 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#polling-fallback.\" :relative_paths => true # Enable the use of relative paths in the callback. # default: false Note on the patterns for ignoring and filtering paths Just like the unix convention of beginning absolute paths with the directory-separator (forward slash / in unix) and with no prefix for relative paths, Listen doesn't prefix relative paths (to the watched directory) with a directory-separator. Therefore make sure NOT to prefix your regexp-patterns for filtering or ignoring paths with a directory-separator, otherwise they won't work as expected. As an example: to ignore the build directory in a C-project, use %r{build/} and not %r{/build/} . Use #filter! and #ignore! methods to overwrites default patterns. Blocking listening to changes Calling Listen.to with a block doesn't block the current thread. If you want to block the current thread instead until the listener is stopped (which needs to be done from another thread), you can use Listen.to! . Similarly, if you're using the \"Object\" API, you can use #start! instead of #start to block the current thread until the listener is stopped. Here is an example of using a listener in the blocking mode: Listen.to!('dir/path/to/listen') # block execution # Code here will not run until the listener is stopped Here is an example of using a listener started with the \"Object\" API in blocking mode: listener = Listen.to('dir/path/to/listen') listener.start! # block execution # Code here will not run until the listener is stopped Note : Using the Listen.to! helper-method with or without a callback-block will always start the listener right away and block execution of the current thread. Listen adapters The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Mac, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter which is a cross-platform adapter and it will work on any system. This adapter is unfortunately slower than the rest of the adapters. The Listen gem will choose the best and working adapter for your machine automatically. If you want to force the use of the polling adapter, either use the :force_polling option while initializing the listener or call the #force_polling method on your listener before starting it. It is also possible to force the use of a particular adapter, by using the :force_adapter option. This option skips the usual adapter choosing mechanism and uses the given adapter class instead. The adapter choosing mechanism requires write permission to your watched directories and will needlessly load code, which isn't always desirable. Polling fallback When a OS-specific adapter doesn't work the Listen gem automatically falls back to the polling adapter. Here are some things you could try to avoid the polling fallback: Update your Dropbox client (if used). Increase latency. (Please open an issue if you think that default is too low.) Move or rename the listened folder. Update/reboot your OS. If your application keeps using the polling-adapter and you can't figure out why, feel free to open an issue (and be sure to give all the details ). Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes (don't forget to run bundle exec pimpmychangelog and watch the magic happen)! Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net). Acknowledgments Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. stereobooster for rb-fchange , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration. Authors Thibaud Guillaume-Gentil ( @thibaudgg ) Maher Sallam ( @mahersalam ) Contributors https://github.com/guard/listen/contributors","title":"Listen [![Gem Version](https://badge.fury.io/rb/listen.png)](http://badge.fury.io/rb/listen) [![Build Status](https://secure.travis-ci.org/guard/listen.png?branch=master)](http://travis-ci.org/guard/listen) [![Dependency Status](https://gemnasium.com/guard/listen.png)](https://gemnasium.com/guard/listen) [![Code Climate](https://codeclimate.com/github/guard/listen.png)](https://codeclimate.com/github/guard/listen) [![Coverage Status](https://coveralls.io/repos/guard/listen/badge.png?branch=master)](https://coveralls.io/r/guard/listen)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#listen","text":"The Listen gem listens to file modifications and notifies you about the changes.","title":"Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#features","text":"Works everywhere! Supports watching multiple directories from a single listener. OS-specific adapters for Mac OS X 10.6+, Linux, *BSD and Windows. Automatic fallback to polling if OS-specific adapter doesn't work. Detects file modification, addition and removal. File content checksum comparison for modifications made under the same second. Allows supplying regexp-patterns to ignore and filter paths for better results. Tested on all Ruby environments via Travis CI .","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#pending-features","text":"Still not implemented, pull requests are welcome. Symlinks support. #25 Signal handling. #105 Non-recursive directory scanning. #111","title":"Pending features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#install","text":"","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#using-bundler","text":"The simplest way to install Listen is to use Bundler. Add Listen to your Gemfile: group :development do gem 'listen' end and install it by running Bundler: $ bundle","title":"Using Bundler"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#install-the-gem-with-rubygems","text":"$ gem install listen","title":"Install the gem with RubyGems"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#on-windows","text":"If your are on Windows and using Ruby MRI >= 1.9.2 you can try to use the wdm instead of polling. Please add the following to your Gemfile: require 'rbconfig' gem 'wdm', '>= 0.1.0' if RbConfig::CONFIG['target_os'] =~ /mswin|mingw/i","title":"On Windows"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#usage","text":"There are two ways to use Listen: Block API: Call Listen.to / Listen.to! with either a single directory or multiple directories, then define the change callback in a block. \"Object\" API: Create a listener object and use it in a chainable way.","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#block-api","text":"# Listen to a single directory. Listen.to('dir/path/to/listen', :filter => /\\.rb$/, :ignore => %r{ignored/path/}) do |modified, added, removed| # ... end # Listen to multiple directories. Listen.to('dir/to/awesome_app', 'dir/to/other_app', :filter => /\\.rb$/, :latency => 0.1) do |modified, added, removed| # ... end","title":"Block API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#object-api","text":"listener = Listen.to('dir/path/to/listen') listener = listener.ignore(%r{^ignored/path/}) listener = listener.filter(/\\.rb$/) listener = listener.latency(0.5) listener = listener.force_polling(true) listener = listener.polling_fallback_message(false) listener = listener.force_adapter(Listen::Adapters::Linux) listener = listener.change(&callback) listener.start Note : All the \"Object\" API methods except start / start! return the listener and are thus chainable: Listen.to('dir/path/to/listen') .ignore(%r{^ignored/path/}) .filter(/\\.rb$/) .latency(0.5) .force_polling(true) .polling_fallback_message('custom message') .change(&callback) .start","title":"\"Object\" API"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#pauseunpause","text":"Listener can also easily be paused/unpaused: listener = Listen.to('dir/path/to/listen') listener.start # non-blocking mode listener.pause # stop listening to changes listener.paused? # => true listener.unpause # start listening to changes again listener.stop # stop completely the listener","title":"Pause/Unpause"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#changes-callback","text":"Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified_paths , added_paths and removed_paths in that particular order. You can register a callback in two ways. The first way is by passing a block when calling the Listen.to / Listen.to! method or when initializing a listener object: Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end # or ... listener = Listen::Listener.new('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end The second way to register a callback is by calling the #change method on a listener passing it a block: # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir') listener.change(&callback) # convert the callback to a block and register it listener.start","title":"Changes callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#paths-in-callbacks","text":"Listeners invoke callbacks passing them absolute paths by default: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css') do |modified, added, removed| modified.inspect # => ['/home/user/app/css/style.css'] end","title":"Paths in callbacks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#relative-paths-in-callbacks","text":"When creating a listener for a single path (more specifically a Listen::Listener instance), you can pass :relative_paths => true as an option to get relative paths in your callback: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css', :relative_paths => true) do |modified, added, removed| modified.inspect # => ['style.css'] end Passing the :relative_paths => true option won't work when listening to multiple directories: # Assume someone changes the 'style.css' file in '/home/user/app/css' after creating # the listener. Listen.to('/home/user/app/css', '/home/user/app/js', :relative_paths => true) do |modified, added, removed| modified.inspect # => ['/home/user/app/css/style.css'] end","title":"Relative paths in callbacks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#options","text":"All the following options can be set through the Listen.to / Listen.to! params or via \"Object\" API methods: :ignore => %r{app/CMake/}, /\\.pid$/ # Ignore a list of paths (root directory or sub-dir) # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::DirectoryRecord :filter => /\\.rb$/, /\\.coffee$/ # Filter files to listen to via a regexps list. # default: none :latency => 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) :force_adapter => Listen::Adapters::Linux # Force the use of a particular adapter class # default: none :force_polling => true # Force the use of the polling adapter # default: none :polling_fallback_message => 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#polling-fallback.\" :relative_paths => true # Enable the use of relative paths in the callback. # default: false","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#note-on-the-patterns-for-ignoring-and-filtering-paths","text":"Just like the unix convention of beginning absolute paths with the directory-separator (forward slash / in unix) and with no prefix for relative paths, Listen doesn't prefix relative paths (to the watched directory) with a directory-separator. Therefore make sure NOT to prefix your regexp-patterns for filtering or ignoring paths with a directory-separator, otherwise they won't work as expected. As an example: to ignore the build directory in a C-project, use %r{build/} and not %r{/build/} . Use #filter! and #ignore! methods to overwrites default patterns.","title":"Note on the patterns for ignoring and filtering paths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#blocking-listening-to-changes","text":"Calling Listen.to with a block doesn't block the current thread. If you want to block the current thread instead until the listener is stopped (which needs to be done from another thread), you can use Listen.to! . Similarly, if you're using the \"Object\" API, you can use #start! instead of #start to block the current thread until the listener is stopped. Here is an example of using a listener in the blocking mode: Listen.to!('dir/path/to/listen') # block execution # Code here will not run until the listener is stopped Here is an example of using a listener started with the \"Object\" API in blocking mode: listener = Listen.to('dir/path/to/listen') listener.start! # block execution # Code here will not run until the listener is stopped Note : Using the Listen.to! helper-method with or without a callback-block will always start the listener right away and block execution of the current thread.","title":"Blocking listening to changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#listen-adapters","text":"The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Mac, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter which is a cross-platform adapter and it will work on any system. This adapter is unfortunately slower than the rest of the adapters. The Listen gem will choose the best and working adapter for your machine automatically. If you want to force the use of the polling adapter, either use the :force_polling option while initializing the listener or call the #force_polling method on your listener before starting it. It is also possible to force the use of a particular adapter, by using the :force_adapter option. This option skips the usual adapter choosing mechanism and uses the given adapter class instead. The adapter choosing mechanism requires write permission to your watched directories and will needlessly load code, which isn't always desirable.","title":"Listen adapters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#polling-fallback","text":"When a OS-specific adapter doesn't work the Listen gem automatically falls back to the polling adapter. Here are some things you could try to avoid the polling fallback: Update your Dropbox client (if used). Increase latency. (Please open an issue if you think that default is too low.) Move or rename the listened folder. Update/reboot your OS. If your application keeps using the polling-adapter and you can't figure out why, feel free to open an issue (and be sure to give all the details ).","title":"Polling fallback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes (don't forget to run bundle exec pimpmychangelog and watch the magic happen)! Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#acknowledgments","text":"Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. stereobooster for rb-fchange , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration.","title":"Acknowledgments"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#authors","text":"Thibaud Guillaume-Gentil ( @thibaudgg ) Maher Sallam ( @mahersalam )","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/#contributors","text":"https://github.com/guard/listen/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CHANGELOG/","text":"Moved to Github releases page.","title":"Moved to [Github releases](https://github.com/guard/listen/releases) page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CHANGELOG/#moved-to-github-releases-page","text":"","title":"Moved to Github releases page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CONTRIBUTING/","text":"Contribute to Listen File an issue You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? When you file a bug, please try to follow these simple rules if applicable: Make sure you run Listen with bundle exec first. Add your Guardfile (if used) and Gemfile to the issue. Make sure that the issue is reproducible with your description. It's most likely that your bug gets resolved faster if you provide as much information as possible! Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CONTRIBUTING/#contribute-to-listen","text":"","title":"Contribute to Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CONTRIBUTING/#file-an-issue","text":"You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? When you file a bug, please try to follow these simple rules if applicable: Make sure you run Listen with bundle exec first. Add your Guardfile (if used) and Gemfile to the issue. Make sure that the issue is reproducible with your description. It's most likely that your bug gets resolved faster if you provide as much information as possible!","title":"File an issue"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.4.22/vendor/listen/CONTRIBUTING/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/","text":"Ruby Sass Has Reached End-of-Life Ruby Sass should no longer be used, and will no longer be receiving any updates. See the Sass blog , and consider switching to the [ sassc gem]. Sass Sass makes CSS fun again . Sass is an extension of CSS, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin. Sass has two syntaxes. The new main syntax (as of Sass 3) is known as \"SCSS\" (for \"Sassy CSS\"), and is a superset of CSS's syntax. This means that every valid CSS stylesheet is valid SCSS as well. SCSS files use the extension .scss . The second, older syntax is known as the indented syntax (or just \"Sass\"). Inspired by Haml's terseness, it's intended for people who prefer conciseness over similarity to CSS. Instead of brackets and semicolons, it uses the indentation of lines to specify blocks. Although no longer the primary syntax, the indented syntax will continue to be supported. Files in the indented syntax use the extension .sass . Using Sass can be used from the command line or as part of a web framework. The first step is to install the gem: gem install sass After you convert some CSS to Sass, you can run sass style.scss to compile it back to CSS. For more information on these commands, check out sass --help To install Sass in Rails 2, just add config.gem \"sass\" to config/environment.rb . In Rails 3, add gem \"sass\" to your Gemfile instead. .sass or .scss files should be placed in public/stylesheets/sass , where they'll be automatically compiled to corresponding CSS files in public/stylesheets when needed (the Sass template directory is customizable... see the Sass reference for details). Sass can also be used with any Rack-enabled web framework. To do so, just add require 'sass/plugin/rack' use Sass::Plugin::Rack to config.ru . Then any Sass files in public/stylesheets/sass will be compiled into CSS files in public/stylesheets on every request. To use Sass programmatically, check out the YARD documentation . Formatting Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use variables , nested rules , mixins , inline imports , and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of the Compass style library . Sass has two syntaxes. The one presented here, known as \"SCSS\" (for \"Sassy CSS\"), is fully CSS-compatible. The other (older) syntax, known as the indented syntax or just \"Sass\", is whitespace-sensitive and indentation-based. For more information, see the reference documentation . To run the following examples and see the CSS they produce, put them in a file called test.scss and run sass test.scss . Nesting Sass avoids repetition by nesting selectors within one another. The same thing works for properties. table.hl { margin: 2em 0; td.ln { text-align: right; } } li { font: { family: serif; weight: bold; size: 1.2em; } } Variables Use the same color all over the place? Need to do some math with height and width and text size? Sass supports variables, math operations, and many useful functions. $blue: #3bbfce; $margin: 16px; .content_navigation { border-color: $blue; color: darken($blue, 10%); } .border { padding: $margin / 2; margin: $margin / 2; border-color: $blue; } Mixins Even more powerful than variables, mixins allow you to re-use whole chunks of CSS, properties or selectors. You can even give them arguments. @mixin table-scaffolding { th { text-align: center; font-weight: bold; } td, th { padding: 2px; } } @mixin left($dist) { float: left; margin-left: $dist; } #data { @include left(10px); @include table-scaffolding; } A comprehensive list of features is available in the Sass reference . Executables The Sass gem includes several executables that are useful for dealing with Sass from the command line. sass The sass executable transforms a source Sass file into CSS. See sass --help for further information and options. sass-convert The sass-convert executable converts between CSS, Sass, and SCSS. When converting from CSS to Sass or SCSS, nesting is applied where appropriate. See sass-convert --help for further information and options. Running locally To run the Sass executables from a source checkout instead of from rubygems: $ cd sass $ bundle $ bundle exec sass ... $ bundle exec scss ... $ bundle exec sass-convert ... Authors Sass was envisioned by Hampton Catlin (@hcatlin). However, Hampton doesn't even know his way around the code anymore and now occasionally consults on the language issues. Hampton lives in San Francisco, California and works as VP of Technology at Moovweb . Natalie Weizenbaum is the primary developer and architect of Sass. Her hard work has kept the project alive by endlessly answering forum posts, fixing bugs, refactoring, finding speed improvements, writing documentation, implementing new features, and designing the language. Natalie lives in Seattle, Washington and works on Dart application libraries at Google. Chris Eppstein is a core contributor to Sass and the creator of Compass , the first Sass-based framework, and Eyeglass , a node-sass plugin ecosystem for NPM. Chris focuses on making Sass more powerful, easy to use, and on ways to speed its adoption through the web development community. Chris lives in San Jose, California with his wife and two children. He is an Engineer for LinkedIn.com , where his primary responsibility is to maintain Sass and many other Sass-related open source projects. If you use this software, we'd be truly honored if you'd make a tax-deductible donation to a non-profit organization and then let us know on twitter , so that we can thank you. Here's a few that we endorse: Trans Justice Funding Project United Mitochondrial Disease Foundation Girl Develop It Sass is licensed under the MIT License.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#ruby-sass-has-reached-end-of-life","text":"Ruby Sass should no longer be used, and will no longer be receiving any updates. See the Sass blog , and consider switching to the [ sassc gem].","title":"Ruby Sass Has Reached End-of-Life"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#sass","text":"Sass makes CSS fun again . Sass is an extension of CSS, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin. Sass has two syntaxes. The new main syntax (as of Sass 3) is known as \"SCSS\" (for \"Sassy CSS\"), and is a superset of CSS's syntax. This means that every valid CSS stylesheet is valid SCSS as well. SCSS files use the extension .scss . The second, older syntax is known as the indented syntax (or just \"Sass\"). Inspired by Haml's terseness, it's intended for people who prefer conciseness over similarity to CSS. Instead of brackets and semicolons, it uses the indentation of lines to specify blocks. Although no longer the primary syntax, the indented syntax will continue to be supported. Files in the indented syntax use the extension .sass .","title":"Sass"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#using","text":"Sass can be used from the command line or as part of a web framework. The first step is to install the gem: gem install sass After you convert some CSS to Sass, you can run sass style.scss to compile it back to CSS. For more information on these commands, check out sass --help To install Sass in Rails 2, just add config.gem \"sass\" to config/environment.rb . In Rails 3, add gem \"sass\" to your Gemfile instead. .sass or .scss files should be placed in public/stylesheets/sass , where they'll be automatically compiled to corresponding CSS files in public/stylesheets when needed (the Sass template directory is customizable... see the Sass reference for details). Sass can also be used with any Rack-enabled web framework. To do so, just add require 'sass/plugin/rack' use Sass::Plugin::Rack to config.ru . Then any Sass files in public/stylesheets/sass will be compiled into CSS files in public/stylesheets on every request. To use Sass programmatically, check out the YARD documentation .","title":"Using"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#formatting","text":"Sass is an extension of CSS that adds power and elegance to the basic language. It allows you to use variables , nested rules , mixins , inline imports , and more, all with a fully CSS-compatible syntax. Sass helps keep large stylesheets well-organized, and get small stylesheets up and running quickly, particularly with the help of the Compass style library . Sass has two syntaxes. The one presented here, known as \"SCSS\" (for \"Sassy CSS\"), is fully CSS-compatible. The other (older) syntax, known as the indented syntax or just \"Sass\", is whitespace-sensitive and indentation-based. For more information, see the reference documentation . To run the following examples and see the CSS they produce, put them in a file called test.scss and run sass test.scss .","title":"Formatting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#nesting","text":"Sass avoids repetition by nesting selectors within one another. The same thing works for properties. table.hl { margin: 2em 0; td.ln { text-align: right; } } li { font: { family: serif; weight: bold; size: 1.2em; } }","title":"Nesting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#variables","text":"Use the same color all over the place? Need to do some math with height and width and text size? Sass supports variables, math operations, and many useful functions. $blue: #3bbfce; $margin: 16px; .content_navigation { border-color: $blue; color: darken($blue, 10%); } .border { padding: $margin / 2; margin: $margin / 2; border-color: $blue; }","title":"Variables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#mixins","text":"Even more powerful than variables, mixins allow you to re-use whole chunks of CSS, properties or selectors. You can even give them arguments. @mixin table-scaffolding { th { text-align: center; font-weight: bold; } td, th { padding: 2px; } } @mixin left($dist) { float: left; margin-left: $dist; } #data { @include left(10px); @include table-scaffolding; } A comprehensive list of features is available in the Sass reference .","title":"Mixins"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#executables","text":"The Sass gem includes several executables that are useful for dealing with Sass from the command line.","title":"Executables"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#sass_1","text":"The sass executable transforms a source Sass file into CSS. See sass --help for further information and options.","title":"sass"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#sass-convert","text":"The sass-convert executable converts between CSS, Sass, and SCSS. When converting from CSS to Sass or SCSS, nesting is applied where appropriate. See sass-convert --help for further information and options.","title":"sass-convert"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#running-locally","text":"To run the Sass executables from a source checkout instead of from rubygems: $ cd sass $ bundle $ bundle exec sass ... $ bundle exec scss ... $ bundle exec sass-convert ...","title":"Running locally"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/#authors","text":"Sass was envisioned by Hampton Catlin (@hcatlin). However, Hampton doesn't even know his way around the code anymore and now occasionally consults on the language issues. Hampton lives in San Francisco, California and works as VP of Technology at Moovweb . Natalie Weizenbaum is the primary developer and architect of Sass. Her hard work has kept the project alive by endlessly answering forum posts, fixing bugs, refactoring, finding speed improvements, writing documentation, implementing new features, and designing the language. Natalie lives in Seattle, Washington and works on Dart application libraries at Google. Chris Eppstein is a core contributor to Sass and the creator of Compass , the first Sass-based framework, and Eyeglass , a node-sass plugin ecosystem for NPM. Chris focuses on making Sass more powerful, easy to use, and on ways to speed its adoption through the web development community. Chris lives in San Jose, California with his wife and two children. He is an Engineer for LinkedIn.com , where his primary responsibility is to maintain Sass and many other Sass-related open source projects. If you use this software, we'd be truly honored if you'd make a tax-deductible donation to a non-profit organization and then let us know on twitter , so that we can thank you. Here's a few that we endorse: Trans Justice Funding Project United Mitochondrial Disease Foundation Girl Develop It Sass is licensed under the MIT License.","title":"Authors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CODE_OF_CONDUCT/","text":"Sass is more than a technology; Sass is driven by the community of individuals that power its development and use every day. As a community, we want to embrace the very differences that have made our collaboration so powerful, and work together to provide the best environment for learning, growing, and sharing of ideas. It is imperative that we keep Sass a fun, welcoming, challenging, and fair place to play. The full community guidelines can be found on the Sass website.","title":"CODE OF CONDUCT"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/","text":"Contributions are welcomed. Please see the following site for guidelines: https://sass-lang.com/community#Contribute Branches Feature Branches Experimental Branches Old Stable Branches Versioning Making Breaking Changes Exceptional Breakages Branches The Sass repository has three primary development branches, each of which tracks a different line of releases (see versioning below). Each branch is regularly merged into the one below: stable into next , next into master . The stable branch is the default\u2014it's what GitHub shows if you go to sass/ruby-sass , and it's the default place for pull requests to go. This branch is where we work on the next patch release. Bug fixes and documentation improvements belong here, but not new features. The next branch is where we work on the next minor release. It's where most new features go, as long as they're not breaking changes. Very occasionally breaking changes will go here as well\u2014see exceptional breakages below for details. The master branch is where we work on the next major release. It's where breaking changes go. We also occasionally decide that a non-breaking feature is big enough to warrant saving until the next major release, in which case it will also be developed here. Ideally, pull requests would be made against the appropriate branch, but don't worry about it too much; if you make a request against the wrong branch, the maintainer will take responsibility for rebasing it before merging. Testing Tests for changes to the Sass language go in sass-spec so that other implementations (E.g. libSass) can be tested against the same test suite. The sass-spec repo follows a \"trunk development\" model in that the tests there test against different version of the Sass language (as opposed to having branches that track different Sass versions). When contributing changes to Sass, update the Gemfile to use sass-spec from a branch or fork that has the new tests. When the feature lands in Sass, the committer will also merge the corresponding sass-spec changes. The documentation of sass-spec explains how to run sass-spec and contribute changes. In development, Change the Gemfile(s) to use the :path option against the sass-spec gem to link your local checkout of sass and sass-spec together in one or both directions. Changes to Sass internals or Ruby Sass specific features (E.g. the sass-convert tool) should always have tests in the Sass test directory following the conventions you see there. Feature Branches Sometimes it won't be possible to merge a new feature into next or master immediately. It may require longer-term work before it's complete, or we may not want to release it as part of any alpha releases of the branch in question. Branches like this are labeled feature.#{name} and stay on GitHub until they're ready to be merged. Experimental Branches Not all features pan out, and not all code is a good fit for merging into the main codebase. Usually when this happens the code is just discarded, but every so often it's interesting or promising enough that it's worth keeping around. This is what experimental branches (labeled experimental.#{name} ) are for. While they're not currently in use, they contain code that might be useful in the future. Old Stable Branches Usually Sass doesn't have the development time to do long-term maintenance of old release. But occasionally, very rarely, it becomes necessary. In cases like that, a branch named stable_#{version} will be created, starting from the last tag in that version series. Versioning Starting with version 3.5.0, Sass uses semantic versioning to indicate the evolution of its language semantics as much as possible. This means that patch releases (such as 3.5.3) contain only bug fixes, minor releases (such as 3.6.0) contain backwards-compatible features, and only major releases (such as 4.0.0) are allowed to have backwards-incompatible behavior. There are exceptions , but we try to follow this rule as closely as possible. Note, however, that the semantic versioning applies only to the language's semantics, not to the Ruby APIs. Although we try hard to keep widely-used APIs like Sass::Engine stable, we don't have a strong distinction between public and private APIs and we need to be able to freely refactor our code. Making Breaking Changes Sometimes the old way of doing something just isn't going to work anymore, and the new way just can't be made backwards-compatible. In that case, a breaking change is necessary. These changes are rarely pleasant, but they contribute to making the language better in the long term. Our breaking change process tries to make such changes as clear to users and as easy to adapt to as possible. We want to ensure that there's a clear path forward for users using functionality that will no longer exist, and that they are able to understand what's changing and what they need to do. We've developed the following process for this: Deprecate the old behavior in stable . At minimum, deprecating some behavior involves printing a warning when that behavior is used explaining that it's going to go away in the future. Ideally, this message will also include code that will do the same thing in a non-deprecated way. If there's a thorough prose explanation of the change available online, the message should link to that as well. If possible, make sass-convert (also in stable ) convert the deprecated behavior into a non-deprecated form. This allows users to run sass-convert -R -i to automatically update their stylesheets. Implement the new behavior in master . The sooner this happens, the better: it may be unclear exactly what needs to be deprecated until the new implementation exists. Release an alpha version of master that includes the new behavior. This allows users who are dissatisfied with the workaround to use the new behavior early. Normally a maintainer will take care of this. Exceptional Breakages Because Sass's syntax and semantics are closely tied to those of CSS, there are occasionally times when CSS syntax is introduced that overlaps with previously-valid Sass. In this case in particular, we may introduce a breaking change in a minor version to get back to CSS compatibility as soon as possible. Exceptional breakages still require the full deprecation process; the only change is that the new behavior is implemented in next rather than master . Because there are no minor releases between the deprecation and the removal of the old behavior, the deprecation warning should be introduced soon as it becomes clear that an exceptional breakage is necessary.","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#branches","text":"The Sass repository has three primary development branches, each of which tracks a different line of releases (see versioning below). Each branch is regularly merged into the one below: stable into next , next into master . The stable branch is the default\u2014it's what GitHub shows if you go to sass/ruby-sass , and it's the default place for pull requests to go. This branch is where we work on the next patch release. Bug fixes and documentation improvements belong here, but not new features. The next branch is where we work on the next minor release. It's where most new features go, as long as they're not breaking changes. Very occasionally breaking changes will go here as well\u2014see exceptional breakages below for details. The master branch is where we work on the next major release. It's where breaking changes go. We also occasionally decide that a non-breaking feature is big enough to warrant saving until the next major release, in which case it will also be developed here. Ideally, pull requests would be made against the appropriate branch, but don't worry about it too much; if you make a request against the wrong branch, the maintainer will take responsibility for rebasing it before merging.","title":"Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#testing","text":"Tests for changes to the Sass language go in sass-spec so that other implementations (E.g. libSass) can be tested against the same test suite. The sass-spec repo follows a \"trunk development\" model in that the tests there test against different version of the Sass language (as opposed to having branches that track different Sass versions). When contributing changes to Sass, update the Gemfile to use sass-spec from a branch or fork that has the new tests. When the feature lands in Sass, the committer will also merge the corresponding sass-spec changes. The documentation of sass-spec explains how to run sass-spec and contribute changes. In development, Change the Gemfile(s) to use the :path option against the sass-spec gem to link your local checkout of sass and sass-spec together in one or both directions. Changes to Sass internals or Ruby Sass specific features (E.g. the sass-convert tool) should always have tests in the Sass test directory following the conventions you see there.","title":"Testing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#feature-branches","text":"Sometimes it won't be possible to merge a new feature into next or master immediately. It may require longer-term work before it's complete, or we may not want to release it as part of any alpha releases of the branch in question. Branches like this are labeled feature.#{name} and stay on GitHub until they're ready to be merged.","title":"Feature Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#experimental-branches","text":"Not all features pan out, and not all code is a good fit for merging into the main codebase. Usually when this happens the code is just discarded, but every so often it's interesting or promising enough that it's worth keeping around. This is what experimental branches (labeled experimental.#{name} ) are for. While they're not currently in use, they contain code that might be useful in the future.","title":"Experimental Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#old-stable-branches","text":"Usually Sass doesn't have the development time to do long-term maintenance of old release. But occasionally, very rarely, it becomes necessary. In cases like that, a branch named stable_#{version} will be created, starting from the last tag in that version series.","title":"Old Stable Branches"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#versioning","text":"Starting with version 3.5.0, Sass uses semantic versioning to indicate the evolution of its language semantics as much as possible. This means that patch releases (such as 3.5.3) contain only bug fixes, minor releases (such as 3.6.0) contain backwards-compatible features, and only major releases (such as 4.0.0) are allowed to have backwards-incompatible behavior. There are exceptions , but we try to follow this rule as closely as possible. Note, however, that the semantic versioning applies only to the language's semantics, not to the Ruby APIs. Although we try hard to keep widely-used APIs like Sass::Engine stable, we don't have a strong distinction between public and private APIs and we need to be able to freely refactor our code.","title":"Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#making-breaking-changes","text":"Sometimes the old way of doing something just isn't going to work anymore, and the new way just can't be made backwards-compatible. In that case, a breaking change is necessary. These changes are rarely pleasant, but they contribute to making the language better in the long term. Our breaking change process tries to make such changes as clear to users and as easy to adapt to as possible. We want to ensure that there's a clear path forward for users using functionality that will no longer exist, and that they are able to understand what's changing and what they need to do. We've developed the following process for this: Deprecate the old behavior in stable . At minimum, deprecating some behavior involves printing a warning when that behavior is used explaining that it's going to go away in the future. Ideally, this message will also include code that will do the same thing in a non-deprecated way. If there's a thorough prose explanation of the change available online, the message should link to that as well. If possible, make sass-convert (also in stable ) convert the deprecated behavior into a non-deprecated form. This allows users to run sass-convert -R -i to automatically update their stylesheets. Implement the new behavior in master . The sooner this happens, the better: it may be unclear exactly what needs to be deprecated until the new implementation exists. Release an alpha version of master that includes the new behavior. This allows users who are dissatisfied with the workaround to use the new behavior early. Normally a maintainer will take care of this.","title":"Making Breaking Changes"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-3.7.4/CONTRIBUTING/#exceptional-breakages","text":"Because Sass's syntax and semantics are closely tied to those of CSS, there are occasionally times when CSS syntax is introduced that overlaps with previously-valid Sass. In this case in particular, we may introduce a breaking change in a minor version to get back to CSS compatibility as soon as possible. Exceptional breakages still require the full deprecation process; the only change is that the new behavior is implemented in next rather than master . Because there are no minor releases between the deprecation and the removal of the old behavior, the deprecation warning should be introduced soon as it becomes clear that an exceptional breakage is necessary.","title":"Exceptional Breakages"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/","text":"This is a Fork This is a fork of the official version 3.0.x branch. Sass need to support older versions of ruby than Guard wants to support on an ongoing basis, so we are releasing updates as needed for critical fixes and will support ruby 2.0 and greater for as long as Sass users need it. Our blog has more information about ths Ruby version policy for Sass . Listen The Listen gem listens to file modifications and notifies you about the changes. Features OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Tested on MRI Ruby environments (2.0+ only) via Travis CI , Issues / limitations Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 - see Duplicate directory errors ). No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in Listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Specs suite on JRuby and Rubinius aren't reliable on Travis CI, but should work. Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Ruby 1.9.3 is no longer maintained (and may not work with Listen) - it's best to upgrade to Ruby 2.2.2. Pull requests or help is very welcome for these. Install The simplest way to install Listen is to use Bundler . gem 'listen', '~> 3.0' # NOTE: for TCP functionality, use '~> 2.10' for now Usage Call Listen.to with either a single directory or multiple directories, then define the \"changes\" callback in a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path: #{modified}\" puts \"added absolute path: #{added}\" puts \"removed absolute path: #{removed}\" end listener.start # not blocking sleep Pause / unpause / stop Listeners can also be easily paused/unpaused: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.unpause # resumes processing changes (\"start\" would do the same) listener.stop # stop both listening to changes and processing them Note: While paused, Listen keeps on collecting changes in the background - to clear them, call \"stop\" Note: You should keep track of all started listeners and stop them properly on finish. Ignore / ignore! Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer), you can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 ) Only Listen catches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths. Changes callback Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified , added and removed paths, in that particular order. Paths are always returned in their absolute form. Example: listener = Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end listener.start sleep or ... # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir', &callback) listener.start sleep Options All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\" Debugging Setting the environment variable LISTEN_GEM_DEBUGGING=1 sets up the INFO level logger, while LISTEN_GEM_DEBUGGING=2 sets up the DEBUG level logger. You can also set Listen.logger to a custom logger. Listen adapters The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the Listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The Listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener. On Windows If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0' if Gem.win_platform? On *BSD If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end Getting the polling fallback message ? Please visit the installation section of the Listen WIKI for more information and options for potential fixes. Issues and troubleshooting NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=1 environment variable, it can be almost impossible to guess why listen is not working as expected. See TROUBLESHOOTING Performance If Listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running Listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of Listen prior to 2.7.7 not getting silent crashes within Listen (see LISTEN_GEM_DEBUGGING=2) not running multiple instances of Listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=2 can help discover the actual events and time they happened. See also Tips and Techniques . Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net). Acknowledgments Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration. Author Thibaud Guillaume-Gentil ( @thibaudgg ) Contributors https://github.com/guard/listen/graphs/contributors","title":"This is a Fork"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#this-is-a-fork","text":"This is a fork of the official version 3.0.x branch. Sass need to support older versions of ruby than Guard wants to support on an ongoing basis, so we are releasing updates as needed for critical fixes and will support ruby 2.0 and greater for as long as Sass users need it. Our blog has more information about ths Ruby version policy for Sass .","title":"This is a Fork"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#listen","text":"The Listen gem listens to file modifications and notifies you about the changes.","title":"Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#features","text":"OS-optimized adapters on MRI for Mac OS X 10.6+, Linux, *BSD and Windows, more info below. Detects file modification, addition and removal. You can watch multiple directories. Regexp-patterns for ignoring paths for more accuracy and speed Increased change detection accuracy on OS X HFS and VFAT volumes. Tested on MRI Ruby environments (2.0+ only) via Travis CI ,","title":"Features"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#issues-limitations","text":"Limited support for symlinked directories ( #279 ): Symlinks are always followed ( #25 ). Symlinked directories pointing within a watched directory are not supported ( #273 - see Duplicate directory errors ). No directory/adapter-specific configuration options. Support for plugins planned for future. TCP functionality was removed in Listen 3.0.0 ( #319 , #218 ). There are plans to extract this feature to separate gems ( #258 ), until this is finished, you can use by locking the listen gem to version '~> 2.10' . Some filesystems won't work without polling (VM/Vagrant Shared folders, NFS, Samba, sshfs, etc.). Specs suite on JRuby and Rubinius aren't reliable on Travis CI, but should work. Windows and *BSD adapter aren't continuously and automatically tested. OSX adapter has some performance limitations ( #342 ). Ruby 1.9.3 is no longer maintained (and may not work with Listen) - it's best to upgrade to Ruby 2.2.2. Pull requests or help is very welcome for these.","title":"Issues / limitations"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#install","text":"The simplest way to install Listen is to use Bundler . gem 'listen', '~> 3.0' # NOTE: for TCP functionality, use '~> 2.10' for now","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#usage","text":"Call Listen.to with either a single directory or multiple directories, then define the \"changes\" callback in a block. listener = Listen.to('dir/to/listen', 'dir/to/listen2') do |modified, added, removed| puts \"modified absolute path: #{modified}\" puts \"added absolute path: #{added}\" puts \"removed absolute path: #{removed}\" end listener.start # not blocking sleep","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#pause-unpause-stop","text":"Listeners can also be easily paused/unpaused: listener = Listen.to('dir/path/to/listen') { |modified, added, removed| puts 'handle changes here...' } listener.start listener.paused? # => false listener.processing? # => true listener.pause # stops processing changes (but keeps on collecting them) listener.paused? # => true listener.processing? # => false listener.unpause # resumes processing changes (\"start\" would do the same) listener.stop # stop both listening to changes and processing them Note: While paused, Listen keeps on collecting changes in the background - to clear them, call \"stop\" Note: You should keep track of all started listeners and stop them properly on finish.","title":"Pause / unpause / stop"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#ignore-ignore","text":"Listen ignores some directories and extensions by default (See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer), you can add ignoring patterns with the ignore option/method or overwrite default with ignore! option/method. listener = Listen.to('dir/path/to/listen', ignore: /\\.txt/) { |modified, added, removed| # ... } listener.start listener.ignore! /\\.pkg/ # overwrite all patterns and only ignore pkg extension. listener.ignore /\\.rb/ # ignore rb extension in addition of pkg. sleep Note: :ignore regexp patterns are evaluated against relative paths. Note: Ignoring paths does not improve performance, except when Polling ( #274 )","title":"Ignore / ignore!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#only","text":"Listen catches all files (less the ignored ones) by default. If you want to only listen to a specific type of file (i.e., just .rb extension), you should use the only option/method. listener = Listen.to('dir/path/to/listen', only: /\\.rb$/) { |modified, added, removed| # ... } listener.start listener.only /_spec\\.rb$/ # overwrite all existing only patterns. sleep Note: :only regexp patterns are evaluated only against relative file paths.","title":"Only"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#changes-callback","text":"Changes to the listened-to directories gets reported back to the user in a callback. The registered callback gets invoked, when there are changes, with three parameters: modified , added and removed paths, in that particular order. Paths are always returned in their absolute form. Example: listener = Listen.to('path/to/app') do |modified, added, removed| # This block will be called when there are changes. end listener.start sleep or ... # Create a callback callback = Proc.new do |modified, added, removed| # This proc will be called when there are changes. end listener = Listen.to('dir', &callback) listener.start sleep","title":"Changes callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#options","text":"All the following options can be set through the Listen.to after the directory path(s) params. ignore: [%r{/foo/bar}, /\\.pid$/, /\\.coffee$/] # Ignore a list of paths # default: See DEFAULT_IGNORED_DIRECTORIES and DEFAULT_IGNORED_EXTENSIONS in Listen::Silencer ignore!: %r{/foo/bar} # Same as ignore options, but overwrite default ignored paths. only: %r{.rb$} # Only listen to specific files # default: none latency: 0.5 # Set the delay (**in seconds**) between checking for changes # default: 0.25 sec (1.0 sec for polling) wait_for_delay: 4 # Set the delay (**in seconds**) between calls to the callback when changes exist # default: 0.10 sec force_polling: true # Force the use of the polling adapter # default: none relative: false # Whether changes should be relative to current dir or not # default: false polling_fallback_message: 'custom message' # Set a custom polling fallback message (or disable it with false) # default: \"Listen will be polling for changes. Learn more at https://github.com/guard/listen#listen-adapters.\"","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#debugging","text":"Setting the environment variable LISTEN_GEM_DEBUGGING=1 sets up the INFO level logger, while LISTEN_GEM_DEBUGGING=2 sets up the DEBUG level logger. You can also set Listen.logger to a custom logger.","title":"Debugging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#listen-adapters","text":"The Listen gem has a set of adapters to notify it when there are changes. There are 4 OS-specific adapters to support Darwin, Linux, *BSD and Windows. These adapters are fast as they use some system-calls to implement the notifying function. There is also a polling adapter - although it's much slower than other adapters, it works on every platform/system and scenario (including network filesystems such as VM shared folders). The Darwin and Linux adapters are dependencies of the Listen gem so they work out of the box. For other adapters a specific gem will have to be added to your Gemfile, please read below. The Listen gem will choose the best adapter automatically, if present. If you want to force the use of the polling adapter, use the :force_polling option while initializing the listener.","title":"Listen adapters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#on-windows","text":"If you are on Windows, it's recommended to use the wdm adapter instead of polling. Please add the following to your Gemfile: gem 'wdm', '>= 0.1.0' if Gem.win_platform?","title":"On Windows"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#on-bsd","text":"If you are on *BSD you can try to use the rb-kqueue adapter instead of polling. Please add the following to your Gemfile: require 'rbconfig' if RbConfig::CONFIG['target_os'] =~ /bsd|dragonfly/i gem 'rb-kqueue', '>= 0.2' end","title":"On *BSD"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#getting-the-polling-fallback-message","text":"Please visit the installation section of the Listen WIKI for more information and options for potential fixes.","title":"Getting the polling fallback message?"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#issues-and-troubleshooting","text":"NOTE: without providing the output after setting the LISTEN_GEM_DEBUGGING=1 environment variable, it can be almost impossible to guess why listen is not working as expected. See TROUBLESHOOTING","title":"Issues and troubleshooting"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#performance","text":"If Listen seems slow or unresponsive, make sure you're not using the Polling adapter (you should see a warning upon startup if you are). Also, if the directories you're watching contain many files, make sure you're: not using Polling (ideally) using :ignore and :only options to avoid tracking directories you don't care about (important with Polling and on MacOS) running Listen with the :latency and :wait_for_delay options not too small or too big (depends on needs) not watching directories with log files, database files or other frequently changing files not using a version of Listen prior to 2.7.7 not getting silent crashes within Listen (see LISTEN_GEM_DEBUGGING=2) not running multiple instances of Listen in the background using a file system with atime modification disabled (ideally) not using a filesystem with inaccurate file modification times (ideally), e.g. HFS, VFAT not buffering to a slow terminal (e.g. transparency + fancy font + slow gfx card + lots of output) ideally not running a slow encryption stack, e.g. btrfs + ecryptfs When in doubt, LISTEN_GEM_DEBUGGING=2 can help discover the actual events and time they happened. See also Tips and Techniques .","title":"Performance"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs must pass on Travis CI . Update the Yard documentation. Update the README . Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#acknowledgments","text":"Michael Kessler (netzpirat) for having written the initial specs . Travis Tilley (ttilley) for this awesome work on fssm & rb-fsevent . Nathan Weizenbaum (nex3) for rb-inotify , a thorough inotify wrapper. Mathieu Arnold (mat813) for rb-kqueue , a simple kqueue wrapper. Maher Sallam for wdm , windows support wouldn't exist without him. Yehuda Katz (wycats) for vigilo , that has been a great source of inspiration.","title":"Acknowledgments"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#author","text":"Thibaud Guillaume-Gentil ( @thibaudgg )","title":"Author"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/#contributors","text":"https://github.com/guard/listen/graphs/contributors","title":"Contributors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CHANGELOG/","text":"Moved to GitHub releases page.","title":"Moved to [GitHub releases](https://github.com/guard/listen/releases) page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CHANGELOG/#moved-to-github-releases-page","text":"","title":"Moved to GitHub releases page."},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CONTRIBUTING/","text":"Contribute to Listen File an issue If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details. Development Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CONTRIBUTING/#contribute-to-listen","text":"","title":"Contribute to Listen"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CONTRIBUTING/#file-an-issue","text":"If you haven't already, first see TROUBLESHOOTING for known issues, solutions and workarounds. You can report bugs and feature requests to GitHub Issues . Please don't ask question in the issue tracker , instead ask them in our Google group or on #guard (irc.freenode.net). Try to figure out where the issue belongs to: Is it an issue with Listen itself or with Guard? It's most likely that your bug gets resolved faster if you provide as much information as possible! The MOST useful information is debugging output from Listen ( LISTEN_GEM_DEBUGGING=1 ) - see TROUBLESHOOTING for details.","title":"File an issue"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sass-listen-4.0.0/CONTRIBUTING/#development","text":"Documentation hosted at RubyDoc . Source hosted at GitHub . Pull requests are very welcome! Please try to follow these simple rules if applicable: Please create a topic branch for every separate change you make. Make sure your patches are well tested. All specs run with rake spec must pass. Update the Yard documentation. Update the README . Update the CHANGELOG for noteworthy changes. Please do not change the version number. For questions please join us in our Google group or on #guard (irc.freenode.net).","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.7.0/","text":"Sawyer Sawyer is an experimental secret user agent built on top of Faraday . Think of Faraday as the nerdy scientist behind an HTTP API. Sure, he knows the technical details of how to communicate with an application. But he also gets overly obsessive about alternate timelines to be of much use. Sawyer knows what needs to be done. He gets in there, assesses the situation, and figures out the next action.","title":"Sawyer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.7.0/#sawyer","text":"Sawyer is an experimental secret user agent built on top of Faraday . Think of Faraday as the nerdy scientist behind an HTTP API. Sure, he knows the technical details of how to communicate with an application. But he also gets overly obsessive about alternate timelines to be of much use. Sawyer knows what needs to be done. He gets in there, assesses the situation, and figures out the next action.","title":"Sawyer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.7.0/LICENSE/","text":"Copyright (c) 2011 rick olson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/","text":"Sawyer Sawyer is an experimental hypermedia agent for Ruby built on top of Faraday . Installation Add this line to your application's Gemfile: gem 'sawyer' And then execute: bundle Or install it yourself as: gem install sawyer Usage require \"sawyer\" # Create a Sawyer agent agent = Sawyer::Agent.new(\"https://api.github.com\", links_parser: Sawyer::LinkParsers::Simple.new) # Fetch the root of the API root = agent.root.data # Access a resource directly contributors = agent.call(:get, \"repos/lostisland/sawyer/contributors\").data # Load a hypermedia relation top_contributor = contributors.first followers = top_contributor.rels[:followers].get.data For more information, check out the documentation . Development After checking out the repo, run script/test to bootstrap the project and run the tests. You can also run script/console for an interactive prompt that will allow you to experiment. To package the gem, run script/package . To release a new version, update the version number in lib/sawyer.rb , and then run script/release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org . Contributing Check out the contributing guide for more information on contributing. License The gem is available as open source under the terms of the MIT License .","title":"Sawyer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#sawyer","text":"Sawyer is an experimental hypermedia agent for Ruby built on top of Faraday .","title":"Sawyer"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#installation","text":"Add this line to your application's Gemfile: gem 'sawyer' And then execute: bundle Or install it yourself as: gem install sawyer","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#usage","text":"require \"sawyer\" # Create a Sawyer agent agent = Sawyer::Agent.new(\"https://api.github.com\", links_parser: Sawyer::LinkParsers::Simple.new) # Fetch the root of the API root = agent.root.data # Access a resource directly contributors = agent.call(:get, \"repos/lostisland/sawyer/contributors\").data # Load a hypermedia relation top_contributor = contributors.first followers = top_contributor.rels[:followers].get.data For more information, check out the documentation .","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#development","text":"After checking out the repo, run script/test to bootstrap the project and run the tests. You can also run script/console for an interactive prompt that will allow you to experiment. To package the gem, run script/package . To release a new version, update the version number in lib/sawyer.rb , and then run script/release , which will create a git tag for the version, push git commits and tags, and push the .gem file to rubygems.org .","title":"Development"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#contributing","text":"Check out the contributing guide for more information on contributing.","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/#license","text":"The gem is available as open source under the terms of the MIT License .","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/sawyer-0.8.2/LICENSE/","text":"Copyright (c) 2011 rick olson Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.5/","text":"Threadsafe A collection of thread-safe versions of common core Ruby classes. Installation Add this line to your application's Gemfile: gem 'thread_safe' And then execute: $ bundle Or install it yourself as: $ gem install thread_safe Usage require 'thread_safe' sa = ThreadSafe::Array.new # supports standard Array.new forms sh = ThreadSafe::Hash.new # supports standard Hash.new forms ThreadSafe::Cache also exists, as a hash-like object, and should have much better performance characteristics esp. under high concurrency than ThreadSafe::Hash . However, ThreadSafe::Cache is not strictly semantically equivalent to a ruby Hash -- for instance, it does not necessarily retain ordering by insertion time as Hash does. For most uses it should do fine though, and we recommend you consider ThreadSafe::Cache instead of ThreadSafe::Hash for your concurrency-safe hash needs. It understands some options when created (depending on your ruby platform) that control some of the internals - when unsure just leave them out: require 'thread_safe' cache = ThreadSafe::Cache.new Contributing Fork it Clone it ( git clone git@github.com:you/thread_safe.git ) Create your feature branch ( git checkout -b my-new-feature ) Build the jar ( rake jar ) NOTE: Requires JRuby Install dependencies ( bundle install ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Threadsafe"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.5/#threadsafe","text":"A collection of thread-safe versions of common core Ruby classes.","title":"Threadsafe"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.5/#installation","text":"Add this line to your application's Gemfile: gem 'thread_safe' And then execute: $ bundle Or install it yourself as: $ gem install thread_safe","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.5/#usage","text":"require 'thread_safe' sa = ThreadSafe::Array.new # supports standard Array.new forms sh = ThreadSafe::Hash.new # supports standard Hash.new forms ThreadSafe::Cache also exists, as a hash-like object, and should have much better performance characteristics esp. under high concurrency than ThreadSafe::Hash . However, ThreadSafe::Cache is not strictly semantically equivalent to a ruby Hash -- for instance, it does not necessarily retain ordering by insertion time as Hash does. For most uses it should do fine though, and we recommend you consider ThreadSafe::Cache instead of ThreadSafe::Hash for your concurrency-safe hash needs. It understands some options when created (depending on your ruby platform) that control some of the internals - when unsure just leave them out: require 'thread_safe' cache = ThreadSafe::Cache.new","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.5/#contributing","text":"Fork it Clone it ( git clone git@github.com:you/thread_safe.git ) Create your feature branch ( git checkout -b my-new-feature ) Build the jar ( rake jar ) NOTE: Requires JRuby Install dependencies ( bundle install ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.6/","text":"Threadsafe (Inactive, code moved to concurrent-ruby gem and repo.) A collection of thread-safe versions of common core Ruby classes. This code base is now part of the concurrent-ruby gem at https://github.com/ruby-concurrency/concurrent-ruby. The code in this repository is no longer maintained. Installation Add this line to your application's Gemfile: gem 'thread_safe' And then execute: $ bundle Or install it yourself as: $ gem install thread_safe Usage require 'thread_safe' sa = ThreadSafe::Array.new # supports standard Array.new forms sh = ThreadSafe::Hash.new # supports standard Hash.new forms ThreadSafe::Cache also exists, as a hash-like object, and should have much better performance characteristics esp. under high concurrency than ThreadSafe::Hash . However, ThreadSafe::Cache is not strictly semantically equivalent to a ruby Hash -- for instance, it does not necessarily retain ordering by insertion time as Hash does. For most uses it should do fine though, and we recommend you consider ThreadSafe::Cache instead of ThreadSafe::Hash for your concurrency-safe hash needs. It understands some options when created (depending on your ruby platform) that control some of the internals - when unsure just leave them out: require 'thread_safe' cache = ThreadSafe::Cache.new Contributing Fork it Clone it ( git clone git@github.com:you/thread_safe.git ) Create your feature branch ( git checkout -b my-new-feature ) Build the jar ( rake jar ) NOTE: Requires JRuby Install dependencies ( bundle install ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Threadsafe (Inactive, code moved to concurrent-ruby gem and repo.)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.6/#threadsafe-inactive-code-moved-to-concurrent-ruby-gem-and-repo","text":"A collection of thread-safe versions of common core Ruby classes. This code base is now part of the concurrent-ruby gem at https://github.com/ruby-concurrency/concurrent-ruby. The code in this repository is no longer maintained.","title":"Threadsafe (Inactive, code moved to concurrent-ruby gem and repo.)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.6/#installation","text":"Add this line to your application's Gemfile: gem 'thread_safe' And then execute: $ bundle Or install it yourself as: $ gem install thread_safe","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.6/#usage","text":"require 'thread_safe' sa = ThreadSafe::Array.new # supports standard Array.new forms sh = ThreadSafe::Hash.new # supports standard Hash.new forms ThreadSafe::Cache also exists, as a hash-like object, and should have much better performance characteristics esp. under high concurrency than ThreadSafe::Hash . However, ThreadSafe::Cache is not strictly semantically equivalent to a ruby Hash -- for instance, it does not necessarily retain ordering by insertion time as Hash does. For most uses it should do fine though, and we recommend you consider ThreadSafe::Cache instead of ThreadSafe::Hash for your concurrency-safe hash needs. It understands some options when created (depending on your ruby platform) that control some of the internals - when unsure just leave them out: require 'thread_safe' cache = ThreadSafe::Cache.new","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/thread_safe-0.3.6/#contributing","text":"Fork it Clone it ( git clone git@github.com:you/thread_safe.git ) Create your feature branch ( git checkout -b my-new-feature ) Build the jar ( rake jar ) NOTE: Requires JRuby Install dependencies ( bundle install ) Commit your changes ( git commit -am 'Added some feature' ) Push to the branch ( git push origin my-new-feature ) Create new Pull Request","title":"Contributing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/","text":"Typhoeus Like a modern code version of the mythical beast with 100 serpent heads, Typhoeus runs HTTP requests in parallel while cleanly encapsulating handling logic. Typhoeus needs your help! I don't have enough time, but I think this is a nice project! If you or your company is using Typhoeus you should help keeping it alive! Pick any of: add docs respond to issues add features Or send me an email! I would be more than happy to help getting you up to speed! Example A single request: Typhoeus.get(\"www.example.com\", followlocation: true) Parallel requests: hydra = Typhoeus::Hydra.new 10.times.map{ hydra.queue(Typhoeus::Request.new(\"www.example.com\", followlocation: true)) } hydra.run Installation gem install typhoeus gem \"typhoeus\" Project Tracking Documentation (GitHub master) Mailing list Usage Introduction The primary interface for Typhoeus is comprised of three classes: Request, Response, and Hydra. Request represents an HTTP request object, response represents an HTTP response, and Hydra manages making parallel HTTP connections. request = Typhoeus::Request.new( \"www.example.com\", method: :post, body: \"this is a request body\", params: { field1: \"a field\" }, headers: { Accept: \"text/html\" } ) We can see from this that the first argument is the url. The second is a set of options. The options are all optional. The default for :method is :get . When you want to send URL parameters, you can use :params hash to do so. Please note that in case of you should send a request via x-www-form-urlencoded parameters, you need to use :body hash instead. params are for URL parameters and :body is for the request body. Sending requests through the proxy Add a proxy url to the list of options: options = {proxy: 'http://myproxy.org'} req = Typhoeus::Request.new(url, options) If your proxy requires authentication, add it with proxyuserpwd option key: options = {proxy: 'http://proxyurl.com', proxyuserpwd: 'user:password'} req = Typhoeus::Request.new(url, options) Note that proxyuserpwd is a colon-separated username and password, in the vein of basic auth userpwd option. You can run the query either on its own or through the hydra: request.run #=> <Typhoeus::Response ... > hydra = Typhoeus::Hydra.hydra hydra.queue(request) hydra.run The response object will be set after the request is run. response = request.response response.code response.total_time response.headers response.body Making Quick Requests Typhoeus has some convenience methods for performing single HTTP requests. The arguments are the same as those you pass into the request constructor. Typhoeus.get(\"www.example.com\") Typhoeus.head(\"www.example.com\") Typhoeus.put(\"www.example.com/posts/1\", body: \"whoo, a body\") Typhoeus.patch(\"www.example.com/posts/1\", body: \"a new body\") Typhoeus.post(\"www.example.com/posts\", body: { title: \"test post\", content: \"this is my test\"}) Typhoeus.delete(\"www.example.com/posts/1\") Typhoeus.options(\"www.example.com\") Sending params in the body with PUT When using POST the content-type is set automatically to 'application/x-www-form-urlencoded'. That's not the case for any other method like PUT, PATCH, HEAD and so on, irrespective of whether you are using body or not. To get the same result as POST, i.e. a hash in the body coming through as params in the receiver, you need to set the content-type as shown below: Typhoeus.put(\"www.example.com/posts/1\", headers: {'Content-Type'=> \"application/x-www-form-urlencoded\"}, body: {title:\"test post updated title\", content: \"this is my updated content\"} ) Handling HTTP errors You can query the response object to figure out if you had a successful request or not. Here\u2019s some example code that you might use to handle errors. The callbacks are executed right after the request is finished, make sure to define them before running the request. request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| if response.success? # hell yeah elsif response.timed_out? # aw hell no log(\"got a time out\") elsif response.code == 0 # Could not get an http response, something's wrong. log(response.return_message) else # Received a non-successful http response. log(\"HTTP request failed: \" + response.code.to_s) end end request.run This also works with serial (blocking) requests in the same fashion. Both serial and parallel requests return a Response object. Handling file uploads A File object can be passed as a param for a POST request to handle uploading files to the server. Typhoeus will upload the file as the original file name and use Mime::Types to set the content type. Typhoeus.post( \"http://localhost:3000/posts\", body: { title: \"test post\", content: \"this is my test\", file: File.open(\"thesis.txt\",\"r\") } ) Streaming the response body Typhoeus can stream responses. When you're expecting a large response, set the on_body callback on a request. Typhoeus will yield to the callback with chunks of the response, as they're read. When you set an on_body callback, Typhoeus will not store the complete response. downloaded_file = File.open 'huge.iso', 'wb' request = Typhoeus::Request.new(\"www.example.com/huge.iso\") request.on_headers do |response| if response.code != 200 raise \"Request failed\" end end request.on_body do |chunk| downloaded_file.write(chunk) end request.on_complete do |response| downloaded_file.close # Note that response.body is \"\" end request.run Making Parallel Requests Generally, you should be running requests through hydra. Here is how that looks: hydra = Typhoeus::Hydra.hydra first_request = Typhoeus::Request.new(\"http://example.com/posts/1\") first_request.on_complete do |response| third_url = response.body third_request = Typhoeus::Request.new(third_url) hydra.queue third_request end second_request = Typhoeus::Request.new(\"http://example.com/posts/2\") hydra.queue first_request hydra.queue second_request hydra.run # this is a blocking call that returns once all requests are complete The execution of that code goes something like this. The first and second requests are built and queued. When hydra is run the first and second requests run in parallel. When the first request completes, the third request is then built and queued, in this example based on the result of the first request. The moment it is queued Hydra starts executing it. Meanwhile the second request would continue to run (or it could have completed before the first). Once the third request is done, hydra.run returns. How to get an array of response bodies back after executing a queue: hydra = Typhoeus::Hydra.new requests = 10.times.map { request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) hydra.queue(request) request } hydra.run responses = requests.map { |request| request.response.body } hydra.run is a blocking request. You can also use the on_complete callback to handle each request as it completes: hydra = Typhoeus::Hydra.new 10.times do request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| #do_something_with response end hydra.queue(request) end hydra.run Specifying Max Concurrency Hydra will also handle how many requests you can make in parallel. Things will get flakey if you try to make too many requests at the same time. The built in limit is 200. When more requests than that are queued up, hydra will save them for later and start the requests as others are finished. You can raise or lower the concurrency limit through the Hydra constructor. Typhoeus::Hydra.new(max_concurrency: 20) Memoization Hydra memoizes requests within a single run call. You have to enable memoization. This will result in a single request being issued. However, the on_complete handlers of both will be called. Typhoeus::Config.memoize = true hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run This will result in two requests. Typhoeus::Config.memoize = false hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run Caching Typhoeus includes built in support for caching. In the following example, if there is a cache hit, the cached object is passed to the on_complete handler of the request object. class Cache def initialize @memory = {} end def get(request) @memory[request] end def set(request, response) @memory[request] = response end end Typhoeus::Config.cache = Cache.new Typhoeus.get(\"www.example.com\").cached? #=> false Typhoeus.get(\"www.example.com\").cached? #=> true For use with Dalli : class Cache def initialize @client = Dalli::Client.new end def get(request) @client.get(request.cache_key) end def set(request, response) @client.set(request.cache_key, response) end end Typhoeus::Config.cache = Cache.new For use with Rails: class Cache def get(request) Rails.cache.read(request) end def set(request, response) Rails.cache.write(request, response) end end Typhoeus::Config.cache = Cache.new Direct Stubbing Hydra allows you to stub out specific urls and patterns to avoid hitting remote servers while testing. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub('www.example.com').and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true The queued request will hit the stub. You can also specify a regex to match urls. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub(/example/).and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true You may also specify an array for the stub to return sequentially. Typhoeus.stub('www.example.com').and_return([response1, response2]) Typhoeus.get('www.example.com') == response1 #=> true Typhoeus.get('www.example.com') == response2 #=> true When testing make sure to clear your expectations or the stubs will persist between tests. The following can be included in your spec_helper.rb file to do this automatically. RSpec.configure do |config| config.before :each do Typhoeus::Expectation.clear end end Timeouts No exceptions are raised on HTTP timeouts. You can check whether a request timed out with the following method: Typhoeus.get(\"www.example.com\", timeout: 1).timed_out? Timed out responses also have their success? method return false. There are two different timeouts available: timeout and connecttimeout . timeout is the time limit for the entire request in seconds. connecttimeout is the time limit for just the connection phase, again in seconds. There are two additional more fine grained opptions timeout_ms and connecttimeout_ms . These options offer millisecond precision but are not always available (for instance on linux if nosignal is not set to true). When you pass a floating point timeout (or connecttimeout ) Typhoeus will set timeout_ms for you if it has not been defined. The actual timeout values passed to curl will always be rounded up. DNS timeouts of less than one second are not supported unless curl is compiled with an asynchronous resolver. The default timeout is 0 (zero) which means curl never times out during transfer. The default connecttimeout is 300 seconds. A connecttimeout of 0 will also result in the default connecttimeout of 300 seconds. Following Redirections Use followlocation: true , eg: Typhoeus.get(\"www.example.com\", followlocation: true) Basic Authentication Typhoeus::Request.get(\"www.example.com\", userpwd: \"user:password\") Compression Typhoeus.get(\"www.example.com\", accept_encoding: \"gzip\") The above has a different behavior than setting the header directly in the header hash, eg: Typhoeus.get(\"www.example.com\", headers: {\"Accept-Encoding\" => \"gzip\"}) Setting the header hash directly will not include the --compressed flag in the libcurl command and therefore libcurl will not decompress the response. If you want the --compressed flag to be added automatically, set :accept_encoding Typhoeus option. Cookies Typhoeus::Request.get(\"www.example.com\", cookiefile: \"/path/to/file\", cookiejar: \"/path/to/file\") Here, cookiefile is a file to read cookies from, and cookiejar is a file to write received cookies to. If you just want cookies enabled, you need to pass the same filename for both options. Other CURL options Are available and documented here SSL SSL comes built in to libcurl so it\u2019s in Typhoeus as well. If you pass in a url with \"https\" it should just work assuming that you have your cert bundle in order and the server is verifiable. You must also have libcurl built with SSL support enabled. You can check that by doing this: curl --version Now, even if you have libcurl built with OpenSSL you may still have a messed up cert bundle or if you\u2019re hitting a non-verifiable SSL server then you\u2019ll have to disable peer verification to make SSL work. Like this: Typhoeus.get(\"https://www.example.com\", ssl_verifypeer: false) If you are getting \"SSL: certificate subject name does not match target host name\" from curl (ex:- you are trying to access to b.c.host.com when the certificate subject is *.host.com). You can disable host verification. Like this: # host checking enabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 2) # host checking disabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 0) Verbose debug output It\u2019s sometimes useful to see verbose output from curl. You can enable it on a per-request basis: Typhoeus.get(\"http://example.com\", verbose: true) or globally: Typhoeus::Config.verbose = true Just remember that libcurl prints it\u2019s debug output to the console (to STDERR), so you\u2019ll need to run your scripts from the console to see it. Default User Agent Header In many cases, all HTTP requests made by an application require the same User-Agent header set. Instead of supplying it on a per-request basis by supplying a custom header, it is possible to override it for all requests using: Typhoeus::Config.user_agent = \"custom user agent\" Running the specs Running the specs should be as easy as: bundle install bundle exec rake Semantic Versioning This project conforms to semver . LICENSE (The MIT License) Copyright \u00a9 2009-2010 Paul Dix Copyright \u00a9 2011-2012 David Balatero Copyright \u00a9 2012-2014 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Typhoeus [![Build Status](https://img.shields.io/travis/typhoeus/typhoeus/master.svg)](https://travis-ci.org/typhoeus/typhoeus) [![Code Climate](https://img.shields.io/codeclimate/github/typhoeus/typhoeus.svg)](https://codeclimate.com/github/typhoeus/typhoeus) [![Gem Version](https://img.shields.io/gem/v/typhoeus.svg)](https://rubygems.org/gems/typhoeus)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#typhoeus","text":"Like a modern code version of the mythical beast with 100 serpent heads, Typhoeus runs HTTP requests in parallel while cleanly encapsulating handling logic.","title":"Typhoeus"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#typhoeus-needs-your-help","text":"I don't have enough time, but I think this is a nice project! If you or your company is using Typhoeus you should help keeping it alive! Pick any of: add docs respond to issues add features Or send me an email! I would be more than happy to help getting you up to speed!","title":"Typhoeus needs your help!"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#example","text":"A single request: Typhoeus.get(\"www.example.com\", followlocation: true) Parallel requests: hydra = Typhoeus::Hydra.new 10.times.map{ hydra.queue(Typhoeus::Request.new(\"www.example.com\", followlocation: true)) } hydra.run","title":"Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#installation","text":"gem install typhoeus gem \"typhoeus\"","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#project-tracking","text":"Documentation (GitHub master) Mailing list","title":"Project Tracking"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#introduction","text":"The primary interface for Typhoeus is comprised of three classes: Request, Response, and Hydra. Request represents an HTTP request object, response represents an HTTP response, and Hydra manages making parallel HTTP connections. request = Typhoeus::Request.new( \"www.example.com\", method: :post, body: \"this is a request body\", params: { field1: \"a field\" }, headers: { Accept: \"text/html\" } ) We can see from this that the first argument is the url. The second is a set of options. The options are all optional. The default for :method is :get . When you want to send URL parameters, you can use :params hash to do so. Please note that in case of you should send a request via x-www-form-urlencoded parameters, you need to use :body hash instead. params are for URL parameters and :body is for the request body.","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#sending-requests-through-the-proxy","text":"Add a proxy url to the list of options: options = {proxy: 'http://myproxy.org'} req = Typhoeus::Request.new(url, options) If your proxy requires authentication, add it with proxyuserpwd option key: options = {proxy: 'http://proxyurl.com', proxyuserpwd: 'user:password'} req = Typhoeus::Request.new(url, options) Note that proxyuserpwd is a colon-separated username and password, in the vein of basic auth userpwd option. You can run the query either on its own or through the hydra: request.run #=> <Typhoeus::Response ... > hydra = Typhoeus::Hydra.hydra hydra.queue(request) hydra.run The response object will be set after the request is run. response = request.response response.code response.total_time response.headers response.body","title":"Sending requests through the proxy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#making-quick-requests","text":"Typhoeus has some convenience methods for performing single HTTP requests. The arguments are the same as those you pass into the request constructor. Typhoeus.get(\"www.example.com\") Typhoeus.head(\"www.example.com\") Typhoeus.put(\"www.example.com/posts/1\", body: \"whoo, a body\") Typhoeus.patch(\"www.example.com/posts/1\", body: \"a new body\") Typhoeus.post(\"www.example.com/posts\", body: { title: \"test post\", content: \"this is my test\"}) Typhoeus.delete(\"www.example.com/posts/1\") Typhoeus.options(\"www.example.com\")","title":"Making Quick Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#sending-params-in-the-body-with-put","text":"When using POST the content-type is set automatically to 'application/x-www-form-urlencoded'. That's not the case for any other method like PUT, PATCH, HEAD and so on, irrespective of whether you are using body or not. To get the same result as POST, i.e. a hash in the body coming through as params in the receiver, you need to set the content-type as shown below: Typhoeus.put(\"www.example.com/posts/1\", headers: {'Content-Type'=> \"application/x-www-form-urlencoded\"}, body: {title:\"test post updated title\", content: \"this is my updated content\"} )","title":"Sending params in the body with PUT"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#handling-http-errors","text":"You can query the response object to figure out if you had a successful request or not. Here\u2019s some example code that you might use to handle errors. The callbacks are executed right after the request is finished, make sure to define them before running the request. request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| if response.success? # hell yeah elsif response.timed_out? # aw hell no log(\"got a time out\") elsif response.code == 0 # Could not get an http response, something's wrong. log(response.return_message) else # Received a non-successful http response. log(\"HTTP request failed: \" + response.code.to_s) end end request.run This also works with serial (blocking) requests in the same fashion. Both serial and parallel requests return a Response object.","title":"Handling HTTP errors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#handling-file-uploads","text":"A File object can be passed as a param for a POST request to handle uploading files to the server. Typhoeus will upload the file as the original file name and use Mime::Types to set the content type. Typhoeus.post( \"http://localhost:3000/posts\", body: { title: \"test post\", content: \"this is my test\", file: File.open(\"thesis.txt\",\"r\") } )","title":"Handling file uploads"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#streaming-the-response-body","text":"Typhoeus can stream responses. When you're expecting a large response, set the on_body callback on a request. Typhoeus will yield to the callback with chunks of the response, as they're read. When you set an on_body callback, Typhoeus will not store the complete response. downloaded_file = File.open 'huge.iso', 'wb' request = Typhoeus::Request.new(\"www.example.com/huge.iso\") request.on_headers do |response| if response.code != 200 raise \"Request failed\" end end request.on_body do |chunk| downloaded_file.write(chunk) end request.on_complete do |response| downloaded_file.close # Note that response.body is \"\" end request.run","title":"Streaming the response body"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#making-parallel-requests","text":"Generally, you should be running requests through hydra. Here is how that looks: hydra = Typhoeus::Hydra.hydra first_request = Typhoeus::Request.new(\"http://example.com/posts/1\") first_request.on_complete do |response| third_url = response.body third_request = Typhoeus::Request.new(third_url) hydra.queue third_request end second_request = Typhoeus::Request.new(\"http://example.com/posts/2\") hydra.queue first_request hydra.queue second_request hydra.run # this is a blocking call that returns once all requests are complete The execution of that code goes something like this. The first and second requests are built and queued. When hydra is run the first and second requests run in parallel. When the first request completes, the third request is then built and queued, in this example based on the result of the first request. The moment it is queued Hydra starts executing it. Meanwhile the second request would continue to run (or it could have completed before the first). Once the third request is done, hydra.run returns. How to get an array of response bodies back after executing a queue: hydra = Typhoeus::Hydra.new requests = 10.times.map { request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) hydra.queue(request) request } hydra.run responses = requests.map { |request| request.response.body } hydra.run is a blocking request. You can also use the on_complete callback to handle each request as it completes: hydra = Typhoeus::Hydra.new 10.times do request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| #do_something_with response end hydra.queue(request) end hydra.run","title":"Making Parallel Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#specifying-max-concurrency","text":"Hydra will also handle how many requests you can make in parallel. Things will get flakey if you try to make too many requests at the same time. The built in limit is 200. When more requests than that are queued up, hydra will save them for later and start the requests as others are finished. You can raise or lower the concurrency limit through the Hydra constructor. Typhoeus::Hydra.new(max_concurrency: 20)","title":"Specifying Max Concurrency"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#memoization","text":"Hydra memoizes requests within a single run call. You have to enable memoization. This will result in a single request being issued. However, the on_complete handlers of both will be called. Typhoeus::Config.memoize = true hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run This will result in two requests. Typhoeus::Config.memoize = false hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run","title":"Memoization"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#caching","text":"Typhoeus includes built in support for caching. In the following example, if there is a cache hit, the cached object is passed to the on_complete handler of the request object. class Cache def initialize @memory = {} end def get(request) @memory[request] end def set(request, response) @memory[request] = response end end Typhoeus::Config.cache = Cache.new Typhoeus.get(\"www.example.com\").cached? #=> false Typhoeus.get(\"www.example.com\").cached? #=> true For use with Dalli : class Cache def initialize @client = Dalli::Client.new end def get(request) @client.get(request.cache_key) end def set(request, response) @client.set(request.cache_key, response) end end Typhoeus::Config.cache = Cache.new For use with Rails: class Cache def get(request) Rails.cache.read(request) end def set(request, response) Rails.cache.write(request, response) end end Typhoeus::Config.cache = Cache.new","title":"Caching"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#direct-stubbing","text":"Hydra allows you to stub out specific urls and patterns to avoid hitting remote servers while testing. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub('www.example.com').and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true The queued request will hit the stub. You can also specify a regex to match urls. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub(/example/).and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true You may also specify an array for the stub to return sequentially. Typhoeus.stub('www.example.com').and_return([response1, response2]) Typhoeus.get('www.example.com') == response1 #=> true Typhoeus.get('www.example.com') == response2 #=> true When testing make sure to clear your expectations or the stubs will persist between tests. The following can be included in your spec_helper.rb file to do this automatically. RSpec.configure do |config| config.before :each do Typhoeus::Expectation.clear end end","title":"Direct Stubbing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#timeouts","text":"No exceptions are raised on HTTP timeouts. You can check whether a request timed out with the following method: Typhoeus.get(\"www.example.com\", timeout: 1).timed_out? Timed out responses also have their success? method return false. There are two different timeouts available: timeout and connecttimeout . timeout is the time limit for the entire request in seconds. connecttimeout is the time limit for just the connection phase, again in seconds. There are two additional more fine grained opptions timeout_ms and connecttimeout_ms . These options offer millisecond precision but are not always available (for instance on linux if nosignal is not set to true). When you pass a floating point timeout (or connecttimeout ) Typhoeus will set timeout_ms for you if it has not been defined. The actual timeout values passed to curl will always be rounded up. DNS timeouts of less than one second are not supported unless curl is compiled with an asynchronous resolver. The default timeout is 0 (zero) which means curl never times out during transfer. The default connecttimeout is 300 seconds. A connecttimeout of 0 will also result in the default connecttimeout of 300 seconds.","title":"Timeouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#following-redirections","text":"Use followlocation: true , eg: Typhoeus.get(\"www.example.com\", followlocation: true)","title":"Following Redirections"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#basic-authentication","text":"Typhoeus::Request.get(\"www.example.com\", userpwd: \"user:password\")","title":"Basic Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#compression","text":"Typhoeus.get(\"www.example.com\", accept_encoding: \"gzip\") The above has a different behavior than setting the header directly in the header hash, eg: Typhoeus.get(\"www.example.com\", headers: {\"Accept-Encoding\" => \"gzip\"}) Setting the header hash directly will not include the --compressed flag in the libcurl command and therefore libcurl will not decompress the response. If you want the --compressed flag to be added automatically, set :accept_encoding Typhoeus option.","title":"Compression"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#cookies","text":"Typhoeus::Request.get(\"www.example.com\", cookiefile: \"/path/to/file\", cookiejar: \"/path/to/file\") Here, cookiefile is a file to read cookies from, and cookiejar is a file to write received cookies to. If you just want cookies enabled, you need to pass the same filename for both options.","title":"Cookies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#other-curl-options","text":"Are available and documented here","title":"Other CURL options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#ssl","text":"SSL comes built in to libcurl so it\u2019s in Typhoeus as well. If you pass in a url with \"https\" it should just work assuming that you have your cert bundle in order and the server is verifiable. You must also have libcurl built with SSL support enabled. You can check that by doing this: curl --version Now, even if you have libcurl built with OpenSSL you may still have a messed up cert bundle or if you\u2019re hitting a non-verifiable SSL server then you\u2019ll have to disable peer verification to make SSL work. Like this: Typhoeus.get(\"https://www.example.com\", ssl_verifypeer: false) If you are getting \"SSL: certificate subject name does not match target host name\" from curl (ex:- you are trying to access to b.c.host.com when the certificate subject is *.host.com). You can disable host verification. Like this: # host checking enabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 2) # host checking disabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 0)","title":"SSL"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#verbose-debug-output","text":"It\u2019s sometimes useful to see verbose output from curl. You can enable it on a per-request basis: Typhoeus.get(\"http://example.com\", verbose: true) or globally: Typhoeus::Config.verbose = true Just remember that libcurl prints it\u2019s debug output to the console (to STDERR), so you\u2019ll need to run your scripts from the console to see it.","title":"Verbose debug output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#default-user-agent-header","text":"In many cases, all HTTP requests made by an application require the same User-Agent header set. Instead of supplying it on a per-request basis by supplying a custom header, it is possible to override it for all requests using: Typhoeus::Config.user_agent = \"custom user agent\"","title":"Default User Agent Header"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#running-the-specs","text":"Running the specs should be as easy as: bundle install bundle exec rake","title":"Running the specs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#semantic-versioning","text":"This project conforms to semver .","title":"Semantic Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/#license","text":"(The MIT License) Copyright \u00a9 2009-2010 Paul Dix Copyright \u00a9 2011-2012 David Balatero Copyright \u00a9 2012-2014 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/","text":"Changelog Master Full Changelog 0.7.3 Full Changelog Add on_body callbacks individually to allow Ethon to recognize the return code 0.7.2 Full Changelog Allow arrays to be passed to Expectation#and_return ( JP Moral ) Added getter for redirect_time value. ( Adrien Jarthon ) 0.7.1 Full Changelog Bugfixes: Forking may cause libcurl sockets to be shared with child processes, causing HTTP requests to be interleaved ( Rolf Timmermans , #436 ) 0.7.0 Full Changelog Bugfixes: Call on_headers and on_body when using stubbed responses. 0.7.0.pre1 Full Changelog Enhancements: Improving timeout behavior and documentation. no_signal is now set per default! ( Jonas Wagner , #398 ) 0.6.8 Full Changelog Bugfixes: Fix Faraday 0.9 compatibility. ( Gleb Mazovetskiy , #357 ) Fix Request#hash for different key orders. ( Matthew Schulkind , #344 ) Enhancements: Use an updated Ethon version. Note that from now on the mime-types is no longer a Ethon dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Use SVG for status badges in README. ( Sean Linsley , #353 ) Missing quotes in README example code. ( Jason R. Clark , #351 ) Specs for Faraday adapter. ( michaelavila , #348 ) Clarify wording in README. ( Sean Linsley , #347 ) Make caching easier for non-memory caches. ( Matthew Schulkind , #345 ) Spec refactoring. ( Matthew Schulkind , #343 ) 0.6.7 Full Changelog Enhancements: Add response streaming. ( #339 ) 0.6.6 Full Changelog 0.6.5 Full Changelog 0.6.4 Full Changelog The changelog entries are coming soon! 0.6.3 Full Changelog Enhancements: Cache hydra per thread. Various documentation improvements. ( craiglittle ) Add support for lazy construction of responses from stubbed requests. ( ryankindermann , #275 ) 0.6.2 Full Changelog Enhancements: Reintroduce a global cache. Request#handled_response falls back to the original response. ( turnerking , #272 ) When Errors::NoStub is raised the url is displayed. ( dschneider , #276 ) Make Request#hash consistent. Add .rvmrc and ctags to .gitignore . ( ryankindermann , #274 ) 0.6.1 Full Changelog Enhancements: Updated ethon version which allows to set multiple protocols. 0.6.0 Full Changelog Enhancements: Request#url now also contains the url parameters. Use updated ethon version which provides access to protocols and redir_protocols in response to libcurl SASL buffer overflow vulnerability Bugfixes: Corrected ssl options for the faraday adapter. The before hook now correctly returns the response. ( Mattias Putman , #268 ) Benchmark is working again. 0.5.4 Full Changelog Enhancements: Make sure response_code is an integer. When setting an header through vcr or webmock it becomes a Typhoeus::Response::Header . Provide a Rack middleware to decode nested Typhoeus arrays properly. ( Dwayne Macgowan , #224 ) Handled response is available again. Rename parameter url to base_url . See discussion here: #250 . ( bkimble , #256 ) Provide O(1) header access. Work around ruby 1.8.7 limitations. ( Chris Johnson , #227 ) Provide symbol access. 0.5.3 Full Changelog Enhancements: When checking options in Expecation#matches? also consider Request#options. Bugfixes: Do not break backwards compatibility with case insensitive headers access. Make sure hydra behaves correct in case of before hooks. 0.5.2 Full Changelog Enhancements: Do not check the return_code in Response#success? when response is mocked. Check for memoization, stubbing, before hooks are delayed to Hydra#run. It was on Hydra#queue before and led to strange behavior because if the request was stubbed, it was wrapped up in queue already. There was no way to add callbacks after queue thatswhy. This is now different, since everything happens in run, just as you expect. 0.5.1 Full Changelog Enhancements: Downcase header keys for easier access ( #227 ) Using an updated Ethon version. 0.5.0 Full Changelog Major Changes: Ethon integration Params are url params and a body is always a body for every request type The options you can set might have a slightly other names, as Ethon sticks to libcurl names. See Easy.new for a description. Request parameter and body are properly encoded (only POST multiform body is not) No more header sanitizing. Before: :headers => { 'user_agent' => 'Custom' } was modified to :headers => { 'User-Agent' => 'Custom' } Typhoeus::Easy and Typhoeus::Multi are now Ethon::Easy and Ethon::Multi Request shortcuts: Typhoeus.get(\"www.google.de\") Global configuration: Typhoeus.configure do |config| config.verbose = true config.memoize = true end No more Response#headers_hash , instead Response#headers returning the last header and response#redirections returning the responses with headers generated through redirections Instead of defining the same callbacks on every request, you can define global callbacks: Typhoeus.on_complete { p \"yay\" } The stubbing interface changed slightly. You now have the same syntax as for requests: Typhoeus.stub(url, options).and_return(response) The following things were removed because they do not seemed to be used at all. Ping me if you disagree! Typhoeus::Filter Typhoeus::Remote Typhoeus::RemoteMethod Typhoeus::RemoteProxyObject build in cache interface Enhancements: Documentation ( Alex P , #188 ) Request#on_complete can hold multiple blocks. Request#eql? recognizes when header/params/body has a different order, but still same keys and values ( Alex P , #194 ) Bug Fixes: Zero bytes in strings are escaped for libcurl Add support for socks5 hostname proxy type ( eweathers , #183 ) Post body is encoded ( Rohan Deshpande , #143 ) Set default user agent ( Steven Shingler , #176 ) 0.4.2 A header hotfix 0.4.1 Fix verifypeer and verifyhost options Fix header sending 0.4.0 Make a GET even when a body is given Deprecated User Agent setter removed Allow cache key basis overwrite (John Crepezzi, #147) FFI integration (Daniel Cavanagh, #151) Refactor upload code (Marnen Laibow-Koser, #152) Fix travis-ci build (Ezekiel Templin, #160) 0.3.3 Make sure to call the Easy::failure callback on all non-success http response codes, even invalid ones. [balexis] Use bytesize instead of length to determine Content-Length [dlamacchia] Added SSL version option to Easy/Request [michelbarbosa/dbalatero] 0.3.2 Fix array params to be consistent with HTTP spec [gridaphobe] traversal_to_params_hash should use the escape option [itsmeduncan] Fix > 1024 open file descriptors [mschulkind] Fixed a bug with internally queued requests being dropped [mschulkind] Use gemspec in bundler to avoid duplication [mschulkind] Run internally queued requests in FIFO order [mschulkind] Moved Typhoeus::VERSION to a separate file, to fix rake build_native [mschulkind] Fixed problems related to put requests with empty bodies [skaes, GH-84] Added CURLOPT_INTERFACE option via Request#interface=. [spiegela] Added Tempfile support to Form#process! [richievos] Hydra won't forget to accept gzip/deflate encoding [codesnik] Accept and convert strings to integers in Typhoeus::Request#initialize for timeout/cache_timeout/connect_timeout values when using ruby 1.9.x. [djnawara] Added interface for registering stub finders [myronmarston] Fixed header stubbing [myronmarston] Added PKCS12 support [jodell] Make a request with handlers marshallable [bernerdschaefer] Upgraded to RSpec 2 [bernerdschaefer] Fix HTTP status edge-case [balexis] Expose primary_ip to easy object [balexis] 0.2.4 Fix form POSTs to only use multipart for file uploads, otherwise use application/x-www-form-urlencoded [dbalatero] 0.2.3 Code duplication in Typhoeus::Form led to nested URL param errors on POST only. Fixed [dbalatero] 0.2.2 Fixed a problem with nested URL params encoding incorrectly [dbalatero] 0.2.1 Added extended proxy support [Zapotek, GH-46] eliminated compile time warnings by using proper type declarations [skaes, GH-54] fixed broken calls to rb_raise [skaes, GH-54] prevent leaking of curl easy handles when exceptions are raised (either from typhoeus itself or user callbacks) [skaes, GH-54] fixed Easy#timed_out? using curl return codes [skaes, GH-54] provide curl return codes and corresponding curl error messages on classes Easy and Request [skaes, GH-54] allow VCR to whitelist hosts in Typhoeus stubbing/mocking [myronmarston, GH-57] added timed_out? documentation, method to Response [dbalatero, GH-34] added abort to Hydra to prematurely stop a hydra.run [Zapotek] added file upload support for POST requests [jtarchie, GH-59] 0.2.0 Fix warning in Request#headers from attr_accessor Params with array values were not parsing into the format that rack expects [GH-39, smartocci] Removed Rack as a dependency [GH-45] Added integration hooks for VCR! 0.1.31 Fixed bug in setting compression encoding [morhekil] Exposed authentication control methods through Request interface [morhekil] 0.1.30 Exposed CURLOPT_CONNECTTIMEOUT_MS to Requests [balexis] 0.1.29 Fixed a memory corruption with using CURLOPT_POSTFIELDS [gravis, 32531d0821aecc4] 0.1.28 Added SSL cert options for Typhoeus::Easy [GH-25, gravis] Ported SSL cert options to Typhoeus::Request interface [gravis] Added support for any HTTP method (purge for Varnish) [ryana] 0.1.27 Added rack as dependency, added dev dependencies to Rakefile [GH-21]","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#master","text":"Full Changelog","title":"Master"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#073","text":"Full Changelog Add on_body callbacks individually to allow Ethon to recognize the return code","title":"0.7.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#072","text":"Full Changelog Allow arrays to be passed to Expectation#and_return ( JP Moral ) Added getter for redirect_time value. ( Adrien Jarthon )","title":"0.7.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#071","text":"Full Changelog Bugfixes: Forking may cause libcurl sockets to be shared with child processes, causing HTTP requests to be interleaved ( Rolf Timmermans , #436 )","title":"0.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#070","text":"Full Changelog Bugfixes: Call on_headers and on_body when using stubbed responses.","title":"0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#070pre1","text":"Full Changelog Enhancements: Improving timeout behavior and documentation. no_signal is now set per default! ( Jonas Wagner , #398 )","title":"0.7.0.pre1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#068","text":"Full Changelog Bugfixes: Fix Faraday 0.9 compatibility. ( Gleb Mazovetskiy , #357 ) Fix Request#hash for different key orders. ( Matthew Schulkind , #344 ) Enhancements: Use an updated Ethon version. Note that from now on the mime-types is no longer a Ethon dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Use SVG for status badges in README. ( Sean Linsley , #353 ) Missing quotes in README example code. ( Jason R. Clark , #351 ) Specs for Faraday adapter. ( michaelavila , #348 ) Clarify wording in README. ( Sean Linsley , #347 ) Make caching easier for non-memory caches. ( Matthew Schulkind , #345 ) Spec refactoring. ( Matthew Schulkind , #343 )","title":"0.6.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#067","text":"Full Changelog Enhancements: Add response streaming. ( #339 )","title":"0.6.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#066","text":"Full Changelog","title":"0.6.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#065","text":"Full Changelog","title":"0.6.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#064","text":"Full Changelog The changelog entries are coming soon!","title":"0.6.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#063","text":"Full Changelog Enhancements: Cache hydra per thread. Various documentation improvements. ( craiglittle ) Add support for lazy construction of responses from stubbed requests. ( ryankindermann , #275 )","title":"0.6.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#062","text":"Full Changelog Enhancements: Reintroduce a global cache. Request#handled_response falls back to the original response. ( turnerking , #272 ) When Errors::NoStub is raised the url is displayed. ( dschneider , #276 ) Make Request#hash consistent. Add .rvmrc and ctags to .gitignore . ( ryankindermann , #274 )","title":"0.6.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#061","text":"Full Changelog Enhancements: Updated ethon version which allows to set multiple protocols.","title":"0.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#060","text":"Full Changelog Enhancements: Request#url now also contains the url parameters. Use updated ethon version which provides access to protocols and redir_protocols in response to libcurl SASL buffer overflow vulnerability Bugfixes: Corrected ssl options for the faraday adapter. The before hook now correctly returns the response. ( Mattias Putman , #268 ) Benchmark is working again.","title":"0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#054","text":"Full Changelog Enhancements: Make sure response_code is an integer. When setting an header through vcr or webmock it becomes a Typhoeus::Response::Header . Provide a Rack middleware to decode nested Typhoeus arrays properly. ( Dwayne Macgowan , #224 ) Handled response is available again. Rename parameter url to base_url . See discussion here: #250 . ( bkimble , #256 ) Provide O(1) header access. Work around ruby 1.8.7 limitations. ( Chris Johnson , #227 ) Provide symbol access.","title":"0.5.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#053","text":"Full Changelog Enhancements: When checking options in Expecation#matches? also consider Request#options. Bugfixes: Do not break backwards compatibility with case insensitive headers access. Make sure hydra behaves correct in case of before hooks.","title":"0.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#052","text":"Full Changelog Enhancements: Do not check the return_code in Response#success? when response is mocked. Check for memoization, stubbing, before hooks are delayed to Hydra#run. It was on Hydra#queue before and led to strange behavior because if the request was stubbed, it was wrapped up in queue already. There was no way to add callbacks after queue thatswhy. This is now different, since everything happens in run, just as you expect.","title":"0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#051","text":"Full Changelog Enhancements: Downcase header keys for easier access ( #227 ) Using an updated Ethon version.","title":"0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#050","text":"Full Changelog Major Changes: Ethon integration Params are url params and a body is always a body for every request type The options you can set might have a slightly other names, as Ethon sticks to libcurl names. See Easy.new for a description. Request parameter and body are properly encoded (only POST multiform body is not) No more header sanitizing. Before: :headers => { 'user_agent' => 'Custom' } was modified to :headers => { 'User-Agent' => 'Custom' } Typhoeus::Easy and Typhoeus::Multi are now Ethon::Easy and Ethon::Multi Request shortcuts: Typhoeus.get(\"www.google.de\") Global configuration: Typhoeus.configure do |config| config.verbose = true config.memoize = true end No more Response#headers_hash , instead Response#headers returning the last header and response#redirections returning the responses with headers generated through redirections Instead of defining the same callbacks on every request, you can define global callbacks: Typhoeus.on_complete { p \"yay\" } The stubbing interface changed slightly. You now have the same syntax as for requests: Typhoeus.stub(url, options).and_return(response) The following things were removed because they do not seemed to be used at all. Ping me if you disagree! Typhoeus::Filter Typhoeus::Remote Typhoeus::RemoteMethod Typhoeus::RemoteProxyObject build in cache interface Enhancements: Documentation ( Alex P , #188 ) Request#on_complete can hold multiple blocks. Request#eql? recognizes when header/params/body has a different order, but still same keys and values ( Alex P , #194 ) Bug Fixes: Zero bytes in strings are escaped for libcurl Add support for socks5 hostname proxy type ( eweathers , #183 ) Post body is encoded ( Rohan Deshpande , #143 ) Set default user agent ( Steven Shingler , #176 )","title":"0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#042","text":"A header hotfix","title":"0.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#041","text":"Fix verifypeer and verifyhost options Fix header sending","title":"0.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#040","text":"Make a GET even when a body is given Deprecated User Agent setter removed Allow cache key basis overwrite (John Crepezzi, #147) FFI integration (Daniel Cavanagh, #151) Refactor upload code (Marnen Laibow-Koser, #152) Fix travis-ci build (Ezekiel Templin, #160)","title":"0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#033","text":"Make sure to call the Easy::failure callback on all non-success http response codes, even invalid ones. [balexis] Use bytesize instead of length to determine Content-Length [dlamacchia] Added SSL version option to Easy/Request [michelbarbosa/dbalatero]","title":"0.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#032","text":"Fix array params to be consistent with HTTP spec [gridaphobe] traversal_to_params_hash should use the escape option [itsmeduncan] Fix > 1024 open file descriptors [mschulkind] Fixed a bug with internally queued requests being dropped [mschulkind] Use gemspec in bundler to avoid duplication [mschulkind] Run internally queued requests in FIFO order [mschulkind] Moved Typhoeus::VERSION to a separate file, to fix rake build_native [mschulkind] Fixed problems related to put requests with empty bodies [skaes, GH-84] Added CURLOPT_INTERFACE option via Request#interface=. [spiegela] Added Tempfile support to Form#process! [richievos] Hydra won't forget to accept gzip/deflate encoding [codesnik] Accept and convert strings to integers in Typhoeus::Request#initialize for timeout/cache_timeout/connect_timeout values when using ruby 1.9.x. [djnawara] Added interface for registering stub finders [myronmarston] Fixed header stubbing [myronmarston] Added PKCS12 support [jodell] Make a request with handlers marshallable [bernerdschaefer] Upgraded to RSpec 2 [bernerdschaefer] Fix HTTP status edge-case [balexis] Expose primary_ip to easy object [balexis]","title":"0.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#024","text":"Fix form POSTs to only use multipart for file uploads, otherwise use application/x-www-form-urlencoded [dbalatero]","title":"0.2.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#023","text":"Code duplication in Typhoeus::Form led to nested URL param errors on POST only. Fixed [dbalatero]","title":"0.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#022","text":"Fixed a problem with nested URL params encoding incorrectly [dbalatero]","title":"0.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#021","text":"Added extended proxy support [Zapotek, GH-46] eliminated compile time warnings by using proper type declarations [skaes, GH-54] fixed broken calls to rb_raise [skaes, GH-54] prevent leaking of curl easy handles when exceptions are raised (either from typhoeus itself or user callbacks) [skaes, GH-54] fixed Easy#timed_out? using curl return codes [skaes, GH-54] provide curl return codes and corresponding curl error messages on classes Easy and Request [skaes, GH-54] allow VCR to whitelist hosts in Typhoeus stubbing/mocking [myronmarston, GH-57] added timed_out? documentation, method to Response [dbalatero, GH-34] added abort to Hydra to prematurely stop a hydra.run [Zapotek] added file upload support for POST requests [jtarchie, GH-59]","title":"0.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#020","text":"Fix warning in Request#headers from attr_accessor Params with array values were not parsing into the format that rack expects [GH-39, smartocci] Removed Rack as a dependency [GH-45] Added integration hooks for VCR!","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#0131","text":"Fixed bug in setting compression encoding [morhekil] Exposed authentication control methods through Request interface [morhekil]","title":"0.1.31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#0130","text":"Exposed CURLOPT_CONNECTTIMEOUT_MS to Requests [balexis]","title":"0.1.30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#0129","text":"Fixed a memory corruption with using CURLOPT_POSTFIELDS [gravis, 32531d0821aecc4]","title":"0.1.29"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#0128","text":"Added SSL cert options for Typhoeus::Easy [GH-25, gravis] Ported SSL cert options to Typhoeus::Request interface [gravis] Added support for any HTTP method (purge for Varnish) [ryana]","title":"0.1.28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CHANGELOG/#0127","text":"Added rack as dependency, added dev dependencies to Rakefile [GH-21]","title":"0.1.27"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/CONTRIBUTING/","text":"We love pull requests. Here's a quick guide: Fork the repo. Run the tests. We only take pull requests with passing tests, and it's great to know that you have a clean slate: bundle && bundle exec rake Add a test for your change. Only refactoring and documentation changes require no new tests. If you are adding functionality or fixing a bug, we need a test! Make the test pass. Push to your fork and submit a pull request. And in case we didn't emphasize it enough: we love tests!","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/","text":"Upgrade guide 0.5 Options Fix the option names, because some were renamed. The errors should point you in the right direction: Typhoeus.get(\"www.example.com\", follow_location: true) # Ethon::Errors::InvalidOption: The option: follow_location is invalid. # Please try followlocation instead of follow_location. # ... [Backtrace] Typhoeus.get(\"www.example.com\", followlocation: true).code #=> 200 Headers Response#headers returns a hash now and replaces Response#headers_hash , use Response#response_headers for the raw string: Typhoeus.get(\"www.example.com\", followlocation: true).headers #=> { # \"date\"=>\"Tue, 06 Nov 2012 09:07:27 GMT\", # \"server\"=>\"Apache/2.2.3 (CentOS)\", # \"last-modified\"=>\"Wed, 09 Feb 2011 17:13:15 GMT\", # \"vary\"=>\"Accept-Encoding\", # \"connection\"=>\"close\", # \"content-type\"=>\"text/html; charset=UTF-8\" # } Typhoeus.get(\"www.example.com\", followlocation: true).response_headers #=> \"HTTP/1.0 302 Found\\r\\nLocation: http://www.iana.org/domains/example/ [...]\" Params vs body Make sure every request sends proper params and body (especially POST/PUT). :params becomes url parameter and :body request body. Before params for POST was smashed into the body. Configuration Create a global configuration in case you want to turn on verbose, memoize or block_connection: Typhoeus.configure do |config| config.verbose = true config.memoize = true end Docs When in doubt, read the docs or the code .","title":"Upgrade guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#upgrade-guide","text":"","title":"Upgrade guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#05","text":"","title":"0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#options","text":"Fix the option names, because some were renamed. The errors should point you in the right direction: Typhoeus.get(\"www.example.com\", follow_location: true) # Ethon::Errors::InvalidOption: The option: follow_location is invalid. # Please try followlocation instead of follow_location. # ... [Backtrace] Typhoeus.get(\"www.example.com\", followlocation: true).code #=> 200","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#headers","text":"Response#headers returns a hash now and replaces Response#headers_hash , use Response#response_headers for the raw string: Typhoeus.get(\"www.example.com\", followlocation: true).headers #=> { # \"date\"=>\"Tue, 06 Nov 2012 09:07:27 GMT\", # \"server\"=>\"Apache/2.2.3 (CentOS)\", # \"last-modified\"=>\"Wed, 09 Feb 2011 17:13:15 GMT\", # \"vary\"=>\"Accept-Encoding\", # \"connection\"=>\"close\", # \"content-type\"=>\"text/html; charset=UTF-8\" # } Typhoeus.get(\"www.example.com\", followlocation: true).response_headers #=> \"HTTP/1.0 302 Found\\r\\nLocation: http://www.iana.org/domains/example/ [...]\"","title":"Headers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#params-vs-body","text":"Make sure every request sends proper params and body (especially POST/PUT). :params becomes url parameter and :body request body. Before params for POST was smashed into the body.","title":"Params vs body"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#configuration","text":"Create a global configuration in case you want to turn on verbose, memoize or block_connection: Typhoeus.configure do |config| config.verbose = true config.memoize = true end","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-0.8.0/UPGRADE/#docs","text":"When in doubt, read the docs or the code .","title":"Docs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/","text":"Typhoeus Like a modern code version of the mythical beast with 100 serpent heads, Typhoeus runs HTTP requests in parallel while cleanly encapsulating handling logic. Example A single request: Typhoeus.get(\"www.example.com\", followlocation: true) Parallel requests: hydra = Typhoeus::Hydra.new 10.times.map{ hydra.queue(Typhoeus::Request.new(\"www.example.com\", followlocation: true)) } hydra.run Installation Add the following line to your Gemfile: gem \"typhoeus\" Then run bundle install Or install it yourself as: gem install typhoeus Project Tracking Documentation (GitHub master) Mailing list Usage Introduction The primary interface for Typhoeus is comprised of three classes: Request, Response, and Hydra. Request represents an HTTP request object, response represents an HTTP response, and Hydra manages making parallel HTTP connections. request = Typhoeus::Request.new( \"www.example.com\", method: :post, body: \"this is a request body\", params: { field1: \"a field\" }, headers: { Accept: \"text/html\" } ) We can see from this that the first argument is the url. The second is a set of options. The options are all optional. The default for :method is :get . When you want to send URL parameters, you can use :params hash to do so. Please note that in case of you should send a request via x-www-form-urlencoded parameters, you need to use :body hash instead. params are for URL parameters and :body is for the request body. Sending requests through the proxy Add a proxy url to the list of options: options = {proxy: 'http://myproxy.org'} req = Typhoeus::Request.new(url, options) If your proxy requires authentication, add it with proxyuserpwd option key: options = {proxy: 'http://proxyurl.com', proxyuserpwd: 'user:password'} req = Typhoeus::Request.new(url, options) Note that proxyuserpwd is a colon-separated username and password, in the vein of basic auth userpwd option. You can run the query either on its own or through the hydra: request.run #=> <Typhoeus::Response ... > hydra = Typhoeus::Hydra.hydra hydra.queue(request) hydra.run The response object will be set after the request is run. response = request.response response.code response.total_time response.headers response.body Making Quick Requests Typhoeus has some convenience methods for performing single HTTP requests. The arguments are the same as those you pass into the request constructor. Typhoeus.get(\"www.example.com\") Typhoeus.head(\"www.example.com\") Typhoeus.put(\"www.example.com/posts/1\", body: \"whoo, a body\") Typhoeus.patch(\"www.example.com/posts/1\", body: \"a new body\") Typhoeus.post(\"www.example.com/posts\", body: { title: \"test post\", content: \"this is my test\"}) Typhoeus.delete(\"www.example.com/posts/1\") Typhoeus.options(\"www.example.com\") Sending params in the body with PUT When using POST the content-type is set automatically to 'application/x-www-form-urlencoded'. That's not the case for any other method like PUT, PATCH, HEAD and so on, irrespective of whether you are using body or not. To get the same result as POST, i.e. a hash in the body coming through as params in the receiver, you need to set the content-type as shown below: Typhoeus.put(\"www.example.com/posts/1\", headers: {'Content-Type'=> \"application/x-www-form-urlencoded\"}, body: {title:\"test post updated title\", content: \"this is my updated content\"} ) Handling HTTP errors You can query the response object to figure out if you had a successful request or not. Here\u2019s some example code that you might use to handle errors. The callbacks are executed right after the request is finished, make sure to define them before running the request. request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| if response.success? # hell yeah elsif response.timed_out? # aw hell no log(\"got a time out\") elsif response.code == 0 # Could not get an http response, something's wrong. log(response.return_message) else # Received a non-successful http response. log(\"HTTP request failed: \" + response.code.to_s) end end request.run This also works with serial (blocking) requests in the same fashion. Both serial and parallel requests return a Response object. Handling file uploads A File object can be passed as a param for a POST request to handle uploading files to the server. Typhoeus will upload the file as the original file name and use Mime::Types to set the content type. Typhoeus.post( \"http://localhost:3000/posts\", body: { title: \"test post\", content: \"this is my test\", file: File.open(\"thesis.txt\",\"r\") } ) Streaming the response body Typhoeus can stream responses. When you're expecting a large response, set the on_body callback on a request. Typhoeus will yield to the callback with chunks of the response, as they're read. When you set an on_body callback, Typhoeus will not store the complete response. downloaded_file = File.open 'huge.iso', 'wb' request = Typhoeus::Request.new(\"www.example.com/huge.iso\") request.on_headers do |response| if response.code != 200 raise \"Request failed\" end end request.on_body do |chunk| downloaded_file.write(chunk) end request.on_complete do |response| downloaded_file.close # Note that response.body is \"\" end request.run If you need to interrupt the stream halfway, you can return the :abort symbol from the on_body block, example: request.on_body do |chunk| buffer << chunk :abort if buffer.size > 1024 * 1024 end This will properly stop the stream internally and avoid any memory leak which may happen if you interrupt with something like a return , throw or raise . Making Parallel Requests Generally, you should be running requests through hydra. Here is how that looks: hydra = Typhoeus::Hydra.hydra first_request = Typhoeus::Request.new(\"http://example.com/posts/1\") first_request.on_complete do |response| third_url = response.body third_request = Typhoeus::Request.new(third_url) hydra.queue third_request end second_request = Typhoeus::Request.new(\"http://example.com/posts/2\") hydra.queue first_request hydra.queue second_request hydra.run # this is a blocking call that returns once all requests are complete The execution of that code goes something like this. The first and second requests are built and queued. When hydra is run the first and second requests run in parallel. When the first request completes, the third request is then built and queued, in this example based on the result of the first request. The moment it is queued Hydra starts executing it. Meanwhile the second request would continue to run (or it could have completed before the first). Once the third request is done, hydra.run returns. How to get an array of response bodies back after executing a queue: hydra = Typhoeus::Hydra.new requests = 10.times.map { request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) hydra.queue(request) request } hydra.run responses = requests.map { |request| request.response.body } hydra.run is a blocking request. You can also use the on_complete callback to handle each request as it completes: hydra = Typhoeus::Hydra.new 10.times do request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| #do_something_with response end hydra.queue(request) end hydra.run Making Parallel Requests with Faraday + Typhoeus require 'faraday' conn = Faraday.new(:url => 'http://httppage.com') do |builder| builder.request :url_encoded builder.response :logger builder.adapter :typhoeus end conn.in_parallel do response1 = conn.get('/first') response2 = conn.get('/second') # these will return nil here since the # requests have not been completed response1.body response2.body end # after it has been completed the response information is fully available # response1.status, etc response1.body response2.body Specifying Max Concurrency Hydra will also handle how many requests you can make in parallel. Things will get flakey if you try to make too many requests at the same time. The built in limit is 200. When more requests than that are queued up, hydra will save them for later and start the requests as others are finished. You can raise or lower the concurrency limit through the Hydra constructor. Typhoeus::Hydra.new(max_concurrency: 20) Memoization Hydra memoizes requests within a single run call. You have to enable memoization. This will result in a single request being issued. However, the on_complete handlers of both will be called. Typhoeus::Config.memoize = true hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run This will result in two requests. Typhoeus::Config.memoize = false hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run Caching Typhoeus includes built in support for caching. In the following example, if there is a cache hit, the cached object is passed to the on_complete handler of the request object. class Cache def initialize @memory = {} end def get(request) @memory[request] end def set(request, response) @memory[request] = response end end Typhoeus::Config.cache = Cache.new Typhoeus.get(\"www.example.com\").cached? #=> false Typhoeus.get(\"www.example.com\").cached? #=> true For use with Dalli : dalli = Dalli::Client.new(...) Typhoeus::Config.cache = Typhoeus::Cache::Dalli.new(dalli) For use with Rails: Typhoeus::Config.cache = Typhoeus::Cache::Rails.new For use with Redis : redis = Redis.new(...) Typhoeus::Config.cache = Typhoeus::Cache::Redis.new(redis) All three of these adapters take an optional keyword argument default_ttl , which sets a default TTL on cached responses (in seconds), for requests which do not have a cache TTL set. You may also selectively choose not to cache by setting cache to false on a request or to use a different adapter. cache = Cache.new Typhoeus.get(\"www.example.com\", cache: cache) Direct Stubbing Hydra allows you to stub out specific urls and patterns to avoid hitting remote servers while testing. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub('www.example.com').and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true The queued request will hit the stub. You can also specify a regex to match urls. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub(/example/).and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true You may also specify an array for the stub to return sequentially. Typhoeus.stub('www.example.com').and_return([response1, response2]) Typhoeus.get('www.example.com') == response1 #=> true Typhoeus.get('www.example.com') == response2 #=> true When testing make sure to clear your expectations or the stubs will persist between tests. The following can be included in your spec_helper.rb file to do this automatically. RSpec.configure do |config| config.before :each do Typhoeus::Expectation.clear end end Timeouts No exceptions are raised on HTTP timeouts. You can check whether a request timed out with the following method: Typhoeus.get(\"www.example.com\", timeout: 1).timed_out? Timed out responses also have their success? method return false. There are two different timeouts available: timeout and connecttimeout . timeout is the time limit for the entire request in seconds. connecttimeout is the time limit for just the connection phase, again in seconds. There are two additional more fine grained options timeout_ms and connecttimeout_ms . These options offer millisecond precision but are not always available (for instance on linux if nosignal is not set to true). When you pass a floating point timeout (or connecttimeout ) Typhoeus will set timeout_ms for you if it has not been defined. The actual timeout values passed to curl will always be rounded up. DNS timeouts of less than one second are not supported unless curl is compiled with an asynchronous resolver. The default timeout is 0 (zero) which means curl never times out during transfer. The default connecttimeout is 300 seconds. A connecttimeout of 0 will also result in the default connecttimeout of 300 seconds. Following Redirections Use followlocation: true , eg: Typhoeus.get(\"www.example.com\", followlocation: true) Basic Authentication Typhoeus::Request.get(\"www.example.com\", userpwd: \"user:password\") Compression Typhoeus.get(\"www.example.com\", accept_encoding: \"gzip\") The above has a different behavior than setting the header directly in the header hash, eg: Typhoeus.get(\"www.example.com\", headers: {\"Accept-Encoding\" => \"gzip\"}) Setting the header hash directly will not include the --compressed flag in the libcurl command and therefore libcurl will not decompress the response. If you want the --compressed flag to be added automatically, set :accept_encoding Typhoeus option. Cookies Typhoeus::Request.get(\"www.example.com\", cookiefile: \"/path/to/file\", cookiejar: \"/path/to/file\") Here, cookiefile is a file to read cookies from, and cookiejar is a file to write received cookies to. If you just want cookies enabled, you need to pass the same filename for both options. Other CURL options Are available and documented here SSL SSL comes built in to libcurl so it\u2019s in Typhoeus as well. If you pass in a url with \"https\" it should just work assuming that you have your cert bundle in order and the server is verifiable. You must also have libcurl built with SSL support enabled. You can check that by doing this: curl --version Now, even if you have libcurl built with OpenSSL you may still have a messed up cert bundle or if you\u2019re hitting a non-verifiable SSL server then you\u2019ll have to disable peer verification to make SSL work. Like this: Typhoeus.get(\"https://www.example.com\", ssl_verifypeer: false) If you are getting \"SSL: certificate subject name does not match target host name\" from curl (ex:- you are trying to access to b.c.host.com when the certificate subject is *.host.com). You can disable host verification. Like this: # host checking enabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 2) # host checking disabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 0) Verbose debug output It\u2019s sometimes useful to see verbose output from curl. You can enable it on a per-request basis: Typhoeus.get(\"http://example.com\", verbose: true) or globally: Typhoeus::Config.verbose = true Just remember that libcurl prints it\u2019s debug output to the console (to STDERR), so you\u2019ll need to run your scripts from the console to see it. Default User Agent Header In many cases, all HTTP requests made by an application require the same User-Agent header set. Instead of supplying it on a per-request basis by supplying a custom header, it is possible to override it for all requests using: Typhoeus::Config.user_agent = \"custom user agent\" Running the specs Running the specs should be as easy as: bundle install bundle exec rake Semantic Versioning This project conforms to semver . LICENSE (The MIT License) Copyright \u00a9 2009-2010 Paul Dix Copyright \u00a9 2011-2012 David Balatero Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Typhoeus [![Build Status](https://img.shields.io/travis/typhoeus/typhoeus/master.svg)](https://travis-ci.org/typhoeus/typhoeus) [![Code Climate](https://img.shields.io/codeclimate/maintainability/typhoeus/typhoeus.svg)](https://codeclimate.com/github/typhoeus/typhoeus) [![Gem Version](https://img.shields.io/gem/v/typhoeus.svg)](https://rubygems.org/gems/typhoeus)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#typhoeus","text":"Like a modern code version of the mythical beast with 100 serpent heads, Typhoeus runs HTTP requests in parallel while cleanly encapsulating handling logic.","title":"Typhoeus"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#example","text":"A single request: Typhoeus.get(\"www.example.com\", followlocation: true) Parallel requests: hydra = Typhoeus::Hydra.new 10.times.map{ hydra.queue(Typhoeus::Request.new(\"www.example.com\", followlocation: true)) } hydra.run","title":"Example"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#installation","text":"Add the following line to your Gemfile: gem \"typhoeus\" Then run bundle install Or install it yourself as: gem install typhoeus","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#project-tracking","text":"Documentation (GitHub master) Mailing list","title":"Project Tracking"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#introduction","text":"The primary interface for Typhoeus is comprised of three classes: Request, Response, and Hydra. Request represents an HTTP request object, response represents an HTTP response, and Hydra manages making parallel HTTP connections. request = Typhoeus::Request.new( \"www.example.com\", method: :post, body: \"this is a request body\", params: { field1: \"a field\" }, headers: { Accept: \"text/html\" } ) We can see from this that the first argument is the url. The second is a set of options. The options are all optional. The default for :method is :get . When you want to send URL parameters, you can use :params hash to do so. Please note that in case of you should send a request via x-www-form-urlencoded parameters, you need to use :body hash instead. params are for URL parameters and :body is for the request body.","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#sending-requests-through-the-proxy","text":"Add a proxy url to the list of options: options = {proxy: 'http://myproxy.org'} req = Typhoeus::Request.new(url, options) If your proxy requires authentication, add it with proxyuserpwd option key: options = {proxy: 'http://proxyurl.com', proxyuserpwd: 'user:password'} req = Typhoeus::Request.new(url, options) Note that proxyuserpwd is a colon-separated username and password, in the vein of basic auth userpwd option. You can run the query either on its own or through the hydra: request.run #=> <Typhoeus::Response ... > hydra = Typhoeus::Hydra.hydra hydra.queue(request) hydra.run The response object will be set after the request is run. response = request.response response.code response.total_time response.headers response.body","title":"Sending requests through the proxy"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#making-quick-requests","text":"Typhoeus has some convenience methods for performing single HTTP requests. The arguments are the same as those you pass into the request constructor. Typhoeus.get(\"www.example.com\") Typhoeus.head(\"www.example.com\") Typhoeus.put(\"www.example.com/posts/1\", body: \"whoo, a body\") Typhoeus.patch(\"www.example.com/posts/1\", body: \"a new body\") Typhoeus.post(\"www.example.com/posts\", body: { title: \"test post\", content: \"this is my test\"}) Typhoeus.delete(\"www.example.com/posts/1\") Typhoeus.options(\"www.example.com\")","title":"Making Quick Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#sending-params-in-the-body-with-put","text":"When using POST the content-type is set automatically to 'application/x-www-form-urlencoded'. That's not the case for any other method like PUT, PATCH, HEAD and so on, irrespective of whether you are using body or not. To get the same result as POST, i.e. a hash in the body coming through as params in the receiver, you need to set the content-type as shown below: Typhoeus.put(\"www.example.com/posts/1\", headers: {'Content-Type'=> \"application/x-www-form-urlencoded\"}, body: {title:\"test post updated title\", content: \"this is my updated content\"} )","title":"Sending params in the body with PUT"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#handling-http-errors","text":"You can query the response object to figure out if you had a successful request or not. Here\u2019s some example code that you might use to handle errors. The callbacks are executed right after the request is finished, make sure to define them before running the request. request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| if response.success? # hell yeah elsif response.timed_out? # aw hell no log(\"got a time out\") elsif response.code == 0 # Could not get an http response, something's wrong. log(response.return_message) else # Received a non-successful http response. log(\"HTTP request failed: \" + response.code.to_s) end end request.run This also works with serial (blocking) requests in the same fashion. Both serial and parallel requests return a Response object.","title":"Handling HTTP errors"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#handling-file-uploads","text":"A File object can be passed as a param for a POST request to handle uploading files to the server. Typhoeus will upload the file as the original file name and use Mime::Types to set the content type. Typhoeus.post( \"http://localhost:3000/posts\", body: { title: \"test post\", content: \"this is my test\", file: File.open(\"thesis.txt\",\"r\") } )","title":"Handling file uploads"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#streaming-the-response-body","text":"Typhoeus can stream responses. When you're expecting a large response, set the on_body callback on a request. Typhoeus will yield to the callback with chunks of the response, as they're read. When you set an on_body callback, Typhoeus will not store the complete response. downloaded_file = File.open 'huge.iso', 'wb' request = Typhoeus::Request.new(\"www.example.com/huge.iso\") request.on_headers do |response| if response.code != 200 raise \"Request failed\" end end request.on_body do |chunk| downloaded_file.write(chunk) end request.on_complete do |response| downloaded_file.close # Note that response.body is \"\" end request.run If you need to interrupt the stream halfway, you can return the :abort symbol from the on_body block, example: request.on_body do |chunk| buffer << chunk :abort if buffer.size > 1024 * 1024 end This will properly stop the stream internally and avoid any memory leak which may happen if you interrupt with something like a return , throw or raise .","title":"Streaming the response body"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#making-parallel-requests","text":"Generally, you should be running requests through hydra. Here is how that looks: hydra = Typhoeus::Hydra.hydra first_request = Typhoeus::Request.new(\"http://example.com/posts/1\") first_request.on_complete do |response| third_url = response.body third_request = Typhoeus::Request.new(third_url) hydra.queue third_request end second_request = Typhoeus::Request.new(\"http://example.com/posts/2\") hydra.queue first_request hydra.queue second_request hydra.run # this is a blocking call that returns once all requests are complete The execution of that code goes something like this. The first and second requests are built and queued. When hydra is run the first and second requests run in parallel. When the first request completes, the third request is then built and queued, in this example based on the result of the first request. The moment it is queued Hydra starts executing it. Meanwhile the second request would continue to run (or it could have completed before the first). Once the third request is done, hydra.run returns. How to get an array of response bodies back after executing a queue: hydra = Typhoeus::Hydra.new requests = 10.times.map { request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) hydra.queue(request) request } hydra.run responses = requests.map { |request| request.response.body } hydra.run is a blocking request. You can also use the on_complete callback to handle each request as it completes: hydra = Typhoeus::Hydra.new 10.times do request = Typhoeus::Request.new(\"www.example.com\", followlocation: true) request.on_complete do |response| #do_something_with response end hydra.queue(request) end hydra.run","title":"Making Parallel Requests"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#making-parallel-requests-with-faraday-typhoeus","text":"require 'faraday' conn = Faraday.new(:url => 'http://httppage.com') do |builder| builder.request :url_encoded builder.response :logger builder.adapter :typhoeus end conn.in_parallel do response1 = conn.get('/first') response2 = conn.get('/second') # these will return nil here since the # requests have not been completed response1.body response2.body end # after it has been completed the response information is fully available # response1.status, etc response1.body response2.body","title":"Making Parallel Requests with Faraday + Typhoeus"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#specifying-max-concurrency","text":"Hydra will also handle how many requests you can make in parallel. Things will get flakey if you try to make too many requests at the same time. The built in limit is 200. When more requests than that are queued up, hydra will save them for later and start the requests as others are finished. You can raise or lower the concurrency limit through the Hydra constructor. Typhoeus::Hydra.new(max_concurrency: 20)","title":"Specifying Max Concurrency"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#memoization","text":"Hydra memoizes requests within a single run call. You have to enable memoization. This will result in a single request being issued. However, the on_complete handlers of both will be called. Typhoeus::Config.memoize = true hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run This will result in two requests. Typhoeus::Config.memoize = false hydra = Typhoeus::Hydra.new(max_concurrency: 1) 2.times do hydra.queue Typhoeus::Request.new(\"www.example.com\") end hydra.run","title":"Memoization"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#caching","text":"Typhoeus includes built in support for caching. In the following example, if there is a cache hit, the cached object is passed to the on_complete handler of the request object. class Cache def initialize @memory = {} end def get(request) @memory[request] end def set(request, response) @memory[request] = response end end Typhoeus::Config.cache = Cache.new Typhoeus.get(\"www.example.com\").cached? #=> false Typhoeus.get(\"www.example.com\").cached? #=> true For use with Dalli : dalli = Dalli::Client.new(...) Typhoeus::Config.cache = Typhoeus::Cache::Dalli.new(dalli) For use with Rails: Typhoeus::Config.cache = Typhoeus::Cache::Rails.new For use with Redis : redis = Redis.new(...) Typhoeus::Config.cache = Typhoeus::Cache::Redis.new(redis) All three of these adapters take an optional keyword argument default_ttl , which sets a default TTL on cached responses (in seconds), for requests which do not have a cache TTL set. You may also selectively choose not to cache by setting cache to false on a request or to use a different adapter. cache = Cache.new Typhoeus.get(\"www.example.com\", cache: cache)","title":"Caching"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#direct-stubbing","text":"Hydra allows you to stub out specific urls and patterns to avoid hitting remote servers while testing. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub('www.example.com').and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true The queued request will hit the stub. You can also specify a regex to match urls. response = Typhoeus::Response.new(code: 200, body: \"{'name' : 'paul'}\") Typhoeus.stub(/example/).and_return(response) Typhoeus.get(\"www.example.com\") == response #=> true You may also specify an array for the stub to return sequentially. Typhoeus.stub('www.example.com').and_return([response1, response2]) Typhoeus.get('www.example.com') == response1 #=> true Typhoeus.get('www.example.com') == response2 #=> true When testing make sure to clear your expectations or the stubs will persist between tests. The following can be included in your spec_helper.rb file to do this automatically. RSpec.configure do |config| config.before :each do Typhoeus::Expectation.clear end end","title":"Direct Stubbing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#timeouts","text":"No exceptions are raised on HTTP timeouts. You can check whether a request timed out with the following method: Typhoeus.get(\"www.example.com\", timeout: 1).timed_out? Timed out responses also have their success? method return false. There are two different timeouts available: timeout and connecttimeout . timeout is the time limit for the entire request in seconds. connecttimeout is the time limit for just the connection phase, again in seconds. There are two additional more fine grained options timeout_ms and connecttimeout_ms . These options offer millisecond precision but are not always available (for instance on linux if nosignal is not set to true). When you pass a floating point timeout (or connecttimeout ) Typhoeus will set timeout_ms for you if it has not been defined. The actual timeout values passed to curl will always be rounded up. DNS timeouts of less than one second are not supported unless curl is compiled with an asynchronous resolver. The default timeout is 0 (zero) which means curl never times out during transfer. The default connecttimeout is 300 seconds. A connecttimeout of 0 will also result in the default connecttimeout of 300 seconds.","title":"Timeouts"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#following-redirections","text":"Use followlocation: true , eg: Typhoeus.get(\"www.example.com\", followlocation: true)","title":"Following Redirections"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#basic-authentication","text":"Typhoeus::Request.get(\"www.example.com\", userpwd: \"user:password\")","title":"Basic Authentication"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#compression","text":"Typhoeus.get(\"www.example.com\", accept_encoding: \"gzip\") The above has a different behavior than setting the header directly in the header hash, eg: Typhoeus.get(\"www.example.com\", headers: {\"Accept-Encoding\" => \"gzip\"}) Setting the header hash directly will not include the --compressed flag in the libcurl command and therefore libcurl will not decompress the response. If you want the --compressed flag to be added automatically, set :accept_encoding Typhoeus option.","title":"Compression"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#cookies","text":"Typhoeus::Request.get(\"www.example.com\", cookiefile: \"/path/to/file\", cookiejar: \"/path/to/file\") Here, cookiefile is a file to read cookies from, and cookiejar is a file to write received cookies to. If you just want cookies enabled, you need to pass the same filename for both options.","title":"Cookies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#other-curl-options","text":"Are available and documented here","title":"Other CURL options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#ssl","text":"SSL comes built in to libcurl so it\u2019s in Typhoeus as well. If you pass in a url with \"https\" it should just work assuming that you have your cert bundle in order and the server is verifiable. You must also have libcurl built with SSL support enabled. You can check that by doing this: curl --version Now, even if you have libcurl built with OpenSSL you may still have a messed up cert bundle or if you\u2019re hitting a non-verifiable SSL server then you\u2019ll have to disable peer verification to make SSL work. Like this: Typhoeus.get(\"https://www.example.com\", ssl_verifypeer: false) If you are getting \"SSL: certificate subject name does not match target host name\" from curl (ex:- you are trying to access to b.c.host.com when the certificate subject is *.host.com). You can disable host verification. Like this: # host checking enabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 2) # host checking disabled Typhoeus.get(\"https://www.example.com\", ssl_verifyhost: 0)","title":"SSL"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#verbose-debug-output","text":"It\u2019s sometimes useful to see verbose output from curl. You can enable it on a per-request basis: Typhoeus.get(\"http://example.com\", verbose: true) or globally: Typhoeus::Config.verbose = true Just remember that libcurl prints it\u2019s debug output to the console (to STDERR), so you\u2019ll need to run your scripts from the console to see it.","title":"Verbose debug output"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#default-user-agent-header","text":"In many cases, all HTTP requests made by an application require the same User-Agent header set. Instead of supplying it on a per-request basis by supplying a custom header, it is possible to override it for all requests using: Typhoeus::Config.user_agent = \"custom user agent\"","title":"Default User Agent Header"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#running-the-specs","text":"Running the specs should be as easy as: bundle install bundle exec rake","title":"Running the specs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#semantic-versioning","text":"This project conforms to semver .","title":"Semantic Versioning"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/#license","text":"(The MIT License) Copyright \u00a9 2009-2010 Paul Dix Copyright \u00a9 2011-2012 David Balatero Copyright \u00a9 2012-2016 Hans Hasselberg Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"LICENSE"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/","text":"Changelog Master Full Changelog 1.4.0 Full Changelog 1 feature Faraday adapter exceptions namespace compatibility with Faraday v1 ( @iMacTia in #616 ) 3 Others Yard warning fixes ( @olleolleolle in #622 ) Add more Ruby versions in CI matrix ( @olleolleolle in #623 ) Use of argument passed in function instead of attr_reader ( @v-kolesnikov in #625 ) 1.1.2 Full Changelog 1.1.1 Full Changelog 1.1.0 Full Changelog Unless specified Expect header is set to be empty to avoid 100 continue to be set when using PUT Add global config option Typhoeus::Config.proxy 1.0.2 Full Changelog 1.0.1 Full Changelog 1.0.0 Full Changelog 0.8.0 Full Changelog EasyFactory : Reduced object allocations and method calls during deprecated option handling and option sanitization. ( Tasos Laskos ) Response ( Tasos Laskos ) Header #process_pair : Halved #set_value calls. #set_value : Minimized Hash accesses. #parse : Use String#start_with? instead of Regexp match. #process_line : Optimized key/value sanitization. Status #timed_out? : Only return true when #return_code is operation_timedout . 0.7.3 Full Changelog Add on_body callbacks individually to allow Ethon to recognize the return code 0.7.2 Full Changelog Allow arrays to be passed to Expectation#and_return ( JP Moral ) Added getter for redirect_time value. ( Adrien Jarthon ) 0.7.1 Full Changelog Bugfixes: Forking may cause libcurl sockets to be shared with child processes, causing HTTP requests to be interleaved ( Rolf Timmermans , #436 ) 0.7.0 Full Changelog Bugfixes: Call on_headers and on_body when using stubbed responses. 0.7.0.pre1 Full Changelog Enhancements: Improving timeout behavior and documentation. no_signal is now set per default! ( Jonas Wagner , #398 ) 0.6.8 Full Changelog Bugfixes: Fix Faraday 0.9 compatibility. ( Gleb Mazovetskiy , #357 ) Fix Request#hash for different key orders. ( Matthew Schulkind , #344 ) Enhancements: Use an updated Ethon version. Note that from now on the mime-types is no longer a Ethon dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Use SVG for status badges in README. ( Sean Linsley , #353 ) Missing quotes in README example code. ( Jason R. Clark , #351 ) Specs for Faraday adapter. ( michaelavila , #348 ) Clarify wording in README. ( Sean Linsley , #347 ) Make caching easier for non-memory caches. ( Matthew Schulkind , #345 ) Spec refactoring. ( Matthew Schulkind , #343 ) 0.6.7 Full Changelog Enhancements: Add response streaming. ( #339 ) 0.6.6 Full Changelog 0.6.5 Full Changelog 0.6.4 Full Changelog The changelog entries are coming soon! 0.6.3 Full Changelog Enhancements: Cache hydra per thread. Various documentation improvements. ( craiglittle ) Add support for lazy construction of responses from stubbed requests. ( ryankindermann , #275 ) 0.6.2 Full Changelog Enhancements: Reintroduce a global cache. Request#handled_response falls back to the original response. ( turnerking , #272 ) When Errors::NoStub is raised the url is displayed. ( dschneider , #276 ) Make Request#hash consistent. Add .rvmrc and ctags to .gitignore . ( ryankindermann , #274 ) 0.6.1 Full Changelog Enhancements: Updated ethon version which allows to set multiple protocols. 0.6.0 Full Changelog Enhancements: Request#url now also contains the url parameters. Use updated ethon version which provides access to protocols and redir_protocols in response to libcurl SASL buffer overflow vulnerability Bugfixes: Corrected ssl options for the faraday adapter. The before hook now correctly returns the response. ( Mattias Putman , #268 ) Benchmark is working again. 0.5.4 Full Changelog Enhancements: Make sure response_code is an integer. When setting an header through vcr or webmock it becomes a Typhoeus::Response::Header . Provide a Rack middleware to decode nested Typhoeus arrays properly. ( Dwayne Macgowan , #224 ) Handled response is available again. Rename parameter url to base_url . See discussion here: #250 . ( bkimble , #256 ) Provide O(1) header access. Work around ruby 1.8.7 limitations. ( Chris Johnson , #227 ) Provide symbol access. 0.5.3 Full Changelog Enhancements: When checking options in Expecation#matches? also consider Request#options. Bugfixes: Do not break backwards compatibility with case insensitive headers access. Make sure hydra behaves correct in case of before hooks. 0.5.2 Full Changelog Enhancements: Do not check the return_code in Response#success? when response is mocked. Check for memoization, stubbing, before hooks are delayed to Hydra#run. It was on Hydra#queue before and led to strange behavior because if the request was stubbed, it was wrapped up in queue already. There was no way to add callbacks after queue thatswhy. This is now different, since everything happens in run, just as you expect. 0.5.1 Full Changelog Enhancements: Downcase header keys for easier access ( #227 ) Using an updated Ethon version. 0.5.0 Full Changelog Major Changes: Ethon integration Params are url params and a body is always a body for every request type The options you can set might have a slightly other names, as Ethon sticks to libcurl names. See Easy.new for a description. Request parameter and body are properly encoded (only POST multiform body is not) No more header sanitizing. Before: :headers => { 'user_agent' => 'Custom' } was modified to :headers => { 'User-Agent' => 'Custom' } Typhoeus::Easy and Typhoeus::Multi are now Ethon::Easy and Ethon::Multi Request shortcuts: Typhoeus.get(\"www.google.de\") Global configuration: Typhoeus.configure do |config| config.verbose = true config.memoize = true end No more Response#headers_hash , instead Response#headers returning the last header and response#redirections returning the responses with headers generated through redirections Instead of defining the same callbacks on every request, you can define global callbacks: Typhoeus.on_complete { p \"yay\" } The stubbing interface changed slightly. You now have the same syntax as for requests: Typhoeus.stub(url, options).and_return(response) The following things were removed because they do not seemed to be used at all. Ping me if you disagree! Typhoeus::Filter Typhoeus::Remote Typhoeus::RemoteMethod Typhoeus::RemoteProxyObject build in cache interface Enhancements: Documentation ( Alex P , #188 ) Request#on_complete can hold multiple blocks. Request#eql? recognizes when header/params/body has a different order, but still same keys and values ( Alex P , #194 ) Bug Fixes: Zero bytes in strings are escaped for libcurl Add support for socks5 hostname proxy type ( eweathers , #183 ) Post body is encoded ( Rohan Deshpande , #143 ) Set default user agent ( Steven Shingler , #176 ) 0.4.2 A header hotfix 0.4.1 Fix verifypeer and verifyhost options Fix header sending 0.4.0 Make a GET even when a body is given Deprecated User Agent setter removed Allow cache key basis overwrite (John Crepezzi, #147) FFI integration (Daniel Cavanagh, #151) Refactor upload code (Marnen Laibow-Koser, #152) Fix travis-ci build (Ezekiel Templin, #160) 0.3.3 Make sure to call the Easy::failure callback on all non-success http response codes, even invalid ones. [balexis] Use bytesize instead of length to determine Content-Length [dlamacchia] Added SSL version option to Easy/Request [michelbarbosa/dbalatero] 0.3.2 Fix array params to be consistent with HTTP spec [gridaphobe] traversal_to_params_hash should use the escape option [itsmeduncan] Fix > 1024 open file descriptors [mschulkind] Fixed a bug with internally queued requests being dropped [mschulkind] Use gemspec in bundler to avoid duplication [mschulkind] Run internally queued requests in FIFO order [mschulkind] Moved Typhoeus::VERSION to a separate file, to fix rake build_native [mschulkind] Fixed problems related to put requests with empty bodies [skaes, GH-84] Added CURLOPT_INTERFACE option via Request#interface=. [spiegela] Added Tempfile support to Form#process! [richievos] Hydra won't forget to accept gzip/deflate encoding [codesnik] Accept and convert strings to integers in Typhoeus::Request#initialize for timeout/cache_timeout/connect_timeout values when using ruby 1.9.x. [djnawara] Added interface for registering stub finders [myronmarston] Fixed header stubbing [myronmarston] Added PKCS12 support [jodell] Make a request with handlers marshallable [bernerdschaefer] Upgraded to RSpec 2 [bernerdschaefer] Fix HTTP status edge-case [balexis] Expose primary_ip to easy object [balexis] 0.2.4 Fix form POSTs to only use multipart for file uploads, otherwise use application/x-www-form-urlencoded [dbalatero] 0.2.3 Code duplication in Typhoeus::Form led to nested URL param errors on POST only. Fixed [dbalatero] 0.2.2 Fixed a problem with nested URL params encoding incorrectly [dbalatero] 0.2.1 Added extended proxy support [Zapotek, GH-46] eliminated compile time warnings by using proper type declarations [skaes, GH-54] fixed broken calls to rb_raise [skaes, GH-54] prevent leaking of curl easy handles when exceptions are raised (either from typhoeus itself or user callbacks) [skaes, GH-54] fixed Easy#timed_out? using curl return codes [skaes, GH-54] provide curl return codes and corresponding curl error messages on classes Easy and Request [skaes, GH-54] allow VCR to whitelist hosts in Typhoeus stubbing/mocking [myronmarston, GH-57] added timed_out? documentation, method to Response [dbalatero, GH-34] added abort to Hydra to prematurely stop a hydra.run [Zapotek] added file upload support for POST requests [jtarchie, GH-59] 0.2.0 Fix warning in Request#headers from attr_accessor Params with array values were not parsing into the format that rack expects [GH-39, smartocci] Removed Rack as a dependency [GH-45] Added integration hooks for VCR! 0.1.31 Fixed bug in setting compression encoding [morhekil] Exposed authentication control methods through Request interface [morhekil] 0.1.30 Exposed CURLOPT_CONNECTTIMEOUT_MS to Requests [balexis] 0.1.29 Fixed a memory corruption with using CURLOPT_POSTFIELDS [gravis, 32531d0821aecc4] 0.1.28 Added SSL cert options for Typhoeus::Easy [GH-25, gravis] Ported SSL cert options to Typhoeus::Request interface [gravis] Added support for any HTTP method (purge for Varnish) [ryana] 0.1.27 Added rack as dependency, added dev dependencies to Rakefile [GH-21]","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#changelog","text":"","title":"Changelog"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#master","text":"Full Changelog","title":"Master"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#140","text":"Full Changelog","title":"1.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#1-feature","text":"Faraday adapter exceptions namespace compatibility with Faraday v1 ( @iMacTia in #616 )","title":"1 feature"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#3-others","text":"Yard warning fixes ( @olleolleolle in #622 ) Add more Ruby versions in CI matrix ( @olleolleolle in #623 ) Use of argument passed in function instead of attr_reader ( @v-kolesnikov in #625 )","title":"3 Others"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#112","text":"Full Changelog","title":"1.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#111","text":"Full Changelog","title":"1.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#110","text":"Full Changelog Unless specified Expect header is set to be empty to avoid 100 continue to be set when using PUT Add global config option Typhoeus::Config.proxy","title":"1.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#102","text":"Full Changelog","title":"1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#101","text":"Full Changelog","title":"1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#100","text":"Full Changelog","title":"1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#080","text":"Full Changelog EasyFactory : Reduced object allocations and method calls during deprecated option handling and option sanitization. ( Tasos Laskos ) Response ( Tasos Laskos ) Header #process_pair : Halved #set_value calls. #set_value : Minimized Hash accesses. #parse : Use String#start_with? instead of Regexp match. #process_line : Optimized key/value sanitization. Status #timed_out? : Only return true when #return_code is operation_timedout .","title":"0.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#073","text":"Full Changelog Add on_body callbacks individually to allow Ethon to recognize the return code","title":"0.7.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#072","text":"Full Changelog Allow arrays to be passed to Expectation#and_return ( JP Moral ) Added getter for redirect_time value. ( Adrien Jarthon )","title":"0.7.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#071","text":"Full Changelog Bugfixes: Forking may cause libcurl sockets to be shared with child processes, causing HTTP requests to be interleaved ( Rolf Timmermans , #436 )","title":"0.7.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#070","text":"Full Changelog Bugfixes: Call on_headers and on_body when using stubbed responses.","title":"0.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#070pre1","text":"Full Changelog Enhancements: Improving timeout behavior and documentation. no_signal is now set per default! ( Jonas Wagner , #398 )","title":"0.7.0.pre1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#068","text":"Full Changelog Bugfixes: Fix Faraday 0.9 compatibility. ( Gleb Mazovetskiy , #357 ) Fix Request#hash for different key orders. ( Matthew Schulkind , #344 ) Enhancements: Use an updated Ethon version. Note that from now on the mime-types is no longer a Ethon dependency. The gem will be still used if available to determine the mime type of a file which is uploaded. That means you have to have take care of the gem installation yourself. Use SVG for status badges in README. ( Sean Linsley , #353 ) Missing quotes in README example code. ( Jason R. Clark , #351 ) Specs for Faraday adapter. ( michaelavila , #348 ) Clarify wording in README. ( Sean Linsley , #347 ) Make caching easier for non-memory caches. ( Matthew Schulkind , #345 ) Spec refactoring. ( Matthew Schulkind , #343 )","title":"0.6.8"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#067","text":"Full Changelog Enhancements: Add response streaming. ( #339 )","title":"0.6.7"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#066","text":"Full Changelog","title":"0.6.6"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#065","text":"Full Changelog","title":"0.6.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#064","text":"Full Changelog The changelog entries are coming soon!","title":"0.6.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#063","text":"Full Changelog Enhancements: Cache hydra per thread. Various documentation improvements. ( craiglittle ) Add support for lazy construction of responses from stubbed requests. ( ryankindermann , #275 )","title":"0.6.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#062","text":"Full Changelog Enhancements: Reintroduce a global cache. Request#handled_response falls back to the original response. ( turnerking , #272 ) When Errors::NoStub is raised the url is displayed. ( dschneider , #276 ) Make Request#hash consistent. Add .rvmrc and ctags to .gitignore . ( ryankindermann , #274 )","title":"0.6.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#061","text":"Full Changelog Enhancements: Updated ethon version which allows to set multiple protocols.","title":"0.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#060","text":"Full Changelog Enhancements: Request#url now also contains the url parameters. Use updated ethon version which provides access to protocols and redir_protocols in response to libcurl SASL buffer overflow vulnerability Bugfixes: Corrected ssl options for the faraday adapter. The before hook now correctly returns the response. ( Mattias Putman , #268 ) Benchmark is working again.","title":"0.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#054","text":"Full Changelog Enhancements: Make sure response_code is an integer. When setting an header through vcr or webmock it becomes a Typhoeus::Response::Header . Provide a Rack middleware to decode nested Typhoeus arrays properly. ( Dwayne Macgowan , #224 ) Handled response is available again. Rename parameter url to base_url . See discussion here: #250 . ( bkimble , #256 ) Provide O(1) header access. Work around ruby 1.8.7 limitations. ( Chris Johnson , #227 ) Provide symbol access.","title":"0.5.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#053","text":"Full Changelog Enhancements: When checking options in Expecation#matches? also consider Request#options. Bugfixes: Do not break backwards compatibility with case insensitive headers access. Make sure hydra behaves correct in case of before hooks.","title":"0.5.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#052","text":"Full Changelog Enhancements: Do not check the return_code in Response#success? when response is mocked. Check for memoization, stubbing, before hooks are delayed to Hydra#run. It was on Hydra#queue before and led to strange behavior because if the request was stubbed, it was wrapped up in queue already. There was no way to add callbacks after queue thatswhy. This is now different, since everything happens in run, just as you expect.","title":"0.5.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#051","text":"Full Changelog Enhancements: Downcase header keys for easier access ( #227 ) Using an updated Ethon version.","title":"0.5.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#050","text":"Full Changelog Major Changes: Ethon integration Params are url params and a body is always a body for every request type The options you can set might have a slightly other names, as Ethon sticks to libcurl names. See Easy.new for a description. Request parameter and body are properly encoded (only POST multiform body is not) No more header sanitizing. Before: :headers => { 'user_agent' => 'Custom' } was modified to :headers => { 'User-Agent' => 'Custom' } Typhoeus::Easy and Typhoeus::Multi are now Ethon::Easy and Ethon::Multi Request shortcuts: Typhoeus.get(\"www.google.de\") Global configuration: Typhoeus.configure do |config| config.verbose = true config.memoize = true end No more Response#headers_hash , instead Response#headers returning the last header and response#redirections returning the responses with headers generated through redirections Instead of defining the same callbacks on every request, you can define global callbacks: Typhoeus.on_complete { p \"yay\" } The stubbing interface changed slightly. You now have the same syntax as for requests: Typhoeus.stub(url, options).and_return(response) The following things were removed because they do not seemed to be used at all. Ping me if you disagree! Typhoeus::Filter Typhoeus::Remote Typhoeus::RemoteMethod Typhoeus::RemoteProxyObject build in cache interface Enhancements: Documentation ( Alex P , #188 ) Request#on_complete can hold multiple blocks. Request#eql? recognizes when header/params/body has a different order, but still same keys and values ( Alex P , #194 ) Bug Fixes: Zero bytes in strings are escaped for libcurl Add support for socks5 hostname proxy type ( eweathers , #183 ) Post body is encoded ( Rohan Deshpande , #143 ) Set default user agent ( Steven Shingler , #176 )","title":"0.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#042","text":"A header hotfix","title":"0.4.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#041","text":"Fix verifypeer and verifyhost options Fix header sending","title":"0.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#040","text":"Make a GET even when a body is given Deprecated User Agent setter removed Allow cache key basis overwrite (John Crepezzi, #147) FFI integration (Daniel Cavanagh, #151) Refactor upload code (Marnen Laibow-Koser, #152) Fix travis-ci build (Ezekiel Templin, #160)","title":"0.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#033","text":"Make sure to call the Easy::failure callback on all non-success http response codes, even invalid ones. [balexis] Use bytesize instead of length to determine Content-Length [dlamacchia] Added SSL version option to Easy/Request [michelbarbosa/dbalatero]","title":"0.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#032","text":"Fix array params to be consistent with HTTP spec [gridaphobe] traversal_to_params_hash should use the escape option [itsmeduncan] Fix > 1024 open file descriptors [mschulkind] Fixed a bug with internally queued requests being dropped [mschulkind] Use gemspec in bundler to avoid duplication [mschulkind] Run internally queued requests in FIFO order [mschulkind] Moved Typhoeus::VERSION to a separate file, to fix rake build_native [mschulkind] Fixed problems related to put requests with empty bodies [skaes, GH-84] Added CURLOPT_INTERFACE option via Request#interface=. [spiegela] Added Tempfile support to Form#process! [richievos] Hydra won't forget to accept gzip/deflate encoding [codesnik] Accept and convert strings to integers in Typhoeus::Request#initialize for timeout/cache_timeout/connect_timeout values when using ruby 1.9.x. [djnawara] Added interface for registering stub finders [myronmarston] Fixed header stubbing [myronmarston] Added PKCS12 support [jodell] Make a request with handlers marshallable [bernerdschaefer] Upgraded to RSpec 2 [bernerdschaefer] Fix HTTP status edge-case [balexis] Expose primary_ip to easy object [balexis]","title":"0.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#024","text":"Fix form POSTs to only use multipart for file uploads, otherwise use application/x-www-form-urlencoded [dbalatero]","title":"0.2.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#023","text":"Code duplication in Typhoeus::Form led to nested URL param errors on POST only. Fixed [dbalatero]","title":"0.2.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#022","text":"Fixed a problem with nested URL params encoding incorrectly [dbalatero]","title":"0.2.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#021","text":"Added extended proxy support [Zapotek, GH-46] eliminated compile time warnings by using proper type declarations [skaes, GH-54] fixed broken calls to rb_raise [skaes, GH-54] prevent leaking of curl easy handles when exceptions are raised (either from typhoeus itself or user callbacks) [skaes, GH-54] fixed Easy#timed_out? using curl return codes [skaes, GH-54] provide curl return codes and corresponding curl error messages on classes Easy and Request [skaes, GH-54] allow VCR to whitelist hosts in Typhoeus stubbing/mocking [myronmarston, GH-57] added timed_out? documentation, method to Response [dbalatero, GH-34] added abort to Hydra to prematurely stop a hydra.run [Zapotek] added file upload support for POST requests [jtarchie, GH-59]","title":"0.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#020","text":"Fix warning in Request#headers from attr_accessor Params with array values were not parsing into the format that rack expects [GH-39, smartocci] Removed Rack as a dependency [GH-45] Added integration hooks for VCR!","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#0131","text":"Fixed bug in setting compression encoding [morhekil] Exposed authentication control methods through Request interface [morhekil]","title":"0.1.31"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#0130","text":"Exposed CURLOPT_CONNECTTIMEOUT_MS to Requests [balexis]","title":"0.1.30"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#0129","text":"Fixed a memory corruption with using CURLOPT_POSTFIELDS [gravis, 32531d0821aecc4]","title":"0.1.29"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#0128","text":"Added SSL cert options for Typhoeus::Easy [GH-25, gravis] Ported SSL cert options to Typhoeus::Request interface [gravis] Added support for any HTTP method (purge for Varnish) [ryana]","title":"0.1.28"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CHANGELOG/#0127","text":"Added rack as dependency, added dev dependencies to Rakefile [GH-21]","title":"0.1.27"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CONTRIBUTING/","text":"We love pull requests. Here's a quick guide: Fork the repo. Run the tests. We only take pull requests with passing tests, and it's great to know that you have a clean slate: bundle && bundle exec rake Add a test for your change. Only refactoring and documentation changes require no new tests. If you are adding functionality or fixing a bug, we need a test! Make the test pass. Push to your fork and submit a pull request. And in case we didn't emphasize it enough: we love tests! Issue triage You can contribute by triaging issues which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to typhoeus on CodeTriage .","title":"CONTRIBUTING"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/CONTRIBUTING/#issue-triage","text":"You can contribute by triaging issues which may include reproducing bug reports or asking for vital information, such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to subscribe to typhoeus on CodeTriage .","title":"Issue triage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/","text":"Upgrade guide 0.5 Options Fix the option names, because some were renamed. The errors should point you in the right direction: Typhoeus.get(\"www.example.com\", follow_location: true) # Ethon::Errors::InvalidOption: The option: follow_location is invalid. # Please try followlocation instead of follow_location. # ... [Backtrace] Typhoeus.get(\"www.example.com\", followlocation: true).code #=> 200 Headers Response#headers returns a hash now and replaces Response#headers_hash , use Response#response_headers for the raw string: Typhoeus.get(\"www.example.com\", followlocation: true).headers #=> { # \"date\"=>\"Tue, 06 Nov 2012 09:07:27 GMT\", # \"server\"=>\"Apache/2.2.3 (CentOS)\", # \"last-modified\"=>\"Wed, 09 Feb 2011 17:13:15 GMT\", # \"vary\"=>\"Accept-Encoding\", # \"connection\"=>\"close\", # \"content-type\"=>\"text/html; charset=UTF-8\" # } Typhoeus.get(\"www.example.com\", followlocation: true).response_headers #=> \"HTTP/1.0 302 Found\\r\\nLocation: http://www.iana.org/domains/example/ [...]\" Params vs body Make sure every request sends proper params and body (especially POST/PUT). :params becomes url parameter and :body request body. Before params for POST was smashed into the body. Configuration Create a global configuration in case you want to turn on verbose, memoize or block_connection: Typhoeus.configure do |config| config.verbose = true config.memoize = true end Docs When in doubt, read the docs or the code .","title":"Upgrade guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#upgrade-guide","text":"","title":"Upgrade guide"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#05","text":"","title":"0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#options","text":"Fix the option names, because some were renamed. The errors should point you in the right direction: Typhoeus.get(\"www.example.com\", follow_location: true) # Ethon::Errors::InvalidOption: The option: follow_location is invalid. # Please try followlocation instead of follow_location. # ... [Backtrace] Typhoeus.get(\"www.example.com\", followlocation: true).code #=> 200","title":"Options"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#headers","text":"Response#headers returns a hash now and replaces Response#headers_hash , use Response#response_headers for the raw string: Typhoeus.get(\"www.example.com\", followlocation: true).headers #=> { # \"date\"=>\"Tue, 06 Nov 2012 09:07:27 GMT\", # \"server\"=>\"Apache/2.2.3 (CentOS)\", # \"last-modified\"=>\"Wed, 09 Feb 2011 17:13:15 GMT\", # \"vary\"=>\"Accept-Encoding\", # \"connection\"=>\"close\", # \"content-type\"=>\"text/html; charset=UTF-8\" # } Typhoeus.get(\"www.example.com\", followlocation: true).response_headers #=> \"HTTP/1.0 302 Found\\r\\nLocation: http://www.iana.org/domains/example/ [...]\"","title":"Headers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#params-vs-body","text":"Make sure every request sends proper params and body (especially POST/PUT). :params becomes url parameter and :body request body. Before params for POST was smashed into the body.","title":"Params vs body"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#configuration","text":"Create a global configuration in case you want to turn on verbose, memoize or block_connection: Typhoeus.configure do |config| config.verbose = true config.memoize = true end","title":"Configuration"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/typhoeus-1.4.0/UPGRADE/#docs","text":"When in doubt, read the docs or the code .","title":"Docs"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/","text":"TZInfo - Ruby Timezone Library TZInfo provides daylight savings aware transformations between times in different timezones. Data Sources TZInfo requires a source of timezone data. There are two built-in options: The TZInfo::Data library (the tzinfo-data gem). TZInfo::Data contains a set of Ruby modules that are generated from the IANA Time Zone Database . A zoneinfo directory. Most Unix-like systems include a zoneinfo directory containing timezone definitions. These are also generated from the IANA Time Zone Database . By default, TZInfo::Data will be used. If TZInfo::Data is not available (i.e. if require 'tzinfo/data' fails), then TZInfo will search for a zoneinfo directory instead (using the search path specified by TZInfo::ZoneinfoDataSource::DEFAULT_SEARCH_PATH ). If no data source can be found, a TZInfo::DataSourceNotFound exception will be raised when TZInfo is used. Further information is available in the wiki to help with resolving TZInfo::DataSourceNotFound errors. The default data source selection can be overridden using TZInfo::DataSource.set . Custom data sources can also be used. See TZInfo::DataSource.set for further details. Installation The TZInfo gem can be installed by running: gem install tzinfo To use the Ruby modules as the data source, TZInfo::Data will also need to be installed: gem install tzinfo-data Example Usage The following code will obtain the America/New_York timezone (as an instance of TZInfo::Timezone ) and convert a time in UTC to local New York time: require 'tzinfo' tz = TZInfo::Timezone.get('America/New_York') local = tz.utc_to_local(Time.utc(2005,8,29,15,35,0)) Note that the local Time returned will have a UTC timezone ( local.zone will return \"UTC\" ). This is because the Ruby Time class only supports two timezones: UTC and the current system local timezone. To convert from a local time to UTC, the local_to_utc method can be used as follows: utc = tz.local_to_utc(local) Note that the timezone information of the local Time object is ignored (TZInfo will just read the date and time and treat them as if there were in the tz timezone). The following two lines will return the same result regardless of the system's local timezone: tz.local_to_utc(Time.local(2006,6,26,1,0,0)) tz.local_to_utc(Time.utc(2006,6,26,1,0,0)) To obtain information about the rules in force at a particular UTC or local time, the TZInfo::Timezone.period_for_utc and TZInfo::Timezone.period_for_local methods can be used. Both of these methods return TZInfo::TimezonePeriod objects. The following gets the identifier for the period (in this case EDT). period = tz.period_for_utc(Time.utc(2005,8,29,15,35,0)) id = period.zone_identifier The current local time in a Timezone can be obtained with the TZInfo::Timezone#now method: now = tz.now All methods in TZInfo that operate on a time can be used with either Time or DateTime instances or with Integer timestamps (i.e. as returned by Time#to_i ). The type of the values returned will match the type passed in. A list of all the available timezone identifiers can be obtained using the TZInfo::Timezone.all_identifiers method. TZInfo::Timezone.all can be called to get an Array of all the TZInfo::Timezone instances. Timezones can also be accessed by country (using an ISO 3166-1 alpha-2 country code). The following code retrieves the TZInfo::Country instance representing the USA (country code 'US') and then gets all the timezone identifiers used in the USA. us = TZInfo::Country.get('US') timezones = us.zone_identifiers The TZInfo::Country#zone_info method provides an additional description and geographic location for each timezone in a country. A list of all the available country codes can be obtained using the TZInfo::Country.all_codes method. TZInfo::Country.all can be called to get an Array of all the Country instances. For further detail, please refer to the API documentation for the TZInfo::Timezone and TZInfo::Country classes. Thread-Safety The TZInfo::Country and TZInfo::Timezone classes are thread-safe. It is safe to use class and instance methods of TZInfo::Country and TZInfo::Timezone in concurrently executing threads. Instances of both classes can be shared across thread boundaries. Documentation API documentation for TZInfo is available on RubyDoc.info . License TZInfo is released under the MIT license, see LICENSE for details. Source Code Source code for TZInfo is available on GitHub . Issue Tracker Please post any bugs, issues, feature requests or questions to the GitHub issue tracker .","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#tzinfo-ruby-timezone-library","text":"TZInfo provides daylight savings aware transformations between times in different timezones.","title":"TZInfo - Ruby Timezone Library"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#data-sources","text":"TZInfo requires a source of timezone data. There are two built-in options: The TZInfo::Data library (the tzinfo-data gem). TZInfo::Data contains a set of Ruby modules that are generated from the IANA Time Zone Database . A zoneinfo directory. Most Unix-like systems include a zoneinfo directory containing timezone definitions. These are also generated from the IANA Time Zone Database . By default, TZInfo::Data will be used. If TZInfo::Data is not available (i.e. if require 'tzinfo/data' fails), then TZInfo will search for a zoneinfo directory instead (using the search path specified by TZInfo::ZoneinfoDataSource::DEFAULT_SEARCH_PATH ). If no data source can be found, a TZInfo::DataSourceNotFound exception will be raised when TZInfo is used. Further information is available in the wiki to help with resolving TZInfo::DataSourceNotFound errors. The default data source selection can be overridden using TZInfo::DataSource.set . Custom data sources can also be used. See TZInfo::DataSource.set for further details.","title":"Data Sources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#installation","text":"The TZInfo gem can be installed by running: gem install tzinfo To use the Ruby modules as the data source, TZInfo::Data will also need to be installed: gem install tzinfo-data","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#example-usage","text":"The following code will obtain the America/New_York timezone (as an instance of TZInfo::Timezone ) and convert a time in UTC to local New York time: require 'tzinfo' tz = TZInfo::Timezone.get('America/New_York') local = tz.utc_to_local(Time.utc(2005,8,29,15,35,0)) Note that the local Time returned will have a UTC timezone ( local.zone will return \"UTC\" ). This is because the Ruby Time class only supports two timezones: UTC and the current system local timezone. To convert from a local time to UTC, the local_to_utc method can be used as follows: utc = tz.local_to_utc(local) Note that the timezone information of the local Time object is ignored (TZInfo will just read the date and time and treat them as if there were in the tz timezone). The following two lines will return the same result regardless of the system's local timezone: tz.local_to_utc(Time.local(2006,6,26,1,0,0)) tz.local_to_utc(Time.utc(2006,6,26,1,0,0)) To obtain information about the rules in force at a particular UTC or local time, the TZInfo::Timezone.period_for_utc and TZInfo::Timezone.period_for_local methods can be used. Both of these methods return TZInfo::TimezonePeriod objects. The following gets the identifier for the period (in this case EDT). period = tz.period_for_utc(Time.utc(2005,8,29,15,35,0)) id = period.zone_identifier The current local time in a Timezone can be obtained with the TZInfo::Timezone#now method: now = tz.now All methods in TZInfo that operate on a time can be used with either Time or DateTime instances or with Integer timestamps (i.e. as returned by Time#to_i ). The type of the values returned will match the type passed in. A list of all the available timezone identifiers can be obtained using the TZInfo::Timezone.all_identifiers method. TZInfo::Timezone.all can be called to get an Array of all the TZInfo::Timezone instances. Timezones can also be accessed by country (using an ISO 3166-1 alpha-2 country code). The following code retrieves the TZInfo::Country instance representing the USA (country code 'US') and then gets all the timezone identifiers used in the USA. us = TZInfo::Country.get('US') timezones = us.zone_identifiers The TZInfo::Country#zone_info method provides an additional description and geographic location for each timezone in a country. A list of all the available country codes can be obtained using the TZInfo::Country.all_codes method. TZInfo::Country.all can be called to get an Array of all the Country instances. For further detail, please refer to the API documentation for the TZInfo::Timezone and TZInfo::Country classes.","title":"Example Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#thread-safety","text":"The TZInfo::Country and TZInfo::Timezone classes are thread-safe. It is safe to use class and instance methods of TZInfo::Country and TZInfo::Timezone in concurrently executing threads. Instances of both classes can be shared across thread boundaries.","title":"Thread-Safety"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#documentation","text":"API documentation for TZInfo is available on RubyDoc.info .","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#license","text":"TZInfo is released under the MIT license, see LICENSE for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#source-code","text":"Source code for TZInfo is available on GitHub .","title":"Source Code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/#issue-tracker","text":"Please post any bugs, issues, feature requests or questions to the GitHub issue tracker .","title":"Issue Tracker"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/","text":"Version 1.2.2 - 8-Aug-2014 Fix an error with duplicates being returned by Timezone#all_country_zones and Timezone#all_country_zone_identifiers when used with tzinfo-data v1.2014.6 or later. Use the zone1970.tab file for country timezone data if it is found in the zoneinfo directory (and fallback to zone.tab if not). zone1970.tab was added in tzdata 2014f. zone.tab is now deprecated. Version 1.2.1 - 1-Jun-2014 Support zoneinfo files generated with zic version 2014c and later. On platforms that only support positive 32-bit timestamps, ensure that conversions are accurate from the epoch instead of just from the first transition after the epoch. Minor documentation improvements. Version 1.2.0 - 26-May-2014 Raise the minimum supported Ruby version to 1.8.7. Support loading system zoneinfo data on FreeBSD, OpenBSD and Solaris. Resolves #15. Add canonical_identifier and canonical_zone methods to Timezone. Resolves #16. Add a link to a DataSourceNotFound help page in the TZInfo::DataSourceNotFound exception message. Load iso3166.tab and zone.tab files as UTF-8. Fix Timezone#local_to_utc returning local Time instances on systems using UTC as the local time zone. Resolves #13. Fix == methods raising an exception when passed an instance of a different class by making <=> return nil if passed a non-comparable argument. Eliminate \"require 'rational'\" warnings. Resolves #10. Eliminate \"assigned but unused variable - info\" warnings. Resolves #11. Switch to minitest v5 for unit tests. Resolves #18. Version 1.1.0 - 25-Sep-2013 TZInfo is now thread safe. ThreadSafe::Cache is now used instead of Hash to cache Timezone and Country instances returned by Timezone.get and Country.get. The tzinfo gem now depends on thread_safe ~> 0.1. Added a transitions_up_to method to Timezone that returns a list of the times where the UTC offset of the timezone changes. Added an offsets_up_to method to Timezone that returns the set of offsets that have been observed in a defined timezone. Fixed a \"can't modify frozen String\" error when loading a Timezone from a zoneinfo file using an identifier String that is both tainted and frozen. Resolves #3. Support TZif3 format zoneinfo files (now produced by zic from tzcode version 2013e onwards). Support using YARD to generate documentation (added a .yardopts file). Ignore the +VERSION file included in the zoneinfo directory on Mac OS X. Added a note to the documentation concerning 32-bit zoneinfo files (as included with Mac OS X). Version 1.0.1 - 22-Jun-2013 Fix a test case failure when tests are run from a directory that contains a dot in the path (issue #29751). Version 1.0.0 - 2-Jun-2013 Allow TZInfo to be used with different data sources instead of just the built-in Ruby module data files. Include a data source that allows TZInfo to load data from the binary zoneinfo files produced by zic and included with many Linux and Unix-like distributions. Remove the definition and index Ruby modules from TZInfo and move them into a separate TZInfo::Data library (available as the tzinfo-data gem). Default to using the TZInfo::Data library as the data source if it is installed, otherwise use zoneinfo files instead. Preserve the nanoseconds of local timezone Time objects when performing conversions (issue #29705). Don't add the tzinfo lib directory to the search path when requiring 'tzinfo'. The tzinfo lib directory must now be in the search path before 'tzinfo' is required. Add utc_start_time, utc_end_time, local_start_time and local_end_time instance methods to TimezonePeriod. These return an identical value as the existing utc_start, utc_end, local_start and local_end methods, but return Time instances instead of DateTime. Make the start_transition, end_transition and offset properties of TimezonePeriod protected. To access properties of the period, callers should use other TimezonePeriod instance methods instead (issue #7655). Version 0.3.39 (tzdata v2014a) - 9-Mar-2014 Updated to tzdata version 2014a (http://mm.icann.org/pipermail/tz-announce/2014-March/000018.html). Version 0.3.38 (tzdata v2013g) - 8-Oct-2013 Updated to tzdata version 2013g (http://mm.icann.org/pipermail/tz-announce/2013-October/000015.html). Version 0.3.37 (tzdata v2013b) - 11-Mar-2013 Updated to tzdata version 2013b (http://mm.icann.org/pipermail/tz-announce/2013-March/000010.html). Version 0.3.36 (tzdata v2013a) - 3-Mar-2013 Updated to tzdata version 2013a (http://mm.icann.org/pipermail/tz-announce/2013-March/000009.html). Fix TimezoneTransitionInfo#eql? incorrectly returning false when running on Ruby 2.0. Change eql? and == implementations to test the class of the passed in object instead of checking individual properties with 'respond_to?'. Version 0.3.35 (tzdata v2012i) - 4-Nov-2012 Updated to tzdata version 2012i (http://mm.icann.org/pipermail/tz-announce/2012-November/000007.html). Version 0.3.34 (tzdata v2012h) - 27-Oct-2012 Updated to tzdata version 2012h (http://mm.icann.org/pipermail/tz-announce/2012-October/000006.html). Version 0.3.33 (tzdata v2012c) - 8-Apr-2012 Updated to tzdata version 2012c (http://article.gmane.org/gmane.comp.time.tz/4859). Version 0.3.32 (tzdata v2012b) - 4-Mar-2012 Updated to tzdata version 2012b (http://article.gmane.org/gmane.comp.time.tz/4756). Version 0.3.31 (tzdata v2011n) - 6-Nov-2011 Updated to tzdata version 2011n (http://article.gmane.org/gmane.comp.time.tz/4434). Version 0.3.30 (tzdata v2011k) - 29-Sep-2011 Updated to tzdata version 2011k (http://article.gmane.org/gmane.comp.time.tz/4084). Version 0.3.29 (tzdata v2011h) - 27-Jun-2011 Updated to tzdata version 2011h (http://article.gmane.org/gmane.comp.time.tz/3814). Allow the default value of the local_to_utc and period_for_local dst parameter to be specified globally with a Timezone.default_dst attribute. Thanks to Kurt Werle for the suggestion and patch. Version 0.3.28 (tzdata v2011g) - 13-Jun-2011 Add support for Ruby 1.9.3 (trunk revision 31668 and later). Thanks to Aaron Patterson for reporting the problems running on the new version. Closes #29233. Version 0.3.27 (tzdata v2011g) - 26-Apr-2011 Updated to tzdata version 2011g (http://article.gmane.org/gmane.comp.time.tz/3758). Version 0.3.26 (tzdata v2011e) - 2-Apr-2011 Updated to tzdata version 2011e (http://article.gmane.org/gmane.comp.time.tz/3707). Version 0.3.25 (tzdata v2011d) - 14-Mar-2011 Updated to tzdata version 2011d (http://article.gmane.org/gmane.comp.time.tz/3662). Version 0.3.24 (tzdata v2010o) - 15-Jan-2011 Updated to tzdata version 2010o (http://article.gmane.org/gmane.comp.time.tz/3473). Version 0.3.23 (tzdata v2010l) - 19-Aug-2010 Updated to tzdata version 2010l (http://article.gmane.org/gmane.comp.time.tz/3354). Version 0.3.22 (tzdata v2010j) - 29-May-2010 Corrected file permissions issue with 0.3.21 release. Version 0.3.21 (tzdata v2010j) - 28-May-2010 Updated to tzdata version 2010j (http://article.gmane.org/gmane.comp.time.tz/3225). Change invalid timezone check to exclude characters not used in timezone identifiers and avoid 'character class has duplicated range' warnings with Ruby 1.9.2. Ruby 1.9.2 has deprecated \"require 'rational'\", but older versions of Ruby need rational to be required. Require rational only when the Rational module has not already been loaded. Remove circular requires (now a warning in Ruby 1.9.2). Instead of using requires in each file for dependencies, tzinfo.rb now requires all tzinfo files. If you were previously requiring files within the tzinfo directory (e.g. require 'tzinfo/timezone'), then you will now have to require 'tzinfo' instead. Version 0.3.20 (tzdata v2010i) - 19-Apr-2010 Updated to tzdata version 2010i (http://article.gmane.org/gmane.comp.time.tz/3202). Version 0.3.19 (tzdata v2010h) - 5-Apr-2010 Updated to tzdata version 2010h (http://article.gmane.org/gmane.comp.time.tz/3188). Version 0.3.18 (tzdata v2010g) - 29-Mar-2010 Updated to tzdata version 2010g (http://article.gmane.org/gmane.comp.time.tz/3172). Version 0.3.17 (tzdata v2010e) - 8-Mar-2010 Updated to tzdata version 2010e (http://article.gmane.org/gmane.comp.time.tz/3128). Version 0.3.16 (tzdata v2009u) - 5-Jan-2010 Support the use of '-' to denote '0' as an offset in the tz data files. Used for the first time in the SAVE field in tzdata v2009u. Updated to tzdata version 2009u (http://article.gmane.org/gmane.comp.time.tz/3053). Version 0.3.15 (tzdata v2009p) - 26-Oct-2009 Updated to tzdata version 2009p (http://article.gmane.org/gmane.comp.time.tz/2953). Added a description to the gem spec. List test files in test_files instead of files in the gem spec. Version 0.3.14 (tzdata v2009l) - 19-Aug-2009 Updated to tzdata version 2009l (http://article.gmane.org/gmane.comp.time.tz/2818). Include current directory in load path to allow running tests on Ruby 1.9.2, which doesn't include it by default any more. Version 0.3.13 (tzdata v2009f) - 15-Apr-2009 Updated to tzdata version 2009f (http://article.gmane.org/gmane.comp.time.tz/2668). Untaint the timezone module filename after validation to allow use with $SAFE == 1 (e.g. under mod_ruby). Thanks to Dmitry Borodaenko for the suggestion. Closes #25349. Version 0.3.12 (tzdata v2008i) - 12-Nov-2008 Updated to tzdata version 2008i (http://article.gmane.org/gmane.comp.time.tz/2440). Version 0.3.11 (tzdata v2008g) - 7-Oct-2008 Updated to tzdata version 2008g (http://article.gmane.org/gmane.comp.time.tz/2335). Support Ruby 1.9.0-5. Rational.new! has now been removed in Ruby 1.9. Only use Rational.new! if it is available (it is preferable in Ruby 1.8 for performance reasons). Thanks to Jeremy Kemper and Pratik Naik for reporting this. Closes #22312. Apply a patch from Pratik Naik to replace assert calls that have been deprecated in the Ruby svn trunk. Closes #22308. Version 0.3.10 (tzdata v2008f) - 16-Sep-2008 Updated to tzdata version 2008f (http://article.gmane.org/gmane.comp.time.tz/2293). Version 0.3.9 (tzdata v2008c) - 27-May-2008 Updated to tzdata version 2008c (http://article.gmane.org/gmane.comp.time.tz/2183). Support loading timezone data in the latest trunk versions of Ruby 1.9. Rational.new! is now private, so call it using Rational.send :new! instead. Thanks to Jeremy Kemper and Pratik Naik for spotting this. Closes #19184. Prevent warnings from being output when running Ruby with the -v or -w command line options. Thanks to Paul McMahon for the patch. Closes #19719. Version 0.3.8 (tzdata v2008b) - 24-Mar-2008 Updated to tzdata version 2008b (http://article.gmane.org/gmane.comp.time.tz/2149). Support loading timezone data in Ruby 1.9.0. Use DateTime.new! if it is available instead of DateTime.new0 when constructing transition times. DateTime.new! was added in Ruby 1.8.6. DateTime.new0 was removed in Ruby 1.9.0. Thanks to Joshua Peek for reporting this. Closes #17606. Modify some of the equality test cases to cope with the differences between Ruby 1.8.6 and Ruby 1.9.0. Version 0.3.7 (tzdata v2008a) - 10-Mar-2008 Updated to tzdata version 2008a (http://article.gmane.org/gmane.comp.time.tz/2071). Version 0.3.6 (tzdata v2007k) - 1-Jan-2008 Updated to tzdata version 2007k (http://article.gmane.org/gmane.comp.time.tz/2029). Removed deprecated RubyGems autorequire option. Version 0.3.5 (tzdata v2007h) - 1-Oct-2007 Updated to tzdata version 2007h (http://article.gmane.org/gmane.comp.time.tz/1878). Version 0.3.4 (tzdata v2007g) - 21-Aug-2007 Updated to tzdata version 2007g (http://article.gmane.org/gmane.comp.time.tz/1810). Version 0.3.3 (tzdata v2006p) - 27-Nov-2006 Updated to tzdata version 2006p (http://article.gmane.org/gmane.comp.time.tz/1358). Version 0.3.2 (tzdata v2006n) - 11-Oct-2006 Updated to tzdata version 2006n (http://article.gmane.org/gmane.comp.time.tz/1288). Note that this release of tzdata removes the country Serbia and Montenegro (CS) and replaces it with separate Serbia (RS) and Montenegro (ME) entries. Version 0.3.1 (tzdata v2006j) - 21-Aug-2006 Remove colon from case statements to avoid warning in Ruby 1.8.5. #5198. Use temporary variable to avoid dynamic string warning from rdoc. Updated to tzdata version 2006j (http://article.gmane.org/gmane.comp.time.tz/1175). Version 0.3.0 (tzdata v2006g) - 17-Jul-2006 New timezone data format. Timezone data now occupies less space on disk and takes less memory once loaded. #4142, #4144. Timezone data is defined in modules rather than classes. Timezone instances returned by Timezone.get are no longer instances of data classes, but are instead instances of new DataTimezone and LinkedTimezone classes. Timezone instances can now be used with Marshal.dump and Marshal.load. #4240. Added a Timezone.get_proxy method that returns a TimezoneProxy object for a given identifier. Country index data is now defined in a single module that is independent of the Country class implementation. Country instances can now be used with Marshal.dump and Marshal.load. #4240. Country has a new zone_info method that returns CountryTimezone objects containing additional information (latitude, longitude and a description) relating to each Timezone. #4140. Timezones within a Country are now returned in an order that makes geographic sense. The zdumptest utility now checks local to utc conversions in addition to utc to local conversions. eql? method defined on Country and Timezone that is equivalent to ==. The == method of Timezone no longer raises an exception when passed an object with no identifier method. The == method of Country no longer raises an exception when passed an object with no code method. hash method defined on Country that returns the hash of the code. hash method defined on Timezone that returns the hash of the identifier. Miscellaneous API documentation corrections and improvements. Timezone definition and indexes are now excluded from rdoc (the contents were previously ignored with #:nodoc: anyway). Removed no longer needed #:nodoc: directives from timezone data files (which are now excluded from the rdoc build). Installation of the gem now causes rdoc API documentation to be generated. #4905. When optimizing transitions to generate zone definitions, check the UTC and standard offsets separately rather than just the total offset to UTC. Fixes an incorrect abbreviation issue with Europe/London, Europe/Dublin and Pacific/Auckland. Eliminated unnecessary .nil? calls to give a minor performance gain. Timezone.all and Timezone.all_identifiers now return all the Timezones/identifiers rather than just those associated with countries. #4146. Added all_data_zones, all_data_zone_identifiers, all_linked_zones and all_linked_zone_identifiers class methods to Timezone. Added a strftime method to Timezone that converts a time in UTC to local time and then returns it formatted. %Z is replaced with the Timezone abbreviation for the given time (for example, EST or EDT). #4143. Fix escaping of quotes in TZDataParser. This affected country names and descriptions of timezones within countries. Version 0.2.2 (tzdata v2006g) - 17-May-2006 Use class-scoped instance variables to store the Timezone identifier and singleton instance. Loading a linked zone no longer causes the parent zone's identifier to be changed. The instance method of a linked zone class also now returns an instance of the linked zone class rather than the parent class. #4502. The zdumptest utility now compares the TZInfo zone identifier with the zdump zone identifier. The zdumptestall utility now exits if not supplied with enough parameters. Updated to tzdata version 2006g (http://article.gmane.org/gmane.comp.time.tz/1008). Version 0.2.1 (tzdata v2006d) - 17-Apr-2006 Fix a performance issue caused in 0.2.0 with Timezone.local_to_utc. Conversions performed on TimeOrDateTime instances passed to <=> are now cached as originally intended. Thanks to Michael Smedberg for spotting this. Fix a performance issue with the local_to_utc period search algorithm originally implemented in 0.1.0. The condition that was supposed to cause the search to terminate when enough periods had been found was only being evaluated in a small subset of cases. Thanks to Michael Smedberg and Jamis Buck for reporting this. Added abbreviation as an alias for TimezonePeriod.zone_identifier. Updated to tzdata version 2006d (http://article.gmane.org/gmane.comp.time.tz/936). Ignore any offset in DateTimes passed in (as is already done for Times). All of the following now refer to the same UTC time (15:40 on 17 April 2006). Previously, the DateTime in the second line would have been interpreted as 20:40. tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0).new_offset(Rational(5, 24))) tz.utc_to_local(Time.utc(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(Time.local(2006, 4, 17, 15, 40, 0)) Version 0.2.0 (tzdata v2006c) - 3-Apr-2006 Use timestamps rather than DateTime objects in zone files for times between 1970 and 2037 (the range of Time). Don't convert passed in Time objects to DateTime in most cases (provides a substantial performance improvement). Allow integer timestamps (time in seconds since 1970-1-1) to be used as well as Time and DateTime objects in all public methods that take times as parameters. Tool to compare TZInfo conversions with output from zdump. TZDataParser zone generation algorithm rewritten. Now based on the zic code. TZInfo is now 100% compatible with zic/zdump output. Riyadh Solar Time zones now included again (generation time has been reduced with TZDataParser changes). Use binary mode when writing zone and country files to get Unix (\\n) new lines. Omit unnecessary quotes in zone identifier symbols. Omit the final transition to DST if there is a prior transition in the last year processed to standard time. Updated to tzdata version 2006c (http://article.gmane.org/gmane.comp.time.tz/920). Version 0.1.2 (tzdata v2006a) - 5-Feb-2006 Add lib directory to the load path when tzinfo is required. Makes it easier to use tzinfo gem when unpacked to vendor directory in rails. Updated to tzdata version 2006a (http://article.gmane.org/gmane.comp.time.tz/738). build_tz_classes rake task now handles running svn add and svn delete as new timezones and countries are added and old ones are removed. Return a better error when attempting to use a Timezone instance that was constructed with Timezone.new(nil). This will occur when using Rails' composed_of. When the timezone identifier in the database is null, attempting to use the Timezone will now result in an UnknownTimezone exception rather than a NameError. Version 0.1.1 (tzdata v2005q) - 18-Dec-2005 Timezones that are defined by a single unbounded period (e.g. UTC) now work again. Updated to tzdata version 2005q. Version 0.1.0 (tzdata v2005n) - 27-Nov-2005 period_for_local and local_to_utc now allow resolution of ambiguous times (e.g. when switching from daylight savings to standard time). The behaviour of these methods when faced with an ambiguous local time has now changed. If you are using these methods you should check the documentation. Thanks to Cliff Matthews for suggesting this change. Added require 'date' to timezone.rb (date isn't loaded by default in all environments). Use rake to build packages and documentation. License file is now included in gem distribution. Dates in definitions stored as Astronomical Julian Day numbers rather than as civil dates (improves performance creating DateTime instances). Added options to TZDataParser to allow generation of specific zones and countries. Moved TimezonePeriod class to timezone_period.rb. New TimezonePeriodList class to store TimezonePeriods for a timezone and perform searches for periods. Timezones now defined using blocks. TimezonePeriods are only instantiated when they are needed. Thanks to Jamis Buck for the suggestion. Add options to TZDataParser to allow exclusion of specific zones and countries. Exclude the Riyadh Solar Time zones. The rules are only for 1987 to 1989 and take a long time to generate and process. Riyadh Solar Time is no longer observed. The last TimezonePeriod for each Timezone is now written out with an unbounded rather than arbitrary end time. Construct the Rational offset in TimezonePeriod once when the TimezonePeriod is constructed rather than each time it is needed. Timezone and Country now keep a cache of loaded instances to avoid running require which can be slow on some platforms. Updated to tzdata version 2005n. Version 0.0.4 (tzdata v2005m) - 18-Sep-2005 Removed debug output accidentally included in the previous release. Fixed a bug in the generation of friendly zone identifiers (was inserting apostrophes into UTC, GMT, etc). Fixed Country <=> operator (was comparing non-existent attribute) Fixed Timezone.period_for_local error when period not found. Added testcases for Timezone, TimezoneProxy, TimezonePeriod, Country and some selected timezones. Version 0.0.3 (tzdata v2005m) - 17-Sep-2005 Reduced visibility of some methods added in Timezone#setup and Country#setup. Added name method to Timezone (returns the identifier). Added friendly_identifier method to Timezone. Returns a more friendly version of the identifier. Added to_s method to Timezone. Returns the friendly identifier. Added == and <=> operators to Timezone (compares identifiers). Timezone now includes Comparable. Added to_s method to Country. Added == and <=> operators to Country (compares ISO 3166 country codes). Country now includes Comparable. New TimezoneProxy class that behaves the same as a Timezone but doesn't actually load in its definition until it is actually required. Modified Timezone and Country methods that return Timezones to return TimezoneProxy instances instead. This makes these methods much quicker. In Ruby on Rails, you can now show a drop-down list of all timezones using the Rails time_zone_select helper method: <%= time_zone_select 'user', 'time_zone', TZInfo::Timezone.all.sort, :model => TZInfo::Timezone %> Version 0.0.2 (tzdata v2005m) - 13-Sep-2005 Country and Timezone data is now loaded into class rather than instance variables. This makes Timezone links more efficient and saves memory if creating specific Timezone and Country classes directly. TimezonePeriod zone_identifier is now defined as a symbol to save memory (was previously a string). TimezonePeriod zone_identifiers that were previously '' are now :Unknown. Timezones and Countries can now be returned using Timezone.new(identifier) and Country.new(identifier). When passed an identifier, the new method calls get to return an instance of the specified timezone or country. Added new class methods to Timezone to return sets of zones and identifiers. Thanks to Scott Barron of Lunchbox Software for the suggestions in his article about using TZInfo with Rails (http://lunchroom.lunchboxsoftware.com/pages/tzinfo_rails) Version 0.0.1 (tzdata v2005m) - 29-Aug-2005 First release.","title":"CHANGES"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-122-8-aug-2014","text":"Fix an error with duplicates being returned by Timezone#all_country_zones and Timezone#all_country_zone_identifiers when used with tzinfo-data v1.2014.6 or later. Use the zone1970.tab file for country timezone data if it is found in the zoneinfo directory (and fallback to zone.tab if not). zone1970.tab was added in tzdata 2014f. zone.tab is now deprecated.","title":"Version 1.2.2 - 8-Aug-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-121-1-jun-2014","text":"Support zoneinfo files generated with zic version 2014c and later. On platforms that only support positive 32-bit timestamps, ensure that conversions are accurate from the epoch instead of just from the first transition after the epoch. Minor documentation improvements.","title":"Version 1.2.1 - 1-Jun-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-120-26-may-2014","text":"Raise the minimum supported Ruby version to 1.8.7. Support loading system zoneinfo data on FreeBSD, OpenBSD and Solaris. Resolves #15. Add canonical_identifier and canonical_zone methods to Timezone. Resolves #16. Add a link to a DataSourceNotFound help page in the TZInfo::DataSourceNotFound exception message. Load iso3166.tab and zone.tab files as UTF-8. Fix Timezone#local_to_utc returning local Time instances on systems using UTC as the local time zone. Resolves #13. Fix == methods raising an exception when passed an instance of a different class by making <=> return nil if passed a non-comparable argument. Eliminate \"require 'rational'\" warnings. Resolves #10. Eliminate \"assigned but unused variable - info\" warnings. Resolves #11. Switch to minitest v5 for unit tests. Resolves #18.","title":"Version 1.2.0 - 26-May-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-110-25-sep-2013","text":"TZInfo is now thread safe. ThreadSafe::Cache is now used instead of Hash to cache Timezone and Country instances returned by Timezone.get and Country.get. The tzinfo gem now depends on thread_safe ~> 0.1. Added a transitions_up_to method to Timezone that returns a list of the times where the UTC offset of the timezone changes. Added an offsets_up_to method to Timezone that returns the set of offsets that have been observed in a defined timezone. Fixed a \"can't modify frozen String\" error when loading a Timezone from a zoneinfo file using an identifier String that is both tainted and frozen. Resolves #3. Support TZif3 format zoneinfo files (now produced by zic from tzcode version 2013e onwards). Support using YARD to generate documentation (added a .yardopts file). Ignore the +VERSION file included in the zoneinfo directory on Mac OS X. Added a note to the documentation concerning 32-bit zoneinfo files (as included with Mac OS X).","title":"Version 1.1.0 - 25-Sep-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-101-22-jun-2013","text":"Fix a test case failure when tests are run from a directory that contains a dot in the path (issue #29751).","title":"Version 1.0.1 - 22-Jun-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-100-2-jun-2013","text":"Allow TZInfo to be used with different data sources instead of just the built-in Ruby module data files. Include a data source that allows TZInfo to load data from the binary zoneinfo files produced by zic and included with many Linux and Unix-like distributions. Remove the definition and index Ruby modules from TZInfo and move them into a separate TZInfo::Data library (available as the tzinfo-data gem). Default to using the TZInfo::Data library as the data source if it is installed, otherwise use zoneinfo files instead. Preserve the nanoseconds of local timezone Time objects when performing conversions (issue #29705). Don't add the tzinfo lib directory to the search path when requiring 'tzinfo'. The tzinfo lib directory must now be in the search path before 'tzinfo' is required. Add utc_start_time, utc_end_time, local_start_time and local_end_time instance methods to TimezonePeriod. These return an identical value as the existing utc_start, utc_end, local_start and local_end methods, but return Time instances instead of DateTime. Make the start_transition, end_transition and offset properties of TimezonePeriod protected. To access properties of the period, callers should use other TimezonePeriod instance methods instead (issue #7655).","title":"Version 1.0.0 - 2-Jun-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0339-tzdata-v2014a-9-mar-2014","text":"Updated to tzdata version 2014a (http://mm.icann.org/pipermail/tz-announce/2014-March/000018.html).","title":"Version 0.3.39 (tzdata v2014a) - 9-Mar-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0338-tzdata-v2013g-8-oct-2013","text":"Updated to tzdata version 2013g (http://mm.icann.org/pipermail/tz-announce/2013-October/000015.html).","title":"Version 0.3.38 (tzdata v2013g) - 8-Oct-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0337-tzdata-v2013b-11-mar-2013","text":"Updated to tzdata version 2013b (http://mm.icann.org/pipermail/tz-announce/2013-March/000010.html).","title":"Version 0.3.37 (tzdata v2013b) - 11-Mar-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0336-tzdata-v2013a-3-mar-2013","text":"Updated to tzdata version 2013a (http://mm.icann.org/pipermail/tz-announce/2013-March/000009.html). Fix TimezoneTransitionInfo#eql? incorrectly returning false when running on Ruby 2.0. Change eql? and == implementations to test the class of the passed in object instead of checking individual properties with 'respond_to?'.","title":"Version 0.3.36 (tzdata v2013a) - 3-Mar-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0335-tzdata-v2012i-4-nov-2012","text":"Updated to tzdata version 2012i (http://mm.icann.org/pipermail/tz-announce/2012-November/000007.html).","title":"Version 0.3.35 (tzdata v2012i) - 4-Nov-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0334-tzdata-v2012h-27-oct-2012","text":"Updated to tzdata version 2012h (http://mm.icann.org/pipermail/tz-announce/2012-October/000006.html).","title":"Version 0.3.34 (tzdata v2012h) - 27-Oct-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0333-tzdata-v2012c-8-apr-2012","text":"Updated to tzdata version 2012c (http://article.gmane.org/gmane.comp.time.tz/4859).","title":"Version 0.3.33 (tzdata v2012c) - 8-Apr-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0332-tzdata-v2012b-4-mar-2012","text":"Updated to tzdata version 2012b (http://article.gmane.org/gmane.comp.time.tz/4756).","title":"Version 0.3.32 (tzdata v2012b) - 4-Mar-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0331-tzdata-v2011n-6-nov-2011","text":"Updated to tzdata version 2011n (http://article.gmane.org/gmane.comp.time.tz/4434).","title":"Version 0.3.31 (tzdata v2011n) - 6-Nov-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0330-tzdata-v2011k-29-sep-2011","text":"Updated to tzdata version 2011k (http://article.gmane.org/gmane.comp.time.tz/4084).","title":"Version 0.3.30 (tzdata v2011k) - 29-Sep-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0329-tzdata-v2011h-27-jun-2011","text":"Updated to tzdata version 2011h (http://article.gmane.org/gmane.comp.time.tz/3814). Allow the default value of the local_to_utc and period_for_local dst parameter to be specified globally with a Timezone.default_dst attribute. Thanks to Kurt Werle for the suggestion and patch.","title":"Version 0.3.29 (tzdata v2011h) - 27-Jun-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0328-tzdata-v2011g-13-jun-2011","text":"Add support for Ruby 1.9.3 (trunk revision 31668 and later). Thanks to Aaron Patterson for reporting the problems running on the new version. Closes #29233.","title":"Version 0.3.28 (tzdata v2011g) - 13-Jun-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0327-tzdata-v2011g-26-apr-2011","text":"Updated to tzdata version 2011g (http://article.gmane.org/gmane.comp.time.tz/3758).","title":"Version 0.3.27 (tzdata v2011g) - 26-Apr-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0326-tzdata-v2011e-2-apr-2011","text":"Updated to tzdata version 2011e (http://article.gmane.org/gmane.comp.time.tz/3707).","title":"Version 0.3.26 (tzdata v2011e) - 2-Apr-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0325-tzdata-v2011d-14-mar-2011","text":"Updated to tzdata version 2011d (http://article.gmane.org/gmane.comp.time.tz/3662).","title":"Version 0.3.25 (tzdata v2011d) - 14-Mar-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0324-tzdata-v2010o-15-jan-2011","text":"Updated to tzdata version 2010o (http://article.gmane.org/gmane.comp.time.tz/3473).","title":"Version 0.3.24 (tzdata v2010o) - 15-Jan-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0323-tzdata-v2010l-19-aug-2010","text":"Updated to tzdata version 2010l (http://article.gmane.org/gmane.comp.time.tz/3354).","title":"Version 0.3.23 (tzdata v2010l) - 19-Aug-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0322-tzdata-v2010j-29-may-2010","text":"Corrected file permissions issue with 0.3.21 release.","title":"Version 0.3.22 (tzdata v2010j) - 29-May-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0321-tzdata-v2010j-28-may-2010","text":"Updated to tzdata version 2010j (http://article.gmane.org/gmane.comp.time.tz/3225). Change invalid timezone check to exclude characters not used in timezone identifiers and avoid 'character class has duplicated range' warnings with Ruby 1.9.2. Ruby 1.9.2 has deprecated \"require 'rational'\", but older versions of Ruby need rational to be required. Require rational only when the Rational module has not already been loaded. Remove circular requires (now a warning in Ruby 1.9.2). Instead of using requires in each file for dependencies, tzinfo.rb now requires all tzinfo files. If you were previously requiring files within the tzinfo directory (e.g. require 'tzinfo/timezone'), then you will now have to require 'tzinfo' instead.","title":"Version 0.3.21 (tzdata v2010j) - 28-May-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0320-tzdata-v2010i-19-apr-2010","text":"Updated to tzdata version 2010i (http://article.gmane.org/gmane.comp.time.tz/3202).","title":"Version 0.3.20 (tzdata v2010i) - 19-Apr-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0319-tzdata-v2010h-5-apr-2010","text":"Updated to tzdata version 2010h (http://article.gmane.org/gmane.comp.time.tz/3188).","title":"Version 0.3.19 (tzdata v2010h) - 5-Apr-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0318-tzdata-v2010g-29-mar-2010","text":"Updated to tzdata version 2010g (http://article.gmane.org/gmane.comp.time.tz/3172).","title":"Version 0.3.18 (tzdata v2010g) - 29-Mar-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0317-tzdata-v2010e-8-mar-2010","text":"Updated to tzdata version 2010e (http://article.gmane.org/gmane.comp.time.tz/3128).","title":"Version 0.3.17 (tzdata v2010e) - 8-Mar-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0316-tzdata-v2009u-5-jan-2010","text":"Support the use of '-' to denote '0' as an offset in the tz data files. Used for the first time in the SAVE field in tzdata v2009u. Updated to tzdata version 2009u (http://article.gmane.org/gmane.comp.time.tz/3053).","title":"Version 0.3.16 (tzdata v2009u) - 5-Jan-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0315-tzdata-v2009p-26-oct-2009","text":"Updated to tzdata version 2009p (http://article.gmane.org/gmane.comp.time.tz/2953). Added a description to the gem spec. List test files in test_files instead of files in the gem spec.","title":"Version 0.3.15 (tzdata v2009p) - 26-Oct-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0314-tzdata-v2009l-19-aug-2009","text":"Updated to tzdata version 2009l (http://article.gmane.org/gmane.comp.time.tz/2818). Include current directory in load path to allow running tests on Ruby 1.9.2, which doesn't include it by default any more.","title":"Version 0.3.14 (tzdata v2009l) - 19-Aug-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0313-tzdata-v2009f-15-apr-2009","text":"Updated to tzdata version 2009f (http://article.gmane.org/gmane.comp.time.tz/2668). Untaint the timezone module filename after validation to allow use with $SAFE == 1 (e.g. under mod_ruby). Thanks to Dmitry Borodaenko for the suggestion. Closes #25349.","title":"Version 0.3.13 (tzdata v2009f) - 15-Apr-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0312-tzdata-v2008i-12-nov-2008","text":"Updated to tzdata version 2008i (http://article.gmane.org/gmane.comp.time.tz/2440).","title":"Version 0.3.12 (tzdata v2008i) - 12-Nov-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0311-tzdata-v2008g-7-oct-2008","text":"Updated to tzdata version 2008g (http://article.gmane.org/gmane.comp.time.tz/2335). Support Ruby 1.9.0-5. Rational.new! has now been removed in Ruby 1.9. Only use Rational.new! if it is available (it is preferable in Ruby 1.8 for performance reasons). Thanks to Jeremy Kemper and Pratik Naik for reporting this. Closes #22312. Apply a patch from Pratik Naik to replace assert calls that have been deprecated in the Ruby svn trunk. Closes #22308.","title":"Version 0.3.11 (tzdata v2008g) - 7-Oct-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-0310-tzdata-v2008f-16-sep-2008","text":"Updated to tzdata version 2008f (http://article.gmane.org/gmane.comp.time.tz/2293).","title":"Version 0.3.10 (tzdata v2008f) - 16-Sep-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-039-tzdata-v2008c-27-may-2008","text":"Updated to tzdata version 2008c (http://article.gmane.org/gmane.comp.time.tz/2183). Support loading timezone data in the latest trunk versions of Ruby 1.9. Rational.new! is now private, so call it using Rational.send :new! instead. Thanks to Jeremy Kemper and Pratik Naik for spotting this. Closes #19184. Prevent warnings from being output when running Ruby with the -v or -w command line options. Thanks to Paul McMahon for the patch. Closes #19719.","title":"Version 0.3.9 (tzdata v2008c) - 27-May-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-038-tzdata-v2008b-24-mar-2008","text":"Updated to tzdata version 2008b (http://article.gmane.org/gmane.comp.time.tz/2149). Support loading timezone data in Ruby 1.9.0. Use DateTime.new! if it is available instead of DateTime.new0 when constructing transition times. DateTime.new! was added in Ruby 1.8.6. DateTime.new0 was removed in Ruby 1.9.0. Thanks to Joshua Peek for reporting this. Closes #17606. Modify some of the equality test cases to cope with the differences between Ruby 1.8.6 and Ruby 1.9.0.","title":"Version 0.3.8 (tzdata v2008b) - 24-Mar-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-037-tzdata-v2008a-10-mar-2008","text":"Updated to tzdata version 2008a (http://article.gmane.org/gmane.comp.time.tz/2071).","title":"Version 0.3.7 (tzdata v2008a) - 10-Mar-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-036-tzdata-v2007k-1-jan-2008","text":"Updated to tzdata version 2007k (http://article.gmane.org/gmane.comp.time.tz/2029). Removed deprecated RubyGems autorequire option.","title":"Version 0.3.6 (tzdata v2007k) - 1-Jan-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-035-tzdata-v2007h-1-oct-2007","text":"Updated to tzdata version 2007h (http://article.gmane.org/gmane.comp.time.tz/1878).","title":"Version 0.3.5 (tzdata v2007h) - 1-Oct-2007"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-034-tzdata-v2007g-21-aug-2007","text":"Updated to tzdata version 2007g (http://article.gmane.org/gmane.comp.time.tz/1810).","title":"Version 0.3.4 (tzdata v2007g) - 21-Aug-2007"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-033-tzdata-v2006p-27-nov-2006","text":"Updated to tzdata version 2006p (http://article.gmane.org/gmane.comp.time.tz/1358).","title":"Version 0.3.3 (tzdata v2006p) - 27-Nov-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-032-tzdata-v2006n-11-oct-2006","text":"Updated to tzdata version 2006n (http://article.gmane.org/gmane.comp.time.tz/1288). Note that this release of tzdata removes the country Serbia and Montenegro (CS) and replaces it with separate Serbia (RS) and Montenegro (ME) entries.","title":"Version 0.3.2 (tzdata v2006n) - 11-Oct-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-031-tzdata-v2006j-21-aug-2006","text":"Remove colon from case statements to avoid warning in Ruby 1.8.5. #5198. Use temporary variable to avoid dynamic string warning from rdoc. Updated to tzdata version 2006j (http://article.gmane.org/gmane.comp.time.tz/1175).","title":"Version 0.3.1 (tzdata v2006j) - 21-Aug-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-030-tzdata-v2006g-17-jul-2006","text":"New timezone data format. Timezone data now occupies less space on disk and takes less memory once loaded. #4142, #4144. Timezone data is defined in modules rather than classes. Timezone instances returned by Timezone.get are no longer instances of data classes, but are instead instances of new DataTimezone and LinkedTimezone classes. Timezone instances can now be used with Marshal.dump and Marshal.load. #4240. Added a Timezone.get_proxy method that returns a TimezoneProxy object for a given identifier. Country index data is now defined in a single module that is independent of the Country class implementation. Country instances can now be used with Marshal.dump and Marshal.load. #4240. Country has a new zone_info method that returns CountryTimezone objects containing additional information (latitude, longitude and a description) relating to each Timezone. #4140. Timezones within a Country are now returned in an order that makes geographic sense. The zdumptest utility now checks local to utc conversions in addition to utc to local conversions. eql? method defined on Country and Timezone that is equivalent to ==. The == method of Timezone no longer raises an exception when passed an object with no identifier method. The == method of Country no longer raises an exception when passed an object with no code method. hash method defined on Country that returns the hash of the code. hash method defined on Timezone that returns the hash of the identifier. Miscellaneous API documentation corrections and improvements. Timezone definition and indexes are now excluded from rdoc (the contents were previously ignored with #:nodoc: anyway). Removed no longer needed #:nodoc: directives from timezone data files (which are now excluded from the rdoc build). Installation of the gem now causes rdoc API documentation to be generated. #4905. When optimizing transitions to generate zone definitions, check the UTC and standard offsets separately rather than just the total offset to UTC. Fixes an incorrect abbreviation issue with Europe/London, Europe/Dublin and Pacific/Auckland. Eliminated unnecessary .nil? calls to give a minor performance gain. Timezone.all and Timezone.all_identifiers now return all the Timezones/identifiers rather than just those associated with countries. #4146. Added all_data_zones, all_data_zone_identifiers, all_linked_zones and all_linked_zone_identifiers class methods to Timezone. Added a strftime method to Timezone that converts a time in UTC to local time and then returns it formatted. %Z is replaced with the Timezone abbreviation for the given time (for example, EST or EDT). #4143. Fix escaping of quotes in TZDataParser. This affected country names and descriptions of timezones within countries.","title":"Version 0.3.0 (tzdata v2006g) - 17-Jul-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-022-tzdata-v2006g-17-may-2006","text":"Use class-scoped instance variables to store the Timezone identifier and singleton instance. Loading a linked zone no longer causes the parent zone's identifier to be changed. The instance method of a linked zone class also now returns an instance of the linked zone class rather than the parent class. #4502. The zdumptest utility now compares the TZInfo zone identifier with the zdump zone identifier. The zdumptestall utility now exits if not supplied with enough parameters. Updated to tzdata version 2006g (http://article.gmane.org/gmane.comp.time.tz/1008).","title":"Version 0.2.2 (tzdata v2006g) - 17-May-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-021-tzdata-v2006d-17-apr-2006","text":"Fix a performance issue caused in 0.2.0 with Timezone.local_to_utc. Conversions performed on TimeOrDateTime instances passed to <=> are now cached as originally intended. Thanks to Michael Smedberg for spotting this. Fix a performance issue with the local_to_utc period search algorithm originally implemented in 0.1.0. The condition that was supposed to cause the search to terminate when enough periods had been found was only being evaluated in a small subset of cases. Thanks to Michael Smedberg and Jamis Buck for reporting this. Added abbreviation as an alias for TimezonePeriod.zone_identifier. Updated to tzdata version 2006d (http://article.gmane.org/gmane.comp.time.tz/936). Ignore any offset in DateTimes passed in (as is already done for Times). All of the following now refer to the same UTC time (15:40 on 17 April 2006). Previously, the DateTime in the second line would have been interpreted as 20:40. tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0).new_offset(Rational(5, 24))) tz.utc_to_local(Time.utc(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(Time.local(2006, 4, 17, 15, 40, 0))","title":"Version 0.2.1 (tzdata v2006d) - 17-Apr-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-020-tzdata-v2006c-3-apr-2006","text":"Use timestamps rather than DateTime objects in zone files for times between 1970 and 2037 (the range of Time). Don't convert passed in Time objects to DateTime in most cases (provides a substantial performance improvement). Allow integer timestamps (time in seconds since 1970-1-1) to be used as well as Time and DateTime objects in all public methods that take times as parameters. Tool to compare TZInfo conversions with output from zdump. TZDataParser zone generation algorithm rewritten. Now based on the zic code. TZInfo is now 100% compatible with zic/zdump output. Riyadh Solar Time zones now included again (generation time has been reduced with TZDataParser changes). Use binary mode when writing zone and country files to get Unix (\\n) new lines. Omit unnecessary quotes in zone identifier symbols. Omit the final transition to DST if there is a prior transition in the last year processed to standard time. Updated to tzdata version 2006c (http://article.gmane.org/gmane.comp.time.tz/920).","title":"Version 0.2.0 (tzdata v2006c) - 3-Apr-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-012-tzdata-v2006a-5-feb-2006","text":"Add lib directory to the load path when tzinfo is required. Makes it easier to use tzinfo gem when unpacked to vendor directory in rails. Updated to tzdata version 2006a (http://article.gmane.org/gmane.comp.time.tz/738). build_tz_classes rake task now handles running svn add and svn delete as new timezones and countries are added and old ones are removed. Return a better error when attempting to use a Timezone instance that was constructed with Timezone.new(nil). This will occur when using Rails' composed_of. When the timezone identifier in the database is null, attempting to use the Timezone will now result in an UnknownTimezone exception rather than a NameError.","title":"Version 0.1.2 (tzdata v2006a) - 5-Feb-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-011-tzdata-v2005q-18-dec-2005","text":"Timezones that are defined by a single unbounded period (e.g. UTC) now work again. Updated to tzdata version 2005q.","title":"Version 0.1.1 (tzdata v2005q) - 18-Dec-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-010-tzdata-v2005n-27-nov-2005","text":"period_for_local and local_to_utc now allow resolution of ambiguous times (e.g. when switching from daylight savings to standard time). The behaviour of these methods when faced with an ambiguous local time has now changed. If you are using these methods you should check the documentation. Thanks to Cliff Matthews for suggesting this change. Added require 'date' to timezone.rb (date isn't loaded by default in all environments). Use rake to build packages and documentation. License file is now included in gem distribution. Dates in definitions stored as Astronomical Julian Day numbers rather than as civil dates (improves performance creating DateTime instances). Added options to TZDataParser to allow generation of specific zones and countries. Moved TimezonePeriod class to timezone_period.rb. New TimezonePeriodList class to store TimezonePeriods for a timezone and perform searches for periods. Timezones now defined using blocks. TimezonePeriods are only instantiated when they are needed. Thanks to Jamis Buck for the suggestion. Add options to TZDataParser to allow exclusion of specific zones and countries. Exclude the Riyadh Solar Time zones. The rules are only for 1987 to 1989 and take a long time to generate and process. Riyadh Solar Time is no longer observed. The last TimezonePeriod for each Timezone is now written out with an unbounded rather than arbitrary end time. Construct the Rational offset in TimezonePeriod once when the TimezonePeriod is constructed rather than each time it is needed. Timezone and Country now keep a cache of loaded instances to avoid running require which can be slow on some platforms. Updated to tzdata version 2005n.","title":"Version 0.1.0 (tzdata v2005n) - 27-Nov-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-004-tzdata-v2005m-18-sep-2005","text":"Removed debug output accidentally included in the previous release. Fixed a bug in the generation of friendly zone identifiers (was inserting apostrophes into UTC, GMT, etc). Fixed Country <=> operator (was comparing non-existent attribute) Fixed Timezone.period_for_local error when period not found. Added testcases for Timezone, TimezoneProxy, TimezonePeriod, Country and some selected timezones.","title":"Version 0.0.4 (tzdata v2005m) - 18-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-003-tzdata-v2005m-17-sep-2005","text":"Reduced visibility of some methods added in Timezone#setup and Country#setup. Added name method to Timezone (returns the identifier). Added friendly_identifier method to Timezone. Returns a more friendly version of the identifier. Added to_s method to Timezone. Returns the friendly identifier. Added == and <=> operators to Timezone (compares identifiers). Timezone now includes Comparable. Added to_s method to Country. Added == and <=> operators to Country (compares ISO 3166 country codes). Country now includes Comparable. New TimezoneProxy class that behaves the same as a Timezone but doesn't actually load in its definition until it is actually required. Modified Timezone and Country methods that return Timezones to return TimezoneProxy instances instead. This makes these methods much quicker. In Ruby on Rails, you can now show a drop-down list of all timezones using the Rails time_zone_select helper method: <%= time_zone_select 'user', 'time_zone', TZInfo::Timezone.all.sort, :model => TZInfo::Timezone %>","title":"Version 0.0.3 (tzdata v2005m) - 17-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-002-tzdata-v2005m-13-sep-2005","text":"Country and Timezone data is now loaded into class rather than instance variables. This makes Timezone links more efficient and saves memory if creating specific Timezone and Country classes directly. TimezonePeriod zone_identifier is now defined as a symbol to save memory (was previously a string). TimezonePeriod zone_identifiers that were previously '' are now :Unknown. Timezones and Countries can now be returned using Timezone.new(identifier) and Country.new(identifier). When passed an identifier, the new method calls get to return an instance of the specified timezone or country. Added new class methods to Timezone to return sets of zones and identifiers. Thanks to Scott Barron of Lunchbox Software for the suggestions in his article about using TZInfo with Rails (http://lunchroom.lunchboxsoftware.com/pages/tzinfo_rails)","title":"Version 0.0.2 (tzdata v2005m) - 13-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.2/CHANGES/#version-001-tzdata-v2005m-29-aug-2005","text":"First release.","title":"Version 0.0.1 (tzdata v2005m) - 29-Aug-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/","text":"TZInfo - Ruby Timezone Library TZInfo provides daylight savings aware transformations between times in different timezones. Data Sources TZInfo requires a source of timezone data. There are two built-in options: The TZInfo::Data library (the tzinfo-data gem). TZInfo::Data contains a set of Ruby modules that are generated from the IANA Time Zone Database . A zoneinfo directory. Most Unix-like systems include a zoneinfo directory containing timezone definitions. These are also generated from the IANA Time Zone Database . By default, TZInfo::Data will be used. If TZInfo::Data is not available (i.e. if require 'tzinfo/data' fails), then TZInfo will search for a zoneinfo directory instead (using the search path specified by TZInfo::ZoneinfoDataSource::DEFAULT_SEARCH_PATH ). If no data source can be found, a TZInfo::DataSourceNotFound exception will be raised when TZInfo is used. Further information is available in the wiki to help with resolving TZInfo::DataSourceNotFound errors. The default data source selection can be overridden using TZInfo::DataSource.set . Custom data sources can also be used. See TZInfo::DataSource.set for further details. Installation The TZInfo gem can be installed by running: gem install tzinfo To use the Ruby modules as the data source, TZInfo::Data will also need to be installed: gem install tzinfo-data Example Usage The following code will obtain the America/New_York timezone (as an instance of TZInfo::Timezone ) and convert a time in UTC to local New York time: require 'tzinfo' tz = TZInfo::Timezone.get('America/New_York') local = tz.utc_to_local(Time.utc(2005,8,29,15,35,0)) Note that the local Time returned will have a UTC timezone ( local.zone will return \"UTC\" ). This is because the Time class in older (but still supported by TZInfo) versions of Ruby can only handle two timezones: UTC and the system local timezone. To convert from a local time to UTC, the local_to_utc method can be used as follows: utc = tz.local_to_utc(local) Note that the timezone information of the local Time object is ignored (TZInfo will just read the date and time and treat them as if there were in the tz timezone). The following two lines will return the same result regardless of the system's local timezone: tz.local_to_utc(Time.local(2006,6,26,1,0,0)) tz.local_to_utc(Time.utc(2006,6,26,1,0,0)) To obtain information about the rules in force at a particular UTC or local time, the TZInfo::Timezone.period_for_utc and TZInfo::Timezone.period_for_local methods can be used. Both of these methods return TZInfo::TimezonePeriod objects. The following gets the identifier for the period (in this case EDT). period = tz.period_for_utc(Time.utc(2005,8,29,15,35,0)) id = period.zone_identifier The current local time in a Timezone can be obtained with the TZInfo::Timezone#now method: now = tz.now All methods in TZInfo that operate on a time can be used with either Time or DateTime instances or with Integer timestamps (i.e. as returned by Time#to_i ). The type of the values returned will match the type passed in. A list of all the available timezone identifiers can be obtained using the TZInfo::Timezone.all_identifiers method. TZInfo::Timezone.all can be called to get an Array of all the TZInfo::Timezone instances. Timezones can also be accessed by country (using an ISO 3166-1 alpha-2 country code). The following code retrieves the TZInfo::Country instance representing the USA (country code 'US') and then gets all the timezone identifiers used in the USA. us = TZInfo::Country.get('US') timezones = us.zone_identifiers The TZInfo::Country#zone_info method provides an additional description and geographic location for each timezone in a country. A list of all the available country codes can be obtained using the TZInfo::Country.all_codes method. TZInfo::Country.all can be called to get an Array of all the Country instances. For further detail, please refer to the API documentation for the TZInfo::Timezone and TZInfo::Country classes. Thread-Safety The TZInfo::Country and TZInfo::Timezone classes are thread-safe. It is safe to use class and instance methods of TZInfo::Country and TZInfo::Timezone in concurrently executing threads. Instances of both classes can be shared across thread boundaries. Documentation API documentation for TZInfo is available on RubyDoc.info . License TZInfo is released under the MIT license, see LICENSE for details. Source Code Source code for TZInfo is available on GitHub . Issue Tracker Please post any bugs, issues, feature requests or questions to the GitHub issue tracker .","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#tzinfo-ruby-timezone-library","text":"TZInfo provides daylight savings aware transformations between times in different timezones.","title":"TZInfo - Ruby Timezone Library"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#data-sources","text":"TZInfo requires a source of timezone data. There are two built-in options: The TZInfo::Data library (the tzinfo-data gem). TZInfo::Data contains a set of Ruby modules that are generated from the IANA Time Zone Database . A zoneinfo directory. Most Unix-like systems include a zoneinfo directory containing timezone definitions. These are also generated from the IANA Time Zone Database . By default, TZInfo::Data will be used. If TZInfo::Data is not available (i.e. if require 'tzinfo/data' fails), then TZInfo will search for a zoneinfo directory instead (using the search path specified by TZInfo::ZoneinfoDataSource::DEFAULT_SEARCH_PATH ). If no data source can be found, a TZInfo::DataSourceNotFound exception will be raised when TZInfo is used. Further information is available in the wiki to help with resolving TZInfo::DataSourceNotFound errors. The default data source selection can be overridden using TZInfo::DataSource.set . Custom data sources can also be used. See TZInfo::DataSource.set for further details.","title":"Data Sources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#installation","text":"The TZInfo gem can be installed by running: gem install tzinfo To use the Ruby modules as the data source, TZInfo::Data will also need to be installed: gem install tzinfo-data","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#example-usage","text":"The following code will obtain the America/New_York timezone (as an instance of TZInfo::Timezone ) and convert a time in UTC to local New York time: require 'tzinfo' tz = TZInfo::Timezone.get('America/New_York') local = tz.utc_to_local(Time.utc(2005,8,29,15,35,0)) Note that the local Time returned will have a UTC timezone ( local.zone will return \"UTC\" ). This is because the Time class in older (but still supported by TZInfo) versions of Ruby can only handle two timezones: UTC and the system local timezone. To convert from a local time to UTC, the local_to_utc method can be used as follows: utc = tz.local_to_utc(local) Note that the timezone information of the local Time object is ignored (TZInfo will just read the date and time and treat them as if there were in the tz timezone). The following two lines will return the same result regardless of the system's local timezone: tz.local_to_utc(Time.local(2006,6,26,1,0,0)) tz.local_to_utc(Time.utc(2006,6,26,1,0,0)) To obtain information about the rules in force at a particular UTC or local time, the TZInfo::Timezone.period_for_utc and TZInfo::Timezone.period_for_local methods can be used. Both of these methods return TZInfo::TimezonePeriod objects. The following gets the identifier for the period (in this case EDT). period = tz.period_for_utc(Time.utc(2005,8,29,15,35,0)) id = period.zone_identifier The current local time in a Timezone can be obtained with the TZInfo::Timezone#now method: now = tz.now All methods in TZInfo that operate on a time can be used with either Time or DateTime instances or with Integer timestamps (i.e. as returned by Time#to_i ). The type of the values returned will match the type passed in. A list of all the available timezone identifiers can be obtained using the TZInfo::Timezone.all_identifiers method. TZInfo::Timezone.all can be called to get an Array of all the TZInfo::Timezone instances. Timezones can also be accessed by country (using an ISO 3166-1 alpha-2 country code). The following code retrieves the TZInfo::Country instance representing the USA (country code 'US') and then gets all the timezone identifiers used in the USA. us = TZInfo::Country.get('US') timezones = us.zone_identifiers The TZInfo::Country#zone_info method provides an additional description and geographic location for each timezone in a country. A list of all the available country codes can be obtained using the TZInfo::Country.all_codes method. TZInfo::Country.all can be called to get an Array of all the Country instances. For further detail, please refer to the API documentation for the TZInfo::Timezone and TZInfo::Country classes.","title":"Example Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#thread-safety","text":"The TZInfo::Country and TZInfo::Timezone classes are thread-safe. It is safe to use class and instance methods of TZInfo::Country and TZInfo::Timezone in concurrently executing threads. Instances of both classes can be shared across thread boundaries.","title":"Thread-Safety"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#documentation","text":"API documentation for TZInfo is available on RubyDoc.info .","title":"Documentation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#license","text":"TZInfo is released under the MIT license, see LICENSE for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#source-code","text":"Source code for TZInfo is available on GitHub .","title":"Source Code"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/#issue-tracker","text":"Please post any bugs, issues, feature requests or questions to the GitHub issue tracker .","title":"Issue Tracker"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/","text":"Version 1.2.9 - 16-Dec-2020 Fixed an incorrect InvalidTimezoneIdentifier exception raised when loading a zoneinfo file that includes rules specifying an additional transition to the final defined offset (for example, Africa/Casablanca in version 2018e of the Time Zone Database). #123. Version 1.2.8 - 8-Nov-2020 Added support for handling \"slim\" format zoneinfo files that are produced by default by zic version 2020b and later. The POSIX-style TZ string is now used calculate DST transition times after the final defined transition in the file. The 64-bit section is now always used regardless of whether Time has support for 64-bit times. #120. Rubinius is no longer supported. Version 1.2.7 - 2-Apr-2020 Fixed 'wrong number of arguments' errors when running on JRuby 9.0. #114. Fixed warnings when running on Ruby 2.8. #112. Version 1.2.6 - 24-Dec-2019 Timezone#strftime('%s', time) will now return the correct number of seconds since the epoch. #91. Removed the unused TZInfo::RubyDataSource::REQUIRE_PATH constant. Fixed \"SecurityError: Insecure operation - require\" exceptions when loading data with recent Ruby releases in safe mode. Fixed warnings when running on Ruby 2.7. #106 and #111. Version 1.2.5 - 4-Feb-2018 Support recursively (deep) freezing Country and Timezone instances. #80. Allow negative daylight savings time offsets to be derived when reading from zoneinfo files. The utc_offset and std_offset are now derived correctly for Europe/Dublin in the 2018a and 2018b releases of the Time Zone Database. Version 1.2.4 - 26-Oct-2017 Ignore the leapseconds file that is included in zoneinfo directories installed with version 2017c and later of the Time Zone Database. Version 1.2.3 - 25-Mar-2017 Reduce the number of String objects allocated when loading zoneinfo files. #54. Make Timezone#friendly_identifier compatible with frozen string literals. Improve the algorithm for deriving the utc_offset from zoneinfo files. This now correctly handles Pacific/Apia switching from one side of the International Date Line to the other whilst observing daylight savings time. #66. Fix an UnknownTimezone exception when calling transitions_up_to or offsets_up_to on a TimezoneProxy instance obtained from Timezone.get_proxy. Allow the Factory zone to be obtained from the Zoneinfo data source. Ignore the /usr/share/zoneinfo/timeconfig symlink included in Slackware distributions. #64. Fix Timezone#strftime handling of %Z expansion when %Z is prefixed with more than one percent. #31. Support expansion of %z, %:z, %::z and %:::z to the UTC offset of the time zone in Timezone#strftime. #31 and #67. Version 1.2.2 - 8-Aug-2014 Fix an error with duplicates being returned by Timezone#all_country_zones and Timezone#all_country_zone_identifiers when used with tzinfo-data v1.2014.6 or later. Use the zone1970.tab file for country timezone data if it is found in the zoneinfo directory (and fallback to zone.tab if not). zone1970.tab was added in tzdata 2014f. zone.tab is now deprecated. Version 1.2.1 - 1-Jun-2014 Support zoneinfo files generated with zic version 2014c and later. On platforms that only support positive 32-bit timestamps, ensure that conversions are accurate from the epoch instead of just from the first transition after the epoch. Minor documentation improvements. Version 1.2.0 - 26-May-2014 Raise the minimum supported Ruby version to 1.8.7. Support loading system zoneinfo data on FreeBSD, OpenBSD and Solaris. Resolves #15. Add canonical_identifier and canonical_zone methods to Timezone. Resolves #16. Add a link to a DataSourceNotFound help page in the TZInfo::DataSourceNotFound exception message. Load iso3166.tab and zone.tab files as UTF-8. Fix Timezone#local_to_utc returning local Time instances on systems using UTC as the local time zone. Resolves #13. Fix == methods raising an exception when passed an instance of a different class by making <=> return nil if passed a non-comparable argument. Eliminate \"require 'rational'\" warnings. Resolves #10. Eliminate \"assigned but unused variable - info\" warnings. Resolves #11. Switch to minitest v5 for unit tests. Resolves #18. Version 1.1.0 - 25-Sep-2013 TZInfo is now thread safe. ThreadSafe::Cache is now used instead of Hash to cache Timezone and Country instances returned by Timezone.get and Country.get. The tzinfo gem now depends on thread_safe ~> 0.1. Added a transitions_up_to method to Timezone that returns a list of the times where the UTC offset of the timezone changes. Added an offsets_up_to method to Timezone that returns the set of offsets that have been observed in a defined timezone. Fixed a \"can't modify frozen String\" error when loading a Timezone from a zoneinfo file using an identifier String that is both tainted and frozen. Resolves #3. Support TZif3 format zoneinfo files (now produced by zic from tzcode version 2013e onwards). Support using YARD to generate documentation (added a .yardopts file). Ignore the +VERSION file included in the zoneinfo directory on Mac OS X. Added a note to the documentation concerning 32-bit zoneinfo files (as included with Mac OS X). Version 1.0.1 - 22-Jun-2013 Fix a test case failure when tests are run from a directory that contains a dot in the path (issue #29751). Version 1.0.0 - 2-Jun-2013 Allow TZInfo to be used with different data sources instead of just the built-in Ruby module data files. Include a data source that allows TZInfo to load data from the binary zoneinfo files produced by zic and included with many Linux and Unix-like distributions. Remove the definition and index Ruby modules from TZInfo and move them into a separate TZInfo::Data library (available as the tzinfo-data gem). Default to using the TZInfo::Data library as the data source if it is installed, otherwise use zoneinfo files instead. Preserve the nanoseconds of local timezone Time objects when performing conversions (issue #29705). Don't add the tzinfo lib directory to the search path when requiring 'tzinfo'. The tzinfo lib directory must now be in the search path before 'tzinfo' is required. Add utc_start_time, utc_end_time, local_start_time and local_end_time instance methods to TimezonePeriod. These return an identical value as the existing utc_start, utc_end, local_start and local_end methods, but return Time instances instead of DateTime. Make the start_transition, end_transition and offset properties of TimezonePeriod protected. To access properties of the period, callers should use other TimezonePeriod instance methods instead (issue #7655). Version 0.3.53 (tzdata v2017b) - 23-Mar-2017 Updated to tzdata version 2017b (https://mm.icann.org/pipermail/tz-announce/2017-March/000046.html). Version 0.3.52 (tzdata v2016h) - 28-Oct-2016 Updated to tzdata version 2016h (https://mm.icann.org/pipermail/tz-announce/2016-October/000042.html). Version 0.3.51 (tzdata v2016f) - 5-Jul-2016 Updated to tzdata version 2016f (https://mm.icann.org/pipermail/tz-announce/2016-July/000040.html). Version 0.3.50 (tzdata v2016e) - 14-Jun-2016 Updated to tzdata version 2016e (https://mm.icann.org/pipermail/tz-announce/2016-June/000039.html). Version 0.3.49 (tzdata v2016d) - 18-Apr-2016 Updated to tzdata version 2016d (https://mm.icann.org/pipermail/tz-announce/2016-April/000038.html). Version 0.3.48 (tzdata v2016c) - 23-Mar-2016 Updated to tzdata version 2016c (https://mm.icann.org/pipermail/tz-announce/2016-March/000037.html). Version 0.3.47 (tzdata v2016b) - 15-Mar-2016 Updated to tzdata version 2016b (https://mm.icann.org/pipermail/tz-announce/2016-March/000036.html). Version 0.3.46 (tzdata v2015g) - 2-Dec-2015 From version 2015e, the IANA time zone database uses non-ASCII characters in country names. Backport the encoding handling from TZInfo::Data to allow TZInfo 0.3.x to support Ruby 1.9 (which would otherwise fail with an invalid byte sequence error when loading the countries index). Resolves #41. Version 0.3.45 (tzdata v2015g) - 3-Oct-2015 Updated to tzdata version 2015g (https://mm.icann.org/pipermail/tz-announce/2015-October/000034.html). Version 0.3.44 (tzdata v2015d) - 24-Apr-2015 Updated to tzdata version 2015d (https://mm.icann.org/pipermail/tz-announce/2015-April/000031.html). Version 0.3.43 (tzdata v2015a) - 31-Jan-2015 Updated to tzdata version 2015a (https://mm.icann.org/pipermail/tz-announce/2015-January/000028.html). Version 0.3.42 (tzdata v2014i) - 23-Oct-2014 Updated to tzdata version 2014i (https://mm.icann.org/pipermail/tz-announce/2014-October/000026.html). Version 0.3.41 (tzdata v2014f) - 8-Aug-2014 Updated to tzdata version 2014f (https://mm.icann.org/pipermail/tz-announce/2014-August/000023.html). Version 0.3.40 (tzdata v2014e) - 10-Jul-2014 Updated to tzdata version 2014e (https://mm.icann.org/pipermail/tz-announce/2014-June/000022.html). Version 0.3.39 (tzdata v2014a) - 9-Mar-2014 Updated to tzdata version 2014a (https://mm.icann.org/pipermail/tz-announce/2014-March/000018.html). Version 0.3.38 (tzdata v2013g) - 8-Oct-2013 Updated to tzdata version 2013g (https://mm.icann.org/pipermail/tz-announce/2013-October/000015.html). Version 0.3.37 (tzdata v2013b) - 11-Mar-2013 Updated to tzdata version 2013b (https://mm.icann.org/pipermail/tz-announce/2013-March/000010.html). Version 0.3.36 (tzdata v2013a) - 3-Mar-2013 Updated to tzdata version 2013a (https://mm.icann.org/pipermail/tz-announce/2013-March/000009.html). Fix TimezoneTransitionInfo#eql? incorrectly returning false when running on Ruby 2.0. Change eql? and == implementations to test the class of the passed in object instead of checking individual properties with 'respond_to?'. Version 0.3.35 (tzdata v2012i) - 4-Nov-2012 Updated to tzdata version 2012i (https://mm.icann.org/pipermail/tz-announce/2012-November/000007.html). Version 0.3.34 (tzdata v2012h) - 27-Oct-2012 Updated to tzdata version 2012h (https://mm.icann.org/pipermail/tz-announce/2012-October/000006.html). Version 0.3.33 (tzdata v2012c) - 8-Apr-2012 Updated to tzdata version 2012c (https://mm.icann.org/pipermail/tz/2012-April/017627.html). Version 0.3.32 (tzdata v2012b) - 4-Mar-2012 Updated to tzdata version 2012b (https://mm.icann.org/pipermail/tz/2012-March/017524.html). Version 0.3.31 (tzdata v2011n) - 6-Nov-2011 Updated to tzdata version 2011n (https://mm.icann.org/pipermail/tz/2011-October/017201.html). Version 0.3.30 (tzdata v2011k) - 29-Sep-2011 Updated to tzdata version 2011k (https://mm.icann.org/pipermail/tz/2011-September/008889.html). Version 0.3.29 (tzdata v2011h) - 27-Jun-2011 Updated to tzdata version 2011h (https://mm.icann.org/pipermail/tz/2011-June/008576.html). Allow the default value of the local_to_utc and period_for_local dst parameter to be specified globally with a Timezone.default_dst attribute. Thanks to Kurt Werle for the suggestion and patch. Version 0.3.28 (tzdata v2011g) - 13-Jun-2011 Add support for Ruby 1.9.3 (trunk revision 31668 and later). Thanks to Aaron Patterson for reporting the problems running on the new version. Closes #29233. Version 0.3.27 (tzdata v2011g) - 26-Apr-2011 Updated to tzdata version 2011g (https://mm.icann.org/pipermail/tz/2011-April/016875.html). Version 0.3.26 (tzdata v2011e) - 2-Apr-2011 Updated to tzdata version 2011e (https://mm.icann.org/pipermail/tz/2011-April/016809.html). Version 0.3.25 (tzdata v2011d) - 14-Mar-2011 Updated to tzdata version 2011d (https://mm.icann.org/pipermail/tz/2011-March/016746.html). Version 0.3.24 (tzdata v2010o) - 15-Jan-2011 Updated to tzdata version 2010o (https://mm.icann.org/pipermail/tz/2010-November/016517.html). Version 0.3.23 (tzdata v2010l) - 19-Aug-2010 Updated to tzdata version 2010l (https://mm.icann.org/pipermail/tz/2010-August/016360.html). Version 0.3.22 (tzdata v2010j) - 29-May-2010 Corrected file permissions issue with 0.3.21 release. Version 0.3.21 (tzdata v2010j) - 28-May-2010 Updated to tzdata version 2010j (https://mm.icann.org/pipermail/tz/2010-May/016211.html). Change invalid timezone check to exclude characters not used in timezone identifiers and avoid 'character class has duplicated range' warnings with Ruby 1.9.2. Ruby 1.9.2 has deprecated \"require 'rational'\", but older versions of Ruby need rational to be required. Require rational only when the Rational module has not already been loaded. Remove circular requires (now a warning in Ruby 1.9.2). Instead of using requires in each file for dependencies, tzinfo.rb now requires all tzinfo files. If you were previously requiring files within the tzinfo directory (e.g. require 'tzinfo/timezone'), then you will now have to require 'tzinfo' instead. Version 0.3.20 (tzdata v2010i) - 19-Apr-2010 Updated to tzdata version 2010i (https://mm.icann.org/pipermail/tz/2010-April/016184.html). Version 0.3.19 (tzdata v2010h) - 5-Apr-2010 Updated to tzdata version 2010h (https://mm.icann.org/pipermail/tz/2010-April/016161.html). Version 0.3.18 (tzdata v2010g) - 29-Mar-2010 Updated to tzdata version 2010g (https://mm.icann.org/pipermail/tz/2010-March/016140.html). Version 0.3.17 (tzdata v2010e) - 8-Mar-2010 Updated to tzdata version 2010e (https://mm.icann.org/pipermail/tz/2010-March/016088.html). Version 0.3.16 (tzdata v2009u) - 5-Jan-2010 Support the use of '-' to denote '0' as an offset in the tz data files. Used for the first time in the SAVE field in tzdata v2009u. Updated to tzdata version 2009u (https://mm.icann.org/pipermail/tz/2009-December/016001.html). Version 0.3.15 (tzdata v2009p) - 26-Oct-2009 Updated to tzdata version 2009p (https://mm.icann.org/pipermail/tz/2009-October/015889.html). Added a description to the gem spec. List test files in test_files instead of files in the gem spec. Version 0.3.14 (tzdata v2009l) - 19-Aug-2009 Updated to tzdata version 2009l (https://mm.icann.org/pipermail/tz/2009-August/015729.html). Include current directory in load path to allow running tests on Ruby 1.9.2, which doesn't include it by default any more. Version 0.3.13 (tzdata v2009f) - 15-Apr-2009 Updated to tzdata version 2009f (https://mm.icann.org/pipermail/tz/2009-April/015544.html). Untaint the timezone module filename after validation to allow use with $SAFE == 1 (e.g. under mod_ruby). Thanks to Dmitry Borodaenko for the suggestion. Closes #25349. Version 0.3.12 (tzdata v2008i) - 12-Nov-2008 Updated to tzdata version 2008i (https://mm.icann.org/pipermail/tz/2008-October/015260.html). Version 0.3.11 (tzdata v2008g) - 7-Oct-2008 Updated to tzdata version 2008g (https://mm.icann.org/pipermail/tz/2008-October/015139.html). Support Ruby 1.9.0-5. Rational.new! has now been removed in Ruby 1.9. Only use Rational.new! if it is available (it is preferable in Ruby 1.8 for performance reasons). Thanks to Jeremy Kemper and Pratik Naik for reporting this. Closes #22312. Apply a patch from Pratik Naik to replace assert calls that have been deprecated in the Ruby svn trunk. Closes #22308. Version 0.3.10 (tzdata v2008f) - 16-Sep-2008 Updated to tzdata version 2008f (https://mm.icann.org/pipermail/tz/2008-September/015090.html). Version 0.3.9 (tzdata v2008c) - 27-May-2008 Updated to tzdata version 2008c (https://mm.icann.org/pipermail/tz/2008-May/014956.html). Support loading timezone data in the latest trunk versions of Ruby 1.9. Rational.new! is now private, so call it using Rational.send :new! instead. Thanks to Jeremy Kemper and Pratik Naik for spotting this. Closes #19184. Prevent warnings from being output when running Ruby with the -v or -w command line options. Thanks to Paul McMahon for the patch. Closes #19719. Version 0.3.8 (tzdata v2008b) - 24-Mar-2008 Updated to tzdata version 2008b (https://mm.icann.org/pipermail/tz/2008-March/014910.html). Support loading timezone data in Ruby 1.9.0. Use DateTime.new! if it is available instead of DateTime.new0 when constructing transition times. DateTime.new! was added in Ruby 1.8.6. DateTime.new0 was removed in Ruby 1.9.0. Thanks to Joshua Peek for reporting this. Closes #17606. Modify some of the equality test cases to cope with the differences between Ruby 1.8.6 and Ruby 1.9.0. Version 0.3.7 (tzdata v2008a) - 10-Mar-2008 Updated to tzdata version 2008a (https://mm.icann.org/pipermail/tz/2008-March/014851.html). Version 0.3.6 (tzdata v2007k) - 1-Jan-2008 Updated to tzdata version 2007k (https://mm.icann.org/pipermail/tz/2007-December/014765.html). Removed deprecated RubyGems autorequire option. Version 0.3.5 (tzdata v2007h) - 1-Oct-2007 Updated to tzdata version 2007h (https://mm.icann.org/pipermail/tz/2007-October/014585.html). Version 0.3.4 (tzdata v2007g) - 21-Aug-2007 Updated to tzdata version 2007g (https://mm.icann.org/pipermail/tz/2007-August/014499.html). Version 0.3.3 (tzdata v2006p) - 27-Nov-2006 Updated to tzdata version 2006p (https://mm.icann.org/pipermail/tz/2006-November/013999.html). Version 0.3.2 (tzdata v2006n) - 11-Oct-2006 Updated to tzdata version 2006n (https://mm.icann.org/pipermail/tz/2006-October/013911.html). Note that this release of tzdata removes the country Serbia and Montenegro (CS) and replaces it with separate Serbia (RS) and Montenegro (ME) entries. Version 0.3.1 (tzdata v2006j) - 21-Aug-2006 Remove colon from case statements to avoid warning in Ruby 1.8.5. #5198. Use temporary variable to avoid dynamic string warning from rdoc. Updated to tzdata version 2006j (https://mm.icann.org/pipermail/tz/2006-August/013767.html). Version 0.3.0 (tzdata v2006g) - 17-Jul-2006 New timezone data format. Timezone data now occupies less space on disk and takes less memory once loaded. #4142, #4144. Timezone data is defined in modules rather than classes. Timezone instances returned by Timezone.get are no longer instances of data classes, but are instead instances of new DataTimezone and LinkedTimezone classes. Timezone instances can now be used with Marshal.dump and Marshal.load. #4240. Added a Timezone.get_proxy method that returns a TimezoneProxy object for a given identifier. Country index data is now defined in a single module that is independent of the Country class implementation. Country instances can now be used with Marshal.dump and Marshal.load. #4240. Country has a new zone_info method that returns CountryTimezone objects containing additional information (latitude, longitude and a description) relating to each Timezone. #4140. Timezones within a Country are now returned in an order that makes geographic sense. The zdumptest utility now checks local to utc conversions in addition to utc to local conversions. eql? method defined on Country and Timezone that is equivalent to ==. The == method of Timezone no longer raises an exception when passed an object with no identifier method. The == method of Country no longer raises an exception when passed an object with no code method. hash method defined on Country that returns the hash of the code. hash method defined on Timezone that returns the hash of the identifier. Miscellaneous API documentation corrections and improvements. Timezone definition and indexes are now excluded from rdoc (the contents were previously ignored with #:nodoc: anyway). Removed no longer needed #:nodoc: directives from timezone data files (which are now excluded from the rdoc build). Installation of the gem now causes rdoc API documentation to be generated. #4905. When optimizing transitions to generate zone definitions, check the UTC and standard offsets separately rather than just the total offset to UTC. Fixes an incorrect abbreviation issue with Europe/London, Europe/Dublin and Pacific/Auckland. Eliminated unnecessary .nil? calls to give a minor performance gain. Timezone.all and Timezone.all_identifiers now return all the Timezones/identifiers rather than just those associated with countries. #4146. Added all_data_zones, all_data_zone_identifiers, all_linked_zones and all_linked_zone_identifiers class methods to Timezone. Added a strftime method to Timezone that converts a time in UTC to local time and then returns it formatted. %Z is replaced with the Timezone abbreviation for the given time (for example, EST or EDT). #4143. Fix escaping of quotes in TZDataParser. This affected country names and descriptions of timezones within countries. Version 0.2.2 (tzdata v2006g) - 17-May-2006 Use class-scoped instance variables to store the Timezone identifier and singleton instance. Loading a linked zone no longer causes the parent zone's identifier to be changed. The instance method of a linked zone class also now returns an instance of the linked zone class rather than the parent class. #4502. The zdumptest utility now compares the TZInfo zone identifier with the zdump zone identifier. The zdumptestall utility now exits if not supplied with enough parameters. Updated to tzdata version 2006g (https://mm.icann.org/pipermail/tz/2006-May/013590.html). Version 0.2.1 (tzdata v2006d) - 17-Apr-2006 Fix a performance issue caused in 0.2.0 with Timezone.local_to_utc. Conversions performed on TimeOrDateTime instances passed to <=> are now cached as originally intended. Thanks to Michael Smedberg for spotting this. Fix a performance issue with the local_to_utc period search algorithm originally implemented in 0.1.0. The condition that was supposed to cause the search to terminate when enough periods had been found was only being evaluated in a small subset of cases. Thanks to Michael Smedberg and Jamis Buck for reporting this. Added abbreviation as an alias for TimezonePeriod.zone_identifier. Updated to tzdata version 2006d (https://mm.icann.org/pipermail/tz/2006-April/013517.html). Ignore any offset in DateTimes passed in (as is already done for Times). All of the following now refer to the same UTC time (15:40 on 17 April 2006). Previously, the DateTime in the second line would have been interpreted as 20:40. tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0).new_offset(Rational(5, 24))) tz.utc_to_local(Time.utc(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(Time.local(2006, 4, 17, 15, 40, 0)) Version 0.2.0 (tzdata v2006c) - 3-Apr-2006 Use timestamps rather than DateTime objects in zone files for times between 1970 and 2037 (the range of Time). Don't convert passed in Time objects to DateTime in most cases (provides a substantial performance improvement). Allow integer timestamps (time in seconds since 1970-1-1) to be used as well as Time and DateTime objects in all public methods that take times as parameters. Tool to compare TZInfo conversions with output from zdump. TZDataParser zone generation algorithm rewritten. Now based on the zic code. TZInfo is now 100% compatible with zic/zdump output. Riyadh Solar Time zones now included again (generation time has been reduced with TZDataParser changes). Use binary mode when writing zone and country files to get Unix (\\n) new lines. Omit unnecessary quotes in zone identifier symbols. Omit the final transition to DST if there is a prior transition in the last year processed to standard time. Updated to tzdata version 2006c (https://mm.icann.org/pipermail/tz/2006-April/013500.html). Version 0.1.2 (tzdata v2006a) - 5-Feb-2006 Add lib directory to the load path when tzinfo is required. Makes it easier to use tzinfo gem when unpacked to vendor directory in rails. Updated to tzdata version 2006a (https://mm.icann.org/pipermail/tz/2006-January/013311.html). build_tz_classes rake task now handles running svn add and svn delete as new timezones and countries are added and old ones are removed. Return a better error when attempting to use a Timezone instance that was constructed with Timezone.new(nil). This will occur when using Rails' composed_of. When the timezone identifier in the database is null, attempting to use the Timezone will now result in an UnknownTimezone exception rather than a NameError. Version 0.1.1 (tzdata v2005q) - 18-Dec-2005 Timezones that are defined by a single unbounded period (e.g. UTC) now work again. Updated to tzdata version 2005q. Version 0.1.0 (tzdata v2005n) - 27-Nov-2005 period_for_local and local_to_utc now allow resolution of ambiguous times (e.g. when switching from daylight savings to standard time). The behaviour of these methods when faced with an ambiguous local time has now changed. If you are using these methods you should check the documentation. Thanks to Cliff Matthews for suggesting this change. Added require 'date' to timezone.rb (date isn't loaded by default in all environments). Use rake to build packages and documentation. License file is now included in gem distribution. Dates in definitions stored as Astronomical Julian Day numbers rather than as civil dates (improves performance creating DateTime instances). Added options to TZDataParser to allow generation of specific zones and countries. Moved TimezonePeriod class to timezone_period.rb. New TimezonePeriodList class to store TimezonePeriods for a timezone and perform searches for periods. Timezones now defined using blocks. TimezonePeriods are only instantiated when they are needed. Thanks to Jamis Buck for the suggestion. Add options to TZDataParser to allow exclusion of specific zones and countries. Exclude the Riyadh Solar Time zones. The rules are only for 1987 to 1989 and take a long time to generate and process. Riyadh Solar Time is no longer observed. The last TimezonePeriod for each Timezone is now written out with an unbounded rather than arbitrary end time. Construct the Rational offset in TimezonePeriod once when the TimezonePeriod is constructed rather than each time it is needed. Timezone and Country now keep a cache of loaded instances to avoid running require which can be slow on some platforms. Updated to tzdata version 2005n. Version 0.0.4 (tzdata v2005m) - 18-Sep-2005 Removed debug output accidentally included in the previous release. Fixed a bug in the generation of friendly zone identifiers (was inserting apostrophes into UTC, GMT, etc). Fixed Country <=> operator (was comparing non-existent attribute) Fixed Timezone.period_for_local error when period not found. Added testcases for Timezone, TimezoneProxy, TimezonePeriod, Country and some selected timezones. Version 0.0.3 (tzdata v2005m) - 17-Sep-2005 Reduced visibility of some methods added in Timezone#setup and Country#setup. Added name method to Timezone (returns the identifier). Added friendly_identifier method to Timezone. Returns a more friendly version of the identifier. Added to_s method to Timezone. Returns the friendly identifier. Added == and <=> operators to Timezone (compares identifiers). Timezone now includes Comparable. Added to_s method to Country. Added == and <=> operators to Country (compares ISO 3166 country codes). Country now includes Comparable. New TimezoneProxy class that behaves the same as a Timezone but doesn't actually load in its definition until it is actually required. Modified Timezone and Country methods that return Timezones to return TimezoneProxy instances instead. This makes these methods much quicker. In Ruby on Rails, you can now show a drop-down list of all timezones using the Rails time_zone_select helper method: <%= time_zone_select 'user', 'time_zone', TZInfo::Timezone.all.sort, :model => TZInfo::Timezone %> Version 0.0.2 (tzdata v2005m) - 13-Sep-2005 Country and Timezone data is now loaded into class rather than instance variables. This makes Timezone links more efficient and saves memory if creating specific Timezone and Country classes directly. TimezonePeriod zone_identifier is now defined as a symbol to save memory (was previously a string). TimezonePeriod zone_identifiers that were previously '' are now :Unknown. Timezones and Countries can now be returned using Timezone.new(identifier) and Country.new(identifier). When passed an identifier, the new method calls get to return an instance of the specified timezone or country. Added new class methods to Timezone to return sets of zones and identifiers. Thanks to Scott Barron of Lunchbox Software for the suggestions in his article about using TZInfo with Rails (https://web.archive.org/web/20060425190845/http://lunchroom.lunchboxsoftware.com/pages/tzinfo_rails) Version 0.0.1 (tzdata v2005m) - 29-Aug-2005 First release.","title":"CHANGES"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-129-16-dec-2020","text":"Fixed an incorrect InvalidTimezoneIdentifier exception raised when loading a zoneinfo file that includes rules specifying an additional transition to the final defined offset (for example, Africa/Casablanca in version 2018e of the Time Zone Database). #123.","title":"Version 1.2.9 - 16-Dec-2020"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-128-8-nov-2020","text":"Added support for handling \"slim\" format zoneinfo files that are produced by default by zic version 2020b and later. The POSIX-style TZ string is now used calculate DST transition times after the final defined transition in the file. The 64-bit section is now always used regardless of whether Time has support for 64-bit times. #120. Rubinius is no longer supported.","title":"Version 1.2.8 - 8-Nov-2020"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-127-2-apr-2020","text":"Fixed 'wrong number of arguments' errors when running on JRuby 9.0. #114. Fixed warnings when running on Ruby 2.8. #112.","title":"Version 1.2.7 - 2-Apr-2020"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-126-24-dec-2019","text":"Timezone#strftime('%s', time) will now return the correct number of seconds since the epoch. #91. Removed the unused TZInfo::RubyDataSource::REQUIRE_PATH constant. Fixed \"SecurityError: Insecure operation - require\" exceptions when loading data with recent Ruby releases in safe mode. Fixed warnings when running on Ruby 2.7. #106 and #111.","title":"Version 1.2.6 - 24-Dec-2019"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-125-4-feb-2018","text":"Support recursively (deep) freezing Country and Timezone instances. #80. Allow negative daylight savings time offsets to be derived when reading from zoneinfo files. The utc_offset and std_offset are now derived correctly for Europe/Dublin in the 2018a and 2018b releases of the Time Zone Database.","title":"Version 1.2.5 - 4-Feb-2018"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-124-26-oct-2017","text":"Ignore the leapseconds file that is included in zoneinfo directories installed with version 2017c and later of the Time Zone Database.","title":"Version 1.2.4 - 26-Oct-2017"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-123-25-mar-2017","text":"Reduce the number of String objects allocated when loading zoneinfo files. #54. Make Timezone#friendly_identifier compatible with frozen string literals. Improve the algorithm for deriving the utc_offset from zoneinfo files. This now correctly handles Pacific/Apia switching from one side of the International Date Line to the other whilst observing daylight savings time. #66. Fix an UnknownTimezone exception when calling transitions_up_to or offsets_up_to on a TimezoneProxy instance obtained from Timezone.get_proxy. Allow the Factory zone to be obtained from the Zoneinfo data source. Ignore the /usr/share/zoneinfo/timeconfig symlink included in Slackware distributions. #64. Fix Timezone#strftime handling of %Z expansion when %Z is prefixed with more than one percent. #31. Support expansion of %z, %:z, %::z and %:::z to the UTC offset of the time zone in Timezone#strftime. #31 and #67.","title":"Version 1.2.3 - 25-Mar-2017"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-122-8-aug-2014","text":"Fix an error with duplicates being returned by Timezone#all_country_zones and Timezone#all_country_zone_identifiers when used with tzinfo-data v1.2014.6 or later. Use the zone1970.tab file for country timezone data if it is found in the zoneinfo directory (and fallback to zone.tab if not). zone1970.tab was added in tzdata 2014f. zone.tab is now deprecated.","title":"Version 1.2.2 - 8-Aug-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-121-1-jun-2014","text":"Support zoneinfo files generated with zic version 2014c and later. On platforms that only support positive 32-bit timestamps, ensure that conversions are accurate from the epoch instead of just from the first transition after the epoch. Minor documentation improvements.","title":"Version 1.2.1 - 1-Jun-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-120-26-may-2014","text":"Raise the minimum supported Ruby version to 1.8.7. Support loading system zoneinfo data on FreeBSD, OpenBSD and Solaris. Resolves #15. Add canonical_identifier and canonical_zone methods to Timezone. Resolves #16. Add a link to a DataSourceNotFound help page in the TZInfo::DataSourceNotFound exception message. Load iso3166.tab and zone.tab files as UTF-8. Fix Timezone#local_to_utc returning local Time instances on systems using UTC as the local time zone. Resolves #13. Fix == methods raising an exception when passed an instance of a different class by making <=> return nil if passed a non-comparable argument. Eliminate \"require 'rational'\" warnings. Resolves #10. Eliminate \"assigned but unused variable - info\" warnings. Resolves #11. Switch to minitest v5 for unit tests. Resolves #18.","title":"Version 1.2.0 - 26-May-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-110-25-sep-2013","text":"TZInfo is now thread safe. ThreadSafe::Cache is now used instead of Hash to cache Timezone and Country instances returned by Timezone.get and Country.get. The tzinfo gem now depends on thread_safe ~> 0.1. Added a transitions_up_to method to Timezone that returns a list of the times where the UTC offset of the timezone changes. Added an offsets_up_to method to Timezone that returns the set of offsets that have been observed in a defined timezone. Fixed a \"can't modify frozen String\" error when loading a Timezone from a zoneinfo file using an identifier String that is both tainted and frozen. Resolves #3. Support TZif3 format zoneinfo files (now produced by zic from tzcode version 2013e onwards). Support using YARD to generate documentation (added a .yardopts file). Ignore the +VERSION file included in the zoneinfo directory on Mac OS X. Added a note to the documentation concerning 32-bit zoneinfo files (as included with Mac OS X).","title":"Version 1.1.0 - 25-Sep-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-101-22-jun-2013","text":"Fix a test case failure when tests are run from a directory that contains a dot in the path (issue #29751).","title":"Version 1.0.1 - 22-Jun-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-100-2-jun-2013","text":"Allow TZInfo to be used with different data sources instead of just the built-in Ruby module data files. Include a data source that allows TZInfo to load data from the binary zoneinfo files produced by zic and included with many Linux and Unix-like distributions. Remove the definition and index Ruby modules from TZInfo and move them into a separate TZInfo::Data library (available as the tzinfo-data gem). Default to using the TZInfo::Data library as the data source if it is installed, otherwise use zoneinfo files instead. Preserve the nanoseconds of local timezone Time objects when performing conversions (issue #29705). Don't add the tzinfo lib directory to the search path when requiring 'tzinfo'. The tzinfo lib directory must now be in the search path before 'tzinfo' is required. Add utc_start_time, utc_end_time, local_start_time and local_end_time instance methods to TimezonePeriod. These return an identical value as the existing utc_start, utc_end, local_start and local_end methods, but return Time instances instead of DateTime. Make the start_transition, end_transition and offset properties of TimezonePeriod protected. To access properties of the period, callers should use other TimezonePeriod instance methods instead (issue #7655).","title":"Version 1.0.0 - 2-Jun-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0353-tzdata-v2017b-23-mar-2017","text":"Updated to tzdata version 2017b (https://mm.icann.org/pipermail/tz-announce/2017-March/000046.html).","title":"Version 0.3.53 (tzdata v2017b) - 23-Mar-2017"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0352-tzdata-v2016h-28-oct-2016","text":"Updated to tzdata version 2016h (https://mm.icann.org/pipermail/tz-announce/2016-October/000042.html).","title":"Version 0.3.52 (tzdata v2016h) - 28-Oct-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0351-tzdata-v2016f-5-jul-2016","text":"Updated to tzdata version 2016f (https://mm.icann.org/pipermail/tz-announce/2016-July/000040.html).","title":"Version 0.3.51 (tzdata v2016f) - 5-Jul-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0350-tzdata-v2016e-14-jun-2016","text":"Updated to tzdata version 2016e (https://mm.icann.org/pipermail/tz-announce/2016-June/000039.html).","title":"Version 0.3.50 (tzdata v2016e) - 14-Jun-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0349-tzdata-v2016d-18-apr-2016","text":"Updated to tzdata version 2016d (https://mm.icann.org/pipermail/tz-announce/2016-April/000038.html).","title":"Version 0.3.49 (tzdata v2016d) - 18-Apr-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0348-tzdata-v2016c-23-mar-2016","text":"Updated to tzdata version 2016c (https://mm.icann.org/pipermail/tz-announce/2016-March/000037.html).","title":"Version 0.3.48 (tzdata v2016c) - 23-Mar-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0347-tzdata-v2016b-15-mar-2016","text":"Updated to tzdata version 2016b (https://mm.icann.org/pipermail/tz-announce/2016-March/000036.html).","title":"Version 0.3.47 (tzdata v2016b) - 15-Mar-2016"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0346-tzdata-v2015g-2-dec-2015","text":"From version 2015e, the IANA time zone database uses non-ASCII characters in country names. Backport the encoding handling from TZInfo::Data to allow TZInfo 0.3.x to support Ruby 1.9 (which would otherwise fail with an invalid byte sequence error when loading the countries index). Resolves #41.","title":"Version 0.3.46 (tzdata v2015g) - 2-Dec-2015"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0345-tzdata-v2015g-3-oct-2015","text":"Updated to tzdata version 2015g (https://mm.icann.org/pipermail/tz-announce/2015-October/000034.html).","title":"Version 0.3.45 (tzdata v2015g) - 3-Oct-2015"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0344-tzdata-v2015d-24-apr-2015","text":"Updated to tzdata version 2015d (https://mm.icann.org/pipermail/tz-announce/2015-April/000031.html).","title":"Version 0.3.44 (tzdata v2015d) - 24-Apr-2015"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0343-tzdata-v2015a-31-jan-2015","text":"Updated to tzdata version 2015a (https://mm.icann.org/pipermail/tz-announce/2015-January/000028.html).","title":"Version 0.3.43 (tzdata v2015a) - 31-Jan-2015"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0342-tzdata-v2014i-23-oct-2014","text":"Updated to tzdata version 2014i (https://mm.icann.org/pipermail/tz-announce/2014-October/000026.html).","title":"Version 0.3.42 (tzdata v2014i) - 23-Oct-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0341-tzdata-v2014f-8-aug-2014","text":"Updated to tzdata version 2014f (https://mm.icann.org/pipermail/tz-announce/2014-August/000023.html).","title":"Version 0.3.41 (tzdata v2014f) - 8-Aug-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0340-tzdata-v2014e-10-jul-2014","text":"Updated to tzdata version 2014e (https://mm.icann.org/pipermail/tz-announce/2014-June/000022.html).","title":"Version 0.3.40 (tzdata v2014e) - 10-Jul-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0339-tzdata-v2014a-9-mar-2014","text":"Updated to tzdata version 2014a (https://mm.icann.org/pipermail/tz-announce/2014-March/000018.html).","title":"Version 0.3.39 (tzdata v2014a) - 9-Mar-2014"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0338-tzdata-v2013g-8-oct-2013","text":"Updated to tzdata version 2013g (https://mm.icann.org/pipermail/tz-announce/2013-October/000015.html).","title":"Version 0.3.38 (tzdata v2013g) - 8-Oct-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0337-tzdata-v2013b-11-mar-2013","text":"Updated to tzdata version 2013b (https://mm.icann.org/pipermail/tz-announce/2013-March/000010.html).","title":"Version 0.3.37 (tzdata v2013b) - 11-Mar-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0336-tzdata-v2013a-3-mar-2013","text":"Updated to tzdata version 2013a (https://mm.icann.org/pipermail/tz-announce/2013-March/000009.html). Fix TimezoneTransitionInfo#eql? incorrectly returning false when running on Ruby 2.0. Change eql? and == implementations to test the class of the passed in object instead of checking individual properties with 'respond_to?'.","title":"Version 0.3.36 (tzdata v2013a) - 3-Mar-2013"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0335-tzdata-v2012i-4-nov-2012","text":"Updated to tzdata version 2012i (https://mm.icann.org/pipermail/tz-announce/2012-November/000007.html).","title":"Version 0.3.35 (tzdata v2012i) - 4-Nov-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0334-tzdata-v2012h-27-oct-2012","text":"Updated to tzdata version 2012h (https://mm.icann.org/pipermail/tz-announce/2012-October/000006.html).","title":"Version 0.3.34 (tzdata v2012h) - 27-Oct-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0333-tzdata-v2012c-8-apr-2012","text":"Updated to tzdata version 2012c (https://mm.icann.org/pipermail/tz/2012-April/017627.html).","title":"Version 0.3.33 (tzdata v2012c) - 8-Apr-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0332-tzdata-v2012b-4-mar-2012","text":"Updated to tzdata version 2012b (https://mm.icann.org/pipermail/tz/2012-March/017524.html).","title":"Version 0.3.32 (tzdata v2012b) - 4-Mar-2012"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0331-tzdata-v2011n-6-nov-2011","text":"Updated to tzdata version 2011n (https://mm.icann.org/pipermail/tz/2011-October/017201.html).","title":"Version 0.3.31 (tzdata v2011n) - 6-Nov-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0330-tzdata-v2011k-29-sep-2011","text":"Updated to tzdata version 2011k (https://mm.icann.org/pipermail/tz/2011-September/008889.html).","title":"Version 0.3.30 (tzdata v2011k) - 29-Sep-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0329-tzdata-v2011h-27-jun-2011","text":"Updated to tzdata version 2011h (https://mm.icann.org/pipermail/tz/2011-June/008576.html). Allow the default value of the local_to_utc and period_for_local dst parameter to be specified globally with a Timezone.default_dst attribute. Thanks to Kurt Werle for the suggestion and patch.","title":"Version 0.3.29 (tzdata v2011h) - 27-Jun-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0328-tzdata-v2011g-13-jun-2011","text":"Add support for Ruby 1.9.3 (trunk revision 31668 and later). Thanks to Aaron Patterson for reporting the problems running on the new version. Closes #29233.","title":"Version 0.3.28 (tzdata v2011g) - 13-Jun-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0327-tzdata-v2011g-26-apr-2011","text":"Updated to tzdata version 2011g (https://mm.icann.org/pipermail/tz/2011-April/016875.html).","title":"Version 0.3.27 (tzdata v2011g) - 26-Apr-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0326-tzdata-v2011e-2-apr-2011","text":"Updated to tzdata version 2011e (https://mm.icann.org/pipermail/tz/2011-April/016809.html).","title":"Version 0.3.26 (tzdata v2011e) - 2-Apr-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0325-tzdata-v2011d-14-mar-2011","text":"Updated to tzdata version 2011d (https://mm.icann.org/pipermail/tz/2011-March/016746.html).","title":"Version 0.3.25 (tzdata v2011d) - 14-Mar-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0324-tzdata-v2010o-15-jan-2011","text":"Updated to tzdata version 2010o (https://mm.icann.org/pipermail/tz/2010-November/016517.html).","title":"Version 0.3.24 (tzdata v2010o) - 15-Jan-2011"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0323-tzdata-v2010l-19-aug-2010","text":"Updated to tzdata version 2010l (https://mm.icann.org/pipermail/tz/2010-August/016360.html).","title":"Version 0.3.23 (tzdata v2010l) - 19-Aug-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0322-tzdata-v2010j-29-may-2010","text":"Corrected file permissions issue with 0.3.21 release.","title":"Version 0.3.22 (tzdata v2010j) - 29-May-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0321-tzdata-v2010j-28-may-2010","text":"Updated to tzdata version 2010j (https://mm.icann.org/pipermail/tz/2010-May/016211.html). Change invalid timezone check to exclude characters not used in timezone identifiers and avoid 'character class has duplicated range' warnings with Ruby 1.9.2. Ruby 1.9.2 has deprecated \"require 'rational'\", but older versions of Ruby need rational to be required. Require rational only when the Rational module has not already been loaded. Remove circular requires (now a warning in Ruby 1.9.2). Instead of using requires in each file for dependencies, tzinfo.rb now requires all tzinfo files. If you were previously requiring files within the tzinfo directory (e.g. require 'tzinfo/timezone'), then you will now have to require 'tzinfo' instead.","title":"Version 0.3.21 (tzdata v2010j) - 28-May-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0320-tzdata-v2010i-19-apr-2010","text":"Updated to tzdata version 2010i (https://mm.icann.org/pipermail/tz/2010-April/016184.html).","title":"Version 0.3.20 (tzdata v2010i) - 19-Apr-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0319-tzdata-v2010h-5-apr-2010","text":"Updated to tzdata version 2010h (https://mm.icann.org/pipermail/tz/2010-April/016161.html).","title":"Version 0.3.19 (tzdata v2010h) - 5-Apr-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0318-tzdata-v2010g-29-mar-2010","text":"Updated to tzdata version 2010g (https://mm.icann.org/pipermail/tz/2010-March/016140.html).","title":"Version 0.3.18 (tzdata v2010g) - 29-Mar-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0317-tzdata-v2010e-8-mar-2010","text":"Updated to tzdata version 2010e (https://mm.icann.org/pipermail/tz/2010-March/016088.html).","title":"Version 0.3.17 (tzdata v2010e) - 8-Mar-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0316-tzdata-v2009u-5-jan-2010","text":"Support the use of '-' to denote '0' as an offset in the tz data files. Used for the first time in the SAVE field in tzdata v2009u. Updated to tzdata version 2009u (https://mm.icann.org/pipermail/tz/2009-December/016001.html).","title":"Version 0.3.16 (tzdata v2009u) - 5-Jan-2010"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0315-tzdata-v2009p-26-oct-2009","text":"Updated to tzdata version 2009p (https://mm.icann.org/pipermail/tz/2009-October/015889.html). Added a description to the gem spec. List test files in test_files instead of files in the gem spec.","title":"Version 0.3.15 (tzdata v2009p) - 26-Oct-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0314-tzdata-v2009l-19-aug-2009","text":"Updated to tzdata version 2009l (https://mm.icann.org/pipermail/tz/2009-August/015729.html). Include current directory in load path to allow running tests on Ruby 1.9.2, which doesn't include it by default any more.","title":"Version 0.3.14 (tzdata v2009l) - 19-Aug-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0313-tzdata-v2009f-15-apr-2009","text":"Updated to tzdata version 2009f (https://mm.icann.org/pipermail/tz/2009-April/015544.html). Untaint the timezone module filename after validation to allow use with $SAFE == 1 (e.g. under mod_ruby). Thanks to Dmitry Borodaenko for the suggestion. Closes #25349.","title":"Version 0.3.13 (tzdata v2009f) - 15-Apr-2009"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0312-tzdata-v2008i-12-nov-2008","text":"Updated to tzdata version 2008i (https://mm.icann.org/pipermail/tz/2008-October/015260.html).","title":"Version 0.3.12 (tzdata v2008i) - 12-Nov-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0311-tzdata-v2008g-7-oct-2008","text":"Updated to tzdata version 2008g (https://mm.icann.org/pipermail/tz/2008-October/015139.html). Support Ruby 1.9.0-5. Rational.new! has now been removed in Ruby 1.9. Only use Rational.new! if it is available (it is preferable in Ruby 1.8 for performance reasons). Thanks to Jeremy Kemper and Pratik Naik for reporting this. Closes #22312. Apply a patch from Pratik Naik to replace assert calls that have been deprecated in the Ruby svn trunk. Closes #22308.","title":"Version 0.3.11 (tzdata v2008g) - 7-Oct-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-0310-tzdata-v2008f-16-sep-2008","text":"Updated to tzdata version 2008f (https://mm.icann.org/pipermail/tz/2008-September/015090.html).","title":"Version 0.3.10 (tzdata v2008f) - 16-Sep-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-039-tzdata-v2008c-27-may-2008","text":"Updated to tzdata version 2008c (https://mm.icann.org/pipermail/tz/2008-May/014956.html). Support loading timezone data in the latest trunk versions of Ruby 1.9. Rational.new! is now private, so call it using Rational.send :new! instead. Thanks to Jeremy Kemper and Pratik Naik for spotting this. Closes #19184. Prevent warnings from being output when running Ruby with the -v or -w command line options. Thanks to Paul McMahon for the patch. Closes #19719.","title":"Version 0.3.9 (tzdata v2008c) - 27-May-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-038-tzdata-v2008b-24-mar-2008","text":"Updated to tzdata version 2008b (https://mm.icann.org/pipermail/tz/2008-March/014910.html). Support loading timezone data in Ruby 1.9.0. Use DateTime.new! if it is available instead of DateTime.new0 when constructing transition times. DateTime.new! was added in Ruby 1.8.6. DateTime.new0 was removed in Ruby 1.9.0. Thanks to Joshua Peek for reporting this. Closes #17606. Modify some of the equality test cases to cope with the differences between Ruby 1.8.6 and Ruby 1.9.0.","title":"Version 0.3.8 (tzdata v2008b) - 24-Mar-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-037-tzdata-v2008a-10-mar-2008","text":"Updated to tzdata version 2008a (https://mm.icann.org/pipermail/tz/2008-March/014851.html).","title":"Version 0.3.7 (tzdata v2008a) - 10-Mar-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-036-tzdata-v2007k-1-jan-2008","text":"Updated to tzdata version 2007k (https://mm.icann.org/pipermail/tz/2007-December/014765.html). Removed deprecated RubyGems autorequire option.","title":"Version 0.3.6 (tzdata v2007k) - 1-Jan-2008"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-035-tzdata-v2007h-1-oct-2007","text":"Updated to tzdata version 2007h (https://mm.icann.org/pipermail/tz/2007-October/014585.html).","title":"Version 0.3.5 (tzdata v2007h) - 1-Oct-2007"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-034-tzdata-v2007g-21-aug-2007","text":"Updated to tzdata version 2007g (https://mm.icann.org/pipermail/tz/2007-August/014499.html).","title":"Version 0.3.4 (tzdata v2007g) - 21-Aug-2007"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-033-tzdata-v2006p-27-nov-2006","text":"Updated to tzdata version 2006p (https://mm.icann.org/pipermail/tz/2006-November/013999.html).","title":"Version 0.3.3 (tzdata v2006p) - 27-Nov-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-032-tzdata-v2006n-11-oct-2006","text":"Updated to tzdata version 2006n (https://mm.icann.org/pipermail/tz/2006-October/013911.html). Note that this release of tzdata removes the country Serbia and Montenegro (CS) and replaces it with separate Serbia (RS) and Montenegro (ME) entries.","title":"Version 0.3.2 (tzdata v2006n) - 11-Oct-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-031-tzdata-v2006j-21-aug-2006","text":"Remove colon from case statements to avoid warning in Ruby 1.8.5. #5198. Use temporary variable to avoid dynamic string warning from rdoc. Updated to tzdata version 2006j (https://mm.icann.org/pipermail/tz/2006-August/013767.html).","title":"Version 0.3.1 (tzdata v2006j) - 21-Aug-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-030-tzdata-v2006g-17-jul-2006","text":"New timezone data format. Timezone data now occupies less space on disk and takes less memory once loaded. #4142, #4144. Timezone data is defined in modules rather than classes. Timezone instances returned by Timezone.get are no longer instances of data classes, but are instead instances of new DataTimezone and LinkedTimezone classes. Timezone instances can now be used with Marshal.dump and Marshal.load. #4240. Added a Timezone.get_proxy method that returns a TimezoneProxy object for a given identifier. Country index data is now defined in a single module that is independent of the Country class implementation. Country instances can now be used with Marshal.dump and Marshal.load. #4240. Country has a new zone_info method that returns CountryTimezone objects containing additional information (latitude, longitude and a description) relating to each Timezone. #4140. Timezones within a Country are now returned in an order that makes geographic sense. The zdumptest utility now checks local to utc conversions in addition to utc to local conversions. eql? method defined on Country and Timezone that is equivalent to ==. The == method of Timezone no longer raises an exception when passed an object with no identifier method. The == method of Country no longer raises an exception when passed an object with no code method. hash method defined on Country that returns the hash of the code. hash method defined on Timezone that returns the hash of the identifier. Miscellaneous API documentation corrections and improvements. Timezone definition and indexes are now excluded from rdoc (the contents were previously ignored with #:nodoc: anyway). Removed no longer needed #:nodoc: directives from timezone data files (which are now excluded from the rdoc build). Installation of the gem now causes rdoc API documentation to be generated. #4905. When optimizing transitions to generate zone definitions, check the UTC and standard offsets separately rather than just the total offset to UTC. Fixes an incorrect abbreviation issue with Europe/London, Europe/Dublin and Pacific/Auckland. Eliminated unnecessary .nil? calls to give a minor performance gain. Timezone.all and Timezone.all_identifiers now return all the Timezones/identifiers rather than just those associated with countries. #4146. Added all_data_zones, all_data_zone_identifiers, all_linked_zones and all_linked_zone_identifiers class methods to Timezone. Added a strftime method to Timezone that converts a time in UTC to local time and then returns it formatted. %Z is replaced with the Timezone abbreviation for the given time (for example, EST or EDT). #4143. Fix escaping of quotes in TZDataParser. This affected country names and descriptions of timezones within countries.","title":"Version 0.3.0 (tzdata v2006g) - 17-Jul-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-022-tzdata-v2006g-17-may-2006","text":"Use class-scoped instance variables to store the Timezone identifier and singleton instance. Loading a linked zone no longer causes the parent zone's identifier to be changed. The instance method of a linked zone class also now returns an instance of the linked zone class rather than the parent class. #4502. The zdumptest utility now compares the TZInfo zone identifier with the zdump zone identifier. The zdumptestall utility now exits if not supplied with enough parameters. Updated to tzdata version 2006g (https://mm.icann.org/pipermail/tz/2006-May/013590.html).","title":"Version 0.2.2 (tzdata v2006g) - 17-May-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-021-tzdata-v2006d-17-apr-2006","text":"Fix a performance issue caused in 0.2.0 with Timezone.local_to_utc. Conversions performed on TimeOrDateTime instances passed to <=> are now cached as originally intended. Thanks to Michael Smedberg for spotting this. Fix a performance issue with the local_to_utc period search algorithm originally implemented in 0.1.0. The condition that was supposed to cause the search to terminate when enough periods had been found was only being evaluated in a small subset of cases. Thanks to Michael Smedberg and Jamis Buck for reporting this. Added abbreviation as an alias for TimezonePeriod.zone_identifier. Updated to tzdata version 2006d (https://mm.icann.org/pipermail/tz/2006-April/013517.html). Ignore any offset in DateTimes passed in (as is already done for Times). All of the following now refer to the same UTC time (15:40 on 17 April 2006). Previously, the DateTime in the second line would have been interpreted as 20:40. tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(DateTime.new(2006, 4, 17, 15, 40, 0).new_offset(Rational(5, 24))) tz.utc_to_local(Time.utc(2006, 4, 17, 15, 40, 0)) tz.utc_to_local(Time.local(2006, 4, 17, 15, 40, 0))","title":"Version 0.2.1 (tzdata v2006d) - 17-Apr-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-020-tzdata-v2006c-3-apr-2006","text":"Use timestamps rather than DateTime objects in zone files for times between 1970 and 2037 (the range of Time). Don't convert passed in Time objects to DateTime in most cases (provides a substantial performance improvement). Allow integer timestamps (time in seconds since 1970-1-1) to be used as well as Time and DateTime objects in all public methods that take times as parameters. Tool to compare TZInfo conversions with output from zdump. TZDataParser zone generation algorithm rewritten. Now based on the zic code. TZInfo is now 100% compatible with zic/zdump output. Riyadh Solar Time zones now included again (generation time has been reduced with TZDataParser changes). Use binary mode when writing zone and country files to get Unix (\\n) new lines. Omit unnecessary quotes in zone identifier symbols. Omit the final transition to DST if there is a prior transition in the last year processed to standard time. Updated to tzdata version 2006c (https://mm.icann.org/pipermail/tz/2006-April/013500.html).","title":"Version 0.2.0 (tzdata v2006c) - 3-Apr-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-012-tzdata-v2006a-5-feb-2006","text":"Add lib directory to the load path when tzinfo is required. Makes it easier to use tzinfo gem when unpacked to vendor directory in rails. Updated to tzdata version 2006a (https://mm.icann.org/pipermail/tz/2006-January/013311.html). build_tz_classes rake task now handles running svn add and svn delete as new timezones and countries are added and old ones are removed. Return a better error when attempting to use a Timezone instance that was constructed with Timezone.new(nil). This will occur when using Rails' composed_of. When the timezone identifier in the database is null, attempting to use the Timezone will now result in an UnknownTimezone exception rather than a NameError.","title":"Version 0.1.2 (tzdata v2006a) - 5-Feb-2006"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-011-tzdata-v2005q-18-dec-2005","text":"Timezones that are defined by a single unbounded period (e.g. UTC) now work again. Updated to tzdata version 2005q.","title":"Version 0.1.1 (tzdata v2005q) - 18-Dec-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-010-tzdata-v2005n-27-nov-2005","text":"period_for_local and local_to_utc now allow resolution of ambiguous times (e.g. when switching from daylight savings to standard time). The behaviour of these methods when faced with an ambiguous local time has now changed. If you are using these methods you should check the documentation. Thanks to Cliff Matthews for suggesting this change. Added require 'date' to timezone.rb (date isn't loaded by default in all environments). Use rake to build packages and documentation. License file is now included in gem distribution. Dates in definitions stored as Astronomical Julian Day numbers rather than as civil dates (improves performance creating DateTime instances). Added options to TZDataParser to allow generation of specific zones and countries. Moved TimezonePeriod class to timezone_period.rb. New TimezonePeriodList class to store TimezonePeriods for a timezone and perform searches for periods. Timezones now defined using blocks. TimezonePeriods are only instantiated when they are needed. Thanks to Jamis Buck for the suggestion. Add options to TZDataParser to allow exclusion of specific zones and countries. Exclude the Riyadh Solar Time zones. The rules are only for 1987 to 1989 and take a long time to generate and process. Riyadh Solar Time is no longer observed. The last TimezonePeriod for each Timezone is now written out with an unbounded rather than arbitrary end time. Construct the Rational offset in TimezonePeriod once when the TimezonePeriod is constructed rather than each time it is needed. Timezone and Country now keep a cache of loaded instances to avoid running require which can be slow on some platforms. Updated to tzdata version 2005n.","title":"Version 0.1.0 (tzdata v2005n) - 27-Nov-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-004-tzdata-v2005m-18-sep-2005","text":"Removed debug output accidentally included in the previous release. Fixed a bug in the generation of friendly zone identifiers (was inserting apostrophes into UTC, GMT, etc). Fixed Country <=> operator (was comparing non-existent attribute) Fixed Timezone.period_for_local error when period not found. Added testcases for Timezone, TimezoneProxy, TimezonePeriod, Country and some selected timezones.","title":"Version 0.0.4 (tzdata v2005m) - 18-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-003-tzdata-v2005m-17-sep-2005","text":"Reduced visibility of some methods added in Timezone#setup and Country#setup. Added name method to Timezone (returns the identifier). Added friendly_identifier method to Timezone. Returns a more friendly version of the identifier. Added to_s method to Timezone. Returns the friendly identifier. Added == and <=> operators to Timezone (compares identifiers). Timezone now includes Comparable. Added to_s method to Country. Added == and <=> operators to Country (compares ISO 3166 country codes). Country now includes Comparable. New TimezoneProxy class that behaves the same as a Timezone but doesn't actually load in its definition until it is actually required. Modified Timezone and Country methods that return Timezones to return TimezoneProxy instances instead. This makes these methods much quicker. In Ruby on Rails, you can now show a drop-down list of all timezones using the Rails time_zone_select helper method: <%= time_zone_select 'user', 'time_zone', TZInfo::Timezone.all.sort, :model => TZInfo::Timezone %>","title":"Version 0.0.3 (tzdata v2005m) - 17-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-002-tzdata-v2005m-13-sep-2005","text":"Country and Timezone data is now loaded into class rather than instance variables. This makes Timezone links more efficient and saves memory if creating specific Timezone and Country classes directly. TimezonePeriod zone_identifier is now defined as a symbol to save memory (was previously a string). TimezonePeriod zone_identifiers that were previously '' are now :Unknown. Timezones and Countries can now be returned using Timezone.new(identifier) and Country.new(identifier). When passed an identifier, the new method calls get to return an instance of the specified timezone or country. Added new class methods to Timezone to return sets of zones and identifiers. Thanks to Scott Barron of Lunchbox Software for the suggestions in his article about using TZInfo with Rails (https://web.archive.org/web/20060425190845/http://lunchroom.lunchboxsoftware.com/pages/tzinfo_rails)","title":"Version 0.0.2 (tzdata v2005m) - 13-Sep-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/tzinfo-1.2.9/CHANGES/#version-001-tzdata-v2005m-29-aug-2005","text":"First release.","title":"Version 0.0.1 (tzdata v2005m) - 29-Aug-2005"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/","text":"ruby-unf Synopsis A wrapper library to bring Unicode Normalization Form support to Ruby/JRuby Description Uses unf_ext on CRuby and java.text.Normalizer on JRuby. Normalizes UTF-8 strings into and from NFC, NFD, NFKC or NFKD # For bulk conversion normalizer = UNF::Normalizer.instance a_bunch_of_strings.map! { |string| normalizer.normalize(string, :nfc) #=> string in NFC } # Class method UNF::Normalizer.normalize(string, :nfc) # Instance methods of String string.to_nfc Installation gem install unf License Copyright (c) 2011, 2012, 2013 Akinori MUSHA Licensed under the 2-clause BSD license. See LICENSE for details.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/#ruby-unf","text":"","title":"ruby-unf"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/#synopsis","text":"A wrapper library to bring Unicode Normalization Form support to Ruby/JRuby","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/#description","text":"Uses unf_ext on CRuby and java.text.Normalizer on JRuby. Normalizes UTF-8 strings into and from NFC, NFD, NFKC or NFKD # For bulk conversion normalizer = UNF::Normalizer.instance a_bunch_of_strings.map! { |string| normalizer.normalize(string, :nfc) #=> string in NFC } # Class method UNF::Normalizer.normalize(string, :nfc) # Instance methods of String string.to_nfc","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/#installation","text":"gem install unf","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/#license","text":"Copyright (c) 2011, 2012, 2013 Akinori MUSHA Licensed under the 2-clause BSD license. See LICENSE for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/","text":"0.1.3 (2013-10-25) Features: Make UNF::Normalizer.instance thread-safe, and deprecate .new. (GH #6) 0.1.2 (2013-08-12) Features: Add license to gemspec. Adjust dependencies for Ruby 1.8 to satisfy bundler. 0.1.1 (2013-03-23) Features: Add rdoc. 0.1.0 (2013-03-18) Features: Start CI with Travis-CI. 0.0.5 (2012-03-04) Features: Migrate from Jeweler to Bundle gem. Bugfixes: Fix gem support for JRuby. 0.0.4 (2011-12-09) Features: Introduce autoloading. 0.0.3 (2011-10-25) Initial release.","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#013-2013-10-25","text":"Features: Make UNF::Normalizer.instance thread-safe, and deprecate .new. (GH #6)","title":"0.1.3 (2013-10-25)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#012-2013-08-12","text":"Features: Add license to gemspec. Adjust dependencies for Ruby 1.8 to satisfy bundler.","title":"0.1.2 (2013-08-12)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#011-2013-03-23","text":"Features: Add rdoc.","title":"0.1.1 (2013-03-23)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#010-2013-03-18","text":"Features: Start CI with Travis-CI.","title":"0.1.0 (2013-03-18)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#005-2012-03-04","text":"Features: Migrate from Jeweler to Bundle gem. Bugfixes: Fix gem support for JRuby.","title":"0.0.5 (2012-03-04)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#004-2011-12-09","text":"Features: Introduce autoloading.","title":"0.0.4 (2011-12-09)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf-0.1.4/CHANGELOG/#003-2011-10-25","text":"Initial release.","title":"0.0.3 (2011-10-25)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/","text":"ruby-unf_ext Synopsis Unicode Normalization Form support library for CRuby Description Normalizes UTF-8 strings into and from NFC, NFD, NFKC or NFKD # For bulk conversion normalizer = UNF::Normalizer.new a_bunch_of_strings.map! { |string| normalizer.normalize(string, :nfc) #=> string in NFC } Compliant with Unicode 9.0 Requirement Ruby 1.8.7+, 1.9.2+ C++ compiler and libstdc++ Installation gem install unf_ext Or: ruby extconf.rb && make && make install Development Resources https://github.com/sile/unf For issues regarding files under the directory unf , please contact this upstream. https://github.com/knu/ruby-unf_ext The development site and the repository. License Copyright (c) 2010-2017 Takeru Ohta Copyright (c) 2011-2018 Akinori MUSHA Licensed under the MIT license. See LICENSE for details.","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#ruby-unf_ext","text":"","title":"ruby-unf_ext"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#synopsis","text":"Unicode Normalization Form support library for CRuby","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#description","text":"Normalizes UTF-8 strings into and from NFC, NFD, NFKC or NFKD # For bulk conversion normalizer = UNF::Normalizer.new a_bunch_of_strings.map! { |string| normalizer.normalize(string, :nfc) #=> string in NFC } Compliant with Unicode 9.0","title":"Description"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#requirement","text":"Ruby 1.8.7+, 1.9.2+ C++ compiler and libstdc++","title":"Requirement"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#installation","text":"gem install unf_ext Or: ruby extconf.rb && make && make install","title":"Installation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#development-resources","text":"https://github.com/sile/unf For issues regarding files under the directory unf , please contact this upstream. https://github.com/knu/ruby-unf_ext The development site and the repository.","title":"Development Resources"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/#license","text":"Copyright (c) 2010-2017 Takeru Ohta Copyright (c) 2011-2018 Akinori MUSHA Licensed under the MIT license. See LICENSE for details.","title":"License"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/","text":"0.0.8.1 (2022-03-13) Include Windows binaries for Ruby 3.1. 0.0.8 (2021-09-14) No functional change in the library code. Include Windows binaries for Ruby 3.0. Drop support for Ruby 2.1 and earlier. Replace Travis CI with Github Actions. Fix cross-build after upgrading rake-compiler/rake-compiler-dock to 1.1.1/1.1.0. 0.0.7.7 (2020-03-30) Include Windows binaries for Ruby 2.7. 0.0.7.6 (2019-03-19) Include Windows binaries for Ruby 2.6. 0.0.7.5 (2018-02-06) Include Windows binaries for Ruby 2.5. 0.0.7.4 (2017-04-19) Fix build on ARM and GCC 6 again. 0.0.7.3 (2017-04-11) Update the base Unicode version to 9. Fix compile issues on ARM and GCC 6. 0.0.7.2 (2016-02-01) Include Windows binaries for Ruby 2.3. 0.0.7.1 (2015-04-18) Windows fat binary gems no longer require libstd++ to run, which are statically linked. Add a fat binary gem for x64-mingw32 (64bit Windows). Windows fat binary gems now include binaries for Ruby up to 2.2. 0.0.6 (2013-02-16) Migrate from Jeweler to Bundler. 0.0.5 (2012-05-30) Fix a type error for strict compilers. 0.0.4 (2011-12-08) Release under the current name of unf_ext .","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0081-2022-03-13","text":"Include Windows binaries for Ruby 3.1.","title":"0.0.8.1 (2022-03-13)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#008-2021-09-14","text":"No functional change in the library code. Include Windows binaries for Ruby 3.0. Drop support for Ruby 2.1 and earlier. Replace Travis CI with Github Actions. Fix cross-build after upgrading rake-compiler/rake-compiler-dock to 1.1.1/1.1.0.","title":"0.0.8 (2021-09-14)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0077-2020-03-30","text":"Include Windows binaries for Ruby 2.7.","title":"0.0.7.7 (2020-03-30)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0076-2019-03-19","text":"Include Windows binaries for Ruby 2.6.","title":"0.0.7.6 (2019-03-19)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0075-2018-02-06","text":"Include Windows binaries for Ruby 2.5.","title":"0.0.7.5 (2018-02-06)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0074-2017-04-19","text":"Fix build on ARM and GCC 6 again.","title":"0.0.7.4 (2017-04-19)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0073-2017-04-11","text":"Update the base Unicode version to 9. Fix compile issues on ARM and GCC 6.","title":"0.0.7.3 (2017-04-11)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0072-2016-02-01","text":"Include Windows binaries for Ruby 2.3.","title":"0.0.7.2 (2016-02-01)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#0071-2015-04-18","text":"Windows fat binary gems no longer require libstd++ to run, which are statically linked. Add a fat binary gem for x64-mingw32 (64bit Windows). Windows fat binary gems now include binaries for Ruby up to 2.2.","title":"0.0.7.1 (2015-04-18)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#006-2013-02-16","text":"Migrate from Jeweler to Bundler.","title":"0.0.6 (2013-02-16)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#005-2012-05-30","text":"Fix a type error for strict compilers.","title":"0.0.5 (2012-05-30)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unf_ext-0.0.8.1/CHANGELOG/#004-2011-12-08","text":"Release under the current name of unf_ext .","title":"0.0.4 (2011-12-08)"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/","text":"Unicode::DisplayWidth Determines the monospace display width of a string in Ruby. Implementation based on EastAsianWidth.txt and other data, 100% in Ruby. Other than wcwidth() , which fulfills a similar purpose, it does not rely on the OS vendor to provide an up-to-date method for measuring string width. Unicode version: 14.0.0 (September 2021) Supported Rubies: 2.7 , 2.6 , 2.5 , 2.4 Old Rubies that might still work: 2.3 , 2.2 , 2.1 , 2.0 , 1.9 Introduction to Character Widths Guessing the correct space a character will consume on terminals is not easy. There is no single standard. Most implementations combine data from East Asian Width , some General Categories , and hand-picked adjustments. How this Library Handles Widths Further at the top means higher precedence. Please expect changes to this algorithm with every MINOR version update (the X in 1.X.0)! Width Characters Comment X (user defined) Overwrites any other values -1 \"\\b\" Backspace (total width never below 0) 0 \"\\0\" , \"\\x05\" , \"\\a\" , \"\\n\" , \"\\v\" , \"\\f\" , \"\\r\" , \"\\x0E\" , \"\\x0F\" C0 control codes that do not change horizontal width 1 \"\\u{00AD}\" SOFT HYPHEN 2 \"\\u{2E3A}\" TWO-EM DASH 3 \"\\u{2E3B}\" THREE-EM DASH 0 General Categories: Mn, Me, Cf (non-arabic) Excludes ARABIC format characters 0 \"\\u{1160}\"..\"\\u{11FF}\" HANGUL JUNGSEONG 0 \"\\u{2060}\"..\"\\u{206F}\" , \"\\u{FFF0}\"..\"\\u{FFF8}\" , \"\\u{E0000}\"..\"\\u{E0FFF}\" Ignorable ranges 2 East Asian Width: F, W Full-width characters 2 \"\\u{3400}\"..\"\\u{4DBF}\" , \"\\u{4E00}\"..\"\\u{9FFF}\" , \"\\u{F900}\"..\"\\u{FAFF}\" , \"\\u{20000}\"..\"\\u{2FFFD}\" , \"\\u{30000}\"..\"\\u{3FFFD}\" Full-width ranges 1 or 2 East Asian Width: A Ambiguous characters, user defined, default: 1 1 All other codepoints - Install Install the gem with: $ gem install unicode-display_width Or add to your Gemfile: gem 'unicode-display_width' Usage require 'unicode/display_width' Unicode::DisplayWidth.of(\"\u2680\") # => 1 Unicode::DisplayWidth.of(\"\u4e00\") # => 2 Ambiguous Characters The second parameter defines the value returned by characters defined as ambiguous: Unicode::DisplayWidth.of(\"\u00b7\", 1) # => 1 Unicode::DisplayWidth.of(\"\u00b7\", 2) # => 2 Custom Overwrites You can overwrite how to handle specific code points by passing a hash (or even a proc) as third parameter: Unicode::DisplayWidth.of(\"a\\tb\", 1, 0x09 => 10)) # => 12 Emoji Support Experimental emoji support is included. It will adjust the string's size for modifier and zero-width joiner sequences. You will need to add the unicode-emoji gem to your Gemfile: gem 'unicode-display_width' gem 'unicode-emoji' You can then activate the emoji string width adjustments by passing emoji: true as fourth parameter: Unicode::DisplayWidth.of \"\ud83e\udd3e\ud83c\udffd\u200d\u2640\ufe0f\" # => 5 Unicode::DisplayWidth.of \"\ud83e\udd3e\ud83c\udffd\u200d\u2640\ufe0f\", 1, {}, emoji: true # => 2 Usage with String Extension Activated by default. Will be deactivated in version 2.0: require 'unicode/display_width/string_ext' \"\u2680\".display_width #=> 1 '\u4e00'.display_width #=> 2 You can actively opt-out from the string extension with: require 'unicode/display_width/no_string_ext' Usage From the CLI Use this one-liner to print out display widths for strings from the command-line: $ gem install unicode-display_width $ ruby -r unicode/display_width -e 'puts Unicode::DisplayWidth.of $*[0]' -- \"\u4e00\" Replace \"\u4e00\" with the actual string to measure Other Implementations & Discussion Python: https://github.com/jquast/wcwidth JavaScript: https://github.com/mycoboco/wcwidth.js C: https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c C for Julia: https://github.com/JuliaLang/utf8proc/issues/2 See unicode-x for more Unicode related micro libraries. Copyright & Info Copyright (c) 2011, 2015-2020 Jan Lelis, https://janlelis.com, released under the MIT license Early versions based on runpaint's unicode-data interface: Copyright (c) 2009 Run Paint Run Run Unicode data: https://www.unicode.org/copyright.html#Exhibit1","title":"Index"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#unicodedisplaywidth","text":"Determines the monospace display width of a string in Ruby. Implementation based on EastAsianWidth.txt and other data, 100% in Ruby. Other than wcwidth() , which fulfills a similar purpose, it does not rely on the OS vendor to provide an up-to-date method for measuring string width. Unicode version: 14.0.0 (September 2021) Supported Rubies: 2.7 , 2.6 , 2.5 , 2.4 Old Rubies that might still work: 2.3 , 2.2 , 2.1 , 2.0 , 1.9","title":"Unicode::DisplayWidth  "},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#introduction-to-character-widths","text":"Guessing the correct space a character will consume on terminals is not easy. There is no single standard. Most implementations combine data from East Asian Width , some General Categories , and hand-picked adjustments.","title":"Introduction to Character Widths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#how-this-library-handles-widths","text":"Further at the top means higher precedence. Please expect changes to this algorithm with every MINOR version update (the X in 1.X.0)! Width Characters Comment X (user defined) Overwrites any other values -1 \"\\b\" Backspace (total width never below 0) 0 \"\\0\" , \"\\x05\" , \"\\a\" , \"\\n\" , \"\\v\" , \"\\f\" , \"\\r\" , \"\\x0E\" , \"\\x0F\" C0 control codes that do not change horizontal width 1 \"\\u{00AD}\" SOFT HYPHEN 2 \"\\u{2E3A}\" TWO-EM DASH 3 \"\\u{2E3B}\" THREE-EM DASH 0 General Categories: Mn, Me, Cf (non-arabic) Excludes ARABIC format characters 0 \"\\u{1160}\"..\"\\u{11FF}\" HANGUL JUNGSEONG 0 \"\\u{2060}\"..\"\\u{206F}\" , \"\\u{FFF0}\"..\"\\u{FFF8}\" , \"\\u{E0000}\"..\"\\u{E0FFF}\" Ignorable ranges 2 East Asian Width: F, W Full-width characters 2 \"\\u{3400}\"..\"\\u{4DBF}\" , \"\\u{4E00}\"..\"\\u{9FFF}\" , \"\\u{F900}\"..\"\\u{FAFF}\" , \"\\u{20000}\"..\"\\u{2FFFD}\" , \"\\u{30000}\"..\"\\u{3FFFD}\" Full-width ranges 1 or 2 East Asian Width: A Ambiguous characters, user defined, default: 1 1 All other codepoints -","title":"How this Library Handles Widths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#install","text":"Install the gem with: $ gem install unicode-display_width Or add to your Gemfile: gem 'unicode-display_width'","title":"Install"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#usage","text":"require 'unicode/display_width' Unicode::DisplayWidth.of(\"\u2680\") # => 1 Unicode::DisplayWidth.of(\"\u4e00\") # => 2","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#ambiguous-characters","text":"The second parameter defines the value returned by characters defined as ambiguous: Unicode::DisplayWidth.of(\"\u00b7\", 1) # => 1 Unicode::DisplayWidth.of(\"\u00b7\", 2) # => 2","title":"Ambiguous Characters"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#custom-overwrites","text":"You can overwrite how to handle specific code points by passing a hash (or even a proc) as third parameter: Unicode::DisplayWidth.of(\"a\\tb\", 1, 0x09 => 10)) # => 12","title":"Custom Overwrites"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#emoji-support","text":"Experimental emoji support is included. It will adjust the string's size for modifier and zero-width joiner sequences. You will need to add the unicode-emoji gem to your Gemfile: gem 'unicode-display_width' gem 'unicode-emoji' You can then activate the emoji string width adjustments by passing emoji: true as fourth parameter: Unicode::DisplayWidth.of \"\ud83e\udd3e\ud83c\udffd\u200d\u2640\ufe0f\" # => 5 Unicode::DisplayWidth.of \"\ud83e\udd3e\ud83c\udffd\u200d\u2640\ufe0f\", 1, {}, emoji: true # => 2","title":"Emoji Support"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#usage-with-string-extension","text":"Activated by default. Will be deactivated in version 2.0: require 'unicode/display_width/string_ext' \"\u2680\".display_width #=> 1 '\u4e00'.display_width #=> 2 You can actively opt-out from the string extension with: require 'unicode/display_width/no_string_ext'","title":"Usage with String Extension"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#usage-from-the-cli","text":"Use this one-liner to print out display widths for strings from the command-line: $ gem install unicode-display_width $ ruby -r unicode/display_width -e 'puts Unicode::DisplayWidth.of $*[0]' -- \"\u4e00\" Replace \"\u4e00\" with the actual string to measure","title":"Usage From the CLI"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#other-implementations-discussion","text":"Python: https://github.com/jquast/wcwidth JavaScript: https://github.com/mycoboco/wcwidth.js C: https://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c C for Julia: https://github.com/JuliaLang/utf8proc/issues/2 See unicode-x for more Unicode related micro libraries.","title":"Other Implementations &amp; Discussion"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/#copyright-info","text":"Copyright (c) 2011, 2015-2020 Jan Lelis, https://janlelis.com, released under the MIT license Early versions based on runpaint's unicode-data interface: Copyright (c) 2009 Run Paint Run Run Unicode data: https://www.unicode.org/copyright.html#Exhibit1","title":"Copyright &amp; Info"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/","text":"CHANGELOG 1.8.0 Unicode 14.0 (last release of 1.x) 1.7.0 Unicode 13 1.6.1 Fix that ambiguous and overwrite options where ignored for emoji-measuring 1.6.0 Unicode 12.1 1.5.0 Unicode 12 1.4.1 Only bundle required lib/ and data/ files in actual rubygem, patch by @tas50 1.4.0 Unicode 11 1.3.3 Replace Gem::Util.gunzip with direct zlib implementation This removes the dependency on rubygems, fixes #17 1.3.2 Explicitly load rubygems/util, fixes regression in 1.3.1 (autoload issue) 1.3.1 Use Gem::Util for gunzip , removes deprecation warning, patch by @Schwad 1.3.0 Unicode 10 1.2.1 Fix bug that emoji: true would fail for emoji without modifier 1.2.0 Add zero-width codepoint ranges: U+2060..U+206F, U+FFF0..U+FFF8, U+E0000..U+E0FFF Add full-witdh codepoint ranges: U+3400..U+4DBF, U+4E00..U+9FFF, U+F900..U+FAFF, U+20000..U+2FFFD, U+30000..U+3FFFD Experimental emoji support using the unicode-emoji gem Fix minor bug in index compression scheme 1.1.3 Fix that non-UTF-8 encodings do not throw errors, patch by @windwiny 1.1.2 Reduce memory consumption and increase performance, patch by @rrosenblum 1.1.1 Always load index into memory, fixes #9 1.1.0 Support Unicode 9.0 1.0.5 Actually include new index from 1.0.4 1.0.4 New index format (much smaller) and internal API changes Move index generation to a builder plugin for the unicoder gem No public API changes 1.0.3 Avoid circular dependency warning 1.0.2 Fix error that gemspec might be invalid under some circumstances (see gh#6) 1.0.1 Inofficially allow Ruby 1.9 1.0.0 Faster than 0.3.1 Advanced determination of character width This includes: Treat width of most chars of general categories (Mn, Me, Cf) as 0 This includes: Introduce list of characters with special widths Allow custom overrides for specific codepoints Set required Ruby version to 2.0 Add NO_STRING_EXT mode to disable monkey patching Internal API & index format changed drastically Remove require 'unicode/display_size' (use 'unicode/display_width' instead) 0.3.1 Faster than 0.3.0 Deprecate usage of aliases: String#display_size and String#display_length Eliminate Ruby warnings (@amatsuda) 0.3.0 Update EastAsianWidth from 7.0 to 8.0 Add rake task to update EastAsianWidth.txt Move code to generate index from library to Rakefile Update project's meta files Deprecate requiring 'unicode-display_size' 0.2.0 Update EastAsianWidth from 6.0 to 7.0 Don't build index table automatically when not available Don't include EastAsianWidth.txt in gem (only index) 0.1.0 Fix github issue #1 0.1.0 Initial release","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#changelog","text":"","title":"CHANGELOG"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#180","text":"Unicode 14.0 (last release of 1.x)","title":"1.8.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#170","text":"Unicode 13","title":"1.7.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#161","text":"Fix that ambiguous and overwrite options where ignored for emoji-measuring","title":"1.6.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#160","text":"Unicode 12.1","title":"1.6.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#150","text":"Unicode 12","title":"1.5.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#141","text":"Only bundle required lib/ and data/ files in actual rubygem, patch by @tas50","title":"1.4.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#140","text":"Unicode 11","title":"1.4.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#133","text":"Replace Gem::Util.gunzip with direct zlib implementation This removes the dependency on rubygems, fixes #17","title":"1.3.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#132","text":"Explicitly load rubygems/util, fixes regression in 1.3.1 (autoload issue)","title":"1.3.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#131","text":"Use Gem::Util for gunzip , removes deprecation warning, patch by @Schwad","title":"1.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#130","text":"Unicode 10","title":"1.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#121","text":"Fix bug that emoji: true would fail for emoji without modifier","title":"1.2.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#120","text":"Add zero-width codepoint ranges: U+2060..U+206F, U+FFF0..U+FFF8, U+E0000..U+E0FFF Add full-witdh codepoint ranges: U+3400..U+4DBF, U+4E00..U+9FFF, U+F900..U+FAFF, U+20000..U+2FFFD, U+30000..U+3FFFD Experimental emoji support using the unicode-emoji gem Fix minor bug in index compression scheme","title":"1.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#113","text":"Fix that non-UTF-8 encodings do not throw errors, patch by @windwiny","title":"1.1.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#112","text":"Reduce memory consumption and increase performance, patch by @rrosenblum","title":"1.1.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#111","text":"Always load index into memory, fixes #9","title":"1.1.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#110","text":"Support Unicode 9.0","title":"1.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#105","text":"Actually include new index from 1.0.4","title":"1.0.5"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#104","text":"New index format (much smaller) and internal API changes Move index generation to a builder plugin for the unicoder gem No public API changes","title":"1.0.4"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#103","text":"Avoid circular dependency warning","title":"1.0.3"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#102","text":"Fix error that gemspec might be invalid under some circumstances (see gh#6)","title":"1.0.2"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#101","text":"Inofficially allow Ruby 1.9","title":"1.0.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#100","text":"Faster than 0.3.1 Advanced determination of character width This includes: Treat width of most chars of general categories (Mn, Me, Cf) as 0 This includes: Introduce list of characters with special widths Allow custom overrides for specific codepoints Set required Ruby version to 2.0 Add NO_STRING_EXT mode to disable monkey patching Internal API & index format changed drastically Remove require 'unicode/display_size' (use 'unicode/display_width' instead)","title":"1.0.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#031","text":"Faster than 0.3.0 Deprecate usage of aliases: String#display_size and String#display_length Eliminate Ruby warnings (@amatsuda)","title":"0.3.1"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#030","text":"Update EastAsianWidth from 7.0 to 8.0 Add rake task to update EastAsianWidth.txt Move code to generate index from library to Rakefile Update project's meta files Deprecate requiring 'unicode-display_size'","title":"0.3.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#020","text":"Update EastAsianWidth from 6.0 to 7.0 Don't build index table automatically when not available Don't include EastAsianWidth.txt in gem (only index)","title":"0.2.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#010","text":"Fix github issue #1","title":"0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/unicode-display_width-1.8.0/CHANGELOG/#010_1","text":"Initial release","title":"0.1.0"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/","text":"Zeitwerk Introduction Synopsis File structure The idea: File paths match constant paths Inner simple constants Root directories and root namespaces The default root namespace is Object Custom root namespaces Nested root directories Implicit namespaces Explicit namespaces Collapsing directories Testing compliance Usage Setup Generic for_gem Autoloading Eager loading Eager load exclusions Global eager load Reloading Inflection Zeitwerk::Inflector Zeitwerk::GemInflector Custom inflector Callbacks The on_setup callback The on_load callback The on_unload callback Technical details Logging Loader tag Ignoring parts of the project Use case: Files that do not follow the conventions Use case: The adapter pattern Use case: Test files mixed with implementation files Edge cases Beware of circular dependencies Reopening third-party namespaces Rules of thumb Debuggers debug.rb Byebug Break Pronunciation Supported Ruby versions Testing Motivation Kernel#require is brittle Rails autoloading was brittle Thanks License Introduction Zeitwerk is an efficient and thread-safe code loader for Ruby. Given a conventional file structure , Zeitwerk is able to load your project's classes and modules on demand (autoloading), or upfront (eager loading). You don't need to write require calls for your own files, rather, you can streamline your programming knowing that your classes and modules are available everywhere. This feature is efficient, thread-safe, and matches Ruby's semantics for constants. Zeitwerk is also able to reload code, which may be handy while developing web applications. Coordination is needed to reload in a thread-safe manner. The documentation below explains how to do this. The gem is designed so that any project, gem dependency, application, etc. can have their own independent loader, coexisting in the same process, managing their own project trees, and independent of each other. Each loader has its own configuration, inflector, and optional logger. Internally, Zeitwerk issues require calls exclusively using absolute file names, so there are no costly file system lookups in $LOAD_PATH . Technically, the directories managed by Zeitwerk do not even need to be in $LOAD_PATH . Furthermore, Zeitwerk does at most one single scan of the project tree, and it descends into subdirectories lazily, only if their namespaces are used. Synopsis Main interface for gems: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup # ready! module MyGem # ... end loader.eager_load # optionally Main generic interface: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.setup # ready! The loader variable can go out of scope. Zeitwerk keeps a registry with all of them, and so the object won't be garbage collected. You can reload if you want to: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.enable_reloading # you need to opt-in before setup loader.setup ... loader.reload and you can eager load all the code: loader.eager_load It is also possible to broadcast eager_load to all instances: Zeitwerk::Loader.eager_load_all File structure The idea: File paths match constant paths To have a file structure Zeitwerk can work with, just name files and directories after the name of the classes and modules they define: lib/my_gem.rb -> MyGem lib/my_gem/foo.rb -> MyGem::Foo lib/my_gem/bar_baz.rb -> MyGem::BarBaz lib/my_gem/woo/zoo.rb -> MyGem::Woo::Zoo You can tune that a bit by collapsing directories , or by ignoring parts of the project , but that is the main idea. Inner simple constants While a simple constant like HttpCrawler::MAX_RETRIES can be defined in its own file: # http_crawler/max_retries.rb HttpCrawler::MAX_RETRIES = 10 that is not required, you can also define it the regular way: # http_crawler.rb class HttpCrawler MAX_RETRIES = 10 end The first example needs a custom inflection rule: loader.inflector.inflect(\"max_retries\" => \"MAX_RETRIES\") Otherwise, Zeitwerk would expect the file to define MaxRetries . In the second example, no custom rule is needed. Root directories and root namespaces Every directory configured with push_dir is called a root directory , and they represent root namespaces . The default root namespace is Object By default, the namespace associated to a root directory is the top-level one: Object . For example, given loader.push_dir(\"#{__dir__}/models\") loader.push_dir(\"#{__dir__}/serializers\")) these are the expected classes and modules being defined by these files: models/user.rb -> User serializers/user_serializer.rb -> UserSerializer Custom root namespaces While Object is by far the most common root namespace, you can associate a different one to a particular root directory. The method push_dir accepts a class or module object in the optional namespace keyword argument. For example, given: require \"active_job\" require \"active_job/queue_adapters\" loader.push_dir(\"#{__dir__}/adapters\", namespace: ActiveJob::QueueAdapters) a file defining ActiveJob::QueueAdapters::MyQueueAdapter does not need the conventional parent directories, you can (and have to) store the file directly below adapters : adapters/my_queue_adapter.rb -> ActiveJob::QueueAdapters::MyQueueAdapter Please, note that the given root namespace must be non-reloadable, though autoloaded constants in that namespace can be. That is, if you associate app/api with an existing Api module, that module should not be reloadable. However, if the project defines and autoloads the class Api::Deliveries , that one can be reloaded. Nested root directories Root directories should not be ideally nested, but Zeitwerk supports them because in Rails, for example, both app/models and app/models/concerns belong to the autoload paths. Zeitwerk detects nested root directories, and treats them as roots only. In the example above, concerns is not considered to be a namespace below app/models . For example, the file: app/models/concerns/geolocatable.rb should define Geolocatable , not Concerns::Geolocatable . Implicit namespaces Directories without a matching Ruby file get modules autovivified automatically by Zeitwerk. For example, in app/controllers/admin/users_controller.rb -> Admin::UsersController Admin is autovivified as a module on demand, you do not need to define an Admin class or module in an admin.rb file explicitly. Explicit namespaces Classes and modules that act as namespaces can also be explicitly defined, though. For instance, consider app/models/hotel.rb -> Hotel app/models/hotel/pricing.rb -> Hotel::Pricing There, app/models/hotel.rb defines Hotel , and thus Zeitwerk does not autovivify a module. The classes and modules from the namespace are already available in the body of the class or module defining it: class Hotel < ApplicationRecord include Pricing # works ... end An explicit namespace must be managed by one single loader. Loaders that reopen namespaces owned by other projects are responsible for loading their constants before setup. Collapsing directories Say some directories in a project exist for organizational purposes only, and you prefer not to have them as namespaces. For example, the actions subdirectory in the next example is not meant to represent a namespace, it is there only to group all actions related to bookings: booking.rb -> Booking booking/actions/create.rb -> Booking::Create To make it work that way, configure Zeitwerk to collapse said directory: loader.collapse(\"#{__dir__}/booking/actions\") This method accepts an arbitrary number of strings or Pathname objects, and also an array of them. You can pass directories and glob patterns. Glob patterns are expanded when they are added, and again on each reload. To illustrate usage of glob patterns, if actions in the example above is part of a standardized structure, you could use a wildcard: loader.collapse(\"#{__dir__}/*/actions\") Testing compliance When a managed file is loaded, Zeitwerk verifies the expected constant is defined. If it is not, Zeitwerk::NameError is raised. So, an easy way to ensure compliance in the test suite is to eager load the project: begin loader.eager_load(force: true) rescue Zeitwerk::NameError => e flunk e.message else assert true end Usage Setup Generic Loaders are ready to load code right after calling setup on them: loader.setup This method is synchronized and idempotent. Customization should generally be done before that call. In particular, in the generic interface you may set the root directories from which you want to load files: loader.push_dir(...) loader.push_dir(...) loader.setup for_gem Zeitwerk::Loader.for_gem is a convenience shortcut for the common case in which a gem has its entry point directly under the lib directory: lib/my_gem.rb # MyGem lib/my_gem/version.rb # MyGem::VERSION lib/my_gem/foo.rb # MyGem::Foo Neither a gemspec nor a version file are technically required, this helper works as long as the code is organized using that standard structure. If the entry point of your gem lives in a subdirectory of lib because it is reopening a namespace defined somewhere else, please use the generic API to setup the loader, and make sure you check the section Reopening third-party namespaces down below. Conceptually, for_gem translates to: # lib/my_gem.rb require \"zeitwerk\" loader = Zeitwerk::Loader.new loader.tag = File.basename(__FILE__, \".rb\") loader.inflector = Zeitwerk::GemInflector.new(__FILE__) loader.push_dir(__dir__) except that this method returns the same object in subsequent calls from the same file, in the unlikely case the gem wants to be able to reload. If the main module references project constants at the top-level, Zeitwerk has to be ready to load them. Their definitions, in turn, may reference other project constants. And this is recursive. Therefore, it is important that the setup call happens above the main module definition: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup module MyGem # Since the setup has been performed, at this point we are already able # to reference project constants, in this case MyGem::MyLogger. include MyLogger end Autoloading After setup , you are able to reference classes and modules from the project without issuing require calls for them. They are all available everywhere, autoloading loads them on demand. This works even if the reference to the class or module is first hit in client code, outside your project. Let's revisit the example above: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup module MyGem include MyLogger # (*) end That works, and there is no require \"my_gem/my_logger\" . When (*) is reached, Zeitwerk seamlessly autoloads MyGem::MyLogger . If autoloading a file does not define the expected class or module, Zeitwerk raises Zeitwerk::NameError , which is a subclass of NameError . Eager loading Zeitwerk instances are able to eager load their managed files: loader.eager_load That skips ignored files and directories . In gems, the method needs to be invoked after the main namespace has been defined, as shown in Synopsis . Eager loading is synchronized and idempotent. Eager load exclusions You can tell Zeitwerk that certain files or directories are autoloadable, but should not be eager loaded: db_adapters = \"#{__dir__}/my_gem/db_adapters\" loader.do_not_eager_load(db_adapters) loader.setup loader.eager_load # won't eager load the database adapters However, that can be overridden with force : loader.eager_load(force: true) # database adapters are eager loaded Which may be handy if the project eager loads in the test suite to ensure project layout compliance . The force flag does not affect ignored files and directories, those are still ignored. Global eager load If you want to eager load yourself and all dependencies that use Zeitwerk, you can broadcast the eager_load call to all instances: Zeitwerk::Loader.eager_load_all This may be handy in top-level services, like web applications. Note that thanks to idempotence Zeitwerk::Loader.eager_load_all won't eager load twice if any of the instances already eager loaded. This method does not accept the force flag, since in general it wouldn't be a good idea to force eager loading in 3rd party code. Reloading Zeitwerk is able to reload code, but you need to enable this feature: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.enable_reloading # you need to opt-in before setup loader.setup ... loader.reload There is no way to undo this, either you want to reload or you don't. Enabling reloading after setup raises Zeitwerk::Error . Attempting to reload without having it enabled raises Zeitwerk::ReloadingDisabledError . Generally speaking, reloading is useful while developing running services like web applications. Gems that implement regular libraries, so to speak, or services running in testing or production environments, won't normally have a use case for reloading. If reloading is not enabled, Zeitwerk is able to use less memory. Reloading removes the currently loaded classes and modules and resets the loader so that it will pick whatever is in the file system now. It is important to highlight that this is an instance method. Don't worry about project dependencies managed by Zeitwerk, their loaders are independent. In order for reloading to be thread-safe, you need to implement some coordination. For example, a web framework that serves each request with its own thread may have a globally accessible RW lock. When a request comes in, the framework acquires the lock for reading at the beginning, and the code in the framework that calls loader.reload needs to acquire the lock for writing. On reloading, client code has to update anything that would otherwise be storing a stale object. For example, if the routing layer of a web framework stores controller class objects or instances in internal structures, on reload it has to refresh them somehow, possibly reevaluating routes. Inflection Each individual loader needs an inflector to figure out which constant path would a given file or directory map to. Zeitwerk ships with two basic inflectors, and you can define your own. Zeitwerk::Inflector Each loader instantiated with Zeitwerk::Loader.new has an inflector of this type by default. This is a very basic inflector that converts snake case to camel case: user -> User users_controller -> UsersController html_parser -> HtmlParser The camelize logic can be overridden easily for individual basenames: loader.inflector.inflect( \"html_parser\" => \"HTMLParser\", \"mysql_adapter\" => \"MySQLAdapter\" ) The inflect method can be invoked several times if you prefer this other style: loader.inflector.inflect \"html_parser\" => \"HTMLParser\" loader.inflector.inflect \"mysql_adapter\" => \"MySQLAdapter\" Overrides need to be configured before calling setup . The inflectors of different loaders are independent of each other. There are no global inflection rules or global configuration that can affect this inflector. It is deterministic. Zeitwerk::GemInflector Each loader instantiated with Zeitwerk::Loader.for_gem has an inflector of this type by default. This inflector is like the basic one, except it expects lib/my_gem/version.rb to define MyGem::VERSION . The inflectors of different loaders are independent of each other. There are no global inflection rules or global configuration that can affect this inflector. It is deterministic. Custom inflector The inflectors that ship with Zeitwerk are deterministic and simple. But you can configure your own: # frozen_string_literal: true class MyInflector < Zeitwerk::Inflector def camelize(basename, abspath) if basename =~ /\\Ahtml_(.*)/ \"HTML\" + super($1, abspath) else super end end end The first argument, basename , is a string with the basename of the file or directory to be inflected. In the case of a file, without extension. In the case of a directory, without trailing slash. The inflector needs to return this basename inflected. Therefore, a simple constant name without colons. The second argument, abspath , is a string with the absolute path to the file or directory in case you need it to decide how to inflect the basename. Paths to directories don't have trailing slashes. Then, assign the inflector: loader.inflector = MyInflector.new This needs to be done before calling setup . If a custom inflector definition in a gem takes too much space in the main file, you can extract it. For example, this is a simple pattern: # lib/my_gem/inflector.rb module MyGem class Inflector < Zeitwerk::GemInflector ... end end # lib/my_gem.rb require \"zeitwerk\" require_relative \"my_gem/inflector\" loader = Zeitwerk::Loader.for_gem loader.inflector = MyGem::Inflector.new(__FILE__) loader.setup module MyGem # ... end Since MyGem is referenced before the namespace is defined in the main file, it is important to use this style: # Correct, effectively defines MyGem. module MyGem class Inflector < Zeitwerk::GemInflector # ... end end instead of: # Raises uninitialized constant MyGem (NameError). class MyGem::Inflector < Zeitwerk::GemInflector # ... end Callbacks The on_setup callback The on_setup callback is fired on setup and on each reload: loader.on_setup do # Ready to autoload here. end Multiple on_setup callbacks are supported, and they run in order of definition. If setup was already executed, the callback is fired immediately. The on_load callback The usual place to run something when a file is loaded is the file itself. However, sometimes you'd like to be called, and this is possible with the on_load callback. For example, let's imagine this class belongs to a Rails application: class SomeApiClient class << self attr_accessor :endpoint end end With on_load , it is easy to schedule code at boot time that initializes endpoint according to the configuration: # config/environments/development.rb loader.on_load(\"SomeApiClient\") do |klass, _abspath| klass.endpoint = \"https://api.dev\" end # config/environments/production.rb loader.on_load(\"SomeApiClient\") do |klass, _abspath| klass.endpoint = \"https://api.prod\" end Some uses cases: Doing something with a reloadable class or module in a Rails application during initialization, in a way that plays well with reloading. As in the previous example. Delaying the execution of the block until the class is loaded for performance. Delaying the execution of the block until the class is loaded because it follows the adapter pattern and better not to load the class if the user does not need it. on_load gets a target constant path as a string (e.g., \"User\", or \"Service::NotificationsGateway\"). When fired, its block receives the stored value, and the absolute path to the corresponding file or directory as a string. The callback is executed every time the target is loaded. That includes reloads. Multiple callbacks on the same target are supported, and they run in order of definition. The block is executed once the loader has loaded the target. In particular, if the target was already loaded when the callback is defined, the block won't run. But if you reload and load the target again, then it will. Normally, you'll want to define on_load callbacks before setup . Defining a callback for a target not managed by the receiver is not an error, the block simply won't ever be executed. It is also possible to be called when any constant managed by the loader is loaded: loader.on_load do |cpath, value, abspath| # ... end The block gets the constant path as a string (e.g., \"User\", or \"Foo::VERSION\"), the value it stores (e.g., the class object stored in User , or \"2.5.0\"), and the absolute path to the corresponding file or directory as a string. Multiple callbacks like these are supported, and they run in order of definition. There are use cases for this last catch-all callback, but they are rare. If you just need to understand how things are being loaded for debugging purposes, please remember that Zeitwerk::Loader#log! logs plenty of information. If both types of callbacks are defined, the specific ones run first. Since on_load callbacks are executed right after files are loaded, even if the loading context seems to be far away, in practice the block is subject to circular dependencies . As a rule of thumb, as far as loading order and its interdependencies is concerned, you have to program as if the block was executed at the bottom of the file just loaded. The on_unload callback When reloading is enabled, you may occasionally need to execute something before a certain autoloaded class or module is unloaded. The on_unload callback allows you to do that. For example, let's imagine that a Country class fetches a list of countries and caches them when it is loaded. You might want to clear that cache if unloaded: loader.on_unload(\"Country\") do |klass, _abspath| klass.clear_cache end on_unload gets a target constant path as a string (e.g., \"User\", or \"Service::NotificationsGateway\"). When fired, its block receives the stored value, and the absolute path to the corresponding file or directory as a string. The callback is executed every time the target is unloaded. on_unload blocks are executed before the class is unloaded, but in the middle of unloading, which happens in an unspecified order. Therefore, that callback should not refer to any reloadable constant because there is no guarantee the constant works there . Those blocks should rely on objects only, as in the example above, or regular constants not managed by the loader. This remark is transitive, applies to any methods invoked within the block. Multiple callbacks on the same target are supported, and they run in order of definition. Defining a callback for a target not managed by the receiver is not an error, the block simply won't ever be executed. It is also possible to be called when any constant managed by the loader is unloaded: loader.on_unload do |cpath, value, abspath| # ... end The block gets the constant path as a string (e.g., \"User\", or \"Foo::VERSION\"), the value it stores (e.g., the class object stored in User , or \"2.5.0\"), and the absolute path to the corresponding file or directory as a string. Multiple callbacks like these are supported, and they run in order of definition. If both types of callbacks are defined, the specific ones run first. Technical details Zeitwerk uses the word \"unload\" to ease communication and for symmetry with on_load . However, in Ruby you cannot unload things for real. So, when does on_unload technically happen? When unloading, Zeitwerk issues Module#remove_const calls. Classes and modules are no longer reachable through their constants, and on_unload callbacks are executed right before those calls. Technically, though, the objects themselves are still alive, but if everything is used as expected and they are not stored in any non-reloadable place (don't do that), they are ready for garbage collection, which is when the real unloading happens. Logging Zeitwerk is silent by default, but you can ask loaders to trace their activity. Logging is meant just for troubleshooting, shouldn't normally be enabled. The log! method is a quick shortcut to let the loader log to $stdout : loader.log! If you want more control, a logger can be configured as a callable loader.logger = method(:puts) loader.logger = ->(msg) { ... } as well as anything that responds to debug : loader.logger = Logger.new($stderr) loader.logger = Rails.logger In both cases, the corresponding methods are going to be passed exactly one argument with the message to be logged. It is also possible to set a global default this way: Zeitwerk::Loader.default_logger = method(:puts) If there is a logger configured, you'll see traces when autoloads are set, files loaded, and modules autovivified. While reloading, removed autoloads and unloaded objects are also traced. As a curiosity, if your project has namespaces you'll notice in the traces Zeitwerk sets autoloads for directories . That's a technique used to be able to descend into subdirectories on demand, avoiding that way unnecessary tree walks. Loader tag Loaders have a tag that is printed in traces in order to be able to distinguish them in globally logged activity: Zeitwerk@9fa54b: autoload set for User, to be loaded from ... By default, a random tag like the one above is assigned, but you can change it: loader.tag = \"grep_me\" The tag of a loader returned by for_gem is the basename of the root file without extension: Zeitwerk@my_gem: constant MyGem::Foo loaded from ... Ignoring parts of the project Zeitwerk ignores automatically any file or directory whose name starts with a dot, and any files that do not have extension \".rb\". However, sometimes it might still be convenient to tell Zeitwerk to completely ignore some particular Ruby file or directory. That is possible with ignore , which accepts an arbitrary number of strings or Pathname objects, and also an array of them. You can ignore file names, directory names, and glob patterns. Glob patterns are expanded when they are added and again on each reload. Let's see some use cases. Use case: Files that do not follow the conventions Let's suppose that your gem decorates something in Kernel : # lib/my_gem/core_ext/kernel.rb Kernel.module_eval do # ... end Kernel is already defined by Ruby so the module cannot be autoloaded. Also, that file does not define a constant path after the path name. Therefore, Zeitwerk should not process it at all. The extension can still coexist with the rest of the project, you only need to tell Zeitwerk to ignore it: kernel_ext = \"#{__dir__}/my_gem/core_ext/kernel.rb\" loader.ignore(kernel_ext) loader.setup You can also ignore the whole directory: core_ext = \"#{__dir__}/my_gem/core_ext\" loader.ignore(core_ext) loader.setup Now, that file has to be loaded manually with require or require_relative : require_relative \"my_gem/core_ext/kernel\" and you can do that anytime, before configuring the loader, or after configuring the loader, does not matter. Use case: The adapter pattern Another use case for ignoring files is the adapter pattern. Let's imagine your project talks to databases, supports several, and has adapters for each one of them. Those adapters may have top-level require calls that load their respective drivers: # my_gem/db_adapters/postgresql.rb require \"pg\" but you don't want your users to install them all, only the one they are going to use. On the other hand, if your code is eager loaded by you or a parent project (with Zeitwerk::Loader.eager_load_all ), those require calls are going to be executed. Ignoring the adapters prevents that: db_adapters = \"#{__dir__}/my_gem/db_adapters\" loader.ignore(db_adapters) loader.setup The chosen adapter, then, has to be loaded by hand somehow: require \"my_gem/db_adapters/#{config[:db_adapter]}\" Note that since the directory is ignored, the required adapter can instantiate another loader to manage its subtree, if desired. Such loader would coexist with the main one just fine. Use case: Test files mixed with implementation files There are project layouts that put implementation files and test files together. To ignore the test files, you can use a glob pattern like this: tests = \"#{__dir__}/**/*_test.rb\" loader.ignore(tests) loader.setup Edge cases A class or module that acts as a namespace: # trip.rb class Trip include Geolocation end # trip/geolocation.rb module Trip::Geolocation ... end has to be defined with the class or module keywords, as in the example above. For technical reasons, raw constant assignment is not supported: # trip.rb Trip = Class.new { ... } # NOT SUPPORTED Trip = Struct.new { ... } # NOT SUPPORTED This only affects explicit namespaces, those idioms work well for any other ordinary class or module. Beware of circular dependencies In Ruby, you can't have certain top-level circular dependencies. Take for example: # c.rb class C < D end # d.rb class D C end In order to define C , you need to load D . However, the body of D refers to C . Circular dependencies like those do not work in plain Ruby, and therefore do not work in projects managed by Zeitwerk either. Reopening third-party namespaces Projects managed by Zeitwerk can work with namespaces defined by third-party libraries. However, they have to be loaded in memory before calling setup . For example, let's imagine you're writing a gem that implements an adapter for Active Job that uses AwesomeQueue as backend. By convention, your gem has to define a class called ActiveJob::QueueAdapters::AwesomeQueue , and it has to do so in a file with a matching path: # lib/active_job/queue_adapters/awesome_queue.rb module ActiveJob module QueueAdapters class AwesomeQueue # ... end end end It is very important that your gem reopens the modules ActiveJob and ActiveJob::QueueAdapters instead of defining them. Because their proper definition lives in Active Job. Furthermore, if the project reloads, you do not want any of ActiveJob or ActiveJob::QueueAdapters to be reloaded. Bottom line, Zeitwerk should not be managing those namespaces. Active Job owns them and defines them. Your gem needs to reopen them. In order to do so, you need to make sure those modules are loaded before calling setup . For instance, in the entry file for the gem: # Ensure these namespaces are reopened, not defined. require \"active_job\" require \"active_job/queue_adapters\" require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup With that, when Zeitwerk scans the file system and reaches the gem directories lib/active_job and lib/active_job/queue_adapters , it detects the corresponding modules already exist and therefore understands it does not have to manage them. The loader just descends into those directories. Eventually will reach lib/active_job/queue_adapters/awesome_queue.rb , and since ActiveJob::QueueAdapters::AwesomeQueue is unknown, Zeitwerk will manage it. Which is what happens regularly with the files in your gem. On reload, the namespaces are safe, won't be reloaded. The loader only reloads what it manages, which in this case is the adapter itself. Rules of thumb Different loaders should manage different directory trees. It is an error condition to configure overlapping root directories in different loaders. Think the mere existence of a file is effectively like writing a require call for them, which is executed on demand (autoload) or upfront (eager load). In that line, if two loaders manage files that translate to the same constant in the same namespace, the first one wins, the rest are ignored. Similar to what happens with require and $LOAD_PATH , only the first occurrence matters. Projects that reopen a namespace defined by some dependency have to ensure said namespace is loaded before setup. That is, the project has to make sure it reopens, rather than define. This is often accomplished just loading the dependency. Objects stored in reloadable constants should not be cached in places that are not reloaded. For example, non-reloadable classes should not subclass a reloadable class, or mixin a reloadable module. Otherwise, after reloading, those classes or module objects would become stale. Referring to constants in dynamic places like method calls or lambdas is fine. In a given process, ideally, there should be at most one loader with reloading enabled. Technically, you can have more, but it may get tricky if one refers to constants managed by the other one. Do that only if you know what you are doing. Debuggers debug.rb The new debug.rb gem and Zeitwerk are mostly compatible. This is the new debugger that is going to ship with Ruby 3.1. There's one exception, though: Due to a technical limitation of tracepoints, explicit namespaces are not autoloaded while expressions are evaluated in the REPL. See ruby/debug#408 . Byebug Zeitwerk and Byebug have a similar edge incompatibility. Break Zeitwerk works fine with @gsamokovarov 's Break debugger. Pronunciation \"Zeitwerk\" is pronounced this way . Supported Ruby versions Zeitwerk works with CRuby 2.5 and above. On TruffleRuby all is good except for thread-safety. Right now, in TruffleRuby Module#autoload does not block threads accessing a constant that is being autoloaded. CRuby prevents such access to avoid concurrent threads from seeing partial evaluations of the corresponding file. Zeitwerk inherits autoloading thread-safety from this property. This is not an issue if your project gets eager loaded, or if you lazy load in single-threaded environments. (See https://github.com/oracle/truffleruby/issues/2431.) JRuby 9.3.0.0 is almost there. As of this writing, the test suite of Zeitwerk passes on JRuby except for three tests. (See https://github.com/jruby/jruby/issues/6781.) Testing In order to run the test suite of Zeitwerk, cd into the project root and execute bin/test To run one particular suite, pass its file name as an argument: bin/test test/lib/zeitwerk/test_eager_load.rb Furthermore, the project has a development dependency on minitest-focus . To run an individual test mark it with focus : focus test \"capitalizes the first letter\" do assert_equal \"User\", camelize(\"user\") end and run bin/test . Motivation Kernel#require is brittle Since require has global side-effects, and there is no static way to verify that you have issued the require calls for code that your file depends on, in practice it is very easy to forget some. That introduces bugs that depend on the load order. Also, if the project has namespaces, setting things up and getting client code to load things in a consistent way needs discipline. For example, require \"foo/bar\" may define Foo , instead of reopen it. That may be a broken window, giving place to superclass mismatches or partially-defined namespaces. With Zeitwerk, you just name things following conventions and done. Things are available everywhere, and descend is always orderly. Without effort and without broken windows. Rails autoloading was brittle Autoloading in Rails was based on const_missing up to Rails 5. That callback lacks fundamental information like the nesting or the resolution algorithm being used. Because of that, Rails autoloading was not able to match Ruby's semantics, and that introduced a series of issues . Zeitwerk is based on a different technique and fixed Rails autoloading starting with Rails 6. Thanks I'd like to thank @matthewd for the discussions we've had about this topic in the past years, I learned a couple of tricks used in Zeitwerk from him. Also, would like to thank @Shopify , @rafaelfranca , and @dylanahsmith , for sharing this PoC . The technique Zeitwerk uses to support explicit namespaces was copied from that project. Jean Boussier ( @casperisfine , @byroot ) deserves special mention. Jean migrated autoloading in Shopify when Zeitwerk integration in Rails was yet unreleased. His work and positive attitude have been outstanding, and thanks to his feedback the interface and performance of Zeitwerk are way, way better. Kudos man \u2764\ufe0f. Finally, many thanks to @schurig for recording an audio file with the pronunciation of \"Zeitwerk\" in perfect German. \ud83d\udcaf License Released under the MIT License, Copyright (c) 2019\u2013 \u03c9 Xavier Noria.","title":"Zeitwerk"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#zeitwerk","text":"Introduction Synopsis File structure The idea: File paths match constant paths Inner simple constants Root directories and root namespaces The default root namespace is Object Custom root namespaces Nested root directories Implicit namespaces Explicit namespaces Collapsing directories Testing compliance Usage Setup Generic for_gem Autoloading Eager loading Eager load exclusions Global eager load Reloading Inflection Zeitwerk::Inflector Zeitwerk::GemInflector Custom inflector Callbacks The on_setup callback The on_load callback The on_unload callback Technical details Logging Loader tag Ignoring parts of the project Use case: Files that do not follow the conventions Use case: The adapter pattern Use case: Test files mixed with implementation files Edge cases Beware of circular dependencies Reopening third-party namespaces Rules of thumb Debuggers debug.rb Byebug Break Pronunciation Supported Ruby versions Testing Motivation Kernel#require is brittle Rails autoloading was brittle Thanks License","title":"Zeitwerk"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#introduction","text":"Zeitwerk is an efficient and thread-safe code loader for Ruby. Given a conventional file structure , Zeitwerk is able to load your project's classes and modules on demand (autoloading), or upfront (eager loading). You don't need to write require calls for your own files, rather, you can streamline your programming knowing that your classes and modules are available everywhere. This feature is efficient, thread-safe, and matches Ruby's semantics for constants. Zeitwerk is also able to reload code, which may be handy while developing web applications. Coordination is needed to reload in a thread-safe manner. The documentation below explains how to do this. The gem is designed so that any project, gem dependency, application, etc. can have their own independent loader, coexisting in the same process, managing their own project trees, and independent of each other. Each loader has its own configuration, inflector, and optional logger. Internally, Zeitwerk issues require calls exclusively using absolute file names, so there are no costly file system lookups in $LOAD_PATH . Technically, the directories managed by Zeitwerk do not even need to be in $LOAD_PATH . Furthermore, Zeitwerk does at most one single scan of the project tree, and it descends into subdirectories lazily, only if their namespaces are used.","title":"Introduction"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#synopsis","text":"Main interface for gems: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup # ready! module MyGem # ... end loader.eager_load # optionally Main generic interface: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.setup # ready! The loader variable can go out of scope. Zeitwerk keeps a registry with all of them, and so the object won't be garbage collected. You can reload if you want to: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.enable_reloading # you need to opt-in before setup loader.setup ... loader.reload and you can eager load all the code: loader.eager_load It is also possible to broadcast eager_load to all instances: Zeitwerk::Loader.eager_load_all","title":"Synopsis"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#file-structure","text":"","title":"File structure"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#the-idea-file-paths-match-constant-paths","text":"To have a file structure Zeitwerk can work with, just name files and directories after the name of the classes and modules they define: lib/my_gem.rb -> MyGem lib/my_gem/foo.rb -> MyGem::Foo lib/my_gem/bar_baz.rb -> MyGem::BarBaz lib/my_gem/woo/zoo.rb -> MyGem::Woo::Zoo You can tune that a bit by collapsing directories , or by ignoring parts of the project , but that is the main idea.","title":"The idea: File paths match constant paths"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#inner-simple-constants","text":"While a simple constant like HttpCrawler::MAX_RETRIES can be defined in its own file: # http_crawler/max_retries.rb HttpCrawler::MAX_RETRIES = 10 that is not required, you can also define it the regular way: # http_crawler.rb class HttpCrawler MAX_RETRIES = 10 end The first example needs a custom inflection rule: loader.inflector.inflect(\"max_retries\" => \"MAX_RETRIES\") Otherwise, Zeitwerk would expect the file to define MaxRetries . In the second example, no custom rule is needed.","title":"Inner simple constants"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#root-directories-and-root-namespaces","text":"Every directory configured with push_dir is called a root directory , and they represent root namespaces .","title":"Root directories and root namespaces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#the-default-root-namespace-is-object","text":"By default, the namespace associated to a root directory is the top-level one: Object . For example, given loader.push_dir(\"#{__dir__}/models\") loader.push_dir(\"#{__dir__}/serializers\")) these are the expected classes and modules being defined by these files: models/user.rb -> User serializers/user_serializer.rb -> UserSerializer","title":"The default root namespace is Object"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#custom-root-namespaces","text":"While Object is by far the most common root namespace, you can associate a different one to a particular root directory. The method push_dir accepts a class or module object in the optional namespace keyword argument. For example, given: require \"active_job\" require \"active_job/queue_adapters\" loader.push_dir(\"#{__dir__}/adapters\", namespace: ActiveJob::QueueAdapters) a file defining ActiveJob::QueueAdapters::MyQueueAdapter does not need the conventional parent directories, you can (and have to) store the file directly below adapters : adapters/my_queue_adapter.rb -> ActiveJob::QueueAdapters::MyQueueAdapter Please, note that the given root namespace must be non-reloadable, though autoloaded constants in that namespace can be. That is, if you associate app/api with an existing Api module, that module should not be reloadable. However, if the project defines and autoloads the class Api::Deliveries , that one can be reloaded.","title":"Custom root namespaces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#nested-root-directories","text":"Root directories should not be ideally nested, but Zeitwerk supports them because in Rails, for example, both app/models and app/models/concerns belong to the autoload paths. Zeitwerk detects nested root directories, and treats them as roots only. In the example above, concerns is not considered to be a namespace below app/models . For example, the file: app/models/concerns/geolocatable.rb should define Geolocatable , not Concerns::Geolocatable .","title":"Nested root directories"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#implicit-namespaces","text":"Directories without a matching Ruby file get modules autovivified automatically by Zeitwerk. For example, in app/controllers/admin/users_controller.rb -> Admin::UsersController Admin is autovivified as a module on demand, you do not need to define an Admin class or module in an admin.rb file explicitly.","title":"Implicit namespaces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#explicit-namespaces","text":"Classes and modules that act as namespaces can also be explicitly defined, though. For instance, consider app/models/hotel.rb -> Hotel app/models/hotel/pricing.rb -> Hotel::Pricing There, app/models/hotel.rb defines Hotel , and thus Zeitwerk does not autovivify a module. The classes and modules from the namespace are already available in the body of the class or module defining it: class Hotel < ApplicationRecord include Pricing # works ... end An explicit namespace must be managed by one single loader. Loaders that reopen namespaces owned by other projects are responsible for loading their constants before setup.","title":"Explicit namespaces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#collapsing-directories","text":"Say some directories in a project exist for organizational purposes only, and you prefer not to have them as namespaces. For example, the actions subdirectory in the next example is not meant to represent a namespace, it is there only to group all actions related to bookings: booking.rb -> Booking booking/actions/create.rb -> Booking::Create To make it work that way, configure Zeitwerk to collapse said directory: loader.collapse(\"#{__dir__}/booking/actions\") This method accepts an arbitrary number of strings or Pathname objects, and also an array of them. You can pass directories and glob patterns. Glob patterns are expanded when they are added, and again on each reload. To illustrate usage of glob patterns, if actions in the example above is part of a standardized structure, you could use a wildcard: loader.collapse(\"#{__dir__}/*/actions\")","title":"Collapsing directories"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#testing-compliance","text":"When a managed file is loaded, Zeitwerk verifies the expected constant is defined. If it is not, Zeitwerk::NameError is raised. So, an easy way to ensure compliance in the test suite is to eager load the project: begin loader.eager_load(force: true) rescue Zeitwerk::NameError => e flunk e.message else assert true end","title":"Testing compliance"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#usage","text":"","title":"Usage"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#setup","text":"","title":"Setup"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#generic","text":"Loaders are ready to load code right after calling setup on them: loader.setup This method is synchronized and idempotent. Customization should generally be done before that call. In particular, in the generic interface you may set the root directories from which you want to load files: loader.push_dir(...) loader.push_dir(...) loader.setup","title":"Generic"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#for_gem","text":"Zeitwerk::Loader.for_gem is a convenience shortcut for the common case in which a gem has its entry point directly under the lib directory: lib/my_gem.rb # MyGem lib/my_gem/version.rb # MyGem::VERSION lib/my_gem/foo.rb # MyGem::Foo Neither a gemspec nor a version file are technically required, this helper works as long as the code is organized using that standard structure. If the entry point of your gem lives in a subdirectory of lib because it is reopening a namespace defined somewhere else, please use the generic API to setup the loader, and make sure you check the section Reopening third-party namespaces down below. Conceptually, for_gem translates to: # lib/my_gem.rb require \"zeitwerk\" loader = Zeitwerk::Loader.new loader.tag = File.basename(__FILE__, \".rb\") loader.inflector = Zeitwerk::GemInflector.new(__FILE__) loader.push_dir(__dir__) except that this method returns the same object in subsequent calls from the same file, in the unlikely case the gem wants to be able to reload. If the main module references project constants at the top-level, Zeitwerk has to be ready to load them. Their definitions, in turn, may reference other project constants. And this is recursive. Therefore, it is important that the setup call happens above the main module definition: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup module MyGem # Since the setup has been performed, at this point we are already able # to reference project constants, in this case MyGem::MyLogger. include MyLogger end","title":"for_gem"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#autoloading","text":"After setup , you are able to reference classes and modules from the project without issuing require calls for them. They are all available everywhere, autoloading loads them on demand. This works even if the reference to the class or module is first hit in client code, outside your project. Let's revisit the example above: # lib/my_gem.rb (main file) require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup module MyGem include MyLogger # (*) end That works, and there is no require \"my_gem/my_logger\" . When (*) is reached, Zeitwerk seamlessly autoloads MyGem::MyLogger . If autoloading a file does not define the expected class or module, Zeitwerk raises Zeitwerk::NameError , which is a subclass of NameError .","title":"Autoloading"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#eager-loading","text":"Zeitwerk instances are able to eager load their managed files: loader.eager_load That skips ignored files and directories . In gems, the method needs to be invoked after the main namespace has been defined, as shown in Synopsis . Eager loading is synchronized and idempotent.","title":"Eager loading"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#eager-load-exclusions","text":"You can tell Zeitwerk that certain files or directories are autoloadable, but should not be eager loaded: db_adapters = \"#{__dir__}/my_gem/db_adapters\" loader.do_not_eager_load(db_adapters) loader.setup loader.eager_load # won't eager load the database adapters However, that can be overridden with force : loader.eager_load(force: true) # database adapters are eager loaded Which may be handy if the project eager loads in the test suite to ensure project layout compliance . The force flag does not affect ignored files and directories, those are still ignored.","title":"Eager load exclusions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#global-eager-load","text":"If you want to eager load yourself and all dependencies that use Zeitwerk, you can broadcast the eager_load call to all instances: Zeitwerk::Loader.eager_load_all This may be handy in top-level services, like web applications. Note that thanks to idempotence Zeitwerk::Loader.eager_load_all won't eager load twice if any of the instances already eager loaded. This method does not accept the force flag, since in general it wouldn't be a good idea to force eager loading in 3rd party code.","title":"Global eager load"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#reloading","text":"Zeitwerk is able to reload code, but you need to enable this feature: loader = Zeitwerk::Loader.new loader.push_dir(...) loader.enable_reloading # you need to opt-in before setup loader.setup ... loader.reload There is no way to undo this, either you want to reload or you don't. Enabling reloading after setup raises Zeitwerk::Error . Attempting to reload without having it enabled raises Zeitwerk::ReloadingDisabledError . Generally speaking, reloading is useful while developing running services like web applications. Gems that implement regular libraries, so to speak, or services running in testing or production environments, won't normally have a use case for reloading. If reloading is not enabled, Zeitwerk is able to use less memory. Reloading removes the currently loaded classes and modules and resets the loader so that it will pick whatever is in the file system now. It is important to highlight that this is an instance method. Don't worry about project dependencies managed by Zeitwerk, their loaders are independent. In order for reloading to be thread-safe, you need to implement some coordination. For example, a web framework that serves each request with its own thread may have a globally accessible RW lock. When a request comes in, the framework acquires the lock for reading at the beginning, and the code in the framework that calls loader.reload needs to acquire the lock for writing. On reloading, client code has to update anything that would otherwise be storing a stale object. For example, if the routing layer of a web framework stores controller class objects or instances in internal structures, on reload it has to refresh them somehow, possibly reevaluating routes.","title":"Reloading"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#inflection","text":"Each individual loader needs an inflector to figure out which constant path would a given file or directory map to. Zeitwerk ships with two basic inflectors, and you can define your own.","title":"Inflection"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#zeitwerkinflector","text":"Each loader instantiated with Zeitwerk::Loader.new has an inflector of this type by default. This is a very basic inflector that converts snake case to camel case: user -> User users_controller -> UsersController html_parser -> HtmlParser The camelize logic can be overridden easily for individual basenames: loader.inflector.inflect( \"html_parser\" => \"HTMLParser\", \"mysql_adapter\" => \"MySQLAdapter\" ) The inflect method can be invoked several times if you prefer this other style: loader.inflector.inflect \"html_parser\" => \"HTMLParser\" loader.inflector.inflect \"mysql_adapter\" => \"MySQLAdapter\" Overrides need to be configured before calling setup . The inflectors of different loaders are independent of each other. There are no global inflection rules or global configuration that can affect this inflector. It is deterministic.","title":"Zeitwerk::Inflector"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#zeitwerkgeminflector","text":"Each loader instantiated with Zeitwerk::Loader.for_gem has an inflector of this type by default. This inflector is like the basic one, except it expects lib/my_gem/version.rb to define MyGem::VERSION . The inflectors of different loaders are independent of each other. There are no global inflection rules or global configuration that can affect this inflector. It is deterministic.","title":"Zeitwerk::GemInflector"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#custom-inflector","text":"The inflectors that ship with Zeitwerk are deterministic and simple. But you can configure your own: # frozen_string_literal: true class MyInflector < Zeitwerk::Inflector def camelize(basename, abspath) if basename =~ /\\Ahtml_(.*)/ \"HTML\" + super($1, abspath) else super end end end The first argument, basename , is a string with the basename of the file or directory to be inflected. In the case of a file, without extension. In the case of a directory, without trailing slash. The inflector needs to return this basename inflected. Therefore, a simple constant name without colons. The second argument, abspath , is a string with the absolute path to the file or directory in case you need it to decide how to inflect the basename. Paths to directories don't have trailing slashes. Then, assign the inflector: loader.inflector = MyInflector.new This needs to be done before calling setup . If a custom inflector definition in a gem takes too much space in the main file, you can extract it. For example, this is a simple pattern: # lib/my_gem/inflector.rb module MyGem class Inflector < Zeitwerk::GemInflector ... end end # lib/my_gem.rb require \"zeitwerk\" require_relative \"my_gem/inflector\" loader = Zeitwerk::Loader.for_gem loader.inflector = MyGem::Inflector.new(__FILE__) loader.setup module MyGem # ... end Since MyGem is referenced before the namespace is defined in the main file, it is important to use this style: # Correct, effectively defines MyGem. module MyGem class Inflector < Zeitwerk::GemInflector # ... end end instead of: # Raises uninitialized constant MyGem (NameError). class MyGem::Inflector < Zeitwerk::GemInflector # ... end","title":"Custom inflector"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#callbacks","text":"","title":"Callbacks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#the-on_setup-callback","text":"The on_setup callback is fired on setup and on each reload: loader.on_setup do # Ready to autoload here. end Multiple on_setup callbacks are supported, and they run in order of definition. If setup was already executed, the callback is fired immediately.","title":"The on_setup callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#the-on_load-callback","text":"The usual place to run something when a file is loaded is the file itself. However, sometimes you'd like to be called, and this is possible with the on_load callback. For example, let's imagine this class belongs to a Rails application: class SomeApiClient class << self attr_accessor :endpoint end end With on_load , it is easy to schedule code at boot time that initializes endpoint according to the configuration: # config/environments/development.rb loader.on_load(\"SomeApiClient\") do |klass, _abspath| klass.endpoint = \"https://api.dev\" end # config/environments/production.rb loader.on_load(\"SomeApiClient\") do |klass, _abspath| klass.endpoint = \"https://api.prod\" end Some uses cases: Doing something with a reloadable class or module in a Rails application during initialization, in a way that plays well with reloading. As in the previous example. Delaying the execution of the block until the class is loaded for performance. Delaying the execution of the block until the class is loaded because it follows the adapter pattern and better not to load the class if the user does not need it. on_load gets a target constant path as a string (e.g., \"User\", or \"Service::NotificationsGateway\"). When fired, its block receives the stored value, and the absolute path to the corresponding file or directory as a string. The callback is executed every time the target is loaded. That includes reloads. Multiple callbacks on the same target are supported, and they run in order of definition. The block is executed once the loader has loaded the target. In particular, if the target was already loaded when the callback is defined, the block won't run. But if you reload and load the target again, then it will. Normally, you'll want to define on_load callbacks before setup . Defining a callback for a target not managed by the receiver is not an error, the block simply won't ever be executed. It is also possible to be called when any constant managed by the loader is loaded: loader.on_load do |cpath, value, abspath| # ... end The block gets the constant path as a string (e.g., \"User\", or \"Foo::VERSION\"), the value it stores (e.g., the class object stored in User , or \"2.5.0\"), and the absolute path to the corresponding file or directory as a string. Multiple callbacks like these are supported, and they run in order of definition. There are use cases for this last catch-all callback, but they are rare. If you just need to understand how things are being loaded for debugging purposes, please remember that Zeitwerk::Loader#log! logs plenty of information. If both types of callbacks are defined, the specific ones run first. Since on_load callbacks are executed right after files are loaded, even if the loading context seems to be far away, in practice the block is subject to circular dependencies . As a rule of thumb, as far as loading order and its interdependencies is concerned, you have to program as if the block was executed at the bottom of the file just loaded.","title":"The on_load callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#the-on_unload-callback","text":"When reloading is enabled, you may occasionally need to execute something before a certain autoloaded class or module is unloaded. The on_unload callback allows you to do that. For example, let's imagine that a Country class fetches a list of countries and caches them when it is loaded. You might want to clear that cache if unloaded: loader.on_unload(\"Country\") do |klass, _abspath| klass.clear_cache end on_unload gets a target constant path as a string (e.g., \"User\", or \"Service::NotificationsGateway\"). When fired, its block receives the stored value, and the absolute path to the corresponding file or directory as a string. The callback is executed every time the target is unloaded. on_unload blocks are executed before the class is unloaded, but in the middle of unloading, which happens in an unspecified order. Therefore, that callback should not refer to any reloadable constant because there is no guarantee the constant works there . Those blocks should rely on objects only, as in the example above, or regular constants not managed by the loader. This remark is transitive, applies to any methods invoked within the block. Multiple callbacks on the same target are supported, and they run in order of definition. Defining a callback for a target not managed by the receiver is not an error, the block simply won't ever be executed. It is also possible to be called when any constant managed by the loader is unloaded: loader.on_unload do |cpath, value, abspath| # ... end The block gets the constant path as a string (e.g., \"User\", or \"Foo::VERSION\"), the value it stores (e.g., the class object stored in User , or \"2.5.0\"), and the absolute path to the corresponding file or directory as a string. Multiple callbacks like these are supported, and they run in order of definition. If both types of callbacks are defined, the specific ones run first.","title":"The on_unload callback"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#technical-details","text":"Zeitwerk uses the word \"unload\" to ease communication and for symmetry with on_load . However, in Ruby you cannot unload things for real. So, when does on_unload technically happen? When unloading, Zeitwerk issues Module#remove_const calls. Classes and modules are no longer reachable through their constants, and on_unload callbacks are executed right before those calls. Technically, though, the objects themselves are still alive, but if everything is used as expected and they are not stored in any non-reloadable place (don't do that), they are ready for garbage collection, which is when the real unloading happens.","title":"Technical details"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#logging","text":"Zeitwerk is silent by default, but you can ask loaders to trace their activity. Logging is meant just for troubleshooting, shouldn't normally be enabled. The log! method is a quick shortcut to let the loader log to $stdout : loader.log! If you want more control, a logger can be configured as a callable loader.logger = method(:puts) loader.logger = ->(msg) { ... } as well as anything that responds to debug : loader.logger = Logger.new($stderr) loader.logger = Rails.logger In both cases, the corresponding methods are going to be passed exactly one argument with the message to be logged. It is also possible to set a global default this way: Zeitwerk::Loader.default_logger = method(:puts) If there is a logger configured, you'll see traces when autoloads are set, files loaded, and modules autovivified. While reloading, removed autoloads and unloaded objects are also traced. As a curiosity, if your project has namespaces you'll notice in the traces Zeitwerk sets autoloads for directories . That's a technique used to be able to descend into subdirectories on demand, avoiding that way unnecessary tree walks.","title":"Logging"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#loader-tag","text":"Loaders have a tag that is printed in traces in order to be able to distinguish them in globally logged activity: Zeitwerk@9fa54b: autoload set for User, to be loaded from ... By default, a random tag like the one above is assigned, but you can change it: loader.tag = \"grep_me\" The tag of a loader returned by for_gem is the basename of the root file without extension: Zeitwerk@my_gem: constant MyGem::Foo loaded from ...","title":"Loader tag"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#ignoring-parts-of-the-project","text":"Zeitwerk ignores automatically any file or directory whose name starts with a dot, and any files that do not have extension \".rb\". However, sometimes it might still be convenient to tell Zeitwerk to completely ignore some particular Ruby file or directory. That is possible with ignore , which accepts an arbitrary number of strings or Pathname objects, and also an array of them. You can ignore file names, directory names, and glob patterns. Glob patterns are expanded when they are added and again on each reload. Let's see some use cases.","title":"Ignoring parts of the project"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#use-case-files-that-do-not-follow-the-conventions","text":"Let's suppose that your gem decorates something in Kernel : # lib/my_gem/core_ext/kernel.rb Kernel.module_eval do # ... end Kernel is already defined by Ruby so the module cannot be autoloaded. Also, that file does not define a constant path after the path name. Therefore, Zeitwerk should not process it at all. The extension can still coexist with the rest of the project, you only need to tell Zeitwerk to ignore it: kernel_ext = \"#{__dir__}/my_gem/core_ext/kernel.rb\" loader.ignore(kernel_ext) loader.setup You can also ignore the whole directory: core_ext = \"#{__dir__}/my_gem/core_ext\" loader.ignore(core_ext) loader.setup Now, that file has to be loaded manually with require or require_relative : require_relative \"my_gem/core_ext/kernel\" and you can do that anytime, before configuring the loader, or after configuring the loader, does not matter.","title":"Use case: Files that do not follow the conventions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#use-case-the-adapter-pattern","text":"Another use case for ignoring files is the adapter pattern. Let's imagine your project talks to databases, supports several, and has adapters for each one of them. Those adapters may have top-level require calls that load their respective drivers: # my_gem/db_adapters/postgresql.rb require \"pg\" but you don't want your users to install them all, only the one they are going to use. On the other hand, if your code is eager loaded by you or a parent project (with Zeitwerk::Loader.eager_load_all ), those require calls are going to be executed. Ignoring the adapters prevents that: db_adapters = \"#{__dir__}/my_gem/db_adapters\" loader.ignore(db_adapters) loader.setup The chosen adapter, then, has to be loaded by hand somehow: require \"my_gem/db_adapters/#{config[:db_adapter]}\" Note that since the directory is ignored, the required adapter can instantiate another loader to manage its subtree, if desired. Such loader would coexist with the main one just fine.","title":"Use case: The adapter pattern"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#use-case-test-files-mixed-with-implementation-files","text":"There are project layouts that put implementation files and test files together. To ignore the test files, you can use a glob pattern like this: tests = \"#{__dir__}/**/*_test.rb\" loader.ignore(tests) loader.setup","title":"Use case: Test files mixed with implementation files"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#edge-cases","text":"A class or module that acts as a namespace: # trip.rb class Trip include Geolocation end # trip/geolocation.rb module Trip::Geolocation ... end has to be defined with the class or module keywords, as in the example above. For technical reasons, raw constant assignment is not supported: # trip.rb Trip = Class.new { ... } # NOT SUPPORTED Trip = Struct.new { ... } # NOT SUPPORTED This only affects explicit namespaces, those idioms work well for any other ordinary class or module.","title":"Edge cases"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#beware-of-circular-dependencies","text":"In Ruby, you can't have certain top-level circular dependencies. Take for example: # c.rb class C < D end # d.rb class D C end In order to define C , you need to load D . However, the body of D refers to C . Circular dependencies like those do not work in plain Ruby, and therefore do not work in projects managed by Zeitwerk either.","title":"Beware of circular dependencies"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#reopening-third-party-namespaces","text":"Projects managed by Zeitwerk can work with namespaces defined by third-party libraries. However, they have to be loaded in memory before calling setup . For example, let's imagine you're writing a gem that implements an adapter for Active Job that uses AwesomeQueue as backend. By convention, your gem has to define a class called ActiveJob::QueueAdapters::AwesomeQueue , and it has to do so in a file with a matching path: # lib/active_job/queue_adapters/awesome_queue.rb module ActiveJob module QueueAdapters class AwesomeQueue # ... end end end It is very important that your gem reopens the modules ActiveJob and ActiveJob::QueueAdapters instead of defining them. Because their proper definition lives in Active Job. Furthermore, if the project reloads, you do not want any of ActiveJob or ActiveJob::QueueAdapters to be reloaded. Bottom line, Zeitwerk should not be managing those namespaces. Active Job owns them and defines them. Your gem needs to reopen them. In order to do so, you need to make sure those modules are loaded before calling setup . For instance, in the entry file for the gem: # Ensure these namespaces are reopened, not defined. require \"active_job\" require \"active_job/queue_adapters\" require \"zeitwerk\" loader = Zeitwerk::Loader.for_gem loader.setup With that, when Zeitwerk scans the file system and reaches the gem directories lib/active_job and lib/active_job/queue_adapters , it detects the corresponding modules already exist and therefore understands it does not have to manage them. The loader just descends into those directories. Eventually will reach lib/active_job/queue_adapters/awesome_queue.rb , and since ActiveJob::QueueAdapters::AwesomeQueue is unknown, Zeitwerk will manage it. Which is what happens regularly with the files in your gem. On reload, the namespaces are safe, won't be reloaded. The loader only reloads what it manages, which in this case is the adapter itself.","title":"Reopening third-party namespaces"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#rules-of-thumb","text":"Different loaders should manage different directory trees. It is an error condition to configure overlapping root directories in different loaders. Think the mere existence of a file is effectively like writing a require call for them, which is executed on demand (autoload) or upfront (eager load). In that line, if two loaders manage files that translate to the same constant in the same namespace, the first one wins, the rest are ignored. Similar to what happens with require and $LOAD_PATH , only the first occurrence matters. Projects that reopen a namespace defined by some dependency have to ensure said namespace is loaded before setup. That is, the project has to make sure it reopens, rather than define. This is often accomplished just loading the dependency. Objects stored in reloadable constants should not be cached in places that are not reloaded. For example, non-reloadable classes should not subclass a reloadable class, or mixin a reloadable module. Otherwise, after reloading, those classes or module objects would become stale. Referring to constants in dynamic places like method calls or lambdas is fine. In a given process, ideally, there should be at most one loader with reloading enabled. Technically, you can have more, but it may get tricky if one refers to constants managed by the other one. Do that only if you know what you are doing.","title":"Rules of thumb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#debuggers","text":"","title":"Debuggers"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#debugrb","text":"The new debug.rb gem and Zeitwerk are mostly compatible. This is the new debugger that is going to ship with Ruby 3.1. There's one exception, though: Due to a technical limitation of tracepoints, explicit namespaces are not autoloaded while expressions are evaluated in the REPL. See ruby/debug#408 .","title":"debug.rb"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#byebug","text":"Zeitwerk and Byebug have a similar edge incompatibility.","title":"Byebug"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#break","text":"Zeitwerk works fine with @gsamokovarov 's Break debugger.","title":"Break"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#pronunciation","text":"\"Zeitwerk\" is pronounced this way .","title":"Pronunciation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#supported-ruby-versions","text":"Zeitwerk works with CRuby 2.5 and above. On TruffleRuby all is good except for thread-safety. Right now, in TruffleRuby Module#autoload does not block threads accessing a constant that is being autoloaded. CRuby prevents such access to avoid concurrent threads from seeing partial evaluations of the corresponding file. Zeitwerk inherits autoloading thread-safety from this property. This is not an issue if your project gets eager loaded, or if you lazy load in single-threaded environments. (See https://github.com/oracle/truffleruby/issues/2431.) JRuby 9.3.0.0 is almost there. As of this writing, the test suite of Zeitwerk passes on JRuby except for three tests. (See https://github.com/jruby/jruby/issues/6781.)","title":"Supported Ruby versions"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#testing","text":"In order to run the test suite of Zeitwerk, cd into the project root and execute bin/test To run one particular suite, pass its file name as an argument: bin/test test/lib/zeitwerk/test_eager_load.rb Furthermore, the project has a development dependency on minitest-focus . To run an individual test mark it with focus : focus test \"capitalizes the first letter\" do assert_equal \"User\", camelize(\"user\") end and run bin/test .","title":"Testing"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#motivation","text":"","title":"Motivation"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#kernelrequire-is-brittle","text":"Since require has global side-effects, and there is no static way to verify that you have issued the require calls for code that your file depends on, in practice it is very easy to forget some. That introduces bugs that depend on the load order. Also, if the project has namespaces, setting things up and getting client code to load things in a consistent way needs discipline. For example, require \"foo/bar\" may define Foo , instead of reopen it. That may be a broken window, giving place to superclass mismatches or partially-defined namespaces. With Zeitwerk, you just name things following conventions and done. Things are available everywhere, and descend is always orderly. Without effort and without broken windows.","title":"Kernel#require is brittle"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#rails-autoloading-was-brittle","text":"Autoloading in Rails was based on const_missing up to Rails 5. That callback lacks fundamental information like the nesting or the resolution algorithm being used. Because of that, Rails autoloading was not able to match Ruby's semantics, and that introduced a series of issues . Zeitwerk is based on a different technique and fixed Rails autoloading starting with Rails 6.","title":"Rails autoloading was brittle"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#thanks","text":"I'd like to thank @matthewd for the discussions we've had about this topic in the past years, I learned a couple of tricks used in Zeitwerk from him. Also, would like to thank @Shopify , @rafaelfranca , and @dylanahsmith , for sharing this PoC . The technique Zeitwerk uses to support explicit namespaces was copied from that project. Jean Boussier ( @casperisfine , @byroot ) deserves special mention. Jean migrated autoloading in Shopify when Zeitwerk integration in Rails was yet unreleased. His work and positive attitude have been outstanding, and thanks to his feedback the interface and performance of Zeitwerk are way, way better. Kudos man \u2764\ufe0f. Finally, many thanks to @schurig for recording an audio file with the pronunciation of \"Zeitwerk\" in perfect German. \ud83d\udcaf","title":"Thanks"},{"location":"openpgp.org/vendor/bundle/ruby/2.6.0/gems/zeitwerk-2.5.4/#license","text":"Released under the MIT License, Copyright (c) 2019\u2013 \u03c9 Xavier Noria.","title":"License"}]}